Index: .idea/dictionaries/miko.xml
===================================================================
diff --git a/.idea/dictionaries/miko.xml b/.idea/dictionaries/miko.xml
deleted file mode 100644
--- a/.idea/dictionaries/miko.xml	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
+++ /dev/null	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
@@ -1,3 +0,0 @@
-<component name="ProjectDictionaryState">
-  <dictionary name="miko" />
-</component>
\ No newline at end of file
Index: .idea/inspectionProfiles/Project_Default.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/inspectionProfiles/Project_Default.xml b/.idea/inspectionProfiles/Project_Default.xml
deleted file mode 100644
--- a/.idea/inspectionProfiles/Project_Default.xml	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
+++ /dev/null	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
@@ -1,42 +0,0 @@
-<component name="InspectionProjectProfileManager">
-  <profile version="1.0">
-    <option name="myName" value="Project Default" />
-    <inspection_tool class="FunctionName" enabled="false" level="WEAK WARNING" enabled_by_default="false" />
-    <inspection_tool class="PreviewAnnotationInFunctionWithParameters" enabled="true" level="ERROR" enabled_by_default="true">
-      <option name="composableFile" value="true" />
-      <option name="previewFile" value="true" />
-    </inspection_tool>
-    <inspection_tool class="PreviewApiLevelMustBeValid" enabled="true" level="ERROR" enabled_by_default="true">
-      <option name="composableFile" value="true" />
-      <option name="previewFile" value="true" />
-    </inspection_tool>
-    <inspection_tool class="PreviewDimensionRespectsLimit" enabled="true" level="WARNING" enabled_by_default="true">
-      <option name="composableFile" value="true" />
-      <option name="previewFile" value="true" />
-    </inspection_tool>
-    <inspection_tool class="PreviewFontScaleMustBeGreaterThanZero" enabled="true" level="ERROR" enabled_by_default="true">
-      <option name="composableFile" value="true" />
-      <option name="previewFile" value="true" />
-    </inspection_tool>
-    <inspection_tool class="PreviewMultipleParameterProviders" enabled="true" level="ERROR" enabled_by_default="true">
-      <option name="composableFile" value="true" />
-      <option name="previewFile" value="true" />
-    </inspection_tool>
-    <inspection_tool class="PreviewMustBeTopLevelFunction" enabled="true" level="ERROR" enabled_by_default="true">
-      <option name="composableFile" value="true" />
-      <option name="previewFile" value="true" />
-    </inspection_tool>
-    <inspection_tool class="PreviewNeedsComposableAnnotation" enabled="true" level="ERROR" enabled_by_default="true">
-      <option name="composableFile" value="true" />
-      <option name="previewFile" value="true" />
-    </inspection_tool>
-    <inspection_tool class="PreviewNotSupportedInUnitTestFiles" enabled="true" level="ERROR" enabled_by_default="true">
-      <option name="composableFile" value="true" />
-      <option name="previewFile" value="true" />
-    </inspection_tool>
-    <inspection_tool class="PreviewPickerAnnotation" enabled="true" level="ERROR" enabled_by_default="true">
-      <option name="composableFile" value="true" />
-      <option name="previewFile" value="true" />
-    </inspection_tool>
-  </profile>
-</component>
\ No newline at end of file
Index: .idea/shelf/Continue_analytics/shelved.patch
===================================================================
diff --git a/.idea/shelf/Continue_analytics/shelved.patch b/.idea/shelf/Continue_analytics/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Continue_analytics/shelved.patch	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
+++ /dev/null	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
@@ -1,1888 +0,0 @@
-Index: firestore-debug.log
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>Aug 28, 2023 1:17:52 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketServer start\nINFO: Started WebSocket server on ws://0.0.0.0:39649\nAPI endpoint: http://0.0.0.0:9299\nIf you are using a library that supports the FIRESTORE_EMULATOR_HOST environment variable, run:\n\n   export FIRESTORE_EMULATOR_HOST=0.0.0.0:9299\n\nDev App Server is now running.\n\nAug 28, 2023 1:18:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:18:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:18:12 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketChannelHandler initChannel\nINFO: Connected to new websocket client\nAug 28, 2023 1:18:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:18:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:18:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:18:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:18:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nAug 28, 2023 1:18:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:18:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:18:16 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:18:18 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:18:20 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:18:22 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:18:23 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:18:24 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:18:26 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:18:28 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:19:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:20:29 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:21:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:22:31 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:23:17 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:24:03 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:25:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:26:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:27:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:28:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:30:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:30:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:32:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:32:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:34:11 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:34:57 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:35:57 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:37:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:37:59 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:38:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:39:31 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:40:47 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:41:33 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:42:49 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:43:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:44:21 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:45:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:46:23 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:47:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:48:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:49:11 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:50:11 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:50:57 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:51:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:52:29 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:53:15 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:54:01 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:55:01 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:55:47 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:56:33 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:57:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:58:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 1:59:21 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:00:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:01:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:02:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:02:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:03:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:04:39 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:05:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:06:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:07:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:08:11 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:09:11 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:10:11 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:11:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:12:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:13:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:13:59 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:14:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:15:31 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:16:17 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:17:33 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:18:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:19:05 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:20:21 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:21:21 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:22:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:23:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:24:23 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:25:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:26:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:27:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:27:32 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nAug 28, 2023 2:28:11 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:29:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:30:05 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nAug 28, 2023 2:30:22 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nAug 28, 2023 2:30:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:31:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:31:59 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:32:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nAug 28, 2023 2:33:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nAug 28, 2023 2:33:15 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:34:15 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:35:31 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:35:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nAug 28, 2023 2:36:31 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:37:17 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:38:33 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:38:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nAug 28, 2023 2:39:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:40:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:41:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:42:05 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:42:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:43:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:45:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:46:23 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:46:37 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nAug 28, 2023 2:47:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:48:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:48:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:49:08 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nAug 28, 2023 2:50:11 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:51:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:51:42 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:51:42 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:51:42 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:51:42 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nAug 28, 2023 2:51:42 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:52:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nAug 28, 2023 2:52:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:53:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:54:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:55:59 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:56:59 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:57:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:58:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 2:59:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:00:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nAug 28, 2023 3:00:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:01:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:02:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:03:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:04:31 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:05:31 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:06:17 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:07:03 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:08:03 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:09:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:10:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:11:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:12:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:13:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:14:21 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:15:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:15:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:16:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:17:39 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:18:39 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:18:39 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:18:39 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:18:39 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:18:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:19:16 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:19:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:20:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nAug 28, 2023 3:20:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:21:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:22:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:23:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:24:29 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:25:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:26:31 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:27:31 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:28:31 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:29:31 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:30:17 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:31:03 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:32:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:33:05 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:34:05 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:35:05 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:36:05 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:37:21 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:38:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:38:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:39:39 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:40:39 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:41:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:42:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:43:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:44:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:45:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:45:59 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:47:15 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:48:15 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:49:01 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:49:47 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:50:33 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:51:33 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:52:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:53:05 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:54:05 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:54:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:55:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:56:37 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:57:39 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:57:39 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:57:39 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:57:39 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nAug 28, 2023 3:57:39 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:57:44 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:57:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:58:39 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 3:59:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:00:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:01:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:02:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:03:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nAug 28, 2023 4:03:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:04:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:04:49 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nAug 28, 2023 4:05:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:06:29 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:07:15 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:07:49 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nAug 28, 2023 4:08:15 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:09:31 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:10:17 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:11:33 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:12:33 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:13:49 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:14:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:15:21 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:15:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nAug 28, 2023 4:16:21 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:17:26 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nAug 28, 2023 4:17:37 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:18:08 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nAug 28, 2023 4:18:37 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:19:37 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:20:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:21:39 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:22:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:23:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:24:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:25:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:26:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:27:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:28:29 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:29:29 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:30:29 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:31:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:32:31 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:33:17 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:34:33 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:35:49 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:36:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:37:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:38:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:39:39 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nAug 28, 2023 4:39:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:40:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:41:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:42:37 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:43:37 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:44:23 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:45:08 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nAug 28, 2023 4:45:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:46:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:46:44 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nAug 28, 2023 4:47:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:48:16 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nAug 28, 2023 4:48:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:49:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:50:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:51:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:51:26 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nAug 28, 2023 4:52:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:53:11 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:54:11 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:55:11 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:56:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nAug 28, 2023 4:57:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/firestore-debug.log b/firestore-debug.log
---- a/firestore-debug.log	(revision 915e08632bf568fd0a19fc533a8c9929cb503ae9)
-+++ b/firestore-debug.log	(date 1693293224511)
-@@ -1,5 +1,5 @@
--Aug 28, 2023 1:17:52 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketServer start
--INFO: Started WebSocket server on ws://0.0.0.0:39649
-+Aug 29, 2023 3:10:44 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketServer start
-+INFO: Started WebSocket server on ws://0.0.0.0:44139
- API endpoint: http://0.0.0.0:9299
- If you are using a library that supports the FIRESTORE_EMULATOR_HOST environment variable, run:
- 
-@@ -7,571 +7,31 @@
- 
- Dev App Server is now running.
- 
--Aug 28, 2023 1:18:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
-+Aug 29, 2023 3:13:05 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
- INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:18:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
-+Aug 29, 2023 3:13:05 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
- INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:18:12 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketChannelHandler initChannel
--INFO: Connected to new websocket client
--Aug 28, 2023 1:18:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
-+Aug 29, 2023 3:13:05 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
- INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:18:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
-+Aug 29, 2023 3:13:05 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketChannelHandler initChannel
-+INFO: Connected to new websocket client
-+Aug 29, 2023 3:13:05 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
- INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:18:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
-+Aug 29, 2023 3:13:05 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
- INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:18:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
-+Aug 29, 2023 3:13:05 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
- INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:18:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
-+Aug 29, 2023 3:13:05 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
- INFO: Detected HTTP/2 connection.
--Aug 28, 2023 1:18:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:18:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:18:16 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:18:18 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:18:20 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:18:22 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:18:23 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:18:24 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:18:26 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
-+Aug 29, 2023 3:13:06 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
- INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:18:28 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
-+Aug 29, 2023 3:13:06 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
- INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:19:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
-+Aug 29, 2023 3:13:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
- INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:20:29 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
-+Aug 29, 2023 3:13:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
- INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:21:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
-+Aug 29, 2023 3:13:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
- INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:22:31 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:23:17 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:24:03 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:25:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:26:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:27:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:28:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:30:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:30:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:32:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:32:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:34:11 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:34:57 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:35:57 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:37:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:37:59 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:38:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:39:31 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:40:47 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:41:33 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:42:49 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:43:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:44:21 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:45:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:46:23 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:47:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:48:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:49:11 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:50:11 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:50:57 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:51:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:52:29 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:53:15 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:54:01 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:55:01 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:55:47 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:56:33 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:57:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:58:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 1:59:21 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:00:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:01:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:02:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:02:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:03:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:04:39 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:05:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:06:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:07:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:08:11 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:09:11 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:10:11 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:11:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:12:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:13:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:13:59 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:14:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:15:31 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:16:17 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:17:33 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:18:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:19:05 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:20:21 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:21:21 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:22:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:23:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:24:23 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:25:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:26:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:27:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:27:32 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected HTTP/2 connection.
--Aug 28, 2023 2:28:11 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:29:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:30:05 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected HTTP/2 connection.
--Aug 28, 2023 2:30:22 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected HTTP/2 connection.
--Aug 28, 2023 2:30:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:31:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:31:59 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:32:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected HTTP/2 connection.
--Aug 28, 2023 2:33:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected HTTP/2 connection.
--Aug 28, 2023 2:33:15 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:34:15 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:35:31 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:35:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected HTTP/2 connection.
--Aug 28, 2023 2:36:31 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:37:17 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:38:33 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:38:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected HTTP/2 connection.
--Aug 28, 2023 2:39:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:40:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:41:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:42:05 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:42:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:43:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:45:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:46:23 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:46:37 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected HTTP/2 connection.
--Aug 28, 2023 2:47:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:48:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:48:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:49:08 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected HTTP/2 connection.
--Aug 28, 2023 2:50:11 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:51:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:51:42 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:51:42 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:51:42 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:51:42 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected HTTP/2 connection.
--Aug 28, 2023 2:51:42 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:52:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected HTTP/2 connection.
--Aug 28, 2023 2:52:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:53:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:54:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:55:59 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:56:59 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:57:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:58:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 2:59:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:00:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected HTTP/2 connection.
--Aug 28, 2023 3:00:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:01:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:02:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:03:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:04:31 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:05:31 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:06:17 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:07:03 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:08:03 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:09:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:10:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:11:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:12:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:13:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:14:21 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:15:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:15:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:16:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:17:39 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:18:39 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:18:39 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:18:39 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:18:39 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:18:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:19:16 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:19:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:20:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected HTTP/2 connection.
--Aug 28, 2023 3:20:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:21:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:22:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:23:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:24:29 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:25:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:26:31 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:27:31 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:28:31 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:29:31 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:30:17 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:31:03 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:32:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:33:05 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:34:05 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:35:05 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:36:05 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:37:21 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:38:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:38:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:39:39 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:40:39 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:41:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:42:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:43:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:44:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:45:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:45:59 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:47:15 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:48:15 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:49:01 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:49:47 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:50:33 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:51:33 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:52:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:53:05 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:54:05 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:54:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:55:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:56:37 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:57:39 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:57:39 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:57:39 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:57:39 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected HTTP/2 connection.
--Aug 28, 2023 3:57:39 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:57:44 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:57:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:58:39 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 3:59:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:00:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:01:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:02:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:03:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected HTTP/2 connection.
--Aug 28, 2023 4:03:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:04:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:04:49 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected HTTP/2 connection.
--Aug 28, 2023 4:05:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:06:29 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:07:15 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:07:49 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected HTTP/2 connection.
--Aug 28, 2023 4:08:15 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:09:31 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:10:17 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:11:33 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:12:33 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:13:49 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:14:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:15:21 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:15:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected HTTP/2 connection.
--Aug 28, 2023 4:16:21 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:17:26 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected HTTP/2 connection.
--Aug 28, 2023 4:17:37 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:18:08 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected HTTP/2 connection.
--Aug 28, 2023 4:18:37 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:19:37 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:20:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:21:39 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:22:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:23:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:24:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:25:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:26:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:27:43 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:28:29 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:29:29 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:30:29 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:31:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:32:31 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:33:17 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:34:33 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:35:49 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:36:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:37:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:38:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:39:39 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected HTTP/2 connection.
--Aug 28, 2023 4:39:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:40:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:41:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:42:37 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:43:37 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:44:23 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:45:08 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected HTTP/2 connection.
--Aug 28, 2023 4:45:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:46:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:46:44 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected HTTP/2 connection.
--Aug 28, 2023 4:47:09 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:48:16 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected HTTP/2 connection.
--Aug 28, 2023 4:48:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:49:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:50:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:51:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:51:26 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected HTTP/2 connection.
--Aug 28, 2023 4:52:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:53:11 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:54:11 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:55:11 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:56:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
--Aug 28, 2023 4:57:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
--INFO: Detected non-HTTP/2 connection.
-+Aug 29, 2023 3:13:44 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketChannelHandler channelClosed
-+INFO: Websocket client disconnected
-Index: app/src/main/java/com/example/cyclistance/feature_user_profile/presentation/components/UserActivitySection.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_user_profile/presentation/components/UserActivitySection.kt b/app/src/main/java/com/example/cyclistance/feature_user_profile/presentation/components/UserActivitySection.kt
-new file mode 100644
---- /dev/null	(date 1693293984287)
-+++ b/app/src/main/java/com/example/cyclistance/feature_user_profile/presentation/components/UserActivitySection.kt	(date 1693293984287)
-@@ -0,0 +1,61 @@
-+package com.example.cyclistance.feature_user_profile.presentation.components
-+
-+import androidx.compose.foundation.layout.Arrangement
-+import androidx.compose.foundation.layout.Column
-+import androidx.compose.foundation.layout.fillMaxWidth
-+import androidx.compose.foundation.layout.padding
-+import androidx.compose.foundation.lazy.LazyRow
-+import androidx.compose.material.MaterialTheme
-+import androidx.compose.material.Text
-+import androidx.compose.runtime.Composable
-+import androidx.compose.ui.Alignment
-+import androidx.compose.ui.Modifier
-+import androidx.compose.ui.unit.dp
-+import com.example.cyclistance.R
-+import com.example.cyclistance.feature_user_profile.domain.model.UserProfileModel
-+
-+@Composable
-+fun UserActivitySection(modifier: Modifier = Modifier, userProfile: UserProfileModel) {
-+
-+
-+    Column(
-+        modifier = modifier, verticalArrangement = Arrangement.spacedBy(12.dp), horizontalAlignment = Alignment.Start) {
-+
-+        Text(
-+            text = "User Activity",
-+            color = MaterialTheme.colors.onBackground,
-+            style = MaterialTheme.typography.subtitle1,
-+            modifier = Modifier.padding(horizontal = 16.dp)
-+        )
-+
-+        LazyRow(modifier = Modifier.fillMaxWidth()) {
-+            items(count = 4) { index ->
-+                ActivityItemSection(
-+                    modifier = Modifier.padding(start = 16.dp),
-+                    quantity = when (index) {
-+                        0 -> userProfile.getRequestAssistanceFrequency()
-+                        1 -> userProfile.getRescueFrequency()
-+                        2 -> userProfile.getOverallDistanceOfRescue()
-+                        3 -> userProfile.getAverageSpeed()
-+                        else -> 0
-+                    }!!,
-+                    caption = when (index) {
-+                        0 -> "Request Assistance Frequencies"
-+                        1 -> "Rescue Frequencies"
-+                        2 -> "Overall Distance of Rescue"
-+                        3 -> "Average Speed"
-+                        else -> ""
-+                    },
-+                    icon = when (index) {
-+                        0 -> R.drawable.ic_microphone
-+                        1 -> R.drawable.ic_gear
-+                        2 -> R.drawable.ic_location_marker
-+                        3 -> R.drawable.ic_speedometer
-+                        else -> 0
-+                    }
-+                )
-+            }
-+        }
-+    }
-+
-+}
-\ No newline at end of file
-Index: app/src/main/java/com/example/cyclistance/feature_user_profile/domain/model/UserProfileInfoModel.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_user_profile/domain/model/UserProfileInfoModel.kt b/app/src/main/java/com/example/cyclistance/feature_user_profile/domain/model/UserProfileInfoModel.kt
-new file mode 100644
---- /dev/null	(date 1693216768317)
-+++ b/app/src/main/java/com/example/cyclistance/feature_user_profile/domain/model/UserProfileInfoModel.kt	(date 1693216768317)
-@@ -0,0 +1,18 @@
-+package com.example.cyclistance.feature_user_profile.domain.model
-+
-+import android.os.Parcelable
-+import com.example.cyclistance.core.utils.annotations.StableState
-+import kotlinx.parcelize.Parcelize
-+
-+
-+@StableState
-+@Parcelize
-+data class UserProfileInfoModel(
-+    val photoUrl: String,
-+    val name: String,
-+    val averageRating: Double,
-+    val address: String,
-+    val bikeGroup: String,
-+):Parcelable
-+
-+
-Index: app/src/main/res/drawable/ic_speedometer.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/res/drawable/ic_speedometer.xml b/app/src/main/res/drawable/ic_speedometer.xml
-new file mode 100644
---- /dev/null	(date 1693231272354)
-+++ b/app/src/main/res/drawable/ic_speedometer.xml	(date 1693231272354)
-@@ -0,0 +1,115 @@
-+<vector xmlns:android="http://schemas.android.com/apk/res/android"
-+    android:width="45dp"
-+    android:height="42dp"
-+    android:viewportWidth="45"
-+    android:viewportHeight="42">
-+  <path
-+      android:pathData="M24.174,17.776C23.551,17.37 22.681,17.404 21.717,18.022C19.81,19.213 18.275,22.117 18.275,24.492C18.275,25.676 18.657,26.506 19.277,26.901C19.683,27.157 21.232,28.118 21.631,28.39C22.257,28.788 23.121,28.736 24.081,28.136C25.988,26.945 27.523,24.042 27.523,21.666C27.523,20.49 27.141,19.656 26.525,19.265C26.119,18.986 24.56,18.029 24.174,17.776Z"
-+      android:fillColor="#EBEBEB"/>
-+  <path
-+      android:pathData="M25.311,27.054L18.5,22.799C18.351,23.349 18.273,23.919 18.266,24.493C18.266,25.677 18.648,26.507 19.267,26.901C19.673,27.158 21.222,28.119 21.621,28.39C22.247,28.789 23.111,28.737 24.072,28.137C24.528,27.839 24.945,27.474 25.311,27.054Z"
-+      android:fillColor="#E0E0E0"/>
-+  <path
-+      android:pathData="M24.067,19.493C22.16,20.684 20.625,23.588 20.625,25.963C20.625,28.338 22.174,29.313 24.067,28.118C25.959,26.923 27.508,24.023 27.508,21.648C27.508,19.273 25.973,18.301 24.067,19.493Z"
-+      android:fillColor="#FAFAFA"/>
-+  <path
-+      android:pathData="M24.07,21.019C23.421,21.477 22.881,22.095 22.493,22.821C22.106,23.548 21.882,24.362 21.84,25.199C21.84,26.737 22.841,27.362 24.073,26.592C24.722,26.133 25.263,25.516 25.65,24.789C26.037,24.063 26.261,23.248 26.304,22.411C26.3,20.874 25.302,20.252 24.07,21.019Z"
-+      android:fillColor="#37474F"/>
-+  <path
-+      android:pathData="M40.488,17.135C40.488,17.581 40.488,17.965 40.467,18.417L35.607,21.561L32.682,19.67C32.682,19.305 32.682,18.772 32.682,18.412C32.682,14.696 31.892,11.724 30.537,9.626L34.483,3.317L37.413,5.209C39.36,7.989 40.488,12.026 40.488,17.135Z"
-+      android:fillColor="#E97001"/>
-+  <path
-+      android:pathData="M40.489,17.063C40.489,17.522 40.489,17.907 40.466,18.366L35.288,21.561C35.288,21.19 35.311,20.654 35.311,20.283C35.311,16.512 34.47,13.488 33.025,11.361L37.207,4.976C39.287,7.771 40.489,11.878 40.489,17.063Z"
-+      android:fillColor="#E97001"/>
-+  <path
-+      android:pathData="M33.384,10.081L31.033,8.614L34.193,3.723L36.543,5.193L33.384,10.081Z"
-+      android:strokeAlpha="0.1"
-+      android:fillColor="#000000"
-+      android:fillAlpha="0.1"/>
-+  <path
-+      android:pathData="M35.756,20.727C35.764,21.209 35.776,21.906 35.784,22.388L32.392,19.949C32.384,19.467 31.957,19.078 31.949,18.603C31.864,13.698 30.893,9.791 29.293,7.049L31.366,7.878L33.105,9.211C34.704,11.915 35.671,15.829 35.756,20.727Z"
-+      android:strokeAlpha="0.2"
-+      android:fillColor="#000000"
-+      android:fillAlpha="0.2"/>
-+  <path
-+      android:pathData="M35.841,3.991L32.696,8.861L30.345,7.372L30.214,7.245C29.208,6.933 28.152,6.86 27.117,7.029L24.756,5.585L25.936,0.146C28.197,-0.227 30.225,0.146 31.894,1.184L34.193,2.614C34.296,2.677 34.399,2.744 34.499,2.815L34.702,2.96C34.771,3.009 34.84,3.057 34.905,3.113C34.971,3.169 35.001,3.187 35.046,3.228C35.23,3.383 35.406,3.548 35.573,3.723C35.676,3.813 35.759,3.898 35.841,3.991Z"
-+      android:fillColor="#E97001"/>
-+  <path
-+      android:pathData="M32.695,8.86L30.344,7.371L30.217,7.248C31.153,7.556 32.005,8.11 32.695,8.86Z"
-+      android:strokeAlpha="0.2"
-+      android:fillColor="#000000"
-+      android:fillAlpha="0.2"/>
-+  <path
-+      android:pathData="M35.844,3.991L32.695,8.861C31.29,7.372 29.356,6.709 27.105,7.048L28.265,1.616C31.318,1.117 33.951,1.955 35.844,3.991Z"
-+      android:strokeAlpha="0.2"
-+      android:fillColor="#ffffff"
-+      android:fillAlpha="0.2"/>
-+  <path
-+      android:pathData="M25.916,0.145L28.266,1.615L27.107,7.047L24.756,5.58L25.916,0.145Z"
-+      android:strokeAlpha="0.1"
-+      android:fillColor="#000000"
-+      android:fillAlpha="0.1"/>
-+  <path
-+      android:pathData="M31.878,1.184L34.177,2.613C32.518,1.593 30.508,1.236 28.267,1.612L25.938,0.145C28.181,-0.235 30.208,0.138 31.878,1.184Z"
-+      android:strokeAlpha="0.5"
-+      android:fillColor="#ffffff"
-+      android:fillAlpha="0.5"/>
-+  <path
-+      android:pathData="M27.134,1.861L25.974,7.285C24.828,7.621 23.728,8.122 22.705,8.774C21.53,9.519 20.428,10.392 19.418,11.38L17.071,9.891L15.932,5.874C17.28,4.546 18.753,3.374 20.327,2.378C21.719,1.487 23.219,0.81 24.783,0.364L27.134,1.861Z"
-+      android:fillColor="#E97001"/>
-+  <path
-+      android:pathData="M15.932,5.908L18.282,7.379L19.418,11.396L17.071,9.929L15.932,5.908Z"
-+      android:strokeAlpha="0.05"
-+      android:fillColor="#000000"
-+      android:fillAlpha="0.05"/>
-+  <path
-+      android:pathData="M27.134,1.862C25.563,2.303 24.057,2.98 22.66,3.872C21.087,4.871 19.614,6.042 18.265,7.368L15.914,5.901C17.262,4.573 18.735,3.401 20.309,2.406C21.701,1.515 23.201,0.837 24.766,0.392L27.134,1.862Z"
-+      android:strokeAlpha="0.6"
-+      android:fillColor="#ffffff"
-+      android:fillAlpha="0.6"/>
-+  <path
-+      android:pathData="M27.135,1.861L25.979,7.285C24.832,7.621 23.732,8.122 22.709,8.775C21.534,9.519 20.432,10.392 19.422,11.38L18.283,7.364C19.631,6.035 21.104,4.864 22.678,3.868C24.07,2.978 25.57,2.303 27.135,1.861Z"
-+      android:strokeAlpha="0.4"
-+      android:fillColor="#ffffff"
-+      android:fillAlpha="0.4"/>
-+  <path
-+      android:pathData="M18.316,12.535C16.176,14.915 14.396,17.643 13.04,20.621L9.97,19.418L7.619,17.948C9.461,13.916 11.893,10.232 14.822,7.04L17.173,8.529L18.316,12.535Z"
-+      android:fillColor="#E97001"/>
-+  <path
-+      android:pathData="M17.173,8.511C14.243,11.701 11.81,15.385 9.97,19.418L7.619,17.948C9.461,13.916 11.893,10.232 14.822,7.04L17.173,8.511Z"
-+      android:strokeAlpha="0.7"
-+      android:fillColor="#ffffff"
-+      android:fillAlpha="0.7"/>
-+  <path
-+      android:pathData="M18.313,12.535C16.173,14.916 14.393,17.646 13.037,20.625L9.967,19.419C11.807,15.385 14.24,11.701 17.17,8.511L18.313,12.535Z"
-+      android:strokeAlpha="0.6"
-+      android:fillColor="#ffffff"
-+      android:fillAlpha="0.6"/>
-+  <path
-+      android:pathData="M12.329,22.27C11.093,25.4 10.357,28.479 10.312,31.524L6.351,34L4,32.511C4.076,28.334 5.136,23.844 6.898,19.578L9.995,20.784L12.329,22.27Z"
-+      android:fillColor="#E97001"/>
-+  <path
-+      android:pathData="M9.249,21.064L6.898,19.598L9.982,20.804L12.333,22.271L9.249,21.064Z"
-+      android:strokeAlpha="0.6"
-+      android:fillColor="#ffffff"
-+      android:fillAlpha="0.6"/>
-+  <path
-+      android:pathData="M9.248,21.063C7.483,25.333 6.426,29.819 6.351,34L4,32.511C4.076,28.334 5.136,23.844 6.898,19.578L9.248,21.063Z"
-+      android:strokeAlpha="0.9"
-+      android:fillColor="#ffffff"
-+      android:fillAlpha="0.9"/>
-+  <path
-+      android:pathData="M12.333,22.27C11.094,25.397 10.358,28.479 10.309,31.524L6.352,33.996C6.427,29.819 7.484,25.33 9.249,21.06L12.333,22.27Z"
-+      android:strokeAlpha="0.75"
-+      android:fillColor="#ffffff"
-+      android:fillAlpha="0.75"/>
-+  <path
-+      android:pathData="M37.167,12.445L36.544,12.065L19.58,26.305L19.632,29.03L20.255,29.41L37.167,12.445Z"
-+      android:fillColor="#E0E0E0"/>
-+  <path
-+      android:pathData="M20.255,29.41L20.207,26.685L37.167,12.445L20.255,29.41Z"
-+      android:fillColor="#EBEBEB"/>
-+  <path
-+      android:pathData="M19.58,26.305L20.206,26.685L37.167,12.445L36.544,12.065L19.58,26.305Z"
-+      android:fillColor="#ffffff"/>
-+</vector>
-Index: app/src/main/java/com/example/cyclistance/feature_user_profile/presentation/components/UserProfileContent.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_user_profile/presentation/components/UserProfileContent.kt b/app/src/main/java/com/example/cyclistance/feature_user_profile/presentation/components/UserProfileContent.kt
-new file mode 100644
---- /dev/null	(date 1693294183191)
-+++ b/app/src/main/java/com/example/cyclistance/feature_user_profile/presentation/components/UserProfileContent.kt	(date 1693294183191)
-@@ -0,0 +1,163 @@
-+package com.example.cyclistance.feature_user_profile.presentation.components
-+
-+import androidx.compose.foundation.layout.Arrangement
-+import androidx.compose.foundation.layout.Column
-+import androidx.compose.foundation.layout.fillMaxSize
-+import androidx.compose.foundation.layout.fillMaxWidth
-+import androidx.compose.foundation.layout.padding
-+import androidx.compose.foundation.layout.wrapContentHeight
-+import androidx.compose.material.Divider
-+import androidx.compose.material.MaterialTheme
-+import androidx.compose.material.Text
-+import androidx.compose.material3.Surface
-+import androidx.compose.runtime.Composable
-+import androidx.compose.runtime.CompositionLocalProvider
-+import androidx.compose.ui.Alignment
-+import androidx.compose.ui.Modifier
-+import androidx.compose.ui.tooling.preview.Preview
-+import androidx.compose.ui.unit.dp
-+import com.example.cyclistance.feature_user_profile.domain.model.ReasonAssistanceModel
-+import com.example.cyclistance.feature_user_profile.domain.model.UserActivityModel
-+import com.example.cyclistance.feature_user_profile.domain.model.UserProfileInfoModel
-+import com.example.cyclistance.feature_user_profile.domain.model.UserProfileModel
-+import com.example.cyclistance.feature_user_profile.presentation.state.UserProfileState
-+import com.example.cyclistance.navigation.IsDarkTheme
-+import com.example.cyclistance.theme.Black500
-+import com.example.cyclistance.theme.CyclistanceTheme
-+
-+@Composable
-+fun UserProfileContent(modifier: Modifier = Modifier, state: UserProfileState) {
-+
-+    Surface(
-+        modifier = modifier
-+            .fillMaxSize(), color = MaterialTheme.colors.background) {
-+
-+        Column(
-+            horizontalAlignment = Alignment.CenterHorizontally,
-+            modifier = Modifier
-+                .fillMaxWidth()
-+                .padding(vertical = 16.dp)) {
-+
-+
-+            UserProfileSection(
-+                modifier = Modifier
-+                    .wrapContentHeight(Alignment.Top)
-+                    .padding(all = 16.dp),
-+                state = state
-+            )
-+
-+            Divider(
-+                modifier = Modifier
-+                    .padding(horizontal = 16.dp)
-+                    .padding(top = 12.dp), color = Black500)
-+
-+
-+            UserActivitySection(
-+                modifier = Modifier
-+                    .fillMaxWidth()
-+                    .align(Alignment.Start)
-+                    .padding(vertical = 12.dp),
-+                userProfile = state.userProfileModel
-+            )
-+
-+
-+            Divider(
-+                modifier = Modifier
-+                    .padding(horizontal = 16.dp)
-+                    .padding(top = 32.dp), color = Black500)
-+
-+            Column(
-+                modifier = Modifier
-+                    .fillMaxWidth()
-+                    .padding(vertical = 12.dp), verticalArrangement = Arrangement.spacedBy(12.dp), horizontalAlignment = Alignment.Start) {
-+
-+                Text(
-+                    text = "User Activity",
-+                    color = MaterialTheme.colors.onBackground,
-+                    style = MaterialTheme.typography.subtitle1,
-+                    modifier = Modifier.padding(horizontal = 16.dp)
-+                )
-+
-+            }
-+
-+        }
-+
-+    }
-+
-+}
-+
-+
-+@Preview(name = "Dark Theme", device = "id:Galaxy Nexus")
-+@Composable
-+fun PreviewUserProfileContent1() {
-+    CompositionLocalProvider(IsDarkTheme provides true) {
-+        CyclistanceTheme(darkTheme = true) {
-+            UserProfileContent(
-+                state = UserProfileState(
-+
-+                    userProfileModel = UserProfileModel(
-+                        userProfileInfo = UserProfileInfoModel(
-+                            photoUrl = "https://images.unsplash.com/photo-1438761681033-6461ffad8d80?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8Mnx8cGVyc29ufGVufDB8fDB8fHww&w=1000&q=80",
-+                            name = "John Doe",
-+                            averageRating = 4.0,
-+                            address = "Manila, Philippines",
-+                            bikeGroup = "Manila Bike Club"
-+                        ),
-+                        userActivity = UserActivityModel(
-+                            requestAssistanceFrequency = 100,
-+                            rescueFrequency = 100,
-+                            overallDistanceOfRescue = 235,
-+                            averageSpeed = 25
-+                        ),
-+
-+                        reasonAssistance = ReasonAssistanceModel(
-+                            injuryCount = 100,
-+                            frameSnapCount = 234,
-+                            flatTireCount = 14,
-+                            brokenChainCount = 12,
-+                            incidentCount = 6,
-+                            faultyBrakesCount = 1))
-+
-+                )
-+            )
-+        }
-+    }
-+}
-+
-+@Preview(name = "Light Theme")
-+@Composable
-+fun PreviewUserProfileContent2() {
-+    CompositionLocalProvider(IsDarkTheme provides false) {
-+        CyclistanceTheme(darkTheme = false) {
-+            UserProfileContent(
-+                state = UserProfileState(
-+
-+                    userProfileModel = UserProfileModel(
-+                        userProfileInfo = UserProfileInfoModel(
-+                            photoUrl = "https://images.unsplash.com/photo-1438761681033-6461ffad8d80?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8Mnx8cGVyc29ufGVufDB8fDB8fHww&w=1000&q=80",
-+                            name = "John Doe",
-+                            averageRating = 0.0,
-+                            address = "Manila, Philippines",
-+                            bikeGroup = "Manila Bike Club"
-+                        ),
-+                        userActivity = UserActivityModel(
-+                            requestAssistanceFrequency = 100,
-+                            rescueFrequency = 100,
-+                            overallDistanceOfRescue = 235,
-+                            averageSpeed = 25
-+                        ),
-+
-+                        reasonAssistance = ReasonAssistanceModel(
-+                            injuryCount = 100,
-+                            frameSnapCount = 234,
-+                            flatTireCount = 14,
-+                            brokenChainCount = 12,
-+                            incidentCount = 6,
-+                            faultyBrakesCount = 1))
-+
-+                )
-+            )
-+        }
-+    }
-+}
-+
-Index: app/src/main/java/com/example/cyclistance/feature_user_profile/domain/model/ReasonAssistanceModel.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_user_profile/domain/model/ReasonAssistanceModel.kt b/app/src/main/java/com/example/cyclistance/feature_user_profile/domain/model/ReasonAssistanceModel.kt
-new file mode 100644
---- /dev/null	(date 1693216768304)
-+++ b/app/src/main/java/com/example/cyclistance/feature_user_profile/domain/model/ReasonAssistanceModel.kt	(date 1693216768304)
-@@ -0,0 +1,17 @@
-+package com.example.cyclistance.feature_user_profile.domain.model
-+
-+import android.os.Parcelable
-+import com.example.cyclistance.core.utils.annotations.StableState
-+import kotlinx.parcelize.Parcelize
-+
-+
-+@StableState
-+@Parcelize
-+data class ReasonAssistanceModel(
-+    val injuryCount: Int,
-+    val frameSnapCount: Int,
-+    val flatTireCount: Int,
-+    val brokenChainCount: Int,
-+    val incidentCount: Int,
-+    val faultyBrakesCount: Int
-+):Parcelable
-\ No newline at end of file
-Index: app/src/main/java/com/example/cyclistance/feature_mapping/data/repository/MappingRepositoryImpl.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.cyclistance.feature_mapping.data.repository\n\nimport android.content.Context\nimport android.location.Address\nimport android.location.Geocoder\nimport android.os.Build\nimport androidx.annotation.WorkerThread\nimport com.example.cyclistance.core.utils.connection.ConnectionStatus.hasInternetConnection\nimport com.example.cyclistance.core.utils.constants.MappingConstants.API_CALL_RETRY_COUNT\nimport com.example.cyclistance.core.utils.constants.MappingConstants.KEY_HAZARDOUS_LANE_COLLECTION\nimport com.example.cyclistance.core.utils.constants.MappingConstants.KEY_MARKER_FIELD\nimport com.example.cyclistance.core.utils.constants.MappingConstants.KEY_TIMESTAMP_FIELD\nimport com.example.cyclistance.feature_mapping.data.CyclistanceApi\nimport com.example.cyclistance.feature_mapping.data.mapper.RescueTransactionMapper.toRescueTransaction\nimport com.example.cyclistance.feature_mapping.data.mapper.RescueTransactionMapper.toRescueTransactionDto\nimport com.example.cyclistance.feature_mapping.data.mapper.RouteDirectionMapper.toRouteDirection\nimport com.example.cyclistance.feature_mapping.data.mapper.UserMapper.toUser\nimport com.example.cyclistance.feature_mapping.data.mapper.UserMapper.toUserItem\nimport com.example.cyclistance.feature_mapping.data.mapper.UserMapper.toUserItemDto\nimport com.example.cyclistance.feature_mapping.domain.exceptions.MappingExceptions\nimport com.example.cyclistance.feature_mapping.domain.model.*\nimport com.example.cyclistance.feature_mapping.domain.model.remote_models.hazardous_lane.HazardousLaneMarker\nimport com.example.cyclistance.feature_mapping.domain.model.remote_models.rescue_transaction.RescueTransactionItem\nimport com.example.cyclistance.feature_mapping.domain.model.remote_models.rescue_transaction.RouteDirection\nimport com.example.cyclistance.feature_mapping.domain.model.remote_models.user.LocationModel\nimport com.example.cyclistance.feature_mapping.domain.model.remote_models.user.NearbyCyclist\nimport com.example.cyclistance.feature_mapping.domain.model.remote_models.user.UserItem\nimport com.example.cyclistance.feature_mapping.domain.repository.MappingRepository\nimport com.example.cyclistance.service.LocationService\nimport com.google.firebase.firestore.DocumentChange\nimport com.google.firebase.firestore.FirebaseFirestore\nimport com.google.firebase.firestore.FirebaseFirestoreException\nimport com.google.firebase.firestore.ListenerRegistration\nimport com.google.firebase.firestore.QuerySnapshot\nimport com.mapbox.api.directions.v5.DirectionsCriteria\nimport com.mapbox.api.directions.v5.models.DirectionsRoute\nimport com.mapbox.api.optimization.v1.MapboxOptimization\nimport com.mapbox.api.optimization.v1.models.OptimizationResponse\nimport com.mapbox.geojson.Point\nimport com.mapbox.mapboxsdk.geometry.LatLng\nimport kotlinx.coroutines.Dispatchers\nimport kotlinx.coroutines.flow.Flow\nimport kotlinx.coroutines.flow.catch\nimport kotlinx.coroutines.flow.flow\nimport kotlinx.coroutines.flow.map\nimport kotlinx.coroutines.flow.retry\nimport kotlinx.coroutines.suspendCancellableCoroutine\nimport kotlinx.coroutines.withContext\nimport retrofit2.Call\nimport retrofit2.Callback\nimport retrofit2.HttpException\nimport retrofit2.Response\nimport timber.log.Timber\nimport java.io.IOException\nimport java.util.concurrent.TimeUnit\nimport kotlin.coroutines.CoroutineContext\nimport kotlin.coroutines.resume\nimport kotlin.coroutines.resumeWithException\nimport kotlin.coroutines.suspendCoroutine\n\nclass MappingRepositoryImpl(\n\n    private val api: CyclistanceApi,\n    private val mapboxDirections: MapboxOptimization.Builder,\n    private val context: Context,\n    private val geocoder: Geocoder,\n    private val fireStore: FirebaseFirestore,\n) : MappingRepository {\n\n    private val scope: CoroutineContext = Dispatchers.IO\n    private var hazardousListener: ListenerRegistration? = null\n\n    private inline fun hazardousLaneListener(\n        crossinline onAddedHazardousMarker: (HazardousLaneMarker) -> Unit,\n        crossinline onModifiedHazardousMarker: (HazardousLaneMarker) -> Unit,\n        crossinline onRemovedHazardousMarker: (id: String) -> Unit,\n    ) = { value: QuerySnapshot?, error: FirebaseFirestoreException? ->\n\n        if (error != null) {\n            throw MappingExceptions.HazardousLaneException(\n                message = error?.message ?: \"Unknown error occurred\")\n        }\n\n        if (value == null) {\n            throw MappingExceptions.HazardousLaneException(message = \"No value found\")\n        }\n\n        value.documentChanges.forEach { item ->\n\n            when (item.type) {\n\n                DocumentChange.Type.ADDED -> {\n                    onAddedHazardousMarker(\n                        item.document.get(\n                            KEY_MARKER_FIELD,\n                            HazardousLaneMarker::class.java)!!)\n                }\n\n                DocumentChange.Type.MODIFIED -> {\n                    onModifiedHazardousMarker(\n                        item.document.get(\n                            KEY_MARKER_FIELD,\n                            HazardousLaneMarker::class.java)!!)\n                }\n\n                DocumentChange.Type.REMOVED -> {\n                    val hazardousMarker = item.document.get(\n                        KEY_MARKER_FIELD,\n                        HazardousLaneMarker::class.java)!!\n                    onRemovedHazardousMarker(hazardousMarker.id)\n                }\n            }\n        }\n    }\n\n    override suspend fun updateHazardousLane(label: String, description: String, id: String) {\n\n        if (context.hasInternetConnection().not()) {\n            throw MappingExceptions.NetworkException()\n        }\n\n        suspendCancellableCoroutine { continuation ->\n            fireStore.collection(KEY_HAZARDOUS_LANE_COLLECTION).document(id)\n                .update(\n                    mapOf(\n                        \"$KEY_MARKER_FIELD.description\" to description,\n                        \"$KEY_MARKER_FIELD.label\" to label,\n                        KEY_TIMESTAMP_FIELD to System.currentTimeMillis()\n                    )).addOnSuccessListener {\n                    continuation.resume(Unit)\n                }.addOnFailureListener {\n                    continuation.resumeWithException(\n                        MappingExceptions.HazardousLaneException(\n                            message = it.message ?: \"Unknown error occurred\"))\n                }\n        }\n    }\n\n    override suspend fun addNewHazardousLane(hazardousLaneMarker: HazardousLaneMarker) {\n\n        if (context.hasInternetConnection().not()) {\n            throw MappingExceptions.NetworkException()\n        }\n\n        suspendCancellableCoroutine { continuation ->\n\n            fireStore\n                .collection(KEY_HAZARDOUS_LANE_COLLECTION)\n                .document(hazardousLaneMarker.id)\n                .set(\n                    mapOf(\n                        KEY_MARKER_FIELD to hazardousLaneMarker,\n                        KEY_TIMESTAMP_FIELD to System.currentTimeMillis()\n                    ))\n                .addOnSuccessListener {\n                    continuation.resume(Unit)\n                }\n                .addOnFailureListener {\n                    continuation.resumeWithException(\n                        MappingExceptions.HazardousLaneException(\n                            message = it.message ?: \"Unknown error occurred\"))\n                }\n\n        }\n\n    }\n\n    override suspend fun addHazardousLaneListener(\n        onAddedHazardousMarker: (HazardousLaneMarker) -> Unit,\n        onModifiedHazardousMarker: (HazardousLaneMarker) -> Unit,\n        onRemovedHazardousMarker: (id: String) -> Unit) {\n\n        val currentTimeMillis = System.currentTimeMillis()\n        val oneWeekAgo = currentTimeMillis - TimeUnit.DAYS.toMillis(7)\n\n        hazardousListener = fireStore.collection(KEY_HAZARDOUS_LANE_COLLECTION)\n            .whereGreaterThan(KEY_TIMESTAMP_FIELD, oneWeekAgo)\n            .orderBy(KEY_TIMESTAMP_FIELD)\n            .addSnapshotListener(\n                hazardousLaneListener(\n                    onAddedHazardousMarker = onAddedHazardousMarker,\n                    onModifiedHazardousMarker = onModifiedHazardousMarker,\n                    onRemovedHazardousMarker = onRemovedHazardousMarker))\n    }\n\n    override fun removeHazardousLaneListener() {\n        hazardousListener?.remove()\n    }\n\n    override suspend fun deleteHazardousLane(id: String) {\n\n        if (context.hasInternetConnection().not()) {\n            throw MappingExceptions.NetworkException()\n        }\n\n        suspendCancellableCoroutine { continuation ->\n\n            fireStore\n                .collection(KEY_HAZARDOUS_LANE_COLLECTION)\n                .document(id)\n                .delete()\n                .addOnSuccessListener {\n                    continuation.resume(Unit)\n                }\n                .addOnFailureListener {\n                    continuation.resumeWithException(\n                        MappingExceptions.HazardousLaneException(\n                            message = it.message ?: \"Unknown error occurred\"))\n                }\n\n        }\n    }\n\n    override suspend fun getFullAddress(latitude: Double, longitude: Double): String {\n        return withContext(scope) {\n            suspendCoroutine { continuation ->\n                geocoder.getAddress(latitude = latitude, longitude = longitude) { address ->\n                    if (address != null) {\n                        continuation.resume(address.getFullAddress())\n                        return@getAddress\n                    }\n                    continuation.resumeWithException(MappingExceptions.AddressException(\"Searching for GPS\"))\n                }\n            }\n        }\n    }\n\n    @Suppress(\"DEPRECATION\")\n    @WorkerThread\n    private inline fun Geocoder.getAddress(\n        latitude: Double,\n        longitude: Double,\n        crossinline onCallbackAddress: (Address?) -> Unit) {\n\n        try {\n\n            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.TIRAMISU) {\n                getFromLocation(\n                    latitude, longitude, 1,\n                ) { addresses ->\n                    onCallbackAddress(addresses.lastOrNull())\n                }\n            } else {\n                onCallbackAddress(getFromLocation(latitude, longitude, 1)?.lastOrNull())\n            }\n\n        } catch (e: IOException) {\n            Timber.e(\"GET ADDRESS: ${e.message}\")\n        }\n    }\n\n    override fun getCalculateDistance(\n        startingLocation: LocationModel,\n        destinationLocation: LocationModel,\n    ): Double {\n\n        startingLocation.latitude ?: throw MappingExceptions.LocationException()\n        startingLocation.longitude ?: throw MappingExceptions.LocationException()\n        destinationLocation.latitude ?: throw MappingExceptions.LocationException()\n        destinationLocation.longitude ?: throw MappingExceptions.LocationException()\n\n\n        return LatLng(startingLocation.latitude, startingLocation.longitude).distanceTo(\n            LatLng(\n                destinationLocation.latitude, destinationLocation.longitude)\n        )\n\n\n    }\n\n    private fun Address.getFullAddress(): String {\n        val subThoroughfare =\n            if (subThoroughfare != \"null\" && subThoroughfare != null) \"$subThoroughfare \" else \"\"\n        val thoroughfare =\n            if (thoroughfare != \"null\" && thoroughfare != null) \"$thoroughfare., \" else \"\"\n        val subAdminArea = if (subAdminArea != \"null\" && subAdminArea != null) subAdminArea else \"\"\n\n        val locality = if (locality != \"null\" && locality != null) \"$locality, \" else \"\"\n        val formattedLocality = if (subAdminArea.isNotEmpty()) locality else locality.replace(\n            oldChar = ',',\n            newChar = ' ',\n            ignoreCase = true\n        )\n\n        return \"$subThoroughfare$thoroughfare$formattedLocality$subAdminArea\"\n    }\n\n\n    override suspend fun getUserById(userId: String): Flow<UserItem> =\n        flow {\n            val user = api.getUserById(userId)\n            emit(user)\n        }.retry(API_CALL_RETRY_COUNT) { cause ->\n            return@retry cause is IOException || cause is HttpException\n        }.catch { cause ->\n            if (cause is IOException || cause is HttpException) {\n                throw MappingExceptions.NetworkException()\n            }\n        }.map { it.toUserItem() }\n\n\n    override suspend fun getUserLocation(): Flow<LocationModel> {\n        return withContext(scope) { LocationService.address }\n    }\n\n    override suspend fun getUsers(latitude: Double, longitude: Double): Flow<NearbyCyclist> =\n        flow {\n            val users = api.getUsers(latitude = latitude, longitude = longitude)\n            emit(users)\n        }.retry(API_CALL_RETRY_COUNT) { cause ->\n            return@retry cause is IOException || cause is HttpException\n        }.catch { cause ->\n            if (cause is IOException || cause is HttpException) {\n                throw MappingExceptions.NetworkException()\n            }\n        }.map {\n            it.toUser()\n        }\n\n\n    override suspend fun createUser(userItem: UserItem) =\n        withContext(scope) {\n            handleException {\n                api.createUser(userItemDto = userItem.toUserItemDto())\n            }\n        }\n\n    override suspend fun deleteUser(id: String) =\n        withContext(scope) {\n            handleException {\n                api.deleteUser(id)\n            }\n        }\n\n    override suspend fun getRescueTransactionById(transactionId: String): Flow<RescueTransactionItem> =\n\n        flow {\n            val transaction = api.getRescueTransactionById(transactionId)\n            emit(transaction)\n        }.retry(API_CALL_RETRY_COUNT) { cause ->\n            return@retry cause is IOException || cause is HttpException\n        }.catch {\n            if (it is IOException || it is HttpException) {\n                throw MappingExceptions.NetworkException()\n            }\n        }.map { it.toRescueTransaction() }\n\n\n    override suspend fun createRescueTransaction(rescueTransaction: RescueTransactionItem) =\n        withContext(scope) {\n            handleException {\n                api.createRescueTransaction(rescueTransaction.toRescueTransactionDto())\n            }\n        }\n\n\n    override suspend fun deleteRescueTransaction(transactionId: String) {\n        withContext(scope) {\n            handleException {\n                api.deleteRescueTransaction(transactionId)\n            }\n        }\n    }\n\n\n    override suspend fun deleteRescueRespondent(userId: String, respondentId: String) {\n        withContext(scope) {\n            handleException {\n                api.deleteRescueRespondent(userId, respondentId)\n            }\n        }\n    }\n\n    override suspend fun addRescueRespondent(userId: String, respondentId: String) {\n        withContext(scope) {\n            handleException {\n                api.addRescueRespondent(userId, respondentId)\n            }\n        }\n    }\n\n    override suspend fun deleteAllRespondents(userId: String) {\n        withContext(scope) {\n            handleException {\n                api.deleteAllRespondents(userId)\n            }\n        }\n    }\n\n    override suspend fun getRouteDirections(origin: Point, destination: Point): RouteDirection {\n\n        if (context.hasInternetConnection().not()) {\n            throw MappingExceptions.NetworkException()\n        }\n\n        val client = mapboxDirections.coordinates(listOf(origin, destination))\n            .profile(DirectionsCriteria.PROFILE_CYCLING)\n            .overview(DirectionsCriteria.OVERVIEW_FULL)\n            .build()\n\n        return withContext(scope) {\n            suspendCoroutine { continuation ->\n                client.enqueueCall(object : Callback<OptimizationResponse> {\n                    override fun onResponse(\n                        call: Call<OptimizationResponse>,\n                        response: Response<OptimizationResponse>) {\n                        val routesAvailable = response.routesAvailable()\n\n                        if (!routesAvailable) {\n                            continuation.resumeWithException(Exception(\"No routes found\"))\n                            return\n                        }\n\n                        val currentRoute = response.getRoute()\n                        continuation.resume(currentRoute.toRouteDirection())\n                    }\n\n                    override fun onFailure(call: Call<OptimizationResponse>, throwable: Throwable) {\n                        Timber.e(\"Error: %s\", throwable.message)\n                        continuation.resumeWithException(throwable)\n                    }\n                })\n            }\n        }\n    }\n}\n\nprivate fun Response<OptimizationResponse>.getRoute(): DirectionsRoute {\n    return body()!!.trips()!!.first()\n}\n\n\nprivate fun Response<OptimizationResponse>.routesAvailable(): Boolean {\n\n    val body = this.body()\n    val hasBody = body != null\n    val hasTrips = body?.trips()?.isNotEmpty() == true\n    return (hasBody && hasTrips)\n}\n\n\nprivate inline fun <T> handleException(action: () -> T): T {\n    return try {\n        action()\n    } catch (e: HttpException) {\n        throw MappingExceptions.UnexpectedErrorException(message = e.message ?: \"Unexpected Error\")\n    } catch (e: IOException) {\n        Timber.e(\"Exception is ${e.message}\")\n        throw MappingExceptions.NetworkException()\n    }\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/data/repository/MappingRepositoryImpl.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/data/repository/MappingRepositoryImpl.kt
---- a/app/src/main/java/com/example/cyclistance/feature_mapping/data/repository/MappingRepositoryImpl.kt	(revision 915e08632bf568fd0a19fc533a8c9929cb503ae9)
-+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/data/repository/MappingRepositoryImpl.kt	(date 1693238655579)
-@@ -52,6 +52,7 @@
- import retrofit2.Response
- import timber.log.Timber
- import java.io.IOException
-+import java.util.Date
- import java.util.concurrent.TimeUnit
- import kotlin.coroutines.CoroutineContext
- import kotlin.coroutines.resume
-@@ -125,6 +126,7 @@
-                     mapOf(
-                         "$KEY_MARKER_FIELD.description" to description,
-                         "$KEY_MARKER_FIELD.label" to label,
-+                        "$KEY_MARKER_FIELD.datePosted" to Date(),
-                         KEY_TIMESTAMP_FIELD to System.currentTimeMillis()
-                     )).addOnSuccessListener {
-                     continuation.resume(Unit)
-Index: app/src/main/java/com/example/cyclistance/feature_user_profile/domain/model/UserActivityModel.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_user_profile/domain/model/UserActivityModel.kt b/app/src/main/java/com/example/cyclistance/feature_user_profile/domain/model/UserActivityModel.kt
-new file mode 100644
---- /dev/null	(date 1693216768337)
-+++ b/app/src/main/java/com/example/cyclistance/feature_user_profile/domain/model/UserActivityModel.kt	(date 1693216768337)
-@@ -0,0 +1,17 @@
-+package com.example.cyclistance.feature_user_profile.domain.model
-+
-+import android.os.Parcelable
-+import com.example.cyclistance.core.utils.annotations.StableState
-+import kotlinx.parcelize.Parcelize
-+
-+
-+@StableState
-+@Parcelize
-+data class UserActivityModel(
-+    val requestAssistanceFrequency: Int,
-+    val rescueFrequency: Int,
-+    val overallDistanceOfRescue: Int,
-+    val averageSpeed: Int
-+):Parcelable
-+
-+
-Index: app/src/main/java/com/example/cyclistance/feature_user_profile/presentation/components/UserProfileSection.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_user_profile/presentation/components/UserProfileSection.kt b/app/src/main/java/com/example/cyclistance/feature_user_profile/presentation/components/UserProfileSection.kt
-new file mode 100644
---- /dev/null	(date 1693235122595)
-+++ b/app/src/main/java/com/example/cyclistance/feature_user_profile/presentation/components/UserProfileSection.kt	(date 1693235122595)
-@@ -0,0 +1,148 @@
-+package com.example.cyclistance.feature_user_profile.presentation.components
-+
-+import androidx.compose.foundation.clickable
-+import androidx.compose.foundation.layout.Arrangement
-+import androidx.compose.foundation.layout.Column
-+import androidx.compose.foundation.layout.Row
-+import androidx.compose.foundation.layout.Spacer
-+import androidx.compose.foundation.layout.padding
-+import androidx.compose.foundation.layout.size
-+import androidx.compose.foundation.layout.wrapContentSize
-+import androidx.compose.foundation.shape.CircleShape
-+import androidx.compose.material.Icon
-+import androidx.compose.material.MaterialTheme
-+import androidx.compose.material.Text
-+import androidx.compose.material.icons.Icons
-+import androidx.compose.material.icons.filled.Edit
-+import androidx.compose.material.icons.outlined.DirectionsBike
-+import androidx.compose.material.icons.outlined.LocationOn
-+import androidx.compose.material.icons.outlined.Message
-+import androidx.compose.runtime.Composable
-+import androidx.compose.ui.Alignment
-+import androidx.compose.ui.Modifier
-+import androidx.compose.ui.draw.clip
-+import androidx.compose.ui.layout.ContentScale
-+import androidx.compose.ui.platform.LocalContext
-+import androidx.compose.ui.res.painterResource
-+import androidx.compose.ui.unit.dp
-+import coil.compose.AsyncImage
-+import coil.request.CachePolicy
-+import coil.request.ImageRequest
-+import com.example.cyclistance.R
-+import com.example.cyclistance.feature_user_profile.presentation.state.UserProfileState
-+import com.gowtham.ratingbar.RatingBar
-+import com.gowtham.ratingbar.RatingBarStyle
-+
-+@Composable
-+fun UserProfileSection(modifier: Modifier = Modifier, state: UserProfileState) {
-+
-+
-+    Row(
-+        modifier = modifier,
-+        verticalAlignment = Alignment.Top) {
-+
-+
-+        AsyncImage(
-+            model = ImageRequest.Builder(LocalContext.current)
-+                .data(state.userProfileModel.getPhoto())
-+                .crossfade(true)
-+                .networkCachePolicy(CachePolicy.ENABLED)
-+                .diskCachePolicy(CachePolicy.ENABLED)
-+                .memoryCachePolicy(CachePolicy.ENABLED)
-+                .build(),
-+            contentDescription = "User Picture",
-+            modifier = Modifier
-+                .size(85.dp)
-+                .clip(CircleShape),
-+            contentScale = ContentScale.Crop,
-+            placeholder = painterResource(id = R.drawable.ic_empty_profile_placeholder_large),
-+            error = painterResource(id = R.drawable.ic_empty_profile_placeholder_large),
-+            fallback = painterResource(id = R.drawable.ic_empty_profile_placeholder_large))
-+
-+
-+        Column(
-+            modifier = Modifier.padding(start = 8.dp),
-+            verticalArrangement = Arrangement.spacedBy(
-+                2.dp,
-+                alignment = Alignment.CenterVertically),
-+            horizontalAlignment = Alignment.Start) {
-+
-+            Text(
-+                text = state.userProfileModel.getName() ?: "",
-+                color = MaterialTheme.colors.onBackground,
-+                style = MaterialTheme.typography.subtitle1,
-+                modifier = Modifier.padding(start = 3.5.dp)
-+
-+            )
-+
-+            RatingBar(
-+                modifier = Modifier
-+                    .padding(start = 3.5.dp)
-+                    .padding(vertical = 4.dp),
-+                value = state.userProfileModel.getAverageRating()!!.toFloat(),
-+                style = RatingBarStyle.Stroke(
-+                    activeColor = MaterialTheme.colors.primary,
-+                ),
-+                onValueChange = {},
-+                onRatingChanged = {},
-+                size = 14.dp,
-+                spaceBetween = 2.dp
-+
-+            )
-+
-+
-+            Row(
-+                modifier = Modifier,
-+                verticalAlignment = Alignment.CenterVertically,
-+                horizontalArrangement = Arrangement.spacedBy(8.dp)) {
-+                Icon(
-+                    imageVector = Icons.Outlined.LocationOn,
-+                    contentDescription = "User Address",
-+                    tint = MaterialTheme.colors.onBackground)
-+                Text(
-+                    text = state.userProfileModel.getAddress()!!,
-+                    color = MaterialTheme.colors.onBackground,
-+                    style = MaterialTheme.typography.body2)
-+            }
-+
-+
-+            Row(
-+                modifier = Modifier,
-+                verticalAlignment = Alignment.CenterVertically,
-+                horizontalArrangement = Arrangement.spacedBy(8.dp)) {
-+                Icon(
-+                    imageVector = Icons.Outlined.DirectionsBike,
-+                    contentDescription = "User Bike Group",
-+                    tint = MaterialTheme.colors.onBackground)
-+                Text(
-+                    text = state.userProfileModel.getBikeGroup()!!,
-+                    color = MaterialTheme.colors.onBackground,
-+                    style = MaterialTheme.typography.body2)
-+            }
-+        }
-+
-+        Spacer(modifier = Modifier.weight(1f))
-+
-+        Column(modifier = Modifier.wrapContentSize(align = Alignment.TopEnd)) {
-+            Icon(
-+                imageVector = Icons.Filled.Edit,
-+                contentDescription = "Edit Profile",
-+                tint = MaterialTheme.colors.onBackground,
-+                modifier = Modifier
-+                    .clip(CircleShape)
-+                    .clickable { }
-+                    .padding(all = 8.dp))
-+
-+            Icon(
-+                imageVector = Icons.Outlined.Message,
-+                contentDescription = "Edit Profile",
-+                tint = MaterialTheme.colors.primary,
-+                modifier = Modifier
-+                    .clip(CircleShape)
-+                    .clickable { }
-+                    .padding(all = 8.dp))
-+        }
-+
-+
-+    }
-+}
-\ No newline at end of file
-Index: app/src/main/res/drawable/ic_gear.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/res/drawable/ic_gear.xml b/app/src/main/res/drawable/ic_gear.xml
-new file mode 100644
---- /dev/null	(date 1693234418765)
-+++ b/app/src/main/res/drawable/ic_gear.xml	(date 1693234418765)
-@@ -0,0 +1,48 @@
-+<vector xmlns:android="http://schemas.android.com/apk/res/android"
-+    android:width="55dp"
-+    android:height="55dp"
-+    android:viewportWidth="41"
-+    android:viewportHeight="40">
-+  <path
-+      android:pathData="M37.8,22.823C37.752,22.803 37.7,22.795 37.648,22.799C37.596,22.804 37.547,22.822 37.505,22.851L36,23.793C35.903,23.849 35.787,23.867 35.677,23.843C35.567,23.819 35.471,23.755 35.41,23.665C35.319,23.546 35.221,23.434 35.115,23.327C35.027,23.24 34.964,23.132 34.934,23.015C34.903,22.898 34.906,22.775 34.941,22.659L37.301,21.238L35.531,20.274C35.494,20.254 35.456,20.239 35.416,20.229L34.289,19.992C34.165,19.972 34.038,19.987 33.924,20.037C33.81,20.087 33.715,20.169 33.651,20.271L32.595,22.174C32.45,22.396 32.221,22.558 31.955,22.628L31.89,22.648C31.935,22.503 31.967,22.355 31.985,22.205L30.214,21.235C30.158,21.207 30.094,21.197 30.031,21.206C29.969,21.215 29.911,21.243 29.866,21.285L28.181,22.536C28.08,22.62 27.999,22.724 27.943,22.84C27.888,22.957 27.859,23.083 27.86,23.21L27.96,24.726C27.96,24.991 27.868,25.248 27.698,25.459C27.423,25.771 27.161,26.097 26.916,26.437C26.835,26.537 26.732,26.618 26.613,26.675C26.495,26.732 26.364,26.763 26.231,26.766L25.146,26.715C25.017,26.716 24.891,26.75 24.781,26.813C24.671,26.876 24.582,26.967 24.523,27.075L23.505,29.232C23.462,29.323 23.455,29.427 23.487,29.522C23.519,29.618 23.588,29.699 23.679,29.75L24.88,30.404C24.92,30.497 24.929,30.599 24.907,30.697C24.825,31.037 24.763,31.382 24.721,31.728C24.677,31.991 24.549,32.235 24.355,32.427L22.862,33.723C22.768,33.814 22.697,33.923 22.654,34.043C22.611,34.163 22.596,34.291 22.611,34.417L22.892,35.955C22.896,35.997 22.91,36.038 22.934,36.074C22.957,36.11 22.989,36.141 23.027,36.164L24.798,37.133L24.821,35.208C24.917,35.152 25.034,35.134 25.144,35.158C25.254,35.182 25.351,35.246 25.411,35.336C25.5,35.455 25.599,35.568 25.706,35.673C25.794,35.761 25.857,35.869 25.888,35.986C25.919,36.103 25.917,36.226 25.883,36.342L25.146,38.281C25.112,38.358 25.109,38.444 25.136,38.523C25.163,38.602 25.218,38.669 25.293,38.713L27.063,39.683L27.547,38.429L28.235,36.819C28.379,36.597 28.606,36.434 28.872,36.364C29.108,36.306 29.339,36.233 29.565,36.147C29.616,36.125 29.671,36.113 29.726,36.113C29.782,36.113 29.837,36.125 29.887,36.147C29.938,36.169 29.983,36.201 30.019,36.241C30.055,36.281 30.081,36.328 30.096,36.378L30.477,37.568C30.499,37.645 30.55,37.712 30.621,37.755L32.406,38.724L32.094,36.863L32.639,36.456C32.741,36.372 32.822,36.269 32.877,36.152C32.932,36.036 32.96,35.91 32.958,35.782L32.858,34.266C32.857,34.001 32.95,33.744 33.12,33.534C33.398,33.222 33.814,33.054 34.059,32.717C34.197,32.525 34.354,32.216 34.59,32.227L35.672,32.277C35.801,32.277 35.927,32.243 36.037,32.18C36.147,32.117 36.236,32.026 36.295,31.917L37.316,29.758C37.339,29.708 37.352,29.655 37.353,29.601C37.354,29.546 37.344,29.492 37.323,29.441C37.302,29.391 37.27,29.345 37.23,29.306C37.189,29.267 37.141,29.236 37.089,29.215L36.203,28.861C36.096,28.812 36.009,28.73 35.956,28.629C35.903,28.529 35.886,28.414 35.908,28.304C35.991,27.963 36.054,27.619 36.097,27.273C36.139,27.01 36.266,26.766 36.46,26.573L37.956,25.278C38.091,25.147 38.177,24.978 38.201,24.796L39.558,23.798L37.8,22.823ZM31.014,32.773C29.185,34.127 27.438,33.759 27.108,31.937C26.777,30.115 28.27,27.822 30.096,26.465C31.923,25.108 33.392,25.211 33.722,27.022C34.053,28.833 32.846,31.416 31.02,32.773H31.014Z"
-+      android:fillColor="#E97001"/>
-+  <path
-+      android:pathData="M24.353,32.43L22.878,33.711C22.762,33.821 22.683,33.961 22.65,34.113L24.843,35.311V35.199C24.939,35.143 25.055,35.125 25.165,35.149C25.276,35.173 25.372,35.237 25.433,35.327L27.548,34.174L24.353,32.43Z"
-+      android:fillColor="#FFCC82"/>
-+  <path
-+      android:pathData="M28.115,28.547C28.283,28.302 28.464,28.066 28.658,27.839L26.552,26.691C26.459,26.73 26.358,26.75 26.257,26.753L25.171,26.703C25.007,26.7 24.847,26.754 24.723,26.856L27.968,28.622L28.115,28.547Z"
-+      android:fillColor="#FFCC82"/>
-+  <path
-+      android:pathData="M39.567,23.792C39.519,23.772 39.466,23.765 39.415,23.771C39.363,23.777 39.314,23.796 39.272,23.826L37.779,24.753C37.682,24.809 37.567,24.826 37.457,24.803C37.346,24.779 37.25,24.715 37.189,24.625C37.1,24.506 37.002,24.393 36.894,24.288C36.806,24.2 36.743,24.092 36.713,23.974C36.682,23.856 36.685,23.733 36.72,23.617L36.862,23.257L37.502,22.859C37.546,22.827 37.598,22.808 37.653,22.803C37.707,22.798 37.762,22.808 37.812,22.831L39.567,23.792Z"
-+      android:fillColor="#FFCC82"/>
-+  <path
-+      android:pathData="M35.159,23.376C35.142,23.36 35.127,23.337 35.109,23.318C35.021,23.23 34.959,23.122 34.928,23.005C34.897,22.888 34.9,22.765 34.935,22.649L37.295,21.228L35.525,20.264C35.489,20.245 35.45,20.23 35.41,20.219L34.283,19.983C34.159,19.962 34.032,19.977 33.918,20.027C33.804,20.077 33.709,20.159 33.646,20.261L32.59,22.164C32.528,22.264 32.446,22.351 32.348,22.42L34.737,23.725L35.159,23.376Z"
-+      android:fillColor="#FFCC82"/>
-+  <path
-+      android:pathData="M27.918,22.941L30.11,24.136L31.916,22.576C31.949,22.45 31.974,22.323 31.989,22.194L30.219,21.224C30.162,21.197 30.096,21.188 30.033,21.199C29.969,21.21 29.912,21.24 29.868,21.285L28.184,22.537C28.055,22.644 27.963,22.784 27.918,22.941Z"
-+      android:fillColor="#FFCC82"/>
-+  <path
-+      android:pathData="M39.993,25.542L39.713,24.004C39.711,23.956 39.695,23.909 39.667,23.869C39.638,23.829 39.598,23.798 39.552,23.778C39.505,23.759 39.453,23.753 39.403,23.76C39.353,23.767 39.305,23.788 39.267,23.82L37.774,24.748C37.678,24.804 37.562,24.822 37.451,24.798C37.341,24.774 37.245,24.71 37.184,24.62C37.096,24.501 36.997,24.389 36.889,24.285C36.801,24.197 36.739,24.089 36.708,23.971C36.677,23.854 36.678,23.731 36.712,23.614L37.473,21.663C37.494,21.615 37.504,21.562 37.501,21.51C37.498,21.457 37.482,21.406 37.456,21.359C37.429,21.313 37.392,21.273 37.347,21.241C37.302,21.21 37.251,21.189 37.196,21.179L36.072,20.942C35.948,20.921 35.821,20.936 35.707,20.986C35.592,21.036 35.498,21.118 35.435,21.221L34.375,23.124C34.231,23.345 34.004,23.508 33.738,23.578C33.502,23.636 33.271,23.709 33.045,23.795C32.994,23.818 32.939,23.83 32.884,23.83C32.828,23.83 32.773,23.819 32.722,23.797C32.671,23.775 32.626,23.742 32.59,23.702C32.554,23.662 32.528,23.615 32.514,23.564L32.133,22.374C32.121,22.328 32.096,22.286 32.062,22.252C32.027,22.217 31.984,22.192 31.936,22.177C31.888,22.163 31.837,22.161 31.788,22.17C31.739,22.18 31.693,22.201 31.655,22.232L29.971,23.483C29.869,23.567 29.788,23.671 29.733,23.787C29.678,23.903 29.65,24.03 29.652,24.157L29.752,25.673C29.752,25.938 29.66,26.195 29.49,26.406C29.212,26.718 28.953,27.044 28.705,27.384C28.625,27.484 28.522,27.566 28.403,27.624C28.285,27.681 28.154,27.711 28.02,27.712L26.938,27.662C26.81,27.665 26.686,27.7 26.579,27.764C26.471,27.829 26.384,27.92 26.327,28.027L25.291,30.201C25.266,30.251 25.251,30.306 25.249,30.362C25.246,30.418 25.256,30.473 25.277,30.526C25.299,30.578 25.331,30.625 25.372,30.665C25.414,30.705 25.464,30.737 25.519,30.758L26.404,31.112C26.511,31.161 26.598,31.242 26.651,31.343C26.704,31.444 26.721,31.558 26.699,31.669C26.617,32.009 26.553,32.353 26.51,32.7C26.469,32.963 26.342,33.207 26.147,33.399L24.651,34.695C24.558,34.786 24.486,34.895 24.443,35.015C24.4,35.135 24.385,35.263 24.4,35.389L24.695,36.929C24.697,36.977 24.713,37.024 24.742,37.063C24.771,37.103 24.811,37.134 24.858,37.153C24.904,37.172 24.956,37.178 25.006,37.17C25.056,37.163 25.103,37.142 25.141,37.111L26.634,36.183C26.73,36.127 26.846,36.11 26.956,36.133C27.067,36.157 27.163,36.221 27.224,36.311C27.314,36.429 27.413,36.542 27.519,36.648C27.607,36.736 27.67,36.844 27.7,36.962C27.731,37.08 27.728,37.203 27.693,37.319L26.932,39.27C26.911,39.319 26.901,39.371 26.904,39.424C26.907,39.476 26.923,39.528 26.949,39.574C26.976,39.62 27.013,39.661 27.058,39.692C27.103,39.723 27.154,39.744 27.209,39.755L28.336,39.992C28.46,40.012 28.587,39.997 28.701,39.947C28.815,39.897 28.91,39.815 28.973,39.713L30.03,37.81C30.176,37.588 30.404,37.426 30.67,37.356C30.906,37.298 31.138,37.226 31.363,37.138C31.414,37.116 31.469,37.105 31.524,37.105C31.58,37.104 31.635,37.116 31.685,37.138C31.736,37.16 31.781,37.192 31.817,37.232C31.853,37.272 31.879,37.319 31.894,37.37L32.275,38.559C32.287,38.605 32.312,38.646 32.346,38.68C32.381,38.714 32.424,38.739 32.471,38.754C32.518,38.768 32.569,38.771 32.618,38.761C32.666,38.752 32.712,38.732 32.75,38.701L34.434,37.45C34.536,37.366 34.617,37.262 34.673,37.146C34.728,37.03 34.756,36.904 34.756,36.776L34.656,35.26C34.655,34.995 34.747,34.737 34.918,34.528C35.193,34.215 35.455,33.89 35.7,33.55C35.781,33.45 35.884,33.368 36.003,33.312C36.121,33.255 36.252,33.224 36.385,33.221L37.47,33.271C37.599,33.271 37.725,33.237 37.835,33.174C37.945,33.11 38.034,33.02 38.093,32.912L39.111,30.755C39.136,30.705 39.151,30.65 39.153,30.594C39.156,30.538 39.146,30.482 39.125,30.43C39.104,30.378 39.071,30.33 39.03,30.29C38.988,30.25 38.938,30.219 38.883,30.198L37.998,29.844C37.891,29.795 37.803,29.714 37.75,29.613C37.696,29.512 37.68,29.397 37.703,29.287C37.785,28.946 37.847,28.602 37.889,28.256C37.933,27.994 38.06,27.75 38.255,27.559L39.748,26.261C39.844,26.167 39.917,26.053 39.959,25.928C40.001,25.804 40.013,25.671 39.993,25.542ZM32.794,33.739C30.968,35.096 29.218,34.725 28.888,32.903C28.557,31.081 29.773,28.52 31.596,27.163C33.419,25.807 35.172,26.177 35.502,27.999C35.833,29.822 34.62,32.382 32.794,33.739Z"
-+      android:fillColor="#EBAD52"/>
-+  <path
-+      android:pathData="M29.365,7.93L27.619,6.98C27.577,6.96 27.53,6.949 27.483,6.949C27.436,6.949 27.389,6.96 27.347,6.98L24.19,8.323C24.14,8.346 24.085,8.358 24.03,8.358C23.974,8.358 23.919,8.347 23.869,8.325C23.818,8.303 23.774,8.271 23.738,8.23C23.702,8.19 23.676,8.143 23.662,8.092C23.492,7.575 23.257,7.079 22.96,6.615C22.895,6.506 22.858,6.385 22.85,6.26C22.841,6.135 22.863,6.01 22.913,5.894L25.016,1.887C25.068,1.785 25.077,1.668 25.042,1.56C25.007,1.452 24.931,1.36 24.828,1.302L22.547,0.059C22.443,0.003 22.321,-0.014 22.205,0.011C22.088,0.037 21.986,0.103 21.919,0.196L19.293,3.927C19.211,4.026 19.107,4.106 18.988,4.162C18.869,4.218 18.738,4.248 18.605,4.25C18.3,4.242 17.994,4.255 17.691,4.289V1.567L15.938,0.611C15.891,0.59 15.839,0.582 15.787,0.586C15.735,0.59 15.686,0.608 15.643,0.636L12.103,2.57C11.989,2.64 11.893,2.732 11.819,2.84C11.746,2.948 11.698,3.07 11.678,3.197L11.324,6.922C11.284,7.186 11.155,7.43 10.955,7.618C10.252,8.233 9.594,8.891 8.984,9.588C8.898,9.678 8.788,9.743 8.664,9.776C8.541,9.809 8.411,9.808 8.288,9.775L6.01,9.023C5.893,8.988 5.766,8.991 5.651,9.032C5.535,9.073 5.438,9.149 5.373,9.248L2.765,13.511C2.707,13.614 2.687,13.733 2.708,13.847C2.729,13.962 2.789,14.068 2.88,14.147L4.706,15.634C4.8,15.718 4.866,15.824 4.897,15.942C4.928,16.059 4.924,16.183 4.883,16.298C4.548,17.144 4.274,18.01 4.063,18.892C3.99,19.149 3.831,19.377 3.609,19.541L0.364,21.695C0.257,21.774 0.17,21.874 0.107,21.988C0.044,22.102 0.008,22.227 0.001,22.355V26.222C-0.003,26.27 0.007,26.319 0.029,26.362C0.052,26.406 0.085,26.443 0.128,26.47L1.874,27.423L4.467,26.261C4.565,26.452 4.673,26.638 4.792,26.819C4.857,26.928 4.894,27.049 4.902,27.174C4.911,27.299 4.889,27.424 4.839,27.54L2.736,31.547C2.683,31.648 2.674,31.764 2.708,31.872C2.743,31.98 2.819,32.072 2.921,32.129L5.205,33.375C5.309,33.43 5.432,33.447 5.548,33.421C5.665,33.395 5.767,33.329 5.833,33.235L8.456,29.513C8.537,29.413 8.64,29.332 8.759,29.276C8.877,29.22 9.008,29.19 9.141,29.19C9.715,29.201 10.289,29.147 10.849,29.028C10.902,29.014 10.958,29.011 11.013,29.02C11.068,29.029 11.119,29.049 11.165,29.079C11.21,29.109 11.247,29.149 11.274,29.194C11.302,29.24 11.317,29.291 11.321,29.343L11.669,32.594C11.67,32.64 11.683,32.685 11.707,32.725C11.731,32.764 11.764,32.798 11.805,32.823L13.549,33.77L15.643,30.867C15.756,30.796 15.852,30.704 15.925,30.596C15.998,30.488 16.045,30.367 16.065,30.24L16.419,26.515C16.441,26.394 16.494,26.28 16.573,26.183C16.653,26.086 16.756,26.009 16.874,25.958C17.914,25.533 18.852,24.912 19.629,24.132C19.719,24.046 19.832,23.984 19.956,23.953C20.08,23.921 20.211,23.922 20.334,23.954L21.733,24.42C21.85,24.455 21.977,24.452 22.093,24.412C22.209,24.372 22.308,24.296 22.373,24.197L24.978,19.934C25.036,19.831 25.057,19.713 25.037,19.598C25.017,19.483 24.956,19.378 24.866,19.298L23.671,18.329C23.579,18.244 23.512,18.137 23.478,18.019C23.444,17.902 23.443,17.778 23.476,17.66C23.735,16.649 23.844,15.609 23.801,14.57C23.803,14.443 23.835,14.319 23.894,14.205C23.952,14.091 24.036,13.99 24.14,13.91L27.385,11.756C27.491,11.677 27.578,11.577 27.64,11.464C27.702,11.35 27.738,11.226 27.745,11.098L29.294,9.346L29.365,7.93ZM13.879,23.255C10.569,25.058 8.512,23.779 8.512,20.17C8.512,16.562 11.247,12.141 14.555,10.338C17.862,8.535 19.865,9.845 19.865,13.453C19.865,17.061 17.18,21.455 13.879,23.26V23.255Z"
-+      android:fillColor="#E97001"/>
-+  <path
-+      android:pathData="M24.319,3.214L25.016,1.891C25.067,1.789 25.076,1.672 25.041,1.564C25.006,1.456 24.93,1.364 24.827,1.306L22.546,0.063C22.443,0.007 22.32,-0.01 22.204,0.015C22.087,0.041 21.985,0.106 21.918,0.2L19.295,3.925C19.247,3.987 19.188,4.04 19.121,4.084L22.057,5.683L24.319,3.214Z"
-+      android:fillColor="#FFCC82"/>
-+  <path
-+      android:pathData="M3.866,19.291C3.797,19.387 3.712,19.471 3.615,19.542L0.37,21.696C0.283,21.759 0.21,21.838 0.154,21.927L2.134,23.005L6.433,20.695L3.866,19.291Z"
-+      android:fillColor="#FFCC82"/>
-+  <path
-+      android:pathData="M5.83,8.997C5.738,9 5.649,9.025 5.57,9.069C5.49,9.112 5.424,9.174 5.376,9.248L2.768,13.511C2.713,13.606 2.692,13.716 2.709,13.823L4.957,15.049L8.527,10.488L5.83,8.997Z"
-+      android:fillColor="#FFCC82"/>
-+  <path
-+      android:pathData="M11.754,2.973L14.533,4.489L17.693,2.767V1.566L15.94,0.61C15.893,0.589 15.841,0.581 15.789,0.585C15.738,0.59 15.688,0.607 15.645,0.635L12.105,2.569C11.948,2.667 11.826,2.808 11.754,2.973Z"
-+      android:fillColor="#FFCC82"/>
-+  <path
-+      android:pathData="M29.488,12.047V8.188C29.496,8.14 29.49,8.092 29.469,8.048C29.449,8.004 29.415,7.967 29.373,7.941C29.33,7.914 29.281,7.9 29.23,7.9C29.179,7.9 29.13,7.914 29.087,7.94L25.93,9.285C25.88,9.308 25.826,9.32 25.77,9.32C25.715,9.321 25.66,9.309 25.61,9.287C25.559,9.265 25.515,9.233 25.479,9.192C25.444,9.152 25.419,9.105 25.405,9.054C25.233,8.537 24.996,8.041 24.7,7.577C24.635,7.468 24.597,7.347 24.589,7.222C24.581,7.097 24.603,6.972 24.653,6.856L26.756,2.849C26.808,2.747 26.817,2.631 26.783,2.523C26.749,2.414 26.673,2.322 26.57,2.264L24.287,1.019C24.183,0.963 24.06,0.947 23.944,0.973C23.828,0.999 23.726,1.065 23.658,1.158L21.035,4.883C20.955,4.983 20.851,5.064 20.732,5.119C20.612,5.175 20.481,5.204 20.348,5.204C19.775,5.194 19.202,5.249 18.643,5.368C18.589,5.382 18.533,5.385 18.478,5.376C18.424,5.367 18.372,5.347 18.326,5.317C18.281,5.287 18.243,5.247 18.216,5.202C18.188,5.156 18.172,5.105 18.168,5.053L17.823,1.779C17.824,1.732 17.811,1.685 17.786,1.644C17.76,1.603 17.723,1.57 17.678,1.548C17.633,1.526 17.583,1.517 17.532,1.522C17.482,1.526 17.435,1.544 17.395,1.573L13.854,3.507C13.741,3.576 13.644,3.668 13.571,3.776C13.498,3.883 13.45,4.004 13.43,4.131L13.076,7.859C13.035,8.122 12.906,8.366 12.707,8.555C12.004,9.17 11.345,9.828 10.736,10.525C10.65,10.615 10.539,10.679 10.416,10.712C10.293,10.745 10.162,10.744 10.04,10.709L7.762,9.96C7.645,9.925 7.518,9.928 7.403,9.968C7.288,10.009 7.19,10.084 7.125,10.182L4.517,14.448C4.459,14.551 4.438,14.67 4.459,14.785C4.48,14.899 4.541,15.005 4.632,15.084L6.458,16.569C6.551,16.653 6.617,16.76 6.648,16.877C6.68,16.995 6.675,17.119 6.635,17.235C6.299,18.08 6.025,18.947 5.815,19.829C5.742,20.086 5.582,20.314 5.36,20.478L2.115,22.632C2.009,22.711 1.921,22.811 1.859,22.925C1.796,23.039 1.76,23.164 1.752,23.292V27.159C1.746,27.206 1.753,27.254 1.775,27.297C1.796,27.341 1.83,27.377 1.872,27.403C1.914,27.429 1.964,27.442 2.014,27.443C2.064,27.443 2.114,27.43 2.156,27.404L5.313,26.061C5.363,26.039 5.418,26.027 5.473,26.026C5.528,26.026 5.583,26.037 5.633,26.059C5.683,26.08 5.728,26.113 5.763,26.153C5.799,26.192 5.824,26.239 5.838,26.29C6.009,26.808 6.246,27.305 6.544,27.769C6.608,27.879 6.646,28 6.654,28.125C6.662,28.25 6.641,28.375 6.591,28.491L4.493,32.509C4.441,32.61 4.431,32.726 4.466,32.834C4.5,32.942 4.576,33.034 4.679,33.091L6.963,34.337C7.067,34.392 7.189,34.409 7.306,34.383C7.422,34.357 7.524,34.291 7.591,34.197L10.208,30.478C10.289,30.379 10.393,30.299 10.511,30.243C10.63,30.187 10.76,30.156 10.892,30.154C11.467,30.167 12.04,30.111 12.601,29.99C12.654,29.976 12.71,29.974 12.764,29.983C12.819,29.992 12.871,30.012 12.916,30.042C12.962,30.072 12.999,30.111 13.027,30.157C13.054,30.202 13.071,30.253 13.076,30.305L13.421,33.559C13.419,33.607 13.431,33.654 13.456,33.696C13.482,33.737 13.519,33.771 13.564,33.793C13.609,33.815 13.66,33.824 13.71,33.82C13.76,33.815 13.809,33.797 13.849,33.768L17.389,31.818C17.503,31.749 17.599,31.657 17.672,31.549C17.745,31.441 17.792,31.32 17.811,31.194L18.168,27.466C18.208,27.203 18.338,26.96 18.537,26.772C19.239,26.158 19.896,25.5 20.504,24.802C20.59,24.712 20.701,24.647 20.824,24.614C20.947,24.581 21.078,24.581 21.201,24.615L23.478,25.365C23.596,25.4 23.723,25.398 23.839,25.357C23.955,25.317 24.053,25.241 24.119,25.142L26.727,20.876C26.785,20.774 26.805,20.656 26.784,20.541C26.763,20.427 26.702,20.322 26.612,20.244L24.791,18.775C24.698,18.692 24.632,18.586 24.601,18.468C24.569,18.351 24.574,18.227 24.614,18.112C24.948,17.265 25.222,16.397 25.434,15.515C25.508,15.259 25.667,15.031 25.889,14.866L29.134,12.712C29.24,12.632 29.326,12.531 29.387,12.416C29.448,12.301 29.483,12.175 29.488,12.047ZM15.622,24.209C12.311,26.011 9.63,24.549 9.63,20.94C9.63,17.332 12.311,12.944 15.622,11.141C18.932,9.338 21.605,10.798 21.605,14.406C21.605,18.015 18.929,22.397 15.622,24.209Z"
-+      android:fillColor="#EBAD52"/>
-+  <path
-+      android:pathData="M29.363,7.931C29.32,7.909 29.272,7.898 29.223,7.898C29.174,7.898 29.126,7.909 29.083,7.931L25.926,9.274C25.876,9.297 25.822,9.309 25.766,9.309C25.711,9.31 25.656,9.299 25.606,9.277C25.556,9.255 25.511,9.223 25.476,9.183C25.44,9.143 25.415,9.096 25.401,9.046C25.283,8.685 25.132,8.334 24.949,7.998L27.339,6.981C27.381,6.96 27.428,6.949 27.476,6.949C27.524,6.949 27.571,6.96 27.613,6.981L29.363,7.931Z"
-+      android:fillColor="#FFCC82"/>
-+</vector>
-Index: app/src/main/res/drawable/ic_microphone.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/res/drawable/ic_microphone.xml b/app/src/main/res/drawable/ic_microphone.xml
-new file mode 100644
---- /dev/null	(date 1693231272331)
-+++ b/app/src/main/res/drawable/ic_microphone.xml	(date 1693231272331)
-@@ -0,0 +1,83 @@
-+<vector xmlns:android="http://schemas.android.com/apk/res/android"
-+    android:width="65dp"
-+    android:height="65dp"
-+    android:viewportWidth="65"
-+    android:viewportHeight="65">
-+  <path
-+      android:pathData="M13.154,43.926C14.069,44.799 15.209,45.362 16.43,45.543C17.651,45.724 18.898,45.515 20.014,44.943C21.129,44.37 22.063,43.46 22.697,42.327C23.33,41.194 23.635,39.89 23.573,38.579C23.51,37.268 23.083,36.009 22.346,34.963C21.609,33.916 20.595,33.129 19.431,32.7C18.268,32.271 17.008,32.22 15.812,32.554C14.615,32.887 13.535,33.59 12.709,34.573C11.604,35.888 11.031,37.611 11.114,39.364C11.198,41.117 11.931,42.757 13.154,43.926Z"
-+      android:fillColor="#455A64"/>
-+  <path
-+      android:pathData="M15.826,41.991L23.552,39.26C23.466,40.844 22.849,42.347 21.814,43.498C20.779,44.649 19.395,45.371 17.91,45.533C16.427,45.696 14.941,45.288 13.724,44.383C12.507,43.479 11.639,42.138 11.276,40.603C12.097,42.169 13.341,42.867 15.826,41.991Z"
-+      android:fillColor="#37474F"/>
-+  <path
-+      android:pathData="M21.347,41L22.394,35.789C25.82,41.098 29.941,45.857 34.634,49.922L34.216,52.008C31.066,50.479 25.885,45.877 21.347,41Z"
-+      android:fillColor="#37474F"/>
-+  <path
-+      android:pathData="M17.779,45.188L20.737,45.393L25.834,50.175C26.956,51.228 28.318,51.951 29.787,52.274C31.256,52.598 32.782,52.511 34.216,52.021C30.581,50.062 25.519,45.411 21.347,41.031L17.779,45.188Z"
-+      android:fillColor="#455A64"/>
-+  <path
-+      android:pathData="M27.419,46.082L27.408,46.233C27.373,46.366 27.309,46.489 27.222,46.592C27.136,46.695 27.028,46.776 26.907,46.827L25.819,47.212C25.772,47.218 25.728,47.239 25.693,47.272C25.658,47.306 25.634,47.351 25.624,47.4C25.614,47.449 25.618,47.499 25.637,47.545C25.656,47.591 25.687,47.629 25.728,47.654L25.835,47.761C25.935,47.846 26.052,47.904 26.178,47.931C26.304,47.958 26.434,47.953 26.558,47.916L27.679,47.528C27.8,47.478 27.908,47.399 27.994,47.297C28.08,47.194 28.142,47.071 28.174,46.939L28.185,46.788C28.201,46.652 28.189,46.514 28.147,46.385C28.106,46.256 28.037,46.139 27.947,46.043L27.839,45.937C27.812,45.893 27.771,45.859 27.724,45.842C27.677,45.825 27.626,45.825 27.579,45.841C27.531,45.857 27.49,45.89 27.461,45.933C27.432,45.977 27.417,46.029 27.419,46.082Z"
-+      android:fillColor="#E97001"/>
-+  <path
-+      android:pathData="M29.186,47.531C29.185,47.583 29.182,47.636 29.176,47.688C29.142,47.82 29.08,47.942 28.994,48.045C28.908,48.147 28.8,48.227 28.68,48.277L27.559,48.665C27.512,48.671 27.469,48.693 27.434,48.727C27.4,48.761 27.377,48.806 27.367,48.855C27.358,48.904 27.363,48.954 27.382,49C27.401,49.045 27.433,49.083 27.473,49.107L27.581,49.208C27.681,49.294 27.798,49.353 27.923,49.381C28.049,49.409 28.179,49.405 28.303,49.369L29.425,48.981C29.545,48.93 29.652,48.849 29.737,48.745C29.822,48.642 29.883,48.519 29.915,48.386L29.925,48.241C29.944,48.105 29.933,47.966 29.893,47.836C29.852,47.705 29.784,47.587 29.693,47.491L29.585,47.39C29.416,47.221 29.258,47.285 29.186,47.531Z"
-+      android:fillColor="#E97001"/>
-+  <path
-+      android:pathData="M30.954,48.988L30.943,49.145C30.91,49.277 30.848,49.4 30.762,49.502C30.676,49.604 30.568,49.684 30.448,49.734L29.327,50.116C29.281,50.124 29.237,50.146 29.203,50.18C29.169,50.215 29.145,50.259 29.135,50.308C29.125,50.357 29.129,50.407 29.147,50.453C29.165,50.499 29.196,50.538 29.236,50.564L29.344,50.665C29.444,50.751 29.562,50.81 29.688,50.838C29.815,50.866 29.946,50.862 30.071,50.826L31.193,50.432C31.313,50.383 31.42,50.304 31.506,50.201C31.591,50.099 31.652,49.976 31.683,49.843L31.693,49.698C31.711,49.562 31.699,49.424 31.659,49.293C31.618,49.164 31.551,49.045 31.461,48.948L31.347,48.841C31.184,48.672 31.004,48.741 30.954,48.988Z"
-+      android:fillColor="#E97001"/>
-+  <path
-+      android:pathData="M19.995,29.837C19.081,30.159 18.339,31.068 17.955,32.492C17.918,32.641 17.88,32.796 17.847,32.957C17.814,33.117 17.777,33.336 17.752,33.533C17.71,33.863 17.687,34.196 17.683,34.53C17.668,35.168 17.706,35.807 17.796,36.437C18.043,38.184 18.623,39.856 19.502,41.35C19.919,42.057 20.427,42.698 21.011,43.255C22.187,44.374 23.388,44.737 24.384,44.422L20.918,45.632C20.248,45.83 19.544,45.843 18.872,45.669C18.2,45.494 17.582,45.139 17.079,44.637C16.53,44.105 16.049,43.498 15.65,42.83C14.742,41.311 14.141,39.605 13.886,37.82C13.798,37.189 13.76,36.551 13.772,35.913C13.776,35.579 13.799,35.246 13.841,34.916C13.855,34.718 13.896,34.523 13.936,34.34C14.073,33.617 14.378,32.941 14.821,32.373C15.265,31.805 15.834,31.362 16.477,31.084L16.573,31.05L16.707,31.007L19.995,29.837Z"
-+      android:fillColor="#E97001"/>
-+  <path
-+      android:pathData="M20.919,45.631C20.25,45.829 19.546,45.842 18.874,45.668C18.201,45.494 17.584,45.138 17.081,44.636C16.531,44.104 16.051,43.497 15.652,42.83L19.509,41.35C19.927,42.057 20.434,42.698 21.019,43.255C22.194,44.374 23.395,44.737 24.391,44.421L20.919,45.631Z"
-+      android:strokeAlpha="0.1"
-+      android:fillColor="#000000"
-+      android:fillAlpha="0.1"/>
-+  <path
-+      android:pathData="M23.45,30.98C25.862,33.28 27.272,37.887 26.566,41.275C26.227,42.999 25.42,44.05 24.394,44.404L24.34,44.4C23.344,44.716 22.154,44.354 20.968,43.234C18.549,40.934 17.146,36.327 17.852,32.939C18.193,31.25 18.985,30.174 20,29.82C21.015,29.465 22.26,29.831 23.45,30.98Z"
-+      android:fillColor="#E97001"/>
-+  <path
-+      android:pathData="M23.452,30.979C25.864,33.279 27.274,37.886 26.567,41.274C26.229,42.998 25.422,44.049 24.396,44.403L24.342,44.4C23.346,44.715 22.156,44.353 20.969,43.233C18.552,40.933 17.147,36.326 17.854,32.938C18.195,31.249 18.987,30.173 20.002,29.819C21.017,29.464 22.262,29.83 23.452,30.979Z"
-+      android:strokeAlpha="0.2"
-+      android:fillColor="#000000"
-+      android:fillAlpha="0.2"/>
-+  <path
-+      android:pathData="M33.302,17.943C33.302,17.943 31.793,23.903 34.52,32.779C35.006,34.371 35.591,35.926 36.271,37.433C38.812,43.01 41.731,45.503 41.731,45.503C37.917,44.073 33.75,42.839 29.408,43.272C27.713,43.447 26.028,43.719 24.36,44.086C23.429,44.412 22.315,44.055 21.227,43.018C20.477,42.282 19.856,41.411 19.392,40.444C19.065,39.803 18.797,39.131 18.59,38.436C18.025,36.712 17.888,34.859 18.192,33.055C18.495,31.532 19.199,30.526 20.125,30.2C21.671,29.418 23.178,28.551 24.64,27.601C28.339,25.172 31.017,21.525 33.302,17.943Z"
-+      android:fillColor="#E97001"/>
-+  <path
-+      android:pathData="M33.309,17.948C33.309,17.948 31.801,23.908 34.528,32.784C35.014,34.376 35.598,35.931 36.279,37.438C38.82,43.015 41.739,45.508 41.739,45.508C37.925,44.077 33.758,42.844 29.415,43.277C27.721,43.452 26.036,43.724 24.368,44.091C23.436,44.417 22.323,44.06 21.235,43.023C20.485,42.287 19.864,41.416 19.399,40.449C19.073,39.808 18.805,39.136 18.597,38.441C18.033,36.717 17.896,34.864 18.2,33.06C18.503,31.537 19.207,30.531 20.133,30.205C21.679,29.423 23.186,28.556 24.648,27.606C28.347,25.177 31.025,21.529 33.309,17.948Z"
-+      android:strokeAlpha="0.6"
-+      android:fillColor="#ffffff"
-+      android:fillAlpha="0.6"/>
-+  <path
-+      android:pathData="M36.283,37.429C38.823,43.006 41.742,45.498 41.742,45.498C37.929,44.068 33.762,42.835 29.419,43.267C27.725,43.443 26.04,43.715 24.371,44.082C23.44,44.407 22.326,44.05 21.238,43.013C20.489,42.278 19.867,41.406 19.403,40.439C23.437,38.698 30.341,36.218 36.283,37.429Z"
-+      android:strokeAlpha="0.1"
-+      android:fillColor="#000000"
-+      android:fillAlpha="0.1"/>
-+  <path
-+      android:pathData="M45.256,15.411C47.776,17.806 49.83,21.257 51.213,25.059C52.976,29.935 53.621,35.381 52.726,39.915C51.105,47.959 45.134,50.09 39.39,44.623C38.031,43.296 36.847,41.78 35.872,40.113C33.284,35.708 31.796,30.665 31.548,25.458C31.521,24.751 31.52,24.052 31.551,23.367C31.571,23.083 31.592,22.787 31.611,22.514C31.638,22.114 31.666,21.714 31.735,21.358C31.803,21.001 31.857,20.551 31.939,20.154C33.542,12.051 39.516,9.944 45.256,15.411Z"
-+      android:fillColor="#E97001"/>
-+  <path
-+      android:pathData="M45.256,15.412C47.776,17.807 49.83,21.258 51.213,25.06C52.976,29.936 53.621,35.382 52.726,39.916C51.105,47.96 45.134,50.091 39.39,44.623C38.031,43.297 36.847,41.781 35.872,40.114C33.284,35.708 31.796,30.666 31.548,25.459C31.521,24.752 31.52,24.053 31.551,23.368C31.571,23.084 31.592,22.788 31.611,22.515C31.638,22.115 31.666,21.715 31.735,21.359C31.803,21.003 31.857,20.552 31.939,20.156C33.542,12.052 39.516,9.945 45.256,15.412Z"
-+      android:strokeAlpha="0.15"
-+      android:fillColor="#ffffff"
-+      android:fillAlpha="0.15"/>
-+  <path
-+      android:pathData="M51.208,25.066C52.971,29.937 53.616,35.382 52.721,39.916C51.101,47.96 45.129,50.091 39.385,44.624C38.026,43.297 36.843,41.781 35.867,40.115C36.938,40.463 39.07,40.174 38.815,38.886C39.688,40.363 40.743,41.708 41.952,42.885C43.605,44.457 45.269,45.329 46.768,45.41C47.39,45.451 48.014,45.335 48.589,45.071C49.164,44.808 49.673,44.404 50.075,43.892C51.077,42.583 51.75,41.025 52.031,39.368C52.802,35.518 52.313,30.829 50.916,26.508C50.897,26.46 51.439,26.381 51.208,25.066Z"
-+      android:strokeAlpha="0.1"
-+      android:fillColor="#000000"
-+      android:fillAlpha="0.1"/>
-+  <path
-+      android:pathData="M45.012,16.376C47.548,18.789 49.613,22.469 50.879,26.46C52.275,30.781 52.765,35.47 51.994,39.32C51.713,40.977 51.04,42.535 50.038,43.845C49.636,44.356 49.126,44.76 48.552,45.024C47.977,45.288 47.353,45.404 46.731,45.363C45.233,45.259 43.568,44.409 41.915,42.838C40.705,41.66 39.65,40.316 38.777,38.839C38.425,38.232 38.09,37.626 37.776,37.021C37.222,35.912 36.737,34.765 36.324,33.588C36.237,33.343 36.155,33.098 36.074,32.854C35.943,32.449 35.813,32.038 35.7,31.622C35.307,30.232 35.014,28.811 34.824,27.372C34.824,27.372 34.826,27.337 34.827,27.32C34.703,26.388 34.626,25.449 34.596,24.508C34.582,23.843 34.589,23.191 34.622,22.552C34.641,22.279 34.659,22.018 34.678,21.752C34.696,21.485 34.722,21.12 34.792,20.81C34.863,20.5 34.887,20.234 34.947,19.924C35.228,18.266 35.901,16.709 36.903,15.399C38.862,13.041 41.901,13.416 45.012,16.376Z"
-+      android:fillColor="#E97001"/>
-+  <path
-+      android:pathData="M45.016,16.373C47.552,18.786 49.617,22.466 50.883,26.457C52.279,30.778 52.769,35.467 51.998,39.317C51.717,40.974 51.044,42.532 50.042,43.842C49.64,44.353 49.13,44.757 48.556,45.021C47.981,45.285 47.357,45.401 46.735,45.36C45.237,45.256 43.572,44.406 41.919,42.835C40.709,41.658 39.654,40.313 38.781,38.836C38.429,38.229 38.094,37.623 37.78,37.018C37.226,35.91 36.741,34.763 36.327,33.585C36.241,33.34 36.159,33.096 36.077,32.851C35.947,32.446 35.817,32.035 35.703,31.619C35.311,30.229 35.018,28.808 34.827,27.369C34.827,27.369 34.83,27.335 34.831,27.317C34.707,26.385 34.63,25.446 34.599,24.505C34.585,23.84 34.592,23.188 34.626,22.549C34.645,22.277 34.663,22.016 34.681,21.749C34.7,21.482 34.725,21.117 34.796,20.807C34.867,20.497 34.891,20.231 34.951,19.921C35.231,18.263 35.905,16.706 36.907,15.396C38.866,13.038 41.905,13.413 45.016,16.373Z"
-+      android:strokeAlpha="0.4"
-+      android:fillColor="#000000"
-+      android:fillAlpha="0.4"/>
-+  <path
-+      android:pathData="M41.319,25.438L43.982,33.902C42.136,34.636 39.864,35.509 38.121,37.684C38.009,37.484 37.903,37.278 37.796,37.078C37.242,35.97 36.757,34.823 36.344,33.645C36.262,33.401 36.175,33.156 36.099,32.912C35.963,32.506 35.833,32.095 35.719,31.679C35.318,30.27 35.019,28.83 34.826,27.37C34.826,27.37 34.828,27.335 34.829,27.318C34.805,27.112 34.776,26.9 34.752,26.695C37.395,27.327 41.319,25.438 41.319,25.438Z"
-+      android:fillColor="#37474F"/>
-+  <path
-+      android:pathData="M44.439,33.531C43.842,34.247 42.934,34.161 42.025,33.299C41.287,32.515 40.734,31.555 40.41,30.497C40.088,29.44 40.004,28.314 40.166,27.211L40.17,27.158C40.248,26.689 40.439,26.249 40.723,25.88C41.321,25.158 42.234,25.245 43.137,26.112L43.17,26.114C43.907,26.901 44.458,27.864 44.778,28.923C45.098,29.983 45.179,31.11 45.012,32.214L45.009,32.254C44.925,32.724 44.729,33.164 44.439,33.531Z"
-+      android:fillColor="#E97001"/>
-+</vector>
-Index: app/src/main/java/com/example/cyclistance/feature_user_profile/presentation/components/ActivityItemSection.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_user_profile/presentation/components/ActivityItemSection.kt b/app/src/main/java/com/example/cyclistance/feature_user_profile/presentation/components/ActivityItemSection.kt
-new file mode 100644
---- /dev/null	(date 1693239354560)
-+++ b/app/src/main/java/com/example/cyclistance/feature_user_profile/presentation/components/ActivityItemSection.kt	(date 1693239354560)
-@@ -0,0 +1,117 @@
-+package com.example.cyclistance.feature_user_profile.presentation.components
-+
-+import android.graphics.Typeface
-+import androidx.annotation.DrawableRes
-+import androidx.compose.foundation.Image
-+import androidx.compose.foundation.background
-+import androidx.compose.foundation.layout.Box
-+import androidx.compose.foundation.layout.fillMaxSize
-+import androidx.compose.foundation.layout.offset
-+import androidx.compose.foundation.layout.padding
-+import androidx.compose.foundation.layout.requiredHeight
-+import androidx.compose.foundation.layout.requiredWidthIn
-+import androidx.compose.foundation.layout.wrapContentSize
-+import androidx.compose.foundation.shape.RoundedCornerShape
-+import androidx.compose.material.Card
-+import androidx.compose.material.MaterialTheme
-+import androidx.compose.material.Text
-+import androidx.compose.runtime.Composable
-+import androidx.compose.runtime.CompositionLocalProvider
-+import androidx.compose.ui.Alignment
-+import androidx.compose.ui.Modifier
-+import androidx.compose.ui.graphics.Color
-+import androidx.compose.ui.layout.ContentScale
-+import androidx.compose.ui.res.painterResource
-+import androidx.compose.ui.text.font.FontFamily
-+import androidx.compose.ui.text.style.TextAlign
-+import androidx.compose.ui.text.style.TextOverflow
-+import androidx.compose.ui.tooling.preview.Preview
-+import androidx.compose.ui.unit.dp
-+import androidx.constraintlayout.compose.ConstraintLayout
-+import com.example.cyclistance.R
-+import com.example.cyclistance.navigation.IsDarkTheme
-+import com.example.cyclistance.theme.CyclistanceTheme
-+
-+@Composable
-+fun ActivityItemSection(
-+    modifier: Modifier = Modifier,
-+    quantity: Int,
-+    caption: String,
-+    @DrawableRes icon: Int) {
-+
-+    val isDarkTheme = IsDarkTheme.current
-+
-+    Box(modifier = modifier.requiredWidthIn(max = 160.dp).background(Color.Transparent), contentAlignment = Alignment.Center) {
-+
-+        Card(
-+            shape = RoundedCornerShape(topStart = 12.dp, bottomEnd = 12.dp, topEnd = 12.dp),
-+            modifier = Modifier.requiredHeight(160.dp),
-+            elevation = if(isDarkTheme) 0.dp else 4.dp,
-+            ) {
-+
-+            ConstraintLayout(
-+                modifier = Modifier
-+                    .padding(horizontal = 8.dp)
-+                    .fillMaxSize()) {
-+
-+
-+                val (quantityValue, captionValue) = createRefs()
-+                Text(
-+
-+                    text = quantity.toString(),
-+                    color = MaterialTheme.colors.onSecondary,
-+                    style = MaterialTheme.typography.h4,
-+                    modifier = Modifier.constrainAs(quantityValue) {
-+                        top.linkTo(parent.top)
-+                        start.linkTo(parent.start)
-+                        end.linkTo(parent.end)
-+                        centerTo(parent)
-+                    },
-+                    fontFamily = FontFamily(Typeface.SERIF)
-+                )
-+
-+                Text(
-+                    text = caption,
-+                    overflow = TextOverflow.Clip,
-+                    textAlign = TextAlign.Center,
-+                    style = MaterialTheme.typography.caption,
-+                    modifier = Modifier.constrainAs(captionValue){
-+                        top.linkTo(quantityValue.bottom, margin = 4.dp)
-+                        start.linkTo(parent.start)
-+                        end.linkTo(parent.end)
-+
-+                    },
-+
-+                )
-+            }
-+        }
-+        Image(
-+            painter = painterResource(id = icon),
-+            contentDescription = "$caption icon",
-+            contentScale = ContentScale.Fit,
-+            modifier = Modifier
-+                .align(Alignment.BottomStart)
-+                .offset(x = (-24).dp, y = (27).dp))
-+    }
-+}
-+
-+@Preview
-+@Composable
-+fun PreviewActivityItemSection() {
-+
-+    CompositionLocalProvider(IsDarkTheme provides false) {
-+        CyclistanceTheme(darkTheme = false) {
-+            Box(
-+                modifier = Modifier
-+                    .fillMaxSize()
-+                    .background(MaterialTheme.colors.background),
-+                contentAlignment = Alignment.Center) {
-+                ActivityItemSection(
-+                    modifier = Modifier.wrapContentSize(),
-+                    quantity = 273,
-+                    caption = "Rescue Frequencies",
-+                    icon = R.drawable.ic_gear)
-+            }
-+        }
-+    }
-+}
-Index: app/src/main/java/com/example/cyclistance/feature_user_profile/domain/model/UserProfileModel.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_user_profile/domain/model/UserProfileModel.kt b/app/src/main/java/com/example/cyclistance/feature_user_profile/domain/model/UserProfileModel.kt
-new file mode 100644
---- /dev/null	(date 1693217621423)
-+++ b/app/src/main/java/com/example/cyclistance/feature_user_profile/domain/model/UserProfileModel.kt	(date 1693217621423)
-@@ -0,0 +1,30 @@
-+package com.example.cyclistance.feature_user_profile.domain.model
-+
-+import android.os.Parcelable
-+import com.example.cyclistance.core.utils.annotations.StableState
-+import kotlinx.parcelize.Parcelize
-+
-+@StableState
-+@Parcelize
-+data class UserProfileModel(
-+    val userProfileInfo: UserProfileInfoModel? = null,
-+    val userActivity: UserActivityModel? = null,
-+    val reasonAssistance: ReasonAssistanceModel? = null
-+):Parcelable{
-+    fun getPhoto() = userProfileInfo?.photoUrl
-+    fun getName() = userProfileInfo?.name
-+    fun getAverageRating() = userProfileInfo?.averageRating
-+    fun getAddress() = userProfileInfo?.address
-+    fun getBikeGroup() = userProfileInfo?.bikeGroup
-+    fun getRequestAssistanceFrequency() = userActivity?.requestAssistanceFrequency
-+    fun getRescueFrequency() = userActivity?.rescueFrequency
-+    fun getOverallDistanceOfRescue() = userActivity?.overallDistanceOfRescue
-+    fun getAverageSpeed() = userActivity?.averageSpeed
-+    fun getInjuryCount() = reasonAssistance?.injuryCount
-+    fun getFrameSnapCount() = reasonAssistance?.frameSnapCount
-+    fun getFlatTireCount() = reasonAssistance?.flatTireCount
-+    fun getBrokenChainCount() = reasonAssistance?.brokenChainCount
-+    fun getIncidentCount() = reasonAssistance?.incidentCount
-+    fun getFaultyBrakesCount() = reasonAssistance?.faultyBrakesCount
-+
-+}
-\ No newline at end of file
-Index: app/src/main/res/drawable/ic_location_marker.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/res/drawable/ic_location_marker.xml b/app/src/main/res/drawable/ic_location_marker.xml
-new file mode 100644
---- /dev/null	(date 1693231272317)
-+++ b/app/src/main/res/drawable/ic_location_marker.xml	(date 1693231272317)
-@@ -0,0 +1,275 @@
-+<vector xmlns:android="http://schemas.android.com/apk/res/android"
-+    android:width="44dp"
-+    android:height="49dp"
-+    android:viewportWidth="44"
-+    android:viewportHeight="49">
-+  <path
-+      android:pathData="M31.095,3.245L30.928,3.171L25.755,0.905C24.558,0.3 23.149,-0.016 21.714,0.001C19.905,0.001 18.08,0.502 15.93,1.417C8.418,4.6 2,13.78 2,19.807V21.468C2,28.772 14.561,37.688 14.561,37.688L19.77,39.989C19.773,39.992 19.776,39.994 19.78,39.995C19.784,39.997 19.788,39.997 19.792,39.996C19.618,39.839 25.327,33.469 30.717,21.044C36.668,7.285 31.206,3.324 31.095,3.245ZM22.303,25.084C18.044,26.964 14.484,25.979 13.475,22.948C11.525,22.742 10.116,21.595 9.681,19.712C9.134,13.622 13.36,8.781 19.411,6.815C22.003,6.094 24.166,6.608 25.325,8.098C28.88,7.631 31.424,9.494 31.424,13.003C31.424,17.45 27.336,22.863 22.303,25.084Z"
-+      android:fillColor="#E97001"/>
-+  <path
-+      android:pathData="M31.424,13.004C31.424,17.45 27.341,22.863 22.303,25.085C18.045,26.964 14.484,25.98 13.475,22.948C14.754,23.09 16.265,22.827 17.889,22.11C22.503,20.074 26.24,15.121 26.24,11.051C26.24,9.842 25.91,8.846 25.325,8.098C28.88,7.631 31.424,9.495 31.424,13.004Z"
-+      android:fillColor="#E7E7E7"/>
-+  <path
-+      android:pathData="M31.093,3.243L30.926,3.17C28.415,2.091 25.06,2.235 21.373,3.861C15.818,6.318 11.004,11.478 8.728,16.889C7.825,19.035 7.443,20.17 7.443,22.245V23.912C7.443,29.541 15.65,37.113 19.488,39.816C19.574,39.877 19.668,39.931 19.768,39.978C19.77,39.98 19.774,39.982 19.778,39.984C19.782,39.985 19.786,39.985 19.79,39.985C20.014,40.091 20.265,40.159 20.526,40.187C20.787,40.214 21.052,40.199 21.305,40.143C21.558,40.087 21.793,39.991 21.994,39.861C22.196,39.732 22.36,39.571 22.475,39.39C25.782,34.211 35.425,18.598 35.425,12.544V10.883C35.425,7.131 33.766,4.472 31.093,3.243ZM13.472,22.946C13.42,22.792 13.372,22.63 13.335,22.464C13.227,22 13.175,21.529 13.18,21.057C13.18,16.61 17.253,11.199 22.301,8.977C22.833,8.741 23.391,8.541 23.967,8.377C24.408,8.252 24.862,8.157 25.325,8.094C28.88,7.626 31.424,9.49 31.424,12.999C31.424,17.446 27.341,22.858 22.303,25.08C18.048,26.962 14.481,25.978 13.472,22.946Z"
-+      android:fillColor="#EBAD52"/>
-+  <path
-+      android:pathData="M25.851,20.071L24.981,19.689C24.954,19.676 24.923,19.67 24.891,19.67C24.86,19.67 24.829,19.676 24.801,19.689L23.408,20.306C23.381,20.318 23.358,20.336 23.342,20.356C23.327,20.377 23.318,20.401 23.318,20.425V20.647C23.318,20.671 23.327,20.695 23.342,20.715C23.358,20.736 23.381,20.754 23.408,20.765L24.281,21.149C24.308,21.161 24.339,21.167 24.37,21.167C24.402,21.167 24.432,21.161 24.459,21.149L25.851,20.532C25.878,20.52 25.901,20.503 25.917,20.482C25.933,20.461 25.941,20.438 25.941,20.413V20.192C25.942,20.167 25.934,20.143 25.918,20.122C25.902,20.1 25.879,20.083 25.851,20.071Z"
-+      android:fillColor="#37474F"/>
-+  <path
-+      android:pathData="M24.37,19.88L23.408,20.307C23.381,20.319 23.358,20.336 23.342,20.357C23.327,20.378 23.318,20.402 23.318,20.426V20.647C23.318,20.671 23.327,20.695 23.342,20.716C23.358,20.737 23.381,20.754 23.408,20.766L24.281,21.149C24.308,21.161 24.339,21.167 24.37,21.167V19.88Z"
-+      android:fillColor="#263238"/>
-+  <path
-+      android:pathData="M22.774,22.819L22.426,22.695L23.585,20.788C23.595,20.77 23.61,20.754 23.629,20.741C23.647,20.728 23.669,20.718 23.693,20.711C23.717,20.705 23.742,20.701 23.767,20.702C23.793,20.703 23.818,20.708 23.841,20.716C23.864,20.724 23.884,20.736 23.902,20.75C23.919,20.764 23.932,20.781 23.941,20.799C23.95,20.817 23.954,20.837 23.952,20.856C23.951,20.875 23.945,20.894 23.935,20.912L22.774,22.819Z"
-+      android:fillColor="#37474F"/>
-+  <path
-+      android:pathData="M25.009,20.522L25.915,20.121C25.9,20.1 25.877,20.082 25.85,20.071L24.979,19.689C24.952,19.676 24.921,19.67 24.889,19.67C24.858,19.67 24.827,19.676 24.8,19.689L23.407,20.306C23.379,20.318 23.356,20.335 23.34,20.356L24.285,20.773C24.31,20.784 24.339,20.79 24.369,20.79C24.398,20.79 24.427,20.784 24.452,20.773L25.009,20.526"
-+      android:fillColor="#455A64"/>
-+  <path
-+      android:pathData="M25.683,20.536L24.674,20.982V20.743L25.683,20.299V20.536Z"
-+      android:fillColor="#E97001"/>
-+  <path
-+      android:pathData="M19.866,17.394L19.338,16.04C19.338,16.04 19.462,15.716 19.993,15.793L20.521,17.016L19.866,17.394Z"
-+      android:fillColor="#E97001"/>
-+  <path
-+      android:pathData="M22.043,14.854C21.849,15.124 21.624,15.381 21.371,15.621C21.371,15.621 20.191,17.157 18.364,16.773C18.206,16.749 18.058,16.695 17.933,16.617C17.809,16.538 17.712,16.437 17.65,16.323C17.611,16.249 17.587,16.17 17.58,16.09C17.563,15.962 17.607,15.835 17.703,15.729C17.875,15.5 18.458,15.247 19.173,15.016L19.327,14.967C19.584,14.889 19.844,14.817 20.103,14.742C20.362,14.667 20.616,14.595 20.865,14.512C20.969,14.478 21.071,14.442 21.168,14.402C21.209,14.385 21.248,14.368 21.286,14.35C21.329,14.327 21.374,14.308 21.422,14.293C21.466,14.28 21.512,14.273 21.559,14.271C21.594,14.269 21.63,14.269 21.666,14.271C21.697,14.275 21.727,14.281 21.756,14.291C21.824,14.312 21.887,14.344 21.939,14.384C21.991,14.423 22.032,14.471 22.059,14.523C22.087,14.576 22.1,14.632 22.098,14.688C22.096,14.745 22.08,14.8 22.049,14.852L22.043,14.854Z"
-+      android:fillColor="#263238"/>
-+  <path
-+      android:pathData="M18.368,16.773C17.808,16.66 17.449,16.347 17.759,15.931C17.929,15.701 18.512,15.448 19.227,15.218C19.942,14.988 21.189,14.691 21.463,14.478C21.737,14.264 22.262,14.501 22.047,14.852C21.853,15.122 21.628,15.379 21.375,15.619C21.375,15.619 20.195,17.157 18.368,16.773Z"
-+      android:fillColor="#37474F"/>
-+  <path
-+      android:pathData="M32.161,19.511L32.142,19.49C31.4,18.701 30.822,17.829 30.428,16.905L29.33,14.301C29.306,14.245 29.227,14.058 29.001,14.163C28.775,14.269 28.807,14.321 28.832,14.379L29.921,16.95C30.358,17.97 31.017,18.926 31.87,19.778C31.92,19.801 31.979,19.81 32.037,19.804C32.096,19.797 32.149,19.776 32.188,19.743C32.297,19.659 32.233,19.585 32.161,19.511Z"
-+      android:fillColor="#E97001"/>
-+  <path
-+      android:pathData="M32.161,19.511L32.142,19.49C31.4,18.701 30.822,17.829 30.428,16.905L29.33,14.301C29.306,14.245 29.227,14.058 29.001,14.163C28.775,14.269 28.807,14.321 28.832,14.379L29.921,16.95C30.358,17.97 31.017,18.926 31.87,19.778C31.92,19.801 31.979,19.81 32.037,19.804C32.096,19.797 32.149,19.776 32.188,19.743C32.297,19.659 32.233,19.585 32.161,19.511Z"
-+      android:strokeAlpha="0.4"
-+      android:fillColor="#000000"
-+      android:fillAlpha="0.4"/>
-+  <path
-+      android:pathData="M18.047,25.388C18.269,25.486 18.456,25.407 18.456,25.21C18.447,25.103 18.406,24.998 18.335,24.905C18.264,24.812 18.165,24.733 18.047,24.675C17.824,24.577 17.639,24.656 17.639,24.853C17.647,24.96 17.688,25.065 17.759,25.158C17.83,25.251 17.929,25.33 18.047,25.388Z"
-+      android:fillColor="#455A64"/>
-+  <path
-+      android:pathData="M23.437,27.415V27.069L23.125,26.861C23.121,26.636 23.097,26.412 23.056,26.189L23.313,26.177L23.211,25.798L22.939,25.679C22.865,25.427 22.774,25.177 22.666,24.932L22.85,24.856L22.65,24.472L22.413,24.427C22.274,24.171 22.118,23.919 21.946,23.672L22.069,23.546L21.796,23.18L21.596,23.196C21.404,22.956 21.187,22.724 20.975,22.502L21.039,22.331L20.699,22.008L20.534,22.086C20.307,21.885 20.067,21.694 19.813,21.513V21.296L19.439,21.035L19.303,21.181C19.063,21.034 18.811,20.899 18.548,20.776L18.486,20.514L18.094,20.342L18.027,20.55C17.783,20.445 17.529,20.356 17.267,20.281L17.146,20.036L16.767,19.959V20.168C16.536,20.125 16.299,20.102 16.06,20.099H16.035L15.881,19.891L15.542,19.915L15.6,20.123C15.373,20.145 15.149,20.184 14.932,20.239L14.785,20.096L14.512,20.218L14.578,20.344C14.057,20.518 13.6,20.788 13.247,21.129C12.702,21.616 12.539,22.4 12.547,23.311C12.547,25.602 14.647,28.38 17.237,29.523L17.535,29.655C18.272,29.98 18.966,30.136 19.586,30.144H19.628C19.67,30.144 19.71,30.144 19.751,30.144H19.789C19.824,30.144 19.858,30.144 19.894,30.136C19.911,30.138 19.928,30.138 19.945,30.136H19.973C20.204,30.116 20.432,30.078 20.654,30.024L20.689,30.072L21.029,30.049L20.994,29.925C21.201,29.855 21.398,29.771 21.584,29.672L21.787,29.87L22.059,29.747L21.915,29.47C21.942,29.452 21.968,29.433 21.994,29.414C22.129,29.334 22.252,29.243 22.361,29.142L22.64,29.335L22.837,29.126L22.627,28.855C22.739,28.702 22.831,28.541 22.899,28.373L23.197,28.509L23.299,28.219L23.027,27.968C23.074,27.771 23.101,27.57 23.108,27.369L23.437,27.415ZM17.953,28.622C15.762,27.657 13.992,25.305 13.992,23.378C13.992,22.591 14.624,21.804 15.121,21.439C15.762,21.327 16.541,21.439 17.384,21.81C19.575,22.775 21.345,25.124 21.345,27.055C21.345,27.841 21.051,28.438 20.554,28.802C19.912,28.915 18.795,28.994 17.953,28.622ZM15.551,27.596C14.783,26.898 14.192,26.097 13.809,25.232L13.929,25.469L14.202,25.521C14.338,25.765 14.488,26.007 14.654,26.243L14.508,26.395L14.78,26.762L15.028,26.74C15.21,26.966 15.407,27.184 15.619,27.393L15.551,27.596ZM13.425,23.561C13.426,23.418 13.437,23.275 13.458,23.133C13.469,23.339 13.495,23.545 13.534,23.749H13.432C13.428,23.687 13.425,23.622 13.425,23.559V23.561ZM13.664,24.268C13.738,24.514 13.829,24.758 13.936,24.997L13.74,25.078C13.623,24.788 13.537,24.492 13.481,24.192L13.664,24.268ZM15.926,27.913L16.099,27.832C16.311,28.017 16.536,28.194 16.773,28.362V28.49C16.471,28.313 16.188,28.119 15.926,27.909V27.913ZM17.385,28.803C17.349,28.788 17.312,28.77 17.277,28.753L17.312,28.713C17.448,28.791 17.576,28.865 17.712,28.936C17.603,28.894 17.494,28.851 17.385,28.802V28.803Z"
-+      android:fillColor="#455A64"/>
-+  <path
-+      android:pathData="M22.531,27.787V27.441L22.219,27.233C22.213,27.008 22.19,26.784 22.149,26.562L22.405,26.549L22.305,26.17L22.032,26.052C21.959,25.799 21.868,25.55 21.76,25.305L21.942,25.229L21.746,24.843L21.509,24.797C21.373,24.542 21.215,24.29 21.044,24.043L21.165,23.917L20.892,23.549L20.692,23.567C20.499,23.326 20.291,23.094 20.07,22.872L20.134,22.701L19.795,22.379L19.63,22.456C19.403,22.255 19.162,22.064 18.908,21.883V21.665L18.53,21.409L18.403,21.554C18.163,21.409 17.913,21.275 17.651,21.153L17.582,20.881L17.191,20.707L17.122,20.915C16.88,20.813 16.629,20.725 16.37,20.652L16.243,20.397L15.865,20.319V20.537C15.628,20.496 15.386,20.475 15.143,20.475L14.978,20.252L14.639,20.275L14.703,20.503C14.488,20.53 14.28,20.579 14.082,20.649L13.881,20.454L13.608,20.576L13.726,20.803C13.538,20.896 13.37,21.01 13.227,21.14L13.023,20.999L12.827,21.207L12.983,21.415C12.866,21.583 12.778,21.762 12.719,21.948L12.46,21.83L12.36,22.119L12.617,22.36C12.584,22.542 12.563,22.744 12.552,22.97L12.234,22.9V23.246L12.548,23.455C12.557,23.679 12.584,23.902 12.628,24.124L12.356,24.138L12.456,24.517L12.753,24.644C12.827,24.89 12.918,25.134 13.026,25.373L12.819,25.459L13.015,25.845L13.287,25.898C13.423,26.142 13.574,26.384 13.741,26.619L13.604,26.764L13.877,27.131L14.125,27.11C14.306,27.335 14.503,27.552 14.715,27.762L14.635,27.98L14.974,28.302L15.187,28.198C15.402,28.383 15.629,28.56 15.868,28.727V29.011L16.246,29.267L16.412,29.078C16.633,29.212 16.865,29.335 17.105,29.447L17.194,29.796L17.585,29.969L17.673,29.698C17.897,29.792 18.129,29.874 18.368,29.943L18.532,30.277L18.911,30.354V30.066C19.132,30.104 19.357,30.126 19.584,30.129L19.799,30.421L20.138,30.398L20.055,30.103C20.257,30.078 20.454,30.034 20.642,29.972L20.896,30.219L21.169,30.097L21.02,29.812C21.189,29.721 21.341,29.613 21.472,29.492L21.745,29.684L21.941,29.476L21.733,29.204C21.845,29.051 21.936,28.89 22.005,28.722L22.303,28.859L22.404,28.569L22.132,28.318C22.178,28.12 22.205,27.919 22.212,27.718L22.531,27.787ZM17.383,28.803C15.196,27.838 13.423,25.49 13.423,23.56C13.423,21.629 15.193,20.846 17.383,21.811C19.573,22.777 21.343,25.125 21.343,27.056C21.343,28.987 19.573,29.77 17.383,28.803Z"
-+      android:fillColor="#37474F"/>
-+  <path
-+      android:pathData="M20.327,28.307C19.701,28.877 18.616,28.958 17.383,28.411C15.439,27.553 13.863,25.466 13.863,23.75C13.863,22.983 14.178,22.42 14.701,22.107C14.337,22.437 14.125,22.927 14.125,23.556C14.125,25.272 15.702,27.36 17.645,28.218C18.719,28.695 19.682,28.694 20.327,28.307Z"
-+      android:fillColor="#E97001"/>
-+  <path
-+      android:pathData="M20.327,28.307C19.701,28.877 18.616,28.958 17.383,28.411C15.439,27.553 13.863,25.466 13.863,23.75C13.863,22.983 14.178,22.42 14.701,22.107C14.337,22.437 14.125,22.927 14.125,23.556C14.125,25.272 15.702,27.36 17.645,28.218C18.719,28.695 19.682,28.694 20.327,28.307Z"
-+      android:strokeAlpha="0.4"
-+      android:fillColor="#000000"
-+      android:fillAlpha="0.4"/>
-+  <path
-+      android:pathData="M17.382,21.81C15.204,20.844 13.424,21.628 13.424,23.559C13.424,25.489 15.194,27.837 17.382,28.802C19.571,29.768 21.344,28.986 21.344,27.055C21.344,25.124 19.573,22.775 17.382,21.81ZM17.382,28.414C15.439,27.556 13.864,25.469 13.864,23.752C13.864,22.036 15.439,21.34 17.382,22.198C19.326,23.056 20.903,25.144 20.903,26.86C20.903,28.576 19.327,29.272 17.382,28.414Z"
-+      android:fillColor="#E97001"/>
-+  <path
-+      android:pathData="M17.382,21.81C15.204,20.844 13.424,21.628 13.424,23.559C13.424,25.489 15.194,27.837 17.382,28.802C19.571,29.768 21.344,28.986 21.344,27.055C21.344,25.124 19.573,22.775 17.382,21.81ZM17.382,28.414C15.439,27.556 13.864,25.469 13.864,23.752C13.864,22.036 15.439,21.34 17.382,22.198C19.326,23.056 20.903,25.144 20.903,26.86C20.903,28.576 19.327,29.272 17.382,28.414Z"
-+      android:strokeAlpha="0.15"
-+      android:fillColor="#ffffff"
-+      android:fillAlpha="0.15"/>
-+  <path
-+      android:pathData="M13.863,23.76V23.752C13.863,23.727 13.863,23.704 13.863,23.679L16.169,25.104C16.174,25.108 16.178,25.111 16.181,25.116C16.184,25.121 16.185,25.125 16.185,25.131C16.185,25.135 16.183,25.14 16.18,25.145C16.177,25.149 16.173,25.153 16.167,25.156L14.627,26.017L14.59,25.958L16.075,25.125L13.863,23.76Z"
-+      android:fillColor="#EBEBEB"/>
-+  <path
-+      android:pathData="M18.375,25.086C18.365,25.083 18.357,25.076 18.353,25.069C18.348,25.061 18.348,25.052 18.352,25.044L19.201,23.46L17.641,24.331C17.635,24.333 17.628,24.335 17.622,24.335C17.615,24.335 17.608,24.333 17.602,24.331C17.596,24.329 17.59,24.326 17.586,24.322C17.581,24.318 17.578,24.314 17.576,24.309L16.792,22.028L16.771,24.024C16.771,24.03 16.769,24.037 16.764,24.042C16.759,24.048 16.752,24.052 16.744,24.054C16.736,24.056 16.727,24.056 16.719,24.054C16.71,24.052 16.703,24.049 16.698,24.043L14.727,22.132L16.184,24.335C16.188,24.341 16.19,24.347 16.189,24.354C16.187,24.361 16.184,24.367 16.177,24.371C16.172,24.376 16.164,24.379 16.156,24.381C16.147,24.382 16.139,24.381 16.131,24.379L13.865,23.67C13.865,23.646 13.865,23.624 13.865,23.602L16.058,24.288L14.64,22.144C14.681,22.118 14.723,22.092 14.767,22.069L16.688,23.932L16.707,21.953C16.76,21.968 16.813,21.982 16.867,21.999L17.64,24.245L19.154,23.4L19.262,23.504L18.445,25.032L20.704,25.739L20.728,25.816L18.375,25.086Z"
-+      android:fillColor="#EBEBEB"/>
-+  <path
-+      android:pathData="M16.714,25.963C16.719,25.963 16.725,25.964 16.73,25.965C16.735,25.967 16.74,25.969 16.743,25.972C16.752,25.978 16.757,25.986 16.757,25.995L16.737,28.066L17.554,26.53C17.557,26.524 17.562,26.52 17.568,26.516C17.575,26.513 17.583,26.51 17.59,26.51C17.598,26.51 17.606,26.511 17.613,26.515C17.62,26.518 17.625,26.522 17.629,26.528L19.097,28.747L18.334,26.525C18.331,26.518 18.331,26.511 18.335,26.505C18.338,26.498 18.344,26.493 18.352,26.489C18.358,26.486 18.366,26.484 18.374,26.484C18.383,26.484 18.392,26.487 18.399,26.491L20.663,27.887L18.666,25.949C18.661,25.944 18.658,25.939 18.657,25.933C18.656,25.927 18.658,25.921 18.661,25.916C18.664,25.91 18.669,25.906 18.676,25.903C18.682,25.899 18.69,25.898 18.698,25.898L20.74,25.83C20.747,25.851 20.753,25.872 20.759,25.894L18.783,25.958L20.704,27.82C20.68,27.865 20.657,27.908 20.633,27.949L18.454,26.603L19.199,28.771C19.144,28.771 19.088,28.778 19.033,28.781L17.603,26.618L16.799,28.117C16.75,28.088 16.7,28.059 16.651,28.028L16.67,26.032L14.674,26.098L14.633,26.035L16.714,25.963Z"
-+      android:fillColor="#EBEBEB"/>
-+  <path
-+      android:pathData="M17.047,26.264L15.471,27.069C15.487,27.087 15.505,27.104 15.521,27.121L17.042,26.348L17.757,28.566C17.813,28.586 17.869,28.604 17.924,28.621L17.997,26.683L19.903,28.591C19.948,28.57 19.991,28.548 20.031,28.525L18.645,26.348L20.892,27.099C20.892,27.053 20.899,27.007 20.902,26.959L18.656,25.514L20.219,24.715C20.197,24.676 20.172,24.637 20.146,24.599L18.075,24.612L18.148,22.608L18.012,22.525L17.146,24.004L15.762,21.834C15.705,21.834 15.651,21.834 15.596,21.841L16.291,24.001L14.164,22.638L14.128,22.703L16.337,24.118C16.344,24.122 16.353,24.124 16.362,24.124C16.37,24.124 16.379,24.122 16.386,24.118C16.393,24.114 16.399,24.109 16.402,24.103C16.406,24.097 16.406,24.09 16.404,24.083L15.688,21.869L17.115,24.101C17.118,24.107 17.123,24.111 17.13,24.114C17.136,24.117 17.144,24.119 17.151,24.119C17.159,24.119 17.167,24.117 17.174,24.114C17.18,24.111 17.185,24.106 17.188,24.1L18.065,22.598L17.989,24.645C17.989,24.653 17.993,24.662 18.001,24.668C18.009,24.674 18.02,24.677 18.031,24.677L20.172,24.665L18.564,25.487C18.558,25.49 18.554,25.494 18.55,25.498C18.547,25.503 18.545,25.507 18.545,25.512C18.544,25.517 18.546,25.522 18.548,25.527C18.551,25.531 18.555,25.535 18.559,25.538L20.875,27.018L18.581,26.252C18.573,26.25 18.565,26.249 18.557,26.25C18.549,26.252 18.541,26.255 18.535,26.259C18.53,26.264 18.526,26.27 18.524,26.276C18.523,26.282 18.524,26.289 18.527,26.295L19.942,28.507L17.998,26.569C17.995,26.565 17.99,26.561 17.984,26.559C17.978,26.557 17.972,26.556 17.966,26.556H17.941C17.933,26.558 17.927,26.562 17.921,26.567C17.916,26.573 17.913,26.579 17.913,26.585L17.839,28.558L17.105,26.282C17.104,26.277 17.101,26.272 17.097,26.268C17.092,26.264 17.087,26.261 17.081,26.259C17.069,26.257 17.057,26.259 17.047,26.264ZM13.992,24.64C13.992,24.662 14.004,24.682 14.01,24.704L16.024,24.691C16.032,24.691 16.039,24.689 16.046,24.686C16.053,24.683 16.058,24.678 16.062,24.673C16.066,24.668 16.068,24.662 16.068,24.656C16.068,24.65 16.066,24.645 16.062,24.64L14.12,22.703C14.108,22.726 14.094,22.747 14.083,22.77L15.942,24.625L13.992,24.64ZM16.321,25.5L14.018,24.73C14.025,24.756 14.034,24.782 14.043,24.807L16.249,25.546L15.4,26.999C15.418,27.018 15.438,27.037 15.457,27.057L16.343,25.543C16.347,25.535 16.347,25.526 16.343,25.518C16.341,25.514 16.338,25.51 16.335,25.507C16.331,25.504 16.327,25.502 16.322,25.5H16.321Z"
-+      android:fillColor="#FAFAFA"/>
-+  <path
-+      android:pathData="M17.584,24.055C17.209,23.89 16.873,23.879 16.631,23.995C16.582,24.019 16.521,24.04 16.456,24.069C16.439,24.076 16.422,24.084 16.406,24.094H16.396C16.374,24.107 16.352,24.12 16.331,24.135L16.318,24.145C16.299,24.159 16.282,24.173 16.266,24.189L16.248,24.207C16.235,24.222 16.221,24.236 16.207,24.253C16.194,24.27 16.195,24.271 16.188,24.28C16.177,24.295 16.167,24.311 16.158,24.327C16.151,24.34 16.145,24.352 16.139,24.365C16.134,24.377 16.124,24.395 16.117,24.41C16.111,24.426 16.107,24.444 16.101,24.46C16.096,24.477 16.091,24.49 16.087,24.504C16.083,24.519 16.078,24.548 16.075,24.57C16.072,24.592 16.075,24.595 16.075,24.607C16.075,24.644 16.068,24.68 16.068,24.72C16.068,25.363 16.659,26.146 17.389,26.467C17.433,26.487 17.479,26.506 17.525,26.521C17.551,26.531 17.577,26.538 17.603,26.545L17.657,26.562L17.711,26.574L17.785,26.589H17.814C17.847,26.589 17.878,26.597 17.909,26.6H17.916C18.066,26.611 18.217,26.584 18.345,26.522C18.409,26.494 18.466,26.472 18.539,26.44C18.77,26.336 18.913,26.109 18.913,25.794C18.903,25.157 18.313,24.375 17.584,24.055Z"
-+      android:fillColor="#455A64"/>
-+  <path
-+      android:pathData="M17.383,24.142C16.653,23.82 16.063,24.081 16.063,24.725C16.063,25.368 16.653,26.151 17.383,26.472C18.113,26.794 18.702,26.534 18.702,25.89C18.702,25.247 18.112,24.463 17.383,24.142Z"
-+      android:fillColor="#37474F"/>
-+  <path
-+      android:pathData="M17.381,25.662C17.604,25.76 17.79,25.68 17.79,25.483C17.782,25.375 17.74,25.271 17.669,25.178C17.598,25.085 17.5,25.007 17.381,24.949C17.159,24.85 16.973,24.93 16.973,25.127C16.981,25.234 17.022,25.339 17.093,25.432C17.164,25.525 17.263,25.604 17.381,25.662Z"
-+      android:fillColor="#455A64"/>
-+  <path
-+      android:pathData="M17.424,24.906C17.38,24.881 17.327,24.866 17.271,24.862C17.215,24.859 17.16,24.867 17.11,24.887L16.864,24.991L16.846,24.999L16.825,25.013L16.809,25.027C16.809,25.027 16.809,25.027 16.802,25.032L16.789,25.048V25.057L16.778,25.073V25.086L16.77,25.1C16.77,25.106 16.77,25.111 16.77,25.117V25.131V25.153C16.77,25.153 16.77,25.162 16.77,25.166C16.77,25.17 16.77,25.19 16.77,25.202C16.778,25.318 16.822,25.431 16.898,25.532C16.974,25.632 17.08,25.718 17.207,25.781L17.25,25.799L17.278,25.806L17.295,25.813H17.313H17.337H17.347H17.378C17.428,25.816 17.479,25.807 17.521,25.787L17.774,25.677C17.818,25.653 17.852,25.62 17.874,25.582C17.895,25.545 17.904,25.503 17.898,25.463C17.882,25.348 17.83,25.238 17.748,25.142C17.666,25.045 17.555,24.964 17.424,24.906Z"
-+      android:fillColor="#455A64"/>
-+  <path
-+      android:pathData="M17.164,25.017C16.923,24.913 16.727,24.997 16.727,25.21C16.735,25.326 16.779,25.439 16.855,25.539C16.931,25.64 17.037,25.725 17.164,25.789C17.405,25.893 17.599,25.809 17.599,25.596C17.591,25.48 17.548,25.367 17.472,25.267C17.396,25.166 17.291,25.081 17.164,25.017Z"
-+      android:fillColor="#263238"/>
-+  <path
-+      android:pathData="M17.166,25.521C17.239,25.553 17.302,25.527 17.302,25.461C17.299,25.426 17.285,25.391 17.261,25.36C17.238,25.33 17.205,25.303 17.166,25.284C17.091,25.252 17.029,25.278 17.029,25.344C17.032,25.379 17.046,25.414 17.07,25.445C17.093,25.476 17.126,25.502 17.166,25.521Z"
-+      android:fillColor="#455A64"/>
-+  <path
-+      android:pathData="M17.457,24.437C17.169,24.317 16.913,24.314 16.734,24.406C16.697,24.425 16.653,24.441 16.598,24.464C16.584,24.47 16.572,24.477 16.56,24.484C16.543,24.494 16.527,24.504 16.512,24.515L16.501,24.524C16.488,24.534 16.475,24.546 16.463,24.558L16.451,24.572C16.44,24.583 16.43,24.595 16.421,24.607L16.407,24.628C16.399,24.639 16.391,24.652 16.386,24.664C16.386,24.674 16.376,24.683 16.372,24.692C16.368,24.702 16.361,24.715 16.357,24.728C16.353,24.74 16.349,24.753 16.345,24.766C16.341,24.78 16.338,24.787 16.335,24.8C16.333,24.812 16.335,24.832 16.335,24.85C16.334,24.859 16.334,24.868 16.335,24.878C16.335,24.905 16.335,24.933 16.335,24.962C16.363,25.227 16.472,25.483 16.653,25.71C16.835,25.937 17.084,26.128 17.38,26.267C17.413,26.282 17.448,26.295 17.483,26.306C17.503,26.312 17.523,26.318 17.543,26.323L17.584,26.335L17.625,26.343L17.682,26.354H17.704L17.776,26.36C17.89,26.367 18.004,26.344 18.1,26.295C18.148,26.273 18.191,26.256 18.244,26.23C18.417,26.145 18.517,25.974 18.517,25.735C18.486,25.47 18.374,25.215 18.19,24.989C18.006,24.764 17.755,24.575 17.457,24.437ZM17.219,25.912C17.045,25.813 16.794,25.509 16.695,25.338C16.748,25.363 16.808,25.392 16.872,25.416C17.135,25.514 17.124,25.375 17.233,25.469C17.341,25.564 17.329,25.802 17.25,25.926C17.239,25.922 17.229,25.917 17.219,25.912ZM17.697,24.997C17.682,25 17.668,25.006 17.655,25.012L17.504,25.082C17.472,25.096 17.446,25.116 17.429,25.141C17.264,24.978 17.165,24.781 17.144,24.576C17.403,24.656 17.632,24.785 17.81,24.951C17.815,24.958 17.819,24.965 17.821,24.972C17.779,24.976 17.737,24.983 17.697,24.993V24.997ZM16.934,24.91C17.026,25.139 17.154,25.173 17.164,25.247C16.967,25.228 16.643,25.087 16.62,24.942C16.61,24.802 16.667,24.663 16.781,24.552C16.861,24.577 16.86,24.723 16.934,24.91ZM17.539,26.111C17.433,26.04 17.546,25.967 17.595,25.816C17.617,25.743 17.614,25.668 17.585,25.596C17.794,25.716 18.111,26.035 18.035,26.133L18.025,26.142C17.864,26.18 17.69,26.169 17.539,26.111ZM18.011,25.6C17.787,25.382 17.702,25.46 17.647,25.342C17.635,25.314 17.635,25.283 17.647,25.254C17.659,25.226 17.681,25.201 17.712,25.182C17.768,25.163 17.83,25.161 17.888,25.174C17.947,25.188 17.996,25.217 18.029,25.256C18.142,25.433 18.206,25.626 18.219,25.823C18.164,25.765 18.097,25.682 18.011,25.6Z"
-+      android:fillColor="#E0E0E0"/>
-+  <path
-+      android:pathData="M17.457,24.437C17.169,24.317 16.913,24.314 16.734,24.406C16.697,24.425 16.653,24.441 16.598,24.464C16.584,24.47 16.572,24.477 16.56,24.484C16.543,24.494 16.527,24.504 16.512,24.515L16.501,24.524C16.488,24.534 16.475,24.546 16.463,24.558L16.451,24.572C16.44,24.583 16.43,24.595 16.421,24.607L16.407,24.628C16.399,24.639 16.391,24.652 16.386,24.664C16.386,24.674 16.376,24.683 16.372,24.692C16.368,24.702 16.361,24.715 16.357,24.728C16.353,24.74 16.349,24.753 16.345,24.766C16.341,24.78 16.338,24.787 16.335,24.8C16.333,24.812 16.335,24.832 16.335,24.85C16.334,24.859 16.334,24.868 16.335,24.878C16.335,24.905 16.335,24.933 16.335,24.962C16.363,25.227 16.472,25.483 16.653,25.71C16.835,25.937 17.084,26.128 17.38,26.267C17.413,26.282 17.448,26.295 17.483,26.306C17.503,26.312 17.523,26.318 17.543,26.323L17.584,26.335L17.625,26.343L17.682,26.354H17.704L17.776,26.36C17.89,26.367 18.004,26.344 18.1,26.295C18.148,26.273 18.191,26.256 18.244,26.23C18.417,26.145 18.517,25.974 18.517,25.735C18.486,25.47 18.374,25.215 18.19,24.989C18.006,24.764 17.755,24.575 17.457,24.437ZM17.219,25.912C17.045,25.813 16.794,25.509 16.695,25.338C16.748,25.363 16.808,25.392 16.872,25.416C17.135,25.514 17.124,25.375 17.233,25.469C17.341,25.564 17.329,25.802 17.25,25.926C17.239,25.922 17.229,25.917 17.219,25.912ZM17.697,24.997C17.682,25 17.668,25.006 17.655,25.012L17.504,25.082C17.472,25.096 17.446,25.116 17.429,25.141C17.264,24.978 17.165,24.781 17.144,24.576C17.403,24.656 17.632,24.785 17.81,24.951C17.815,24.958 17.819,24.965 17.821,24.972C17.779,24.976 17.737,24.983 17.697,24.993V24.997ZM16.934,24.91C17.026,25.139 17.154,25.173 17.164,25.247C16.967,25.228 16.643,25.087 16.62,24.942C16.61,24.802 16.667,24.663 16.781,24.552C16.861,24.577 16.86,24.723 16.934,24.91ZM17.539,26.111C17.433,26.04 17.546,25.967 17.595,25.816C17.617,25.743 17.614,25.668 17.585,25.596C17.794,25.716 18.111,26.035 18.035,26.133L18.025,26.142C17.864,26.18 17.69,26.169 17.539,26.111ZM18.011,25.6C17.787,25.382 17.702,25.46 17.647,25.342C17.635,25.314 17.635,25.283 17.647,25.254C17.659,25.226 17.681,25.201 17.712,25.182C17.768,25.163 17.83,25.161 17.888,25.174C17.947,25.188 17.996,25.217 18.029,25.256C18.142,25.433 18.206,25.626 18.219,25.823C18.164,25.765 18.097,25.682 18.011,25.6Z"
-+      android:strokeAlpha="0.2"
-+      android:fillColor="#000000"
-+      android:fillAlpha="0.2"/>
-+  <path
-+      android:pathData="M17.309,24.505C16.749,24.272 16.308,24.478 16.323,24.966C16.35,25.231 16.459,25.487 16.641,25.714C16.822,25.94 17.071,26.131 17.367,26.271C17.927,26.504 18.367,26.298 18.352,25.81C18.324,25.545 18.215,25.289 18.034,25.063C17.853,24.836 17.604,24.645 17.309,24.505ZM17.062,24.562C17.26,24.562 17.743,24.846 17.814,24.949C17.885,25.052 17.708,25.018 17.55,25.065C17.349,25.123 17.45,25.273 17.33,25.235C17.155,25.183 16.866,24.564 17.062,24.562ZM16.764,24.545C16.866,24.555 16.859,24.708 16.938,24.908C17.039,25.161 17.185,25.175 17.168,25.271C17.142,25.411 16.507,25.215 16.468,25.009C16.43,24.804 16.662,24.532 16.764,24.545ZM17.072,25.979C16.852,25.855 16.509,25.401 16.504,25.304C16.498,25.207 16.669,25.337 16.875,25.414C17.138,25.512 17.127,25.373 17.236,25.468C17.398,25.606 17.294,26.104 17.072,25.979ZM18.038,26.131C17.94,26.258 17.494,26.25 17.392,26.179C17.289,26.108 17.4,26.035 17.449,25.883C17.509,25.69 17.358,25.59 17.442,25.553C17.566,25.498 18.138,26.003 18.038,26.131ZM17.864,25.667C17.639,25.449 17.556,25.527 17.499,25.409C17.416,25.237 17.874,25.051 18.033,25.254C18.192,25.457 18.262,25.907 18.203,25.96C18.145,26.013 18.041,25.837 17.864,25.667Z"
-+      android:fillColor="#E0E0E0"/>
-+  <path
-+      android:pathData="M17.304,25.826C17.568,25.936 17.776,25.838 17.77,25.607C17.756,25.482 17.705,25.361 17.619,25.254C17.533,25.147 17.416,25.057 17.277,24.991C17.004,24.88 16.803,24.978 16.811,25.208C16.823,25.334 16.875,25.455 16.96,25.562C17.046,25.67 17.164,25.76 17.304,25.826Z"
-+      android:fillColor="#455A64"/>
-+  <path
-+      android:pathData="M32.61,19.69C32.833,19.788 33.018,19.708 33.018,19.511C33.01,19.404 32.969,19.299 32.898,19.206C32.827,19.114 32.728,19.035 32.61,18.977C32.386,18.878 32.201,18.958 32.201,19.155C32.209,19.263 32.251,19.367 32.322,19.46C32.393,19.553 32.491,19.632 32.61,19.69Z"
-+      android:fillColor="#455A64"/>
-+  <path
-+      android:pathData="M37.998,21.72V21.373L37.687,21.164C37.681,20.94 37.658,20.715 37.618,20.493L37.874,20.479L37.772,20.1L37.499,19.982C37.426,19.73 37.335,19.481 37.227,19.236L37.412,19.159L37.216,18.772L36.979,18.727C36.84,18.471 36.685,18.219 36.514,17.972L36.635,17.846L36.362,17.479L36.162,17.496C35.969,17.256 35.761,17.024 35.54,16.802L35.604,16.631L35.265,16.308L35.099,16.385C34.872,16.185 34.632,15.994 34.378,15.813V15.596L34,15.339L33.873,15.482C33.633,15.335 33.382,15.2 33.12,15.077L33.052,14.811L32.66,14.638L32.593,14.846C32.348,14.741 32.093,14.65 31.829,14.576L31.708,14.331L31.329,14.253V14.462C31.098,14.419 30.861,14.396 30.623,14.393H30.604L30.451,14.185L30.111,14.208L30.169,14.416C29.942,14.439 29.718,14.477 29.5,14.53L29.354,14.388L29.081,14.51L29.148,14.637C28.626,14.811 28.169,15.08 27.816,15.422C27.271,15.909 27.109,16.694 27.118,17.604C27.118,19.895 29.216,22.673 31.806,23.815L32.102,23.949C32.837,24.273 33.533,24.431 34.152,24.437H34.194C34.235,24.437 34.275,24.437 34.316,24.437H34.355L34.459,24.431H34.51H34.538C34.769,24.41 34.997,24.373 35.218,24.318L35.254,24.367L35.593,24.343L35.558,24.22C35.764,24.151 35.962,24.066 36.147,23.967L36.352,24.164L36.624,24.042L36.479,23.765L36.56,23.709C36.694,23.628 36.818,23.537 36.928,23.437L37.2,23.63L37.412,23.408L37.203,23.136C37.315,22.983 37.407,22.822 37.475,22.655L37.772,22.79L37.874,22.501L37.602,22.25C37.647,22.052 37.674,21.852 37.681,21.651L37.998,21.72ZM32.51,22.927C30.331,21.961 28.561,19.613 28.561,17.682C28.561,16.895 29.191,16.108 29.688,15.743C30.33,15.631 31.11,15.743 31.952,16.114C34.137,17.08 35.91,19.428 35.91,21.358C35.91,22.146 35.616,22.742 35.119,23.107C34.472,23.22 33.356,23.298 32.51,22.927ZM30.108,21.899C29.341,21.2 28.751,20.398 28.37,19.534L28.49,19.771L28.763,19.823C28.899,20.068 29.048,20.309 29.216,20.545L29.069,20.697L29.341,21.063L29.589,21.043C29.774,21.268 29.972,21.486 30.18,21.695L30.108,21.899ZM27.982,17.863C27.982,17.72 27.993,17.577 28.015,17.435C28.026,17.641 28.051,17.847 28.091,18.051L27.989,18.056C27.989,17.991 27.986,17.927 27.986,17.863H27.982ZM28.221,18.57C28.295,18.816 28.386,19.06 28.493,19.299L28.298,19.38C28.181,19.091 28.095,18.795 28.039,18.495L28.221,18.57ZM30.482,22.215L30.655,22.134C30.868,22.319 31.093,22.496 31.329,22.663V22.792C31.03,22.617 30.748,22.424 30.486,22.216L30.482,22.215ZM31.942,23.106C31.905,23.09 31.87,23.072 31.833,23.056L31.869,23.014C32.005,23.093 32.134,23.167 32.269,23.237C32.166,23.198 32.056,23.156 31.946,23.107L31.942,23.106Z"
-+      android:fillColor="#455A64"/>
-+  <path
-+      android:pathData="M37.097,22.091V21.745L36.786,21.537C36.781,21.312 36.758,21.087 36.716,20.865L36.974,20.852L36.871,20.473L36.599,20.354C36.525,20.102 36.434,19.853 36.327,19.608L36.511,19.532L36.314,19.145L36.078,19.101C35.941,18.845 35.784,18.592 35.612,18.346L35.733,18.219L35.461,17.853L35.261,17.87C35.069,17.63 34.86,17.398 34.64,17.175L34.704,17.004L34.363,16.681L34.198,16.759C33.972,16.559 33.731,16.368 33.478,16.187V15.969L33.099,15.713L32.973,15.858C32.734,15.712 32.483,15.578 32.222,15.457L32.153,15.184L31.761,15.011L31.691,15.219C31.45,15.116 31.199,15.028 30.94,14.955L30.813,14.699L30.434,14.622V14.841C30.198,14.799 29.957,14.778 29.714,14.778L29.548,14.556L29.209,14.579L29.273,14.806C29.058,14.833 28.849,14.882 28.652,14.953L28.452,14.758L28.18,14.88L28.298,15.106C28.113,15.196 27.946,15.307 27.804,15.435L27.598,15.292L27.394,15.514L27.55,15.717C27.434,15.885 27.345,16.064 27.288,16.249L27.029,16.131L26.927,16.421L27.184,16.663C27.152,16.844 27.131,17.047 27.12,17.272L26.803,17.203V17.549L27.116,17.757C27.125,17.981 27.151,18.205 27.195,18.427L26.923,18.44L27.025,18.819L27.32,18.947C27.395,19.193 27.486,19.436 27.593,19.676L27.386,19.761L27.582,20.147L27.854,20.199C27.99,20.444 28.14,20.686 28.306,20.922L28.16,21.073L28.433,21.441L28.681,21.419C28.862,21.645 29.059,21.862 29.272,22.072L29.19,22.288L29.529,22.611L29.743,22.507C29.958,22.694 30.184,22.871 30.424,23.036V23.319L30.802,23.576L30.968,23.387C31.19,23.52 31.421,23.643 31.661,23.755L31.75,24.104L32.142,24.277L32.231,24.006C32.453,24.1 32.684,24.183 32.922,24.252L33.087,24.585L33.466,24.663V24.375C33.686,24.413 33.911,24.435 34.137,24.438L34.352,24.73L34.693,24.707L34.61,24.412C34.811,24.386 35.007,24.342 35.195,24.281L35.45,24.528L35.722,24.405L35.574,24.121C35.742,24.029 35.893,23.921 36.025,23.8L36.304,23.992L36.5,23.784L36.29,23.512C36.403,23.359 36.494,23.198 36.562,23.03L36.861,23.165L36.963,22.876L36.69,22.626C36.736,22.428 36.762,22.227 36.769,22.026L37.097,22.091ZM31.95,23.107C29.763,22.142 27.99,19.793 27.99,17.863C27.99,15.934 29.76,15.149 31.95,16.115C34.14,17.08 35.909,19.429 35.909,21.358C35.909,23.288 34.136,24.073 31.95,23.107Z"
-+      android:fillColor="#37474F"/>
-+  <path
-+      android:pathData="M34.897,22.612C34.271,23.183 33.187,23.264 31.953,22.716C30.008,21.861 28.432,19.774 28.432,18.057C28.432,17.29 28.748,16.726 29.269,16.415C28.906,16.743 28.694,17.235 28.694,17.864C28.694,19.579 30.27,21.666 32.213,22.525C33.289,23 34.252,22.999 34.897,22.612Z"
-+      android:fillColor="#E97001"/>
-+  <path
-+      android:pathData="M34.897,22.612C34.271,23.183 33.187,23.264 31.953,22.716C30.008,21.861 28.432,19.774 28.432,18.057C28.432,17.29 28.748,16.726 29.269,16.415C28.906,16.743 28.694,17.235 28.694,17.864C28.694,19.579 30.27,21.666 32.213,22.525C33.289,23 34.252,22.999 34.897,22.612Z"
-+      android:strokeAlpha="0.4"
-+      android:fillColor="#000000"
-+      android:fillAlpha="0.4"/>
-+  <path
-+      android:pathData="M31.95,16.114C29.763,15.148 27.99,15.931 27.99,17.861C27.99,19.792 29.76,22.141 31.95,23.106C34.14,24.072 35.909,23.289 35.909,21.358C35.909,19.426 34.136,17.075 31.95,16.114ZM31.95,22.718C30.007,21.86 28.429,19.772 28.429,18.056C28.429,16.34 30.004,15.644 31.948,16.502C33.891,17.36 35.466,19.448 35.466,21.164C35.466,22.88 33.893,23.576 31.95,22.718Z"
-+      android:fillColor="#E97001"/>
-+  <path
-+      android:pathData="M31.95,16.114C29.763,15.148 27.99,15.931 27.99,17.861C27.99,19.792 29.76,22.141 31.95,23.106C34.14,24.072 35.909,23.289 35.909,21.358C35.909,19.426 34.136,17.075 31.95,16.114ZM31.95,22.718C30.007,21.86 28.429,19.772 28.429,18.056C28.429,16.34 30.004,15.644 31.948,16.502C33.891,17.36 35.466,19.448 35.466,21.164C35.466,22.88 33.893,23.576 31.95,22.718Z"
-+      android:strokeAlpha="0.15"
-+      android:fillColor="#ffffff"
-+      android:fillAlpha="0.15"/>
-+  <path
-+      android:pathData="M28.432,18.066V18.057C28.432,18.032 28.432,18.008 28.432,17.984L30.733,19.41C30.738,19.413 30.742,19.417 30.744,19.422C30.747,19.426 30.748,19.431 30.748,19.436C30.748,19.441 30.746,19.445 30.743,19.45C30.741,19.454 30.737,19.457 30.732,19.46L29.19,20.323L29.153,20.264L30.638,19.431L28.432,18.066Z"
-+      android:fillColor="#EBEBEB"/>
-+  <path
-+      android:pathData="M32.946,19.389C32.936,19.386 32.927,19.38 32.923,19.372C32.919,19.364 32.919,19.356 32.923,19.348L33.771,17.763L32.212,18.637C32.206,18.64 32.2,18.641 32.193,18.641C32.186,18.641 32.18,18.64 32.174,18.637C32.167,18.636 32.161,18.633 32.156,18.629C32.152,18.625 32.148,18.621 32.146,18.616L31.362,16.334L31.343,18.33C31.343,18.337 31.34,18.343 31.335,18.349C31.33,18.354 31.323,18.358 31.315,18.36C31.306,18.362 31.298,18.363 31.289,18.361C31.281,18.359 31.274,18.355 31.268,18.35L29.298,16.44L30.755,18.643C30.758,18.648 30.759,18.655 30.758,18.661C30.757,18.667 30.753,18.673 30.747,18.678C30.742,18.683 30.734,18.686 30.726,18.688C30.718,18.689 30.709,18.689 30.702,18.686L28.432,17.977C28.432,17.954 28.432,17.931 28.432,17.908L30.624,18.595L29.212,16.45C29.253,16.423 29.295,16.398 29.339,16.374L31.26,18.239L31.279,16.26C31.332,16.273 31.385,16.289 31.44,16.306L32.212,18.552L33.726,17.706C33.763,17.741 33.798,17.776 33.834,17.81L33.017,19.338L35.274,20.045L35.299,20.123L32.946,19.389Z"
-+      android:fillColor="#EBEBEB"/>
-+  <path
-+      android:pathData="M31.278,20.266C31.284,20.266 31.29,20.267 31.295,20.269C31.301,20.27 31.305,20.273 31.31,20.276C31.313,20.279 31.317,20.282 31.319,20.286C31.321,20.29 31.322,20.294 31.322,20.299L31.303,22.37L32.12,20.834C32.123,20.828 32.128,20.823 32.134,20.82C32.141,20.816 32.149,20.814 32.157,20.814C32.165,20.814 32.173,20.815 32.18,20.819C32.187,20.822 32.192,20.826 32.196,20.832L33.664,23.05L32.905,20.824C32.903,20.818 32.903,20.811 32.907,20.805C32.91,20.798 32.916,20.793 32.923,20.789C32.93,20.786 32.937,20.784 32.945,20.784C32.955,20.784 32.965,20.786 32.972,20.791L35.225,22.187L33.227,20.249C33.223,20.243 33.221,20.238 33.221,20.232C33.221,20.226 33.223,20.22 33.227,20.215C33.23,20.21 33.236,20.205 33.242,20.202C33.249,20.199 33.256,20.198 33.264,20.198L35.306,20.13C35.313,20.151 35.32,20.171 35.325,20.192L33.349,20.258L35.27,22.12C35.248,22.165 35.225,22.208 35.199,22.248L33.02,20.902L33.765,23.07C33.71,23.075 33.654,23.078 33.599,23.079L32.169,20.918L31.368,22.413L31.221,22.323L31.24,20.328L29.247,20.397L29.207,20.335L31.278,20.266Z"
-+      android:fillColor="#EBEBEB"/>
-+  <path
-+      android:pathData="M31.611,20.566L30.035,21.371L30.087,21.422L31.608,20.644L32.323,22.864C32.379,22.883 32.433,22.901 32.489,22.919L32.561,20.981L34.468,22.889C34.511,22.868 34.553,22.846 34.594,22.822L33.204,20.647L35.452,21.398C35.452,21.352 35.459,21.306 35.46,21.259L33.215,19.819L34.778,19.02C34.755,18.98 34.73,18.941 34.706,18.903L32.633,18.915L32.708,16.913L32.572,16.83L31.706,18.309L30.324,16.137C30.268,16.137 30.212,16.137 30.158,16.145L30.854,18.304L28.725,16.939C28.713,16.958 28.701,16.978 28.69,16.999L30.897,18.413C30.904,18.417 30.913,18.42 30.922,18.42C30.931,18.42 30.939,18.417 30.946,18.413C30.953,18.41 30.959,18.404 30.963,18.398C30.966,18.392 30.967,18.385 30.965,18.379L30.252,16.164L31.679,18.396C31.682,18.401 31.688,18.405 31.695,18.409C31.701,18.412 31.709,18.413 31.717,18.413C31.725,18.413 31.733,18.412 31.739,18.409C31.746,18.405 31.751,18.4 31.754,18.395L32.631,16.897L32.554,18.949C32.554,18.953 32.555,18.958 32.557,18.962C32.56,18.966 32.563,18.969 32.567,18.973C32.57,18.976 32.575,18.978 32.58,18.98C32.584,18.981 32.59,18.982 32.595,18.982L34.735,18.969L33.126,19.792C33.121,19.795 33.117,19.799 33.114,19.804C33.111,19.808 33.11,19.813 33.11,19.818C33.11,19.823 33.111,19.828 33.114,19.832C33.117,19.836 33.121,19.84 33.126,19.843L35.435,21.322L33.14,20.557C33.132,20.554 33.124,20.553 33.115,20.554C33.107,20.555 33.099,20.558 33.094,20.563C33.088,20.568 33.084,20.574 33.083,20.58C33.082,20.587 33.083,20.594 33.087,20.599L34.5,22.812L32.557,20.872C32.553,20.868 32.548,20.865 32.542,20.863C32.537,20.861 32.531,20.86 32.524,20.86H32.512C32.504,20.862 32.496,20.865 32.491,20.871C32.486,20.876 32.483,20.882 32.482,20.889L32.409,22.861L31.676,20.585C31.674,20.58 31.67,20.576 31.666,20.572C31.662,20.568 31.656,20.565 31.65,20.563C31.644,20.561 31.637,20.561 31.63,20.561C31.623,20.562 31.617,20.563 31.611,20.566ZM28.565,18.941C28.565,18.962 28.575,18.984 28.582,19.005L30.596,18.992C30.604,18.992 30.611,18.991 30.618,18.987C30.624,18.984 30.629,18.98 30.633,18.975C30.637,18.97 30.639,18.964 30.639,18.958C30.639,18.952 30.637,18.946 30.633,18.941L28.695,17.006C28.682,17.029 28.669,17.051 28.657,17.074L30.516,18.929L28.565,18.941ZM30.893,19.802L28.589,19.031L28.614,19.109L30.821,19.847L29.971,21.299L30.028,21.359L30.913,19.843C30.916,19.84 30.917,19.835 30.917,19.831C30.917,19.827 30.916,19.823 30.913,19.819C30.911,19.815 30.908,19.811 30.903,19.808C30.899,19.805 30.893,19.803 30.888,19.802H30.893Z"
-+      android:fillColor="#FAFAFA"/>
-+  <path
-+      android:pathData="M32.151,18.356C31.777,18.19 31.44,18.181 31.198,18.295C31.149,18.319 31.089,18.34 31.025,18.369C31.007,18.376 30.989,18.386 30.973,18.394L30.965,18.399C30.942,18.412 30.921,18.425 30.901,18.44C30.896,18.443 30.891,18.446 30.887,18.45C30.868,18.464 30.851,18.479 30.834,18.494L30.816,18.512C30.803,18.528 30.789,18.542 30.777,18.559L30.757,18.586C30.746,18.601 30.736,18.617 30.727,18.633C30.719,18.645 30.713,18.657 30.708,18.67C30.699,18.686 30.692,18.7 30.686,18.716C30.679,18.732 30.675,18.749 30.669,18.766C30.664,18.783 30.66,18.794 30.656,18.81C30.652,18.825 30.648,18.854 30.643,18.875C30.639,18.897 30.643,18.899 30.637,18.913C30.637,18.948 30.637,18.986 30.637,19.024C30.637,19.668 31.229,20.451 31.958,20.773C32.001,20.793 32.047,20.811 32.094,20.827C32.121,20.836 32.147,20.843 32.173,20.851L32.226,20.867C32.243,20.871 32.261,20.875 32.279,20.878C32.303,20.885 32.328,20.89 32.354,20.894H32.384C32.415,20.894 32.446,20.902 32.478,20.904H32.485C32.635,20.915 32.786,20.888 32.915,20.827C32.979,20.799 33.035,20.777 33.108,20.744C33.34,20.64 33.483,20.414 33.483,20.098C33.472,19.461 32.881,18.678 32.151,18.356Z"
-+      android:fillColor="#455A64"/>
-+  <path
-+      android:pathData="M31.95,18.446C31.221,18.125 30.629,18.386 30.629,19.028C30.629,19.671 31.221,20.455 31.95,20.777C32.678,21.099 33.268,20.838 33.268,20.194C33.268,19.55 32.678,18.768 31.95,18.446Z"
-+      android:fillColor="#37474F"/>
-+  <path
-+      android:pathData="M31.949,19.968C32.172,20.067 32.358,19.986 32.358,19.79C32.35,19.682 32.309,19.578 32.238,19.485C32.167,19.392 32.068,19.313 31.949,19.255C31.726,19.156 31.541,19.237 31.541,19.433C31.549,19.541 31.59,19.645 31.661,19.738C31.732,19.831 31.831,19.91 31.949,19.968Z"
-+      android:fillColor="#455A64"/>
-+  <path
-+      android:pathData="M31.99,19.21C31.945,19.185 31.892,19.169 31.836,19.166C31.78,19.162 31.724,19.171 31.675,19.19L31.428,19.294L31.412,19.303L31.39,19.316L31.372,19.331V19.337L31.359,19.353L31.352,19.362C31.346,19.371 31.34,19.38 31.336,19.389C31.333,19.394 31.33,19.399 31.329,19.405C31.328,19.41 31.328,19.416 31.329,19.421C31.329,19.421 31.329,19.431 31.329,19.436V19.458C31.329,19.458 31.329,19.465 31.329,19.469C31.329,19.474 31.329,19.494 31.329,19.507C31.337,19.623 31.381,19.735 31.457,19.836C31.533,19.936 31.639,20.022 31.766,20.085C31.78,20.092 31.795,20.098 31.811,20.103L31.837,20.111L31.854,20.116H31.872L31.897,20.121H31.906H31.937C31.985,20.124 32.033,20.116 32.074,20.096C32.095,20.087 32.304,19.997 32.327,19.986C32.369,19.962 32.403,19.931 32.424,19.894C32.446,19.858 32.455,19.818 32.451,19.778C32.438,19.662 32.389,19.55 32.31,19.452C32.229,19.353 32.12,19.27 31.99,19.21Z"
-+      android:fillColor="#455A64"/>
-+  <path
-+      android:pathData="M31.732,19.321C31.491,19.217 31.295,19.301 31.295,19.514C31.303,19.629 31.347,19.742 31.423,19.843C31.499,19.943 31.605,20.028 31.732,20.092C31.973,20.196 32.169,20.112 32.169,19.899C32.161,19.783 32.117,19.67 32.041,19.57C31.965,19.469 31.859,19.384 31.732,19.321Z"
-+      android:fillColor="#263238"/>
-+  <path
-+      android:pathData="M31.734,19.823C31.807,19.857 31.87,19.83 31.87,19.765C31.867,19.729 31.854,19.695 31.83,19.664C31.806,19.633 31.773,19.607 31.734,19.588C31.66,19.556 31.598,19.582 31.598,19.646C31.6,19.682 31.614,19.717 31.638,19.747C31.662,19.778 31.694,19.804 31.734,19.823Z"
-+      android:fillColor="#455A64"/>
-+  <path
-+      android:pathData="M32.021,18.742C31.733,18.622 31.477,18.619 31.298,18.71C31.262,18.729 31.217,18.745 31.169,18.768L31.131,18.788H31.124C31.108,18.798 31.091,18.809 31.076,18.82L31.067,18.827L31.027,18.862L31.015,18.876C31.004,18.888 30.994,18.9 30.985,18.912C30.985,18.918 30.976,18.925 30.972,18.933C30.963,18.944 30.956,18.956 30.95,18.968C30.95,18.978 30.94,18.988 30.936,18.997C30.93,19.009 30.925,19.021 30.921,19.033C30.921,19.045 30.913,19.058 30.91,19.07C30.908,19.083 30.903,19.092 30.901,19.104C30.898,19.115 30.901,19.137 30.893,19.153V19.182C30.893,19.21 30.893,19.238 30.893,19.267C30.92,19.532 31.029,19.788 31.21,20.015C31.391,20.242 31.64,20.433 31.936,20.572C31.971,20.587 32.005,20.599 32.039,20.611C32.073,20.622 32.079,20.622 32.099,20.628L32.14,20.64L32.181,20.647L32.238,20.658H32.26L32.332,20.665C32.446,20.671 32.56,20.649 32.656,20.6C32.704,20.577 32.746,20.56 32.8,20.534C32.972,20.45 33.073,20.278 33.073,20.04C33.043,19.776 32.932,19.521 32.749,19.295C32.567,19.07 32.317,18.88 32.021,18.742ZM31.785,20.217C31.609,20.118 31.36,19.813 31.259,19.642C31.316,19.671 31.375,19.697 31.436,19.72C31.7,19.818 31.688,19.679 31.798,19.774C31.908,19.869 31.895,20.106 31.816,20.23C31.805,20.227 31.794,20.222 31.785,20.216V20.217ZM32.261,19.301C32.246,19.305 32.232,19.31 32.219,19.317L32.068,19.387C32.036,19.401 32.01,19.421 31.993,19.446C31.828,19.282 31.729,19.086 31.708,18.88C31.968,18.96 32.197,19.09 32.374,19.256C32.379,19.263 32.383,19.27 32.386,19.277C32.344,19.282 32.302,19.289 32.261,19.3V19.301ZM31.499,19.215C31.591,19.444 31.718,19.477 31.729,19.552C31.531,19.531 31.207,19.392 31.184,19.247C31.173,19.106 31.23,18.967 31.343,18.856C31.422,18.882 31.422,19.025 31.499,19.214V19.215ZM32.103,20.415C31.997,20.344 32.11,20.271 32.158,20.119C32.18,20.047 32.177,19.971 32.148,19.9C32.356,20.02 32.675,20.339 32.599,20.435C32.596,20.439 32.593,20.443 32.589,20.446C32.428,20.483 32.254,20.472 32.103,20.415ZM32.574,19.903C32.35,19.685 32.267,19.763 32.209,19.646C32.199,19.617 32.199,19.587 32.211,19.558C32.222,19.529 32.244,19.504 32.275,19.485C32.331,19.467 32.394,19.464 32.452,19.478C32.51,19.492 32.56,19.521 32.593,19.56C32.705,19.737 32.769,19.93 32.781,20.126C32.73,20.068 32.661,19.986 32.576,19.903H32.574Z"
-+      android:fillColor="#E0E0E0"/>
-+  <path
-+      android:pathData="M32.021,18.742C31.733,18.622 31.477,18.619 31.298,18.71C31.262,18.729 31.217,18.745 31.169,18.768L31.131,18.788H31.124C31.108,18.798 31.091,18.809 31.076,18.82L31.067,18.827L31.027,18.862L31.015,18.876C31.004,18.888 30.994,18.9 30.985,18.912C30.985,18.918 30.976,18.925 30.972,18.933C30.963,18.944 30.956,18.956 30.95,18.968C30.95,18.978 30.94,18.988 30.936,18.997C30.93,19.009 30.925,19.021 30.921,19.033C30.921,19.045 30.913,19.058 30.91,19.07C30.908,19.083 30.903,19.092 30.901,19.104C30.898,19.115 30.901,19.137 30.893,19.153V19.182C30.893,19.21 30.893,19.238 30.893,19.267C30.92,19.532 31.029,19.788 31.21,20.015C31.391,20.242 31.64,20.433 31.936,20.572C31.971,20.587 32.005,20.599 32.039,20.611C32.073,20.622 32.079,20.622 32.099,20.628L32.14,20.64L32.181,20.647L32.238,20.658H32.26L32.332,20.665C32.446,20.671 32.56,20.649 32.656,20.6C32.704,20.577 32.746,20.56 32.8,20.534C32.972,20.45 33.073,20.278 33.073,20.04C33.043,19.776 32.932,19.521 32.749,19.295C32.567,19.07 32.317,18.88 32.021,18.742ZM31.785,20.217C31.609,20.118 31.36,19.813 31.259,19.642C31.316,19.671 31.375,19.697 31.436,19.72C31.7,19.818 31.688,19.679 31.798,19.774C31.908,19.869 31.895,20.106 31.816,20.23C31.805,20.227 31.794,20.222 31.785,20.216V20.217ZM32.261,19.301C32.246,19.305 32.232,19.31 32.219,19.317L32.068,19.387C32.036,19.401 32.01,19.421 31.993,19.446C31.828,19.282 31.729,19.086 31.708,18.88C31.968,18.96 32.197,19.09 32.374,19.256C32.379,19.263 32.383,19.27 32.386,19.277C32.344,19.282 32.302,19.289 32.261,19.3V19.301ZM31.499,19.215C31.591,19.444 31.718,19.477 31.729,19.552C31.531,19.531 31.207,19.392 31.184,19.247C31.173,19.106 31.23,18.967 31.343,18.856C31.422,18.882 31.422,19.025 31.499,19.214V19.215ZM32.103,20.415C31.997,20.344 32.11,20.271 32.158,20.119C32.18,20.047 32.177,19.971 32.148,19.9C32.356,20.02 32.675,20.339 32.599,20.435C32.596,20.439 32.593,20.443 32.589,20.446C32.428,20.483 32.254,20.472 32.103,20.415ZM32.574,19.903C32.35,19.685 32.267,19.763 32.209,19.646C32.199,19.617 32.199,19.587 32.211,19.558C32.222,19.529 32.244,19.504 32.275,19.485C32.331,19.467 32.394,19.464 32.452,19.478C32.51,19.492 32.56,19.521 32.593,19.56C32.705,19.737 32.769,19.93 32.781,20.126C32.73,20.068 32.661,19.986 32.576,19.903H32.574Z"
-+      android:strokeAlpha="0.2"
-+      android:fillColor="#000000"
-+      android:fillAlpha="0.2"/>
-+  <path
-+      android:pathData="M31.868,18.813C31.308,18.58 30.867,18.786 30.883,19.273C30.911,19.538 31.019,19.794 31.201,20.021C31.382,20.248 31.631,20.439 31.926,20.578C32.486,20.811 32.927,20.605 32.911,20.118C32.883,19.853 32.775,19.597 32.593,19.37C32.412,19.143 32.164,18.952 31.868,18.813ZM31.623,18.869C31.82,18.869 32.304,19.153 32.373,19.257C32.443,19.36 32.268,19.325 32.11,19.371C31.909,19.429 32.009,19.579 31.89,19.543C31.714,19.491 31.421,18.87 31.623,18.869ZM31.323,18.851C31.425,18.863 31.418,19.016 31.497,19.216C31.6,19.469 31.745,19.483 31.728,19.578C31.702,19.719 31.066,19.522 31.029,19.317C30.992,19.112 31.221,18.84 31.323,18.848V18.851ZM31.632,20.287C31.412,20.162 31.069,19.708 31.063,19.612C31.058,19.516 31.228,19.645 31.435,19.721C31.699,19.819 31.687,19.68 31.797,19.775C31.956,19.913 31.853,20.41 31.632,20.287ZM32.599,20.438C32.5,20.566 32.054,20.557 31.952,20.486C31.85,20.416 31.959,20.343 32.008,20.19C32.069,19.997 31.917,19.897 32.008,19.86C32.125,19.805 32.699,20.306 32.599,20.438ZM32.425,19.974C32.2,19.756 32.116,19.833 32.06,19.717C31.975,19.545 32.433,19.359 32.594,19.562C32.754,19.765 32.822,20.215 32.763,20.267C32.702,20.319 32.602,20.145 32.425,19.974Z"
-+      android:fillColor="#E0E0E0"/>
-+  <path
-+      android:pathData="M31.868,20.133C32.134,20.243 32.342,20.146 32.334,19.915C32.321,19.79 32.27,19.669 32.184,19.562C32.098,19.454 31.981,19.364 31.841,19.298C31.575,19.188 31.367,19.286 31.375,19.516C31.388,19.641 31.44,19.762 31.525,19.869C31.611,19.976 31.728,20.067 31.868,20.133Z"
-+      android:fillColor="#455A64"/>
-+  <path
-+      android:pathData="M31.906,19.635C30.745,19.016 29.903,18.177 29.513,17.254L28.444,14.714C28.418,14.657 28.34,14.47 28.114,14.575C27.888,14.681 27.921,14.733 27.945,14.791L29.059,17.435C29.448,18.361 30.285,19.199 31.452,19.816L31.607,19.899C31.657,19.922 31.716,19.931 31.774,19.925C31.832,19.919 31.886,19.897 31.926,19.864C31.947,19.849 31.964,19.831 31.975,19.811C31.986,19.79 31.991,19.768 31.989,19.746C31.987,19.724 31.979,19.702 31.964,19.683C31.95,19.664 31.93,19.647 31.906,19.635Z"
-+      android:fillColor="#E97001"/>
-+  <path
-+      android:pathData="M31.906,19.635C30.745,19.016 29.903,18.177 29.513,17.254L28.444,14.714C28.418,14.657 28.34,14.47 28.114,14.575C27.888,14.681 27.921,14.733 27.945,14.791L29.059,17.435C29.448,18.361 30.285,19.199 31.452,19.816L31.607,19.899C31.657,19.922 31.716,19.931 31.774,19.925C31.832,19.919 31.886,19.897 31.926,19.864C31.947,19.849 31.964,19.831 31.975,19.811C31.986,19.79 31.991,19.768 31.989,19.746C31.987,19.724 31.979,19.702 31.964,19.683C31.95,19.664 31.93,19.647 31.906,19.635Z"
-+      android:strokeAlpha="0.4"
-+      android:fillColor="#000000"
-+      android:fillAlpha="0.4"/>
-+  <path
-+      android:pathData="M27.861,11.349C27.862,11.314 27.849,11.279 27.825,11.249C27.801,11.219 27.766,11.194 27.725,11.179C27.601,11.134 27.351,11.164 27.293,11.26C27.293,11.26 27.622,12.9 27.651,12.96C27.721,13.098 28.053,13.766 28.096,13.869L28.555,13.652L28.155,12.848C28.155,12.848 27.861,11.381 27.861,11.349Z"
-+      android:fillColor="#263238"/>
-+  <path
-+      android:pathData="M28.392,12.601L27.879,12.717L20.098,17.148L17.339,24.965C17.311,25.006 17.297,25.051 17.297,25.097C17.297,25.144 17.312,25.19 17.342,25.231C17.367,25.266 17.4,25.296 17.441,25.319C17.482,25.343 17.529,25.36 17.579,25.369C17.629,25.378 17.681,25.379 17.731,25.372C17.781,25.365 17.829,25.349 17.872,25.327L23.506,22.466C23.659,22.385 23.78,22.275 23.858,22.147L28.361,13.748L28.821,13.488L28.392,12.601ZM17.857,24.829L20.512,17.695L23.174,22.192L17.857,24.829ZM23.5,21.97L20.787,17.338L27.806,13.512L23.5,21.97Z"
-+      android:fillColor="#E97001"/>
-+  <path
-+      android:pathData="M18.014,22.647L20.045,17.474L27.73,13.171L27.64,12.964L19.859,17.394L18.014,22.647Z"
-+      android:strokeAlpha="0.4"
-+      android:fillColor="#ffffff"
-+      android:fillAlpha="0.4"/>
-+  <path
-+      android:pathData="M29.359,14.384C29.359,14.384 29.313,14.265 29.212,14.026C29.129,13.833 28.646,13.896 28.545,13.657L28.086,13.874C28.094,13.951 28.07,14.028 28.017,14.094L27.993,14.131C27.908,14.28 27.803,14.462 27.876,14.635C28.006,14.948 28.021,14.982 28.021,14.982C28.075,15.108 28.515,14.894 28.465,14.774L28.44,14.712C28.369,14.542 28.405,14.498 28.496,14.453L28.624,14.392C28.786,14.324 28.853,14.437 28.914,14.583V14.59C28.969,14.705 29.429,14.548 29.359,14.384Z"
-+      android:fillColor="#E97001"/>
-+  <path
-+      android:pathData="M27.881,14.383C27.911,14.259 28.052,14.087 28.077,13.997C28.101,13.908 28.01,13.715 27.851,13.373C27.691,13.03 27.674,13.006 27.674,13.006C27.674,13.006 27.924,13.653 27.98,13.808C28.017,13.925 27.997,14.047 27.923,14.154C27.887,14.227 27.873,14.305 27.881,14.383Z"
-+      android:strokeAlpha="0.2"
-+      android:fillColor="#000000"
-+      android:fillAlpha="0.2"/>
-+  <path
-+      android:pathData="M23.377,21.082C22.968,20.914 22.617,20.91 22.367,21.038C22.315,21.063 22.252,21.086 22.185,21.119C22.166,21.127 22.149,21.138 22.131,21.147L22.123,21.152C22.099,21.166 22.077,21.181 22.056,21.197L22.042,21.207C22.023,21.223 22.006,21.239 21.988,21.255C21.97,21.272 21.976,21.268 21.97,21.275C21.955,21.291 21.941,21.308 21.929,21.325C21.922,21.334 21.915,21.344 21.909,21.354C21.897,21.37 21.887,21.387 21.879,21.404C21.871,21.417 21.865,21.431 21.86,21.445C21.852,21.46 21.845,21.476 21.838,21.494C21.831,21.511 21.827,21.528 21.823,21.547C21.819,21.566 21.814,21.577 21.81,21.593C21.806,21.608 21.803,21.639 21.799,21.663C21.795,21.687 21.799,21.688 21.799,21.703C21.799,21.74 21.799,21.78 21.799,21.822C21.82,22.503 22.48,23.32 23.258,23.646C23.305,23.666 23.354,23.684 23.403,23.701C23.431,23.71 23.459,23.717 23.487,23.725C23.516,23.732 23.525,23.736 23.545,23.74C23.563,23.744 23.583,23.747 23.602,23.751L23.681,23.767H23.712C23.745,23.771 23.779,23.774 23.813,23.775H23.819C23.979,23.785 24.139,23.753 24.273,23.686C24.34,23.654 24.398,23.631 24.475,23.594C24.716,23.476 24.86,23.236 24.849,22.902C24.814,22.225 24.16,21.408 23.377,21.082ZM23.046,23.144C22.801,23.006 22.451,22.58 22.311,22.341C22.391,22.381 22.473,22.418 22.559,22.451C22.928,22.587 22.911,22.392 23.064,22.525C23.216,22.657 23.2,22.989 23.09,23.163C23.074,23.159 23.059,23.152 23.046,23.144ZM23.713,21.863C23.693,21.87 23.673,21.877 23.653,21.885L23.442,21.983C23.398,22.003 23.361,22.032 23.337,22.066C23.154,21.93 22.929,21.485 22.94,21.275C23.256,21.351 23.787,21.673 23.871,21.796C23.878,21.805 23.883,21.816 23.888,21.826C23.828,21.835 23.77,21.849 23.713,21.867V21.863ZM22.647,21.743C22.775,22.064 22.954,22.11 22.968,22.215C22.696,22.186 22.239,21.99 22.202,21.788C22.187,21.591 22.267,21.397 22.425,21.242C22.544,21.278 22.542,21.48 22.647,21.743ZM23.493,23.422C23.344,23.323 23.502,23.221 23.57,23.006C23.602,22.905 23.598,22.799 23.557,22.7C23.848,22.867 24.292,23.313 24.186,23.449C24.182,23.454 24.177,23.459 24.172,23.463C23.935,23.519 23.598,23.493 23.493,23.422ZM24.153,22.707C23.839,22.402 23.722,22.511 23.642,22.347C23.626,22.307 23.627,22.264 23.643,22.224C23.659,22.184 23.691,22.149 23.734,22.123C23.812,22.097 23.899,22.093 23.981,22.112C24.062,22.131 24.132,22.172 24.178,22.227C24.335,22.475 24.425,22.744 24.442,23.019C24.367,22.938 24.272,22.822 24.153,22.707Z"
-+      android:fillColor="#E0E0E0"/>
-+  <path
-+      android:pathData="M23.377,21.082C22.968,20.914 22.617,20.91 22.367,21.038C22.315,21.063 22.252,21.086 22.185,21.119C22.166,21.127 22.149,21.138 22.131,21.147L22.123,21.152C22.099,21.166 22.077,21.181 22.056,21.197L22.042,21.207C22.023,21.223 22.006,21.239 21.988,21.255C21.97,21.272 21.976,21.268 21.97,21.275C21.955,21.291 21.941,21.308 21.929,21.325C21.922,21.334 21.915,21.344 21.909,21.354C21.897,21.37 21.887,21.387 21.879,21.404C21.871,21.417 21.865,21.431 21.86,21.445C21.852,21.46 21.845,21.476 21.838,21.494C21.831,21.511 21.827,21.528 21.823,21.547C21.819,21.566 21.814,21.577 21.81,21.593C21.806,21.608 21.803,21.639 21.799,21.663C21.795,21.687 21.799,21.688 21.799,21.703C21.799,21.74 21.799,21.78 21.799,21.822C21.82,22.503 22.48,23.32 23.258,23.646C23.305,23.666 23.354,23.684 23.403,23.701C23.431,23.71 23.459,23.717 23.487,23.725C23.516,23.732 23.525,23.736 23.545,23.74C23.563,23.744 23.583,23.747 23.602,23.751L23.681,23.767H23.712C23.745,23.771 23.779,23.774 23.813,23.775H23.819C23.979,23.785 24.139,23.753 24.273,23.686C24.34,23.654 24.398,23.631 24.475,23.594C24.716,23.476 24.86,23.236 24.849,22.902C24.814,22.225 24.16,21.408 23.377,21.082ZM23.046,23.144C22.801,23.006 22.451,22.58 22.311,22.341C22.391,22.381 22.473,22.418 22.559,22.451C22.928,22.587 22.911,22.392 23.064,22.525C23.216,22.657 23.2,22.989 23.09,23.163C23.074,23.159 23.059,23.152 23.046,23.144ZM23.713,21.863C23.693,21.87 23.673,21.877 23.653,21.885L23.442,21.983C23.398,22.003 23.361,22.032 23.337,22.066C23.154,21.93 22.929,21.485 22.94,21.275C23.256,21.351 23.787,21.673 23.871,21.796C23.878,21.805 23.883,21.816 23.888,21.826C23.828,21.835 23.77,21.849 23.713,21.867V21.863ZM22.647,21.743C22.775,22.064 22.954,22.11 22.968,22.215C22.696,22.186 22.239,21.99 22.202,21.788C22.187,21.591 22.267,21.397 22.425,21.242C22.544,21.278 22.542,21.48 22.647,21.743ZM23.493,23.422C23.344,23.323 23.502,23.221 23.57,23.006C23.602,22.905 23.598,22.799 23.557,22.7C23.848,22.867 24.292,23.313 24.186,23.449C24.182,23.454 24.177,23.459 24.172,23.463C23.935,23.519 23.598,23.493 23.493,23.422ZM24.153,22.707C23.839,22.402 23.722,22.511 23.642,22.347C23.626,22.307 23.627,22.264 23.643,22.224C23.659,22.184 23.691,22.149 23.734,22.123C23.812,22.097 23.899,22.093 23.981,22.112C24.062,22.131 24.132,22.172 24.178,22.227C24.335,22.475 24.425,22.744 24.442,23.019C24.367,22.938 24.272,22.822 24.153,22.707Z"
-+      android:strokeAlpha="0.2"
-+      android:fillColor="#000000"
-+      android:fillAlpha="0.2"/>
-+  <path
-+      android:pathData="M23.158,21.181C22.375,20.855 21.758,21.143 21.78,21.826C21.802,22.508 22.461,23.324 23.24,23.65C24.019,23.976 24.638,23.688 24.616,23.006C24.595,22.323 23.941,21.507 23.158,21.181ZM22.813,21.26C23.086,21.26 23.767,21.657 23.865,21.802C23.963,21.947 23.716,21.897 23.496,21.963C23.215,22.044 23.36,22.252 23.188,22.202C22.943,22.13 22.538,21.262 22.813,21.26ZM22.397,21.236C22.54,21.252 22.533,21.465 22.64,21.744C22.777,22.1 22.985,22.118 22.962,22.253C22.925,22.448 22.036,22.174 21.984,21.886C21.932,21.599 22.254,21.22 22.397,21.236ZM22.827,23.242C22.519,23.068 22.04,22.433 22.032,22.299C22.024,22.164 22.263,22.344 22.552,22.453C22.921,22.589 22.905,22.394 23.057,22.527C23.282,22.72 23.136,23.417 22.827,23.242ZM24.179,23.45C24.043,23.628 23.424,23.617 23.275,23.518C23.127,23.419 23.286,23.316 23.353,23.101C23.438,22.832 23.226,22.692 23.344,22.64C23.52,22.569 24.318,23.276 24.179,23.455V23.45ZM23.935,22.806C23.621,22.502 23.504,22.611 23.426,22.446C23.309,22.206 23.949,21.945 24.171,22.23C24.393,22.514 24.493,23.143 24.408,23.216C24.324,23.289 24.183,23.044 23.935,22.806Z"
-+      android:fillColor="#E0E0E0"/>
-+  <path
-+      android:pathData="M23.214,22.794C23.454,22.898 23.642,22.806 23.635,22.597C23.623,22.484 23.576,22.375 23.499,22.278C23.422,22.181 23.316,22.099 23.19,22.039C22.95,21.935 22.761,22.028 22.768,22.236C22.78,22.349 22.827,22.459 22.905,22.556C22.982,22.652 23.088,22.734 23.214,22.794Z"
-+      android:fillColor="#455A64"/>
-+  <path
-+      android:pathData="M22.07,24.006L21.746,23.846L23.007,22.322C23.021,22.305 23.038,22.29 23.06,22.279C23.081,22.267 23.105,22.259 23.13,22.254C23.156,22.25 23.182,22.25 23.208,22.254C23.233,22.257 23.258,22.265 23.279,22.276C23.302,22.287 23.321,22.3 23.336,22.316C23.352,22.333 23.362,22.351 23.368,22.371C23.374,22.39 23.374,22.41 23.369,22.43C23.364,22.449 23.354,22.468 23.339,22.485L22.07,24.006Z"
-+      android:fillColor="#263238"/>
-+  <path
-+      android:pathData="M22.437,23.859L21.566,23.478C21.539,23.465 21.508,23.459 21.476,23.459C21.445,23.459 21.414,23.465 21.387,23.478L19.993,24.093C19.966,24.105 19.943,24.123 19.928,24.144C19.912,24.164 19.904,24.188 19.904,24.212V24.434C19.904,24.458 19.912,24.481 19.928,24.502C19.943,24.523 19.966,24.54 19.993,24.552L20.866,24.936C20.893,24.948 20.924,24.954 20.956,24.954C20.987,24.954 21.018,24.948 21.045,24.936L22.437,24.319C22.464,24.307 22.487,24.29 22.503,24.269C22.519,24.248 22.527,24.225 22.527,24.201V23.978C22.527,23.954 22.519,23.93 22.503,23.909C22.487,23.888 22.464,23.871 22.437,23.859Z"
-+      android:fillColor="#37474F"/>
-+  <path
-+      android:pathData="M20.958,23.668L19.995,24.093C19.968,24.105 19.945,24.122 19.93,24.143C19.914,24.164 19.906,24.188 19.906,24.212V24.433C19.906,24.457 19.914,24.481 19.93,24.502C19.945,24.523 19.968,24.54 19.995,24.552L20.868,24.935C20.895,24.947 20.926,24.953 20.958,24.953V23.668Z"
-+      android:fillColor="#263238"/>
-+  <path
-+      android:pathData="M21.598,24.311L22.505,23.91C22.489,23.889 22.467,23.871 22.439,23.859L21.568,23.478C21.541,23.465 21.51,23.459 21.479,23.459C21.447,23.459 21.417,23.465 21.389,23.478L19.995,24.093C19.968,24.105 19.945,24.122 19.93,24.143L20.875,24.56C20.9,24.571 20.929,24.577 20.958,24.577C20.987,24.577 21.016,24.571 21.041,24.56L21.598,24.313"
-+      android:fillColor="#455A64"/>
-+  <path
-+      android:pathData="M22.271,24.324L21.262,24.769V24.532L22.271,24.087V24.324Z"
-+      android:fillColor="#E97001"/>
-+  <path
-+      android:pathData="M32.12,9.162L31.775,8.708L33.23,8.065C33.257,8.055 33.288,8.051 33.319,8.053C33.349,8.055 33.379,8.063 33.404,8.077C33.475,8.112 33.534,8.16 33.576,8.216C33.618,8.272 33.642,8.334 33.646,8.399C33.65,8.421 33.645,8.444 33.633,8.465C33.621,8.486 33.602,8.504 33.578,8.517L32.12,9.162Z"
-+      android:fillColor="#455A64"/>
-+  <path
-+      android:pathData="M32.193,9.04C32.193,9.158 32.084,9.206 31.949,9.144C31.879,9.108 31.821,9.061 31.779,9.005C31.737,8.949 31.712,8.886 31.707,8.822C31.707,8.703 31.816,8.655 31.949,8.718C32.02,8.753 32.079,8.801 32.122,8.856C32.164,8.912 32.189,8.975 32.193,9.04Z"
-+      android:fillColor="#37474F"/>
-+  <path
-+      android:pathData="M32.059,8.975C32.06,8.991 32.053,9.008 32.04,9.021L32.003,9.037L30.096,9.876C29.987,9.925 29.897,9.994 29.834,10.077C29.771,10.161 29.738,10.255 29.738,10.351C29.738,10.491 29.69,10.627 29.599,10.748C29.508,10.869 29.377,10.969 29.219,11.039L27.903,11.621L27.75,11.406L29.067,10.824C29.175,10.776 29.265,10.707 29.328,10.624C29.391,10.541 29.424,10.447 29.424,10.351C29.424,10.212 29.472,10.075 29.564,9.954C29.655,9.833 29.786,9.732 29.944,9.662L31.85,8.82L31.869,8.811C31.882,8.808 31.894,8.808 31.907,8.81C31.919,8.811 31.931,8.815 31.941,8.82C31.976,8.837 32.004,8.86 32.024,8.887C32.044,8.914 32.056,8.944 32.059,8.975Z"
-+      android:fillColor="#E0E0E0"/>
-+  <path
-+      android:pathData="M32.057,8.976C32.058,8.992 32.051,9.009 32.038,9.022L32.001,9.038L30.094,9.877C29.986,9.926 29.895,9.995 29.832,10.078C29.77,10.162 29.736,10.256 29.736,10.352C29.736,10.492 29.688,10.628 29.597,10.749C29.506,10.87 29.375,10.97 29.217,11.04L27.901,11.622L27.748,11.407L29.065,10.825C29.173,10.777 29.264,10.708 29.326,10.625C29.389,10.542 29.422,10.448 29.422,10.352C29.422,10.213 29.47,10.075 29.562,9.955C29.653,9.834 29.784,9.733 29.942,9.663L31.848,8.821L31.867,8.812C31.879,8.809 31.892,8.809 31.905,8.811C31.917,8.812 31.929,8.816 31.94,8.821C31.973,8.838 32.002,8.861 32.022,8.888C32.042,8.915 32.054,8.945 32.057,8.976Z"
-+      android:strokeAlpha="0.4"
-+      android:fillColor="#000000"
-+      android:fillAlpha="0.4"/>
-+  <path
-+      android:pathData="M28.875,11.321C28.868,11.276 28.846,11.233 28.81,11.196C28.775,11.16 28.728,11.131 28.674,11.112L27.824,10.738L26.947,11.126V11.513L27.796,11.888C27.935,11.944 28.09,11.975 28.247,11.977C28.405,11.979 28.561,11.953 28.703,11.901C28.752,11.884 28.794,11.857 28.824,11.822C28.855,11.788 28.872,11.748 28.874,11.707C28.874,11.707 28.88,11.391 28.875,11.321Z"
-+      android:fillColor="#37474F"/>
-+  <path
-+      android:pathData="M27.824,10.738L28.674,11.112C28.931,11.227 28.946,11.406 28.703,11.513C28.561,11.565 28.404,11.591 28.247,11.589C28.089,11.587 27.935,11.556 27.796,11.5L26.947,11.126L27.824,10.738Z"
-+      android:fillColor="#455A64"/>
-+  <path
-+      android:pathData="M27.7,11.671C27.701,11.689 27.693,11.707 27.677,11.721L27.654,11.731L26.591,12.201C26.525,12.238 26.447,12.261 26.365,12.267C26.283,12.273 26.201,12.26 26.127,12.232C26.028,12.188 25.91,12.085 25.91,11.839C25.91,11.713 25.87,11.669 25.853,11.661C25.837,11.654 25.791,11.661 25.717,11.694L22.646,13.047L22.484,12.833L25.555,11.479C25.621,11.442 25.7,11.419 25.781,11.413C25.864,11.408 25.946,11.42 26.02,11.448C26.119,11.491 26.239,11.596 26.239,11.84C26.239,11.967 26.278,12.011 26.293,12.019C26.308,12.026 26.356,12.019 26.429,11.986L27.498,11.514L27.513,11.508C27.526,11.505 27.539,11.504 27.551,11.506C27.564,11.507 27.576,11.511 27.587,11.517C27.62,11.534 27.648,11.557 27.667,11.583C27.687,11.61 27.698,11.64 27.7,11.671Z"
-+      android:fillColor="#E0E0E0"/>
-+  <path
-+      android:pathData="M27.698,11.671C27.699,11.689 27.691,11.707 27.675,11.721L27.652,11.731L26.59,12.201C26.524,12.238 26.445,12.261 26.363,12.267C26.281,12.273 26.199,12.26 26.125,12.232C26.026,12.188 25.909,12.085 25.909,11.839C25.909,11.713 25.868,11.669 25.851,11.661C25.835,11.654 25.789,11.661 25.715,11.694L22.645,13.047L22.482,12.833L25.553,11.479C25.619,11.442 25.698,11.419 25.78,11.413C25.861,11.408 25.944,11.42 26.017,11.448C26.117,11.491 26.237,11.596 26.237,11.84C26.237,11.967 26.276,12.011 26.291,12.019C26.306,12.026 26.354,12.019 26.427,11.986L27.496,11.514L27.511,11.508C27.524,11.505 27.537,11.504 27.549,11.506C27.562,11.507 27.574,11.511 27.585,11.517C27.618,11.534 27.646,11.557 27.665,11.583C27.685,11.61 27.696,11.64 27.698,11.671Z"
-+      android:strokeAlpha="0.4"
-+      android:fillColor="#000000"
-+      android:fillAlpha="0.4"/>
-+  <path
-+      android:pathData="M22.347,13.345L22.002,12.891L23.456,12.249C23.484,12.238 23.515,12.234 23.545,12.236C23.576,12.238 23.606,12.246 23.631,12.26C23.701,12.296 23.759,12.343 23.801,12.399C23.843,12.455 23.868,12.518 23.873,12.582C23.876,12.604 23.871,12.627 23.859,12.648C23.847,12.668 23.829,12.686 23.805,12.7L22.347,13.345Z"
-+      android:fillColor="#455A64"/>
-+  <path
-+      android:pathData="M22.418,13.225C22.418,13.344 22.311,13.392 22.176,13.329C22.106,13.294 22.047,13.246 22.005,13.19C21.963,13.134 21.939,13.072 21.934,13.007C21.934,12.89 22.042,12.841 22.176,12.903C22.247,12.938 22.306,12.986 22.348,13.042C22.39,13.098 22.414,13.161 22.418,13.225Z"
-+      android:fillColor="#263238"/>
-+</vector>
-Index: app/src/main/java/com/example/cyclistance/feature_user_profile/presentation/UserProfileViewModel.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_user_profile/presentation/UserProfileViewModel.kt b/app/src/main/java/com/example/cyclistance/feature_user_profile/presentation/UserProfileViewModel.kt
-new file mode 100644
---- /dev/null	(date 1693216909771)
-+++ b/app/src/main/java/com/example/cyclistance/feature_user_profile/presentation/UserProfileViewModel.kt	(date 1693216909771)
-@@ -0,0 +1,6 @@
-+package com.example.cyclistance.feature_user_profile.presentation
-+
-+import androidx.lifecycle.ViewModel
-+
-+class UserProfileViewModel:ViewModel() {
-+}
-\ No newline at end of file
-Index: app/src/main/java/com/example/cyclistance/feature_user_profile/presentation/state/UserProfileState.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_user_profile/presentation/state/UserProfileState.kt b/app/src/main/java/com/example/cyclistance/feature_user_profile/presentation/state/UserProfileState.kt
-new file mode 100644
---- /dev/null	(date 1693216969357)
-+++ b/app/src/main/java/com/example/cyclistance/feature_user_profile/presentation/state/UserProfileState.kt	(date 1693216969357)
-@@ -0,0 +1,13 @@
-+package com.example.cyclistance.feature_user_profile.presentation.state
-+
-+import android.os.Parcelable
-+import com.example.cyclistance.core.utils.annotations.StableState
-+import com.example.cyclistance.feature_user_profile.domain.model.UserProfileModel
-+import kotlinx.parcelize.Parcelize
-+
-+
-+@StableState
-+@Parcelize
-+data class UserProfileState(
-+    val userProfileModel: UserProfileModel
-+):Parcelable
Index: .idea/shelf/Experiment_removing_fullscreen_dialog/shelved.patch
===================================================================
diff --git a/.idea/shelf/Experiment_removing_fullscreen_dialog/shelved.patch b/.idea/shelf/Experiment_removing_fullscreen_dialog/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Experiment_removing_fullscreen_dialog/shelved.patch	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
+++ /dev/null	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
@@ -1,769 +0,0 @@
-Index: app/src/main/java/com/example/cyclistance/navigation/nav_graph/MessagingGraph.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.cyclistance.navigation.nav_graph\n\nimport androidx.compose.foundation.layout.PaddingValues\nimport androidx.navigation.NavController\nimport androidx.navigation.NavGraphBuilder\nimport androidx.navigation.compose.composable\nimport androidx.navigation.navigation\nimport com.example.cyclistance.feature_messaging.presentation.messaging.MessagingScreen\nimport com.example.cyclistance.navigation.Screens\n\nfun NavGraphBuilder.messagingGraph(\n    navController: NavController,\n    paddingValues: PaddingValues) {\n    navigation(\n        startDestination = Screens.Messaging.MessagingScreen.screenRoute,\n        route = Screens.Messaging.ROUTE\n    ) {\n        composable(Screens.Messaging.MessagingScreen.screenRoute) {\n            MessagingScreen(\n                navController = navController,\n                paddingValues = paddingValues\n            )\n        }\n    }\n}\n\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/navigation/nav_graph/MessagingGraph.kt b/app/src/main/java/com/example/cyclistance/navigation/nav_graph/MessagingGraph.kt
---- a/app/src/main/java/com/example/cyclistance/navigation/nav_graph/MessagingGraph.kt	(revision 0aec7a69459300ef77fc102f75cacacafda2a24d)
-+++ b/app/src/main/java/com/example/cyclistance/navigation/nav_graph/MessagingGraph.kt	(date 1690186491284)
-@@ -5,7 +5,7 @@
- import androidx.navigation.NavGraphBuilder
- import androidx.navigation.compose.composable
- import androidx.navigation.navigation
--import com.example.cyclistance.feature_messaging.presentation.messaging.MessagingScreen
-+import com.example.cyclistance.feature_messaging.presentation.chats.MessagingScreen
- import com.example.cyclistance.navigation.Screens
- 
- fun NavGraphBuilder.messagingGraph(
-Index: app/src/main/java/com/example/cyclistance/feature_messaging/presentation/conversation/MessagingConversationScreen.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/conversation/MessagingConversationScreen.kt b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/conversation/MessagingConversationScreen.kt
-new file mode 100644
---- /dev/null	(date 1690187314713)
-+++ b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/conversation/MessagingConversationScreen.kt	(date 1690187314713)
-@@ -0,0 +1,104 @@
-+package com.example.cyclistance.feature_messaging.presentation.conversation
-+
-+import androidx.activity.compose.BackHandler
-+import androidx.compose.foundation.layout.PaddingValues
-+import androidx.compose.foundation.layout.fillMaxSize
-+import androidx.compose.runtime.Composable
-+import androidx.compose.runtime.getValue
-+import androidx.compose.runtime.mutableStateOf
-+import androidx.compose.runtime.remember
-+import androidx.compose.runtime.saveable.rememberSaveable
-+import androidx.compose.runtime.setValue
-+import androidx.compose.ui.Modifier
-+import androidx.compose.ui.text.input.TextFieldValue
-+import androidx.compose.ui.tooling.preview.Preview
-+import androidx.navigation.NavController
-+import com.example.cyclistance.feature_messaging.domain.model.ui.list_messages.ChatItemModel
-+import com.example.cyclistance.feature_messaging.presentation.chats.event.MessagingEvent
-+import com.example.cyclistance.feature_messaging.presentation.conversation.components.MessagingConversationContent
-+import com.example.cyclistance.feature_messaging.presentation.conversation.state.ConversationUiState
-+
-+@Composable
-+fun MessagingConversationScreen(
-+    navController: NavController,
-+    paddingValues: PaddingValues
-+) {
-+
-+
-+    var uiState by rememberSaveable { mutableStateOf(ConversationUiState()) }
-+
-+
-+    val onSelectedConversation = remember {
-+        { _messageItem: ChatItemModel ->
-+            uiState = uiState.copy(
-+                selectedConversationItem = _messageItem
-+            )
-+            viewModel.onEvent(event = MessagingEvent.AddMessageListener(_messageItem.userId))
-+        }
-+    }
-+
-+    val onDismissConversationDialog = remember {
-+        {
-+            uiState = uiState.copy(
-+                selectedConversationItem = null
-+            )
-+            viewModel.onEvent(event = MessagingEvent.RemoveMessageListener)
-+        }
-+    }
-+
-+    val onToggleExpand = remember {
-+        {
-+            uiState = uiState.copy(
-+                messageAreaExpanded = !uiState.messageAreaExpanded
-+            )
-+        }
-+    }
-+    val onChangeValueMessage = remember<(TextFieldValue) -> Unit> {
-+        {
-+            uiState = uiState.copy(
-+                message = it
-+            )
-+        }
-+    }
-+
-+    val onClickChatItem = remember {
-+        { index: Int ->
-+            uiState = uiState.copy(
-+                chatItemSelectedIndex = if (uiState.chatItemSelectedIndex == index) {
-+                    -1
-+                } else {
-+                    index
-+                })
-+        }
-+    }
-+
-+    val resetSelectedIndex = remember {
-+        {
-+            uiState = uiState.copy(
-+                chatItemSelectedIndex = -1
-+            )
-+        }
-+    }
-+
-+    BackHandler(enabled = true, onBack = {
-+        if (uiState.messageAreaExpanded) {
-+            onToggleExpand()
-+        } else {
-+            navController.popBackStack()
-+        }
-+    })
-+
-+
-+    MessagingConversationContent(
-+        modifier = Modifier.fillMaxSize(),
-+        uiState = uiState,
-+        state = state,
-+        event = event
-+    )
-+}
-+
-+@Preview
-+@Composable
-+private fun PreviewMessagingConversationScreen() {
-+    MessagingConversationScreen()
-+}
-\ No newline at end of file
-Index: app/src/main/java/com/example/cyclistance/feature_messaging/presentation/conversation/event/ConversationUiEvent.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/conversation/event/ConversationUiEvent.kt b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/conversation/event/ConversationUiEvent.kt
-new file mode 100644
---- /dev/null	(date 1690187314453)
-+++ b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/conversation/event/ConversationUiEvent.kt	(date 1690187314453)
-@@ -0,0 +1,3 @@
-+package com.example.cyclistance.feature_messaging.presentation.conversation.event
-+
-+class ConversationUiEvent
-\ No newline at end of file
-Index: app/src/main/java/com/example/cyclistance/feature_messaging/presentation/conversation/state/ConversationUiState.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/conversation/state/ConversationUiState.kt b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/conversation/state/ConversationUiState.kt
-new file mode 100644
---- /dev/null	(date 1690187314720)
-+++ b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/conversation/state/ConversationUiState.kt	(date 1690187314720)
-@@ -0,0 +1,11 @@
-+package com.example.cyclistance.feature_messaging.presentation.conversation.state
-+
-+import android.os.Parcelable
-+import com.example.cyclistance.core.utils.annotations.StableState
-+import kotlinx.parcelize.Parcelize
-+
-+@Parcelize
-+@StableState
-+data class ConversationUiState(
-+    val chatItemSelectedIndex: Int = -1,
-+) : Parcelable
-\ No newline at end of file
-Index: app/src/main/java/com/example/cyclistance/navigation/components/TopAppBar.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.cyclistance.navigation.components\n\nimport androidx.compose.animation.AnimatedVisibility\nimport androidx.compose.animation.core.tween\nimport androidx.compose.animation.fadeIn\nimport androidx.compose.animation.fadeOut\nimport androidx.compose.material.MaterialTheme\nimport androidx.compose.material.Surface\nimport androidx.compose.material.icons.Icons\nimport androidx.compose.material.icons.filled.ArrowBack\nimport androidx.compose.material.icons.filled.Close\nimport androidx.compose.runtime.Composable\nimport androidx.compose.ui.tooling.preview.Preview\nimport com.example.cyclistance.core.utils.constants.EmergencyCallConstants\nimport com.example.cyclistance.core.utils.constants.NavigationConstants\nimport com.example.cyclistance.navigation.Screens\nimport com.example.cyclistance.theme.CyclistanceTheme\nimport com.example.cyclistance.top_bars.DefaultTopBar\nimport com.example.cyclistance.top_bars.TitleTopAppBar\nimport com.example.cyclistance.top_bars.TopAppBarCreator\n\n@Composable\nfun TopAppBar(\n    onClickArrowBackIcon: () -> Unit = {},\n    onClickMenuIcon: () -> Unit = {},\n    isNavigating: Boolean,\n    route: String?) {\n\n    when (route) {\n        Screens.Mapping.MappingScreen.screenRoute -> {\n            AnimatedVisibility(\n                visible = isNavigating.not(),\n                enter = fadeIn(initialAlpha = 0.4f),\n                exit = fadeOut(animationSpec = tween(durationMillis = 100))) {\n\n                DefaultTopBar(onClickIcon = onClickMenuIcon)\n            }\n        }\n\n        \"${Screens.Mapping.CancellationScreen.screenRoute}/{${NavigationConstants.CANCELLATION_TYPE}}/{${NavigationConstants.TRANSACTION_ID}}/{${NavigationConstants.CLIENT_ID}}\" -> {\n            TopAppBarCreator(\n                icon = Icons.Default.ArrowBack,\n                onClickIcon = onClickArrowBackIcon,\n                topAppBarTitle = {\n                    TitleTopAppBar(title = \"Cancellation Reason\")\n                })\n        }\n\n        Screens.Mapping.ConfirmDetailsScreen.screenRoute + \"?${NavigationConstants.LATITUDE}={${NavigationConstants.LATITUDE}}&${NavigationConstants.LONGITUDE}={${NavigationConstants.LONGITUDE}}\" -> {\n            TopAppBarCreator(\n                icon = Icons.Default.ArrowBack,\n                onClickIcon = onClickArrowBackIcon,\n                topAppBarTitle = {\n                    TitleTopAppBar(\n                        title = \"Confirmation Details\")\n                })\n        }\n\n\n        Screens.Settings.ChangePasswordScreen.screenRoute -> {\n            TopAppBarCreator(\n                icon = Icons.Default.ArrowBack,\n                onClickIcon = onClickArrowBackIcon,\n                topAppBarTitle = {\n                    TitleTopAppBar(title = \"Change Password\")\n                })\n        }\n\n        Screens.Settings.EditProfileScreen.screenRoute -> {\n            TopAppBarCreator(\n                icon = Icons.Default.ArrowBack,\n                onClickIcon = onClickArrowBackIcon,\n                topAppBarTitle = {\n                    TitleTopAppBar(title = \"Edit Profile\")\n                })\n        }\n\n        Screens.Settings.SettingScreen.screenRoute -> {\n            TopAppBarCreator(\n                icon = Icons.Default.ArrowBack,\n                onClickIcon = onClickArrowBackIcon,\n                topAppBarTitle = {\n                    TitleTopAppBar(title = \"Settings\")\n                })\n        }\n\n        Screens.EmergencyCall.EmergencyCallScreen.screenRoute + \"?${EmergencyCallConstants.SHOULD_OPEN_CONTACT_DIALOG}={${EmergencyCallConstants.SHOULD_OPEN_CONTACT_DIALOG}}\" -> {\n\n            TopAppBarCreator(\n                icon = Icons.Default.ArrowBack,\n                onClickIcon = onClickArrowBackIcon,\n                topAppBarTitle = {\n                    TitleTopAppBar(title = \"Emergency Call\")\n                })\n        }\n\n        Screens.Messaging.MessagingScreen.screenRoute -> {\n            TopAppBarCreator(\n                icon = Icons.Default.ArrowBack,\n                onClickIcon = onClickArrowBackIcon,\n                topAppBarTitle = {\n                    TitleTopAppBar(title = \"Chats\")\n                })\n        }\n\n        Screens.RideHistory.RideHistoryScreen.screenRoute -> {\n            TopAppBarCreator(\n                icon = Icons.Default.ArrowBack,\n                onClickIcon = onClickArrowBackIcon,\n                topAppBarTitle = {\n                    TitleTopAppBar(title = \"Ride History\")\n                })\n        }\n\n        Screens.RideHistory.RideHistoryDetailsScreen.screenRoute -> {\n            TopAppBarCreator(\n                icon = Icons.Default.Close,\n                onClickIcon = onClickArrowBackIcon,\n                topAppBarTitle = {\n                    TitleTopAppBar(title = \"Rescue Details\")\n                })\n        }\n\n\n    }\n\n}\n\n\n@Preview\n@Composable\nfun PreviewTopAppBarDark() {\n    CyclistanceTheme(true) {\n        Surface(color = MaterialTheme.colors.background) {\n            TopAppBar(\n                route = Screens.Settings.EditProfileScreen.screenRoute,\n                isNavigating = false)\n        }\n    }\n}\n\n\n@Preview\n@Composable\nfun PreviewTopAppBarLight() {\n    CyclistanceTheme(false) {\n        Surface(color = MaterialTheme.colors.background) {\n            TopAppBar(\n                route = Screens.Settings.EditProfileScreen.screenRoute,\n                isNavigating = false)\n        }\n    }\n}\n\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/navigation/components/TopAppBar.kt b/app/src/main/java/com/example/cyclistance/navigation/components/TopAppBar.kt
---- a/app/src/main/java/com/example/cyclistance/navigation/components/TopAppBar.kt	(revision 0aec7a69459300ef77fc102f75cacacafda2a24d)
-+++ b/app/src/main/java/com/example/cyclistance/navigation/components/TopAppBar.kt	(date 1690185605187)
-@@ -94,14 +94,14 @@
-                 })
-         }
- 
--        Screens.Messaging.MessagingScreen.screenRoute -> {
-+/*        Screens.Messaging.MessagingScreen.screenRoute -> {
-             TopAppBarCreator(
-                 icon = Icons.Default.ArrowBack,
-                 onClickIcon = onClickArrowBackIcon,
-                 topAppBarTitle = {
-                     TitleTopAppBar(title = "Chats")
-                 })
--        }
-+        }*/
- 
-         Screens.RideHistory.RideHistoryScreen.screenRoute -> {
-             TopAppBarCreator(
-Index: app/src/main/java/com/example/cyclistance/feature_messaging/presentation/conversation/state/ConversationState.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/conversation/state/ConversationState.kt b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/conversation/state/ConversationState.kt
-new file mode 100644
---- /dev/null	(date 1690187314723)
-+++ b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/conversation/state/ConversationState.kt	(date 1690187314723)
-@@ -0,0 +1,13 @@
-+package com.example.cyclistance.feature_messaging.presentation.conversation.state
-+
-+import android.os.Parcelable
-+import com.example.cyclistance.core.utils.annotations.StableState
-+import com.example.cyclistance.feature_messaging.domain.model.ui.conversation.ConversationsModel
-+import kotlinx.parcelize.Parcelize
-+
-+
-+@Parcelize
-+@StableState
-+data class ConversationState(
-+    val conversationsModel: ConversationsModel = ConversationsModel(),
-+) : Parcelable
-Index: app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/MessagingViewModel.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/MessagingViewModel.kt b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chats/MessagingViewModel.kt
-rename from app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/MessagingViewModel.kt
-rename to app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chats/MessagingViewModel.kt
---- a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/MessagingViewModel.kt	(revision 0aec7a69459300ef77fc102f75cacacafda2a24d)
-+++ b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chats/MessagingViewModel.kt	(date 1690186491174)
-@@ -1,4 +1,4 @@
--package com.example.cyclistance.feature_messaging.presentation.messaging
-+package com.example.cyclistance.feature_messaging.presentation.chats
- 
- import androidx.lifecycle.SavedStateHandle
- import androidx.lifecycle.ViewModel
-@@ -6,8 +6,8 @@
- import com.example.cyclistance.core.utils.constants.MessagingConstants.MESSAGING_VM_STATE_KEY
- import com.example.cyclistance.feature_messaging.domain.model.SendMessageModel
- import com.example.cyclistance.feature_messaging.domain.use_case.MessagingUseCase
--import com.example.cyclistance.feature_messaging.presentation.messaging.event.MessagingEvent
--import com.example.cyclistance.feature_messaging.presentation.messaging.state.MessagingState
-+import com.example.cyclistance.feature_messaging.presentation.chats.event.MessagingEvent
-+import com.example.cyclistance.feature_messaging.presentation.chats.state.MessagingState
- import dagger.hilt.android.lifecycle.HiltViewModel
- import kotlinx.coroutines.SupervisorJob
- import kotlinx.coroutines.flow.MutableSharedFlow
-Index: app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/event/MessagingUiEvent.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/event/MessagingUiEvent.kt b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chats/event/MessagingUiEvent.kt
-rename from app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/event/MessagingUiEvent.kt
-rename to app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chats/event/MessagingUiEvent.kt
---- a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/event/MessagingUiEvent.kt	(revision 0aec7a69459300ef77fc102f75cacacafda2a24d)
-+++ b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chats/event/MessagingUiEvent.kt	(date 1690186491220)
-@@ -1,4 +1,4 @@
--package com.example.cyclistance.feature_messaging.presentation.messaging.event
-+package com.example.cyclistance.feature_messaging.presentation.chats.event
- 
- import androidx.compose.ui.text.input.TextFieldValue
- import com.example.cyclistance.feature_messaging.domain.model.ui.list_messages.ChatItemModel
-@@ -7,6 +7,7 @@
-     object ToggleMessageArea : MessagingUiEvent()
-     object ResetSelectedIndex : MessagingUiEvent()
-     object DismissConversationDialog : MessagingUiEvent()
-+    object CloseMessagingScreen : MessagingUiEvent()
-     object OnSendMessage : MessagingUiEvent()
-     data class SelectChatItem(val index: Int) : MessagingUiEvent()
-     data class OnChangeMessage(val message: TextFieldValue) : MessagingUiEvent()
-Index: app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/state/MessagingUiState.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/state/MessagingUiState.kt b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chats/state/MessagingUiState.kt
-rename from app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/state/MessagingUiState.kt
-rename to app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chats/state/MessagingUiState.kt
---- a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/state/MessagingUiState.kt	(revision 0aec7a69459300ef77fc102f75cacacafda2a24d)
-+++ b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chats/state/MessagingUiState.kt	(date 1690187050667)
-@@ -1,18 +1,11 @@
--package com.example.cyclistance.feature_messaging.presentation.messaging.state
-+package com.example.cyclistance.feature_messaging.presentation.chats.state
- 
--import android.os.Parcelable
--import androidx.compose.ui.text.input.TextFieldValue
--import com.example.cyclistance.core.utils.annotations.StableState
--import com.example.cyclistance.feature_messaging.domain.model.ui.list_messages.ChatItemModel
--import kotlinx.parcelize.Parcelize
--import kotlinx.parcelize.RawValue
- 
--
-+/*
- @Parcelize
- @StableState
- data class MessagingUiState(
--    val messageAreaExpanded: Boolean = false,
--    val chatItemSelectedIndex: Int = -1,
--    val selectedConversationItem: ChatItemModel? = null,
--    val message: @RawValue TextFieldValue = TextFieldValue("")
-+    val placeholder: String = ""
-+
- ) : Parcelable
-+*/
-Index: app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/event/MessagingEvent.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/event/MessagingEvent.kt b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chats/event/MessagingEvent.kt
-rename from app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/event/MessagingEvent.kt
-rename to app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chats/event/MessagingEvent.kt
---- a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/event/MessagingEvent.kt	(revision 0aec7a69459300ef77fc102f75cacacafda2a24d)
-+++ b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chats/event/MessagingEvent.kt	(date 1690186491250)
-@@ -1,4 +1,4 @@
--package com.example.cyclistance.feature_messaging.presentation.messaging.event
-+package com.example.cyclistance.feature_messaging.presentation.chats.event
- 
- import com.example.cyclistance.feature_messaging.domain.model.SendMessageModel
- 
-Index: app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/state/MessagingState.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/state/MessagingState.kt b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chats/state/MessagingState.kt
-rename from app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/state/MessagingState.kt
-rename to app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chats/state/MessagingState.kt
---- a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/state/MessagingState.kt	(revision 0aec7a69459300ef77fc102f75cacacafda2a24d)
-+++ b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chats/state/MessagingState.kt	(date 1690186749235)
-@@ -1,15 +1,14 @@
--package com.example.cyclistance.feature_messaging.presentation.messaging.state
-+package com.example.cyclistance.feature_messaging.presentation.chats.state
- 
- import android.os.Parcelable
- import com.example.cyclistance.core.utils.annotations.StableState
--import com.example.cyclistance.feature_messaging.domain.model.ui.conversation.ConversationsModel
- import com.example.cyclistance.feature_messaging.domain.model.ui.list_messages.ChatsModel
- import kotlinx.parcelize.Parcelize
- 
- @Parcelize
- @StableState
- data class MessagingState(
--    val conversationsModel: ConversationsModel = ConversationsModel(),
-+
-     val chatsModel: ChatsModel = ChatsModel(),
-     val lastReceiverId: String = ""
- 
-Index: app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/MessagingScreen.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/MessagingScreen.kt b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chats/MessagingScreen.kt
-rename from app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/MessagingScreen.kt
-rename to app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chats/MessagingScreen.kt
---- a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/MessagingScreen.kt	(revision 0aec7a69459300ef77fc102f75cacacafda2a24d)
-+++ b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chats/MessagingScreen.kt	(date 1690187314700)
-@@ -1,26 +1,20 @@
--package com.example.cyclistance.feature_messaging.presentation.messaging
-+package com.example.cyclistance.feature_messaging.presentation.chats
- 
--import androidx.activity.compose.BackHandler
- import androidx.compose.foundation.layout.PaddingValues
- import androidx.compose.foundation.layout.padding
- import androidx.compose.runtime.Composable
- import androidx.compose.runtime.getValue
--import androidx.compose.runtime.mutableStateOf
- import androidx.compose.runtime.remember
--import androidx.compose.runtime.saveable.rememberSaveable
--import androidx.compose.runtime.setValue
- import androidx.compose.ui.Modifier
- import androidx.compose.ui.text.input.TextFieldValue
- import androidx.hilt.navigation.compose.hiltViewModel
- import androidx.lifecycle.compose.collectAsStateWithLifecycle
- import androidx.navigation.NavController
- import com.example.cyclistance.feature_messaging.domain.model.SendMessageModel
--import com.example.cyclistance.feature_messaging.domain.model.ui.list_messages.ChatItemModel
--import com.example.cyclistance.feature_messaging.presentation.messaging.components.messaging_list.MessagingScreenContent
--import com.example.cyclistance.feature_messaging.presentation.messaging.components.messaging_list.fakeMessages
--import com.example.cyclistance.feature_messaging.presentation.messaging.event.MessagingEvent
--import com.example.cyclistance.feature_messaging.presentation.messaging.event.MessagingUiEvent
--import com.example.cyclistance.feature_messaging.presentation.messaging.state.MessagingUiState
-+import com.example.cyclistance.feature_messaging.presentation.chats.components.MessagingScreenContent
-+import com.example.cyclistance.feature_messaging.presentation.chats.components.fakeMessages
-+import com.example.cyclistance.feature_messaging.presentation.chats.event.MessagingEvent
-+import com.example.cyclistance.feature_messaging.presentation.chats.event.MessagingUiEvent
- 
- @Composable
- fun MessagingScreen(
-@@ -28,60 +22,8 @@
-     navController: NavController,
-     paddingValues: PaddingValues) {
- 
--    var uiState by rememberSaveable { mutableStateOf(MessagingUiState()) }
-     val state by viewModel.state.collectAsStateWithLifecycle()
- 
--    val onSelectedConversation = remember {
--        { _messageItem: ChatItemModel ->
--            uiState = uiState.copy(
--                selectedConversationItem = _messageItem
--            )
--            viewModel.onEvent(event = MessagingEvent.AddMessageListener(_messageItem.userId))
--        }
--    }
--
--    val onDismissConversationDialog = remember {
--        {
--            uiState = uiState.copy(
--                selectedConversationItem = null
--            )
--            viewModel.onEvent(event = MessagingEvent.RemoveMessageListener)
--        }
--    }
--
--    val onToggleExpand = remember {
--        {
--            uiState = uiState.copy(
--                messageAreaExpanded = !uiState.messageAreaExpanded
--            )
--        }
--    }
--    val onChangeValueMessage = remember<(TextFieldValue) -> Unit> {
--        {
--            uiState = uiState.copy(
--                message = it
--            )
--        }
--    }
--
--    val onClickChatItem = remember {
--        { index: Int ->
--            uiState = uiState.copy(
--                chatItemSelectedIndex = if (uiState.chatItemSelectedIndex == index) {
--                    -1
--                } else {
--                    index
--                })
--        }
--    }
--
--    val resetSelectedIndex = remember {
--        {
--            uiState = uiState.copy(
--                chatItemSelectedIndex = -1
--            )
--        }
--    }
- 
-     val onSendMessage = remember {
-         {
-@@ -103,14 +45,13 @@
-         }
-     }
- 
--
--    BackHandler(enabled = true, onBack = {
--        if (uiState.messageAreaExpanded) {
--            onToggleExpand()
--        } else {
-+    val closeMessagingScreen = remember {
-+        {
-             navController.popBackStack()
-         }
--    })
-+    }
-+
-+
- 
- 
- 
-@@ -126,6 +67,7 @@
-                 is MessagingUiEvent.OnSelectedConversation -> onSelectedConversation(event.messageItem)
-                 is MessagingUiEvent.DismissConversationDialog -> onDismissConversationDialog()
-                 is MessagingUiEvent.OnSendMessage -> onSendMessage()
-+                is MessagingUiEvent.CloseMessagingScreen -> closeMessagingScreen()
-             }
-         },
-         modifier = Modifier.padding(paddingValues)
-Index: app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/components/conversation/ConversationContent.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/components/conversation/ConversationContent.kt b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/conversation/components/ConversationContent.kt
-rename from app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/components/conversation/ConversationContent.kt
-rename to app/src/main/java/com/example/cyclistance/feature_messaging/presentation/conversation/components/ConversationContent.kt
---- a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/components/conversation/ConversationContent.kt	(revision 0aec7a69459300ef77fc102f75cacacafda2a24d)
-+++ b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/conversation/components/ConversationContent.kt	(date 1690186555944)
-@@ -1,4 +1,4 @@
--package com.example.cyclistance.feature_messaging.presentation.messaging.components.conversation
-+package com.example.cyclistance.feature_messaging.presentation.conversation.components
- 
- 
- import androidx.compose.animation.AnimatedVisibility
-@@ -58,9 +58,9 @@
- import com.example.cyclistance.feature_messaging.domain.model.ui.conversation.ConversationsModel
- import com.example.cyclistance.feature_messaging.domain.model.ui.conversation.MessageDuration
- import com.example.cyclistance.feature_messaging.domain.model.ui.list_messages.ChatItemModel
--import com.example.cyclistance.feature_messaging.presentation.messaging.event.MessagingUiEvent
--import com.example.cyclistance.feature_messaging.presentation.messaging.state.MessagingState
--import com.example.cyclistance.feature_messaging.presentation.messaging.state.MessagingUiState
-+import com.example.cyclistance.feature_messaging.presentation.chats.event.MessagingUiEvent
-+import com.example.cyclistance.feature_messaging.presentation.chats.state.MessagingState
-+import com.example.cyclistance.feature_messaging.presentation.chats.state.MessagingUiState
- import com.example.cyclistance.navigation.IsDarkTheme
- import com.example.cyclistance.theme.Black500
- import com.example.cyclistance.theme.CyclistanceTheme
-Index: app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/components/conversation/ConversationTextArea.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/components/conversation/ConversationTextArea.kt b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/conversation/components/ConversationTextArea.kt
-rename from app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/components/conversation/ConversationTextArea.kt
-rename to app/src/main/java/com/example/cyclistance/feature_messaging/presentation/conversation/components/ConversationTextArea.kt
---- a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/components/conversation/ConversationTextArea.kt	(revision 0aec7a69459300ef77fc102f75cacacafda2a24d)
-+++ b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/conversation/components/ConversationTextArea.kt	(date 1690186555951)
-@@ -1,4 +1,4 @@
--package com.example.cyclistance.feature_messaging.presentation.messaging.components.conversation
-+package com.example.cyclistance.feature_messaging.presentation.conversation.components
- 
- import androidx.compose.animation.animateContentSize
- import androidx.compose.animation.core.Spring
-Index: app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/components/conversation/ConversationScrollToBottomButton.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/components/conversation/ConversationScrollToBottomButton.kt b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/conversation/components/ConversationScrollToBottomButton.kt
-rename from app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/components/conversation/ConversationScrollToBottomButton.kt
-rename to app/src/main/java/com/example/cyclistance/feature_messaging/presentation/conversation/components/ConversationScrollToBottomButton.kt
---- a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/components/conversation/ConversationScrollToBottomButton.kt	(revision 0aec7a69459300ef77fc102f75cacacafda2a24d)
-+++ b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/conversation/components/ConversationScrollToBottomButton.kt	(date 1690186555961)
-@@ -1,4 +1,4 @@
--package com.example.cyclistance.feature_messaging.presentation.messaging.components.conversation
-+package com.example.cyclistance.feature_messaging.presentation.conversation.components
- 
- import androidx.compose.animation.AnimatedVisibility
- import androidx.compose.animation.scaleIn
-Index: app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/components/conversation/ConversationTimeStamp.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/components/conversation/ConversationTimeStamp.kt b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/conversation/components/ConversationTimeStamp.kt
-rename from app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/components/conversation/ConversationTimeStamp.kt
-rename to app/src/main/java/com/example/cyclistance/feature_messaging/presentation/conversation/components/ConversationTimeStamp.kt
---- a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/components/conversation/ConversationTimeStamp.kt	(revision 0aec7a69459300ef77fc102f75cacacafda2a24d)
-+++ b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/conversation/components/ConversationTimeStamp.kt	(date 1690186555954)
-@@ -1,4 +1,4 @@
--package com.example.cyclistance.feature_messaging.presentation.messaging.components.conversation
-+package com.example.cyclistance.feature_messaging.presentation.conversation.components
- 
- import androidx.compose.material.MaterialTheme
- import androidx.compose.material.Text
-Index: app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/components/conversation/ConversationChatItem.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/components/conversation/ConversationChatItem.kt b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/conversation/components/ConversationChatItem.kt
-rename from app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/components/conversation/ConversationChatItem.kt
-rename to app/src/main/java/com/example/cyclistance/feature_messaging/presentation/conversation/components/ConversationChatItem.kt
---- a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/components/conversation/ConversationChatItem.kt	(revision 0aec7a69459300ef77fc102f75cacacafda2a24d)
-+++ b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/conversation/components/ConversationChatItem.kt	(date 1690186555967)
-@@ -1,4 +1,4 @@
--package com.example.cyclistance.feature_messaging.presentation.messaging.components.conversation
-+package com.example.cyclistance.feature_messaging.presentation.conversation.components
- 
- import androidx.compose.animation.AnimatedVisibility
- import androidx.compose.animation.core.tween
-Index: app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/components/messaging_list/MessagingSearchBar.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/components/messaging_list/MessagingSearchBar.kt b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chats/components/MessagingSearchBar.kt
-rename from app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/components/messaging_list/MessagingSearchBar.kt
-rename to app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chats/components/MessagingSearchBar.kt
---- a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/components/messaging_list/MessagingSearchBar.kt	(revision 0aec7a69459300ef77fc102f75cacacafda2a24d)
-+++ b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chats/components/MessagingSearchBar.kt	(date 1690186749265)
-@@ -1,4 +1,4 @@
--package com.example.cyclistance.feature_messaging.presentation.messaging.components.messaging_list
-+package com.example.cyclistance.feature_messaging.presentation.chats.components
- 
- import androidx.compose.animation.AnimatedVisibility
- import androidx.compose.animation.core.tween
-Index: app/src/main/java/com/example/cyclistance/feature_messaging/presentation/conversation/event/ConversationEvent.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/conversation/event/ConversationEvent.kt b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/conversation/event/ConversationEvent.kt
-new file mode 100644
---- /dev/null	(date 1690186675425)
-+++ b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/conversation/event/ConversationEvent.kt	(date 1690186675425)
-@@ -0,0 +1,3 @@
-+package com.example.cyclistance.feature_messaging.presentation.conversation.event
-+
-+sealed class ConversationEvent
-Index: app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/components/messaging_list/MessagingScreenContent.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/components/messaging_list/MessagingScreenContent.kt b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chats/components/MessagingScreenContent.kt
-rename from app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/components/messaging_list/MessagingScreenContent.kt
-rename to app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chats/components/MessagingScreenContent.kt
---- a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/components/messaging_list/MessagingScreenContent.kt	(revision 0aec7a69459300ef77fc102f75cacacafda2a24d)
-+++ b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chats/components/MessagingScreenContent.kt	(date 1690187314707)
-@@ -1,4 +1,4 @@
--package com.example.cyclistance.feature_messaging.presentation.messaging.components.messaging_list
-+package com.example.cyclistance.feature_messaging.presentation.chats.components
- 
- import androidx.compose.foundation.layout.Arrangement
- import androidx.compose.foundation.layout.Box
-@@ -16,6 +16,8 @@
- import androidx.compose.material.MaterialTheme
- import androidx.compose.material.Surface
- import androidx.compose.material.Text
-+import androidx.compose.material.icons.Icons
-+import androidx.compose.material.icons.filled.ArrowBack
- import androidx.compose.runtime.Composable
- import androidx.compose.runtime.remember
- import androidx.compose.ui.Alignment
-@@ -29,12 +31,14 @@
- import com.example.cyclistance.R
- import com.example.cyclistance.feature_messaging.domain.model.ui.list_messages.ChatItemModel
- import com.example.cyclistance.feature_messaging.domain.model.ui.list_messages.ChatsModel
--import com.example.cyclistance.feature_messaging.presentation.messaging.components.conversation.MessagingConversationContent
--import com.example.cyclistance.feature_messaging.presentation.messaging.event.MessagingUiEvent
--import com.example.cyclistance.feature_messaging.presentation.messaging.state.MessagingState
--import com.example.cyclistance.feature_messaging.presentation.messaging.state.MessagingUiState
-+import com.example.cyclistance.feature_messaging.presentation.chats.event.MessagingUiEvent
-+import com.example.cyclistance.feature_messaging.presentation.chats.state.MessagingState
-+import com.example.cyclistance.feature_messaging.presentation.chats.state.MessagingUiState
-+import com.example.cyclistance.feature_messaging.presentation.conversation.components.MessagingConversationContent
- import com.example.cyclistance.theme.Black500
- import com.example.cyclistance.theme.CyclistanceTheme
-+import com.example.cyclistance.top_bars.TitleTopAppBar
-+import com.example.cyclistance.top_bars.TopAppBarCreator
- import java.util.Date
- 
- @Composable
-@@ -60,56 +64,66 @@
-             )
-         }
- 
--        if (messageAvailable && !shouldShowConversationDialog) {
-+        Column(modifier = Modifier.fillMaxSize()) {
-+
-+            TopAppBarCreator(
-+                icon = Icons.Default.ArrowBack,
-+                onClickIcon = { event(MessagingUiEvent.CloseMessagingScreen) },
-+                topAppBarTitle = {
-+                    TitleTopAppBar(title = "Chats")
-+                })
-+
-+            if (messageAvailable && !shouldShowConversationDialog) {
- 
--            Box(contentAlignment = Alignment.TopCenter, modifier = Modifier.fillMaxWidth()) {
--                Column(
--                    modifier = Modifier
--                        .fillMaxWidth(),
--                    horizontalAlignment = Alignment.Start,
--                    verticalArrangement = Arrangement.SpaceEvenly) {
-+                Box(contentAlignment = Alignment.TopCenter, modifier = Modifier.fillMaxWidth()) {
-+                    Column(
-+                        modifier = Modifier
-+                            .fillMaxWidth(),
-+                        horizontalAlignment = Alignment.Start,
-+                        verticalArrangement = Arrangement.SpaceEvenly) {
- 
--                    MessagingSearchBar(
--                        modifier = Modifier
--                            .fillMaxWidth()
--                            .padding(top = 12.dp)
--                            .padding(horizontal = 8.dp),
-+                        MessagingSearchBar(
-+                            modifier = Modifier
-+                                .fillMaxWidth()
-+                                .padding(top = 12.dp)
-+                                .padding(horizontal = 8.dp),
- 
--                        value = "",
--                        onValueChange = {},
--                        onClickClearSearch = {})
-+                            value = "",
-+                            onValueChange = {},
-+                            onClickClearSearch = {})
- 
--                    Text(
--                        text = "Recent Messages",
--                        style = MaterialTheme.typography.body2.copy(
--                            letterSpacing = TextUnit(
--                                2f,
--                                type = TextUnitType.Sp)),
--                        modifier = Modifier.padding(horizontal = 8.dp, vertical = 12.dp),
--                    )
-+                        Text(
-+                            text = "Recent Messages",
-+                            style = MaterialTheme.typography.body2.copy(
-+                                letterSpacing = TextUnit(
-+                                    2f,
-+                                    type = TextUnitType.Sp)),
-+                            modifier = Modifier.padding(horizontal = 8.dp, vertical = 12.dp),
-+                        )
- 
--                    MessagesSection(chatsModel = state.chatsModel, onClick = {
--                        event(MessagingUiEvent.OnSelectedConversation(it))
--                    })
--                }
--            }
--        }
--        if (!messageAvailable && !shouldShowConversationDialog) {
-+                        MessagesSection(chatsModel = state.chatsModel, onClick = {
-+                            event(MessagingUiEvent.OnSelectedConversation(it))
-+                        })
-+                    }
-+                }
-+            }
-+            if (!messageAvailable && !shouldShowConversationDialog) {
- 
--            Box(modifier = modifier.fillMaxSize(), contentAlignment = Alignment.Center) {
-+                Box(modifier = modifier.fillMaxSize(), contentAlignment = Alignment.Center) {
- 
--                Text(
--                    text = "Start a conversation by sending a message. Connect with others and let the chat come alive!",
--                    color = Black500,
--                    style = MaterialTheme.typography.subtitle1,
--                    modifier = Modifier.fillMaxWidth(0.7f),
--                    textAlign = TextAlign.Center, lineHeight = TextUnit(20f, TextUnitType.Sp))
-+                    Text(
-+                        text = "Start a conversation by sending a message. Connect with others and let the chat come alive!",
-+                        color = Black500,
-+                        style = MaterialTheme.typography.subtitle1,
-+                        modifier = Modifier.fillMaxWidth(0.7f),
-+                        textAlign = TextAlign.Center, lineHeight = TextUnit(20f, TextUnitType.Sp))
- 
--                AddMessageButton(modifier = Modifier.align(Alignment.BottomEnd)) {}
-+                    AddMessageButton(modifier = Modifier.align(Alignment.BottomEnd)) {}
- 
--            }
--        }
-+                }
-+            }
- 
-+        }
-     }
- }
- 
-Index: app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/components/messaging_list/MessagingItem.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/components/messaging_list/MessagingItem.kt b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chats/components/MessagingItem.kt
-rename from app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/components/messaging_list/MessagingItem.kt
-rename to app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chats/components/MessagingItem.kt
---- a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging/components/messaging_list/MessagingItem.kt	(revision 0aec7a69459300ef77fc102f75cacacafda2a24d)
-+++ b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chats/components/MessagingItem.kt	(date 1690186749272)
-@@ -1,4 +1,4 @@
--package com.example.cyclistance.feature_messaging.presentation.messaging.components.messaging_list
-+package com.example.cyclistance.feature_messaging.presentation.chats.components
- 
- import androidx.compose.foundation.background
- import androidx.compose.foundation.layout.Arrangement
Index: .idea/shelf/Manage_Focus_Requester/shelved.patch
===================================================================
diff --git a/.idea/shelf/Manage_Focus_Requester/shelved.patch b/.idea/shelf/Manage_Focus_Requester/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Manage_Focus_Requester/shelved.patch	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
+++ /dev/null	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
@@ -1,63 +0,0 @@
-Index: app/src/main/java/com/example/cyclistance/feature_authentication/presentation/common/AuthenticationTextFields.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.cyclistance.feature_authentication.presentation.common\n\nimport androidx.compose.animation.AnimatedVisibility\nimport androidx.compose.animation.core.tween\nimport androidx.compose.animation.fadeIn\nimport androidx.compose.animation.fadeOut\nimport androidx.compose.foundation.layout.Arrangement\nimport androidx.compose.foundation.layout.Column\nimport androidx.compose.foundation.layout.Row\nimport androidx.compose.foundation.layout.fillMaxWidth\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.foundation.layout.size\nimport androidx.compose.foundation.layout.wrapContentHeight\nimport androidx.compose.foundation.shape.RoundedCornerShape\nimport androidx.compose.foundation.text.KeyboardActionScope\nimport androidx.compose.foundation.text.KeyboardActions\nimport androidx.compose.foundation.text.KeyboardOptions\nimport androidx.compose.material.Icon\nimport androidx.compose.material.IconButton\nimport androidx.compose.material.MaterialTheme\nimport androidx.compose.material.Text\nimport androidx.compose.material.TextField\nimport androidx.compose.material.icons.Icons\nimport androidx.compose.material.icons.filled.Cancel\nimport androidx.compose.material.icons.filled.Email\nimport androidx.compose.material.icons.filled.Error\nimport androidx.compose.material.icons.filled.Lock\nimport androidx.compose.material.icons.filled.Visibility\nimport androidx.compose.material.icons.filled.VisibilityOff\nimport androidx.compose.runtime.Composable\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.draw.shadow\nimport androidx.compose.ui.focus.FocusRequester\nimport androidx.compose.ui.focus.focusRequester\nimport androidx.compose.ui.graphics.vector.ImageVector\nimport androidx.compose.ui.semantics.clearAndSetSemantics\nimport androidx.compose.ui.text.TextStyle\nimport androidx.compose.ui.text.font.FontWeight\nimport androidx.compose.ui.text.input.ImeAction\nimport androidx.compose.ui.text.input.KeyboardType\nimport androidx.compose.ui.text.input.PasswordVisualTransformation\nimport androidx.compose.ui.text.input.TextFieldValue\nimport androidx.compose.ui.text.input.VisualTransformation\nimport androidx.compose.ui.text.style.TextAlign\nimport androidx.compose.ui.unit.TextUnit\nimport androidx.compose.ui.unit.TextUnitType\nimport androidx.compose.ui.unit.dp\nimport com.example.cyclistance.theme.Black500\n\n\n@Composable\nfun ConfirmPasswordTextField(\n    modifier: Modifier = Modifier,\n    enabled: Boolean,\n    password: TextFieldValue,\n    passwordErrorMessage: String,\n    isPasswordVisible: Boolean,\n    passwordVisibilityIconOnClick: () -> Unit,\n    onValueChange: (TextFieldValue) -> Unit,\n    keyboardActionOnDone: (KeyboardActionScope.() -> Unit)) {\n\n\n    SetupTextField(\n        modifier = modifier,\n        enabled = enabled,\n        textFieldValue = password,\n        failureMessage = passwordErrorMessage,\n        onValueChange = onValueChange,\n        placeholderText = \"Confirm Password\",\n        trailingIcon = {\n            val image =\n                if (isPasswordVisible) Icons.Filled.Visibility else Icons.Filled.VisibilityOff\n            IconButton(onClick = passwordVisibilityIconOnClick) {\n                Icon(imageVector = image, \"\", tint = Black500)\n            }\n        },\n        visualTransformation = if (isPasswordVisible) VisualTransformation.None else PasswordVisualTransformation(),\n        keyboardOptions = KeyboardOptions(\n            keyboardType = KeyboardType.Password,\n            autoCorrect = false,\n            imeAction = ImeAction.Done),\n        keyboardActions = KeyboardActions(onDone = keyboardActionOnDone)\n\n    )\n}\n\n@Composable\nfun PasswordTextField(\n    modifier: Modifier = Modifier,\n    placeholderText: String = \"Password\",\n    enabled: Boolean,\n    password: TextFieldValue,\n    passwordExceptionMessage: String,\n    clearIconOnClick: () -> Unit,\n    onValueChange: (TextFieldValue) -> Unit) {\n\n    val hasError = passwordExceptionMessage.isNotEmpty()\n\n\n    SetupTextField(\n        modifier = modifier,\n        enabled = enabled,\n        textFieldValue = password,\n        failureMessage = passwordExceptionMessage,\n        onValueChange = onValueChange,\n        placeholderText = placeholderText,\n        trailingIcon = {\n\n            AnimatedVisibility(\n                visible = hasError,\n                enter = fadeIn(animationSpec = tween(durationMillis = 100)),\n                exit = fadeOut(animationSpec = tween(durationMillis = 100))) {\n\n                Icon(\n                    imageVector = Icons.Filled.Error,\n                    contentDescription = \"error\",\n                    tint = MaterialTheme.colors.error)\n            }\n\n            AnimatedVisibility(\n                visible = password.text.isNotEmpty() && !hasError,\n                enter = fadeIn(animationSpec = tween(durationMillis = 100)),\n                exit = fadeOut(animationSpec = tween(durationMillis = 100))) {\n\n                IconButton(onClick = clearIconOnClick) {\n                    Icon(\n                        imageVector = Icons.Default.Cancel,\n                        contentDescription = \"\",\n                        tint = Black500,\n                        modifier = Modifier.size(20.dp)\n                    )\n                }\n            }\n        },\n        keyboardOptions = KeyboardOptions(\n            keyboardType = KeyboardType.Password,\n            autoCorrect = false,\n            imeAction = ImeAction.Next),\n        visualTransformation = PasswordVisualTransformation()\n    )\n}\n\n\n@Composable\nprivate fun SetupTextField(\n    modifier: Modifier = Modifier,\n    enabled: Boolean,\n    focusRequester: FocusRequester = FocusRequester(),\n    textFieldValue: TextFieldValue,\n    failureMessage: String,\n    onValueChange: (TextFieldValue) -> Unit,\n    placeholderText: String,\n    leadingIcon: ImageVector = Icons.Default.Lock,\n    trailingIcon: @Composable (() -> Unit)? = null,\n    visualTransformation: VisualTransformation = VisualTransformation.None,\n    keyboardOptions: KeyboardOptions,\n    keyboardActions: KeyboardActions = KeyboardActions()\n) {\n\n    val hasError = failureMessage.isNotEmpty()\n\n    Column(\n        modifier = modifier.fillMaxWidth(),\n        horizontalAlignment = Alignment.Start,\n        verticalArrangement = Arrangement.spacedBy(3.dp)) {\n\n        TextField(\n            enabled = enabled,\n            modifier = Modifier\n                .fillMaxWidth()\n                .wrapContentHeight()\n                .shadow(elevation = 4.dp, shape = RoundedCornerShape(12.dp), clip = true)\n                .focusRequester(focusRequester)\n                .clearAndSetSemantics { },\n            value = textFieldValue,\n            onValueChange = onValueChange,\n            singleLine = true,\n            maxLines = 1,\n            shape = RoundedCornerShape(12.dp),\n            placeholder = {\n                Text(\n                    modifier = Modifier.padding(horizontal = 3.dp),\n                    text = placeholderText,\n                    style = MaterialTheme.typography.subtitle2.copy(\n                        fontWeight = FontWeight.Normal,\n                        color = if (hasError) MaterialTheme.colors.error else Black500,\n                        textAlign = TextAlign.Center),\n                )\n            },\n            trailingIcon = trailingIcon,\n            leadingIcon = {\n                Icon(\n                    imageVector = leadingIcon,\n                    contentDescription = \"Password Icon\",\n                    tint = if (hasError) MaterialTheme.colors.error else Black500,\n                    modifier = Modifier.size(18.dp)\n                )\n            },\n            isError = hasError,\n            keyboardOptions = keyboardOptions,\n            colors = textFieldColors(),\n            visualTransformation = visualTransformation,\n            keyboardActions = keyboardActions,\n            textStyle = TextStyle(\n                fontSize = TextUnit(value = 14f, type = TextUnitType.Sp)\n            )\n\n\n        )\n\n        AnimatedVisibility(\n            visible = hasError,\n            enter = fadeIn(animationSpec = tween(durationMillis = 100)),\n            exit = fadeOut(animationSpec = tween(durationMillis = 100))) {\n\n            Text(\n                text = failureMessage,\n                color = MaterialTheme.colors.error,\n                style = MaterialTheme.typography.caption,\n            )\n        }\n    }\n}\n\n\n@Composable\nfun EmailTextField(\n    modifier: Modifier = Modifier,\n    enabled: Boolean,\n    focusRequester: FocusRequester,\n    email: TextFieldValue,\n    emailErrorMessage: String,\n    clearIconOnClick: () -> Unit,\n    onValueChange: (TextFieldValue) -> Unit) {\n\n    val hasError = emailErrorMessage.isNotEmpty()\n\n    SetupTextField(\n        modifier = modifier,\n        enabled = enabled,\n        focusRequester = focusRequester,\n        textFieldValue = email,\n        failureMessage = emailErrorMessage,\n        onValueChange = onValueChange,\n        placeholderText = \"Email\",\n        leadingIcon = Icons.Default.Email,\n        trailingIcon = {\n\n            AnimatedVisibility(\n                visible = hasError,\n                enter = fadeIn(animationSpec = tween(durationMillis = 100)),\n                exit = fadeOut(animationSpec = tween(durationMillis = 100))) {\n\n                Icon(\n                    imageVector = Icons.Filled.Error,\n                    contentDescription = \"Error Icon\",\n                    tint = MaterialTheme.colors.error,\n                    modifier = Modifier.size(20.dp)\n                )\n            }\n\n            AnimatedVisibility(\n                visible = email.text.isNotEmpty() && !hasError,\n                enter = fadeIn(animationSpec = tween(durationMillis = 100)),\n                exit = fadeOut(animationSpec = tween(durationMillis = 100))) {\n\n                IconButton(onClick = clearIconOnClick) {\n                    Icon(\n                        imageVector = Icons.Default.Cancel,\n                        contentDescription = \"Clear Icon\",\n                        tint = Black500,\n                        modifier = Modifier.size(20.dp)\n                    )\n                }\n            }\n\n        },\n        keyboardOptions = KeyboardOptions(\n            keyboardType = KeyboardType.Email,\n            imeAction = ImeAction.Next),\n    )\n}\n\n\n@Composable\nfun ErrorMessage(errorMessage: String, modifier: Modifier = Modifier) {\n\n    Row(\n        modifier = modifier,\n        horizontalArrangement = Arrangement.spacedBy(3.dp),\n        verticalAlignment = Alignment.CenterVertically) {\n        Icon(\n            imageVector = Icons.Default.Error,\n            tint = MaterialTheme.colors.error,\n            modifier = Modifier.size(12.dp),\n            contentDescription = \"Icon error\")\n        Text(\n            text = errorMessage,\n            color = MaterialTheme.colors.error,\n            style = MaterialTheme.typography.caption,\n\n            )\n    }\n}\n\n\n\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_authentication/presentation/common/AuthenticationTextFields.kt b/app/src/main/java/com/example/cyclistance/feature_authentication/presentation/common/AuthenticationTextFields.kt
---- a/app/src/main/java/com/example/cyclistance/feature_authentication/presentation/common/AuthenticationTextFields.kt	(revision d100c21e87b311fe49a802d918dce64790822898)
-+++ b/app/src/main/java/com/example/cyclistance/feature_authentication/presentation/common/AuthenticationTextFields.kt	(date 1691641182105)
-@@ -146,7 +146,7 @@
- private fun SetupTextField(
-     modifier: Modifier = Modifier,
-     enabled: Boolean,
--    focusRequester: FocusRequester = FocusRequester(),
-+    focusRequester: FocusRequester? = null,
-     textFieldValue: TextFieldValue,
-     failureMessage: String,
-     onValueChange: (TextFieldValue) -> Unit,
-@@ -171,7 +171,7 @@
-                 .fillMaxWidth()
-                 .wrapContentHeight()
-                 .shadow(elevation = 4.dp, shape = RoundedCornerShape(12.dp), clip = true)
--                .focusRequester(focusRequester)
-+                .apply { focusRequester?.let { focusRequester(it) } }
-                 .clearAndSetSemantics { },
-             value = textFieldValue,
-             onValueChange = onValueChange,
-@@ -228,7 +228,7 @@
- fun EmailTextField(
-     modifier: Modifier = Modifier,
-     enabled: Boolean,
--    focusRequester: FocusRequester,
-+    focusRequester: FocusRequester? = null,
-     email: TextFieldValue,
-     emailErrorMessage: String,
-     clearIconOnClick: () -> Unit,
-Index: app/src/main/java/com/example/cyclistance/feature_authentication/presentation/auth_forgot_password/components/ForgotPasswordContent.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.cyclistance.feature_authentication.presentation.auth_forgot_password.components\n\nimport androidx.compose.foundation.Image\nimport androidx.compose.foundation.layout.Column\nimport androidx.compose.foundation.layout.Spacer\nimport androidx.compose.foundation.layout.fillMaxSize\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.foundation.rememberScrollState\nimport androidx.compose.foundation.verticalScroll\nimport androidx.compose.material.MaterialTheme\nimport androidx.compose.material.Surface\nimport androidx.compose.material.Text\nimport androidx.compose.runtime.Composable\nimport androidx.compose.runtime.CompositionLocalProvider\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.focus.FocusRequester\nimport androidx.compose.ui.layout.layoutId\nimport androidx.compose.ui.res.painterResource\nimport androidx.compose.ui.text.font.FontWeight\nimport androidx.compose.ui.text.input.TextFieldValue\nimport androidx.compose.ui.tooling.preview.Preview\nimport androidx.compose.ui.unit.dp\nimport androidx.constraintlayout.compose.ConstraintLayout\nimport com.example.cyclistance.R\nimport com.example.cyclistance.feature_authentication.presentation.auth_forgot_password.state.ForgotPasswordState\nimport com.example.cyclistance.feature_authentication.presentation.common.AuthenticationConstrains.BOTTOM_WAVE_ID\nimport com.example.cyclistance.feature_authentication.presentation.common.AuthenticationConstrains.BUTTONS_ID\nimport com.example.cyclistance.feature_authentication.presentation.common.AuthenticationConstrains.ICON_DISPLAY_ID\nimport com.example.cyclistance.feature_authentication.presentation.common.AuthenticationConstrains.TEXT_FIELDS_ID\nimport com.example.cyclistance.feature_authentication.presentation.common.AuthenticationConstrains.TEXT_LABEL\nimport com.example.cyclistance.feature_authentication.presentation.common.AuthenticationConstrains.TOP_SPACER_ID\nimport com.example.cyclistance.feature_authentication.presentation.common.AuthenticationConstrains.TOP_WAVE_ID\nimport com.example.cyclistance.feature_authentication.presentation.common.EmailTextField\nimport com.example.cyclistance.feature_authentication.presentation.common.Waves\nimport com.example.cyclistance.feature_mapping.presentation.common.ButtonNavigation\nimport com.example.cyclistance.navigation.IsDarkTheme\nimport com.example.cyclistance.theme.Black500\nimport com.example.cyclistance.theme.CyclistanceTheme\n\n@Composable\nfun ForgotPasswordContent(\n    modifier: Modifier = Modifier,\n    state: ForgotPasswordState\n) {\n\n    Surface(\n        modifier = modifier.fillMaxSize(),\n        color = MaterialTheme.colors.background) {\n\n\n        val isDarkTheme = IsDarkTheme.current\n\n        ConstraintLayout(\n            modifier = Modifier\n                .fillMaxSize()\n                .verticalScroll(rememberScrollState()),\n            constraintSet = forgotPasswordConstraints) {\n\n\n            Spacer(modifier = Modifier.layoutId(TOP_SPACER_ID))\n\n            Image(\n                contentDescription = \"Display Image\",\n                painter = painterResource(id = if (isDarkTheme) R.drawable.ic_forgot_pw_dark else R.drawable.ic_forgot_pw_light),\n                modifier = Modifier.layoutId(ICON_DISPLAY_ID),\n            )\n\n            Waves(\n                topWaveLayoutId = TOP_WAVE_ID,\n                bottomWaveLayoutId = BOTTOM_WAVE_ID)\n\n            Column(\n                modifier = Modifier\n                    .layoutId(TEXT_LABEL)\n                    .padding(top = 15.dp)\n                    .padding(horizontal = 15.dp)) {\n                Text(\n                    text = \"Forgot Password\",\n                    style = MaterialTheme.typography.subtitle1.copy(fontWeight = FontWeight.Medium),\n                    color = MaterialTheme.colors.onBackground,\n                    modifier = Modifier.padding(bottom = 8.dp))\n\n                Text(\n                    text = \"Don’t worry it happens. Kindly enter the email address associated with your account.\",\n                    style = MaterialTheme.typography.subtitle2.copy(fontWeight = FontWeight.Normal),\n                    color = Black500)\n\n            }\n\n            EmailTextField(\n                modifier = Modifier\n                    .layoutId(TEXT_FIELDS_ID)\n                    .padding(horizontal = 15.dp),\n                enabled = !state.isLoading,\n                focusRequester = FocusRequester(),\n                email = TextFieldValue(\"\"),\n                emailErrorMessage = \"\",\n                clearIconOnClick = { /*TODO*/ },\n                onValueChange = {})\n\n\n            ButtonNavigation(\n                modifier = Modifier.layoutId(BUTTONS_ID),\n                negativeButtonEnabled = !state.isLoading,\n                positiveButtonEnabled = !state.isLoading,\n                negativeButtonText = \"Cancel\",\n                positiveButtonText = \"Submit\",\n                onClickNegativeButton = {},\n                onClickPositiveButton = {}\n            )\n\n\n        }\n\n    }\n}\n\n\n@Preview(device = \"id:Galaxy Nexus\")\n@Composable\nfun PreviewForgotPasswordContentDark() {\n    CompositionLocalProvider(IsDarkTheme provides true) {\n        CyclistanceTheme(darkTheme = true) {\n            ForgotPasswordContent(state = ForgotPasswordState())\n        }\n    }\n}\n\n\n@Preview(device = \"id:Galaxy Nexus\")\n@Composable\nfun PreviewForgotPasswordContentLight() {\n    CompositionLocalProvider(IsDarkTheme provides false) {\n        CyclistanceTheme(darkTheme = false) {\n            ForgotPasswordContent(state = ForgotPasswordState())\n        }\n    }\n}\n\n\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_authentication/presentation/auth_forgot_password/components/ForgotPasswordContent.kt b/app/src/main/java/com/example/cyclistance/feature_authentication/presentation/auth_forgot_password/components/ForgotPasswordContent.kt
---- a/app/src/main/java/com/example/cyclistance/feature_authentication/presentation/auth_forgot_password/components/ForgotPasswordContent.kt	(revision d100c21e87b311fe49a802d918dce64790822898)
-+++ b/app/src/main/java/com/example/cyclistance/feature_authentication/presentation/auth_forgot_password/components/ForgotPasswordContent.kt	(date 1691641184989)
-@@ -13,7 +13,6 @@
- import androidx.compose.runtime.Composable
- import androidx.compose.runtime.CompositionLocalProvider
- import androidx.compose.ui.Modifier
--import androidx.compose.ui.focus.FocusRequester
- import androidx.compose.ui.layout.layoutId
- import androidx.compose.ui.res.painterResource
- import androidx.compose.ui.text.font.FontWeight
-@@ -92,7 +91,6 @@
-                     .layoutId(TEXT_FIELDS_ID)
-                     .padding(horizontal = 15.dp),
-                 enabled = !state.isLoading,
--                focusRequester = FocusRequester(),
-                 email = TextFieldValue(""),
-                 emailErrorMessage = "",
-                 clearIconOnClick = { /*TODO*/ },
Index: .idea/shelf/Mapping_bugs/shelved.patch
===================================================================
diff --git a/.idea/shelf/Mapping_bugs/shelved.patch b/.idea/shelf/Mapping_bugs/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Mapping_bugs/shelved.patch	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
+++ /dev/null	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
@@ -1,112 +0,0 @@
-Index: app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/MappingViewModel.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.cyclistance.feature_mapping.presentation.mapping_main_screen\n\nimport androidx.compose.runtime.mutableStateListOf\nimport androidx.lifecycle.SavedStateHandle\nimport androidx.lifecycle.ViewModel\nimport androidx.lifecycle.viewModelScope\nimport com.example.cyclistance.core.utils.constants.MappingConstants.MAPPING_VM_STATE_KEY\nimport com.example.cyclistance.core.utils.constants.MappingConstants.NEAREST_METERS\nimport com.example.cyclistance.core.utils.validation.FormatterUtils\nimport com.example.cyclistance.core.utils.validation.FormatterUtils.formatToDistanceKm\nimport com.example.cyclistance.core.utils.validation.FormatterUtils.isLocationAvailable\nimport com.example.cyclistance.feature_authentication.domain.use_case.AuthenticationUseCase\nimport com.example.cyclistance.feature_mapping.data.mapper.UserMapper.toRescueRequest\nimport com.example.cyclistance.feature_mapping.domain.exceptions.MappingExceptions\nimport com.example.cyclistance.feature_mapping.domain.helper.TrackingStateHandler\nimport com.example.cyclistance.feature_mapping.domain.model.Role\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue.RescueRequestItemModel\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RescueTransaction\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RescueTransactionItem\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.LocationModel\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.NearbyCyclist\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.RescueRequest\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.UserAssistanceModel\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.UserItem\nimport com.example.cyclistance.feature_mapping.domain.model.location.LiveLocationWSModel\nimport com.example.cyclistance.feature_mapping.domain.model.ui.rescue.MapSelectedRescuee\nimport com.example.cyclistance.feature_mapping.domain.model.ui.rescue.NewRescueRequestsModel\nimport com.example.cyclistance.feature_mapping.domain.use_case.MappingUseCase\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.event.MappingEvent\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.event.MappingVmEvent\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.state.MappingState\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.utils.createMockUsers\nimport com.example.cyclistance.feature_settings.domain.use_case.SettingUseCase\nimport com.google.android.gms.maps.model.LatLng\nimport com.google.maps.android.SphericalUtil\nimport com.mapbox.geojson.Point\nimport dagger.hilt.android.lifecycle.HiltViewModel\nimport kotlinx.coroutines.CoroutineDispatcher\nimport kotlinx.coroutines.Job\nimport kotlinx.coroutines.SupervisorJob\nimport kotlinx.coroutines.coroutineScope\nimport kotlinx.coroutines.delay\nimport kotlinx.coroutines.flow.MutableSharedFlow\nimport kotlinx.coroutines.flow.MutableStateFlow\nimport kotlinx.coroutines.flow.SharedFlow\nimport kotlinx.coroutines.flow.asSharedFlow\nimport kotlinx.coroutines.flow.asStateFlow\nimport kotlinx.coroutines.flow.catch\nimport kotlinx.coroutines.flow.distinctUntilChanged\nimport kotlinx.coroutines.flow.launchIn\nimport kotlinx.coroutines.flow.onEach\nimport kotlinx.coroutines.flow.update\nimport kotlinx.coroutines.launch\nimport timber.log.Timber\nimport javax.inject.Inject\n\n@HiltViewModel\nclass MappingViewModel @Inject constructor(\n    private val savedStateHandle: SavedStateHandle,\n    private val authUseCase: AuthenticationUseCase,\n    private val settingUseCase: SettingUseCase,\n    private val mappingUseCase: MappingUseCase,\n    private val defaultDispatcher: CoroutineDispatcher\n) : ViewModel() {\n\n\n    private var loadDataJob: Job? = null\n    private var getUsersUpdatesJob: Job? = null\n    private var locationUpdatesJob: Job? = null\n    private var getRescueTransactionUpdatesJob: Job? = null\n    private var getTransactionLocationUpdatesJob: Job? = null\n    private var trackingHandler: TrackingStateHandler\n\n    private val _state: MutableStateFlow<MappingState> = MutableStateFlow(\n        savedStateHandle[MAPPING_VM_STATE_KEY] ?: MappingState()\n    )\n    val state = _state.asStateFlow()\n\n    private val _eventFlow: MutableSharedFlow<MappingEvent> = MutableSharedFlow()\n    val eventFlow: SharedFlow<MappingEvent> = _eventFlow.asSharedFlow()\n    private var travelledPath: MutableList<LatLng> = mutableStateListOf()\n\n\n\n    init {\n        trackingHandler = TrackingStateHandler(state = _state, eventFlow = _eventFlow)\n        loadData()\n        observeDataChanges()\n    }\n\n    private fun observeDataChanges() {\n        subscribeToLocationUpdates()\n        subscribeToNearbyUsersChanges()\n        subscribeToRescueTransactionUpdates()\n        subscribeToTransactionLocationUpdates()\n    }\n\n    private fun loadData() {\n        if (loadDataJob?.isActive == true) return\n        loadDataJob = viewModelScope.launch(SupervisorJob() + defaultDispatcher) {\n            // TODO: Remove when the backend is ready\n            createMockUpUsers()\n            getNearbyCyclist()\n            loadRescueTransaction()\n            loadClient()\n        }\n\n    }\n\n\n    private suspend fun loadClient() {\n        coroutineScope {\n            trackingHandler.updateClient()\n        }\n    }\n\n    private suspend fun updateClient() {\n        trackingHandler.updateClient()\n    }\n\n\n    private suspend fun getNearbyCyclist() {\n        val userLocation = state.value.getCurrentLocation()\n\n        userLocation?.latitude ?: return\n        userLocation.longitude ?: return\n\n        if (state.value.nearbyCyclists != null) {\n            return\n        }\n\n        coroutineScope {\n\n            mappingUseCase.getUsersUseCase(\n                latitude = userLocation.latitude,\n                longitude = userLocation.longitude\n            ).distinctUntilChanged().catch {\n                it.handleException()\n            }.onEach {\n                it.getUser()\n                it.getNearbyCyclist()\n                savedStateHandle[MAPPING_VM_STATE_KEY] = state.value\n            }.launchIn(this)\n\n        }\n\n    }\n\n\n    private suspend fun loadRescueTransaction() {\n        coroutineScope {\n            val transactionId = state.value.user.getTransactionId()\n            if (transactionId.isNullOrEmpty()) {\n                return@coroutineScope\n            }\n\n            mappingUseCase.getRescueTransactionByIdUseCase(transactionId).catch {\n                it.handleException()\n            }.onEach { rescueTransaction ->\n                _state.update { it.copy(rescueTransaction = rescueTransaction) }\n            }.launchIn(this).invokeOnCompletion {\n                savedStateHandle[MAPPING_VM_STATE_KEY] = state.value\n            }\n\n        }\n\n    }\n\n\n    private fun acceptRescueRequest(id: String) {\n        viewModelScope.launch(context = SupervisorJob() + defaultDispatcher) {\n\n            val rescuer = state.value.nearbyCyclists?.findUser(id) ?: return@launch\n            _state.update { it.copy(rescueRequestAcceptedUser = rescuer) }\n            val transactionId = trackingHandler.getTransactionId(rescuer)\n            val user = state.value.user\n\n            trackingHandler.checkCurrentTransactions(user = user, rescuer = rescuer) {\n\n                coroutineScope {\n                    runCatching {\n                        isLoading(true)\n                        trackingHandler.getAcceptedRescueRequestItem(\n                            transactionId = transactionId,\n                            rescuer = rescuer\n                        ).apply {\n                            mappingUseCase.createRescueTransactionUseCase(rescueTransaction = this)\n                        }\n\n                    }.onSuccess { rescueTransaction ->\n                        broadcastRescueTransaction()\n                        assignRequestTransaction(\n                            rescueTransaction = rescueTransaction,\n                            user = user,\n                            rescuer = rescuer,\n                            transactionId = transactionId\n                        )\n                        user.location?.let { broadcastRescueTransactionToRespondent(it) }\n                    }.onFailure { exception ->\n                        isLoading(false)\n                        exception.handleException()\n                    }\n                }\n\n                savedStateHandle[MAPPING_VM_STATE_KEY] = state.value\n\n            }\n        }\n    }\n\n    private fun cancelHelpRequest() {\n        viewModelScope.launch(context = defaultDispatcher) {\n            runCatching {\n                isLoading(true)\n                cancelUserHelpRequest()\n            }.onSuccess {\n                _eventFlow.emit(value = MappingEvent.CancelHelpRequestSuccess)\n                broadcastToNearbyCyclists()\n                _state.update { it.copy(rescueRequestAcceptedUser = null) }\n            }.onFailure { exception ->\n                Timber.e(\"Failed to cancel search assistance: ${exception.message}\")\n                exception.handleException()\n            }\n            isLoading(false)\n            savedStateHandle[MAPPING_VM_STATE_KEY] = state.value\n        }\n    }\n\n\n    private fun removeAssignedTransaction() {\n        viewModelScope.launch(context = defaultDispatcher) {\n            runCatching {\n                removeUserTransaction(id = getId())\n            }.onSuccess {\n                broadcastToNearbyCyclists()\n                broadcastRescueTransaction()\n                isLoading(false)\n                _eventFlow.emit(value = MappingEvent.RemoveAssignedTransactionSuccess)\n                trackingHandler.clearTransactionRoles()\n            }.onFailure { exception ->\n                isLoading(false)\n                exception.handleException()\n            }\n        }\n\n    }\n\n    private fun selectRescueeMapIcon(id: String) {\n        viewModelScope.launch(context = defaultDispatcher) {\n\n            val userLocation = state.value.user.location ?: state.value.userLocation\n\n            if (!userLocation.isLocationAvailable()) {\n                viewModelScope.launch(context = defaultDispatcher) {\n                    _eventFlow.emit(value = MappingEvent.LocationNotAvailable(\"Tracking your Location\"))\n                }\n                return@launch\n            }\n\n            calculateSelectedRescueeDistance(userLocation, id)\n\n        }\n    }\n\n    private fun respondToHelp(selectedRescuee: MapSelectedRescuee) {\n        viewModelScope.launch(context = defaultDispatcher) {\n            runCatching {\n                uploadUserProfile(onSuccess = {\n                    viewModelScope.launch(context = defaultDispatcher) {\n                        mappingUseCase.addRescueRespondentUseCase(\n                            userId = selectedRescuee.userId,\n                            respondentId = getId()\n                        )\n                    }\n                })\n            }.onSuccess {\n                _eventFlow.emit(value = MappingEvent.RespondToHelpSuccess())\n                broadcastToNearbyCyclists()\n                broadcastRescueTransaction()\n                _state.update { it.copy(respondedToHelp = true) }\n            }.onFailure {\n                it.handleException()\n            }\n\n        }\n    }\n\n    private fun showRouteDirection(origin: Point, destination: Point) {\n        viewModelScope.launch(context = defaultDispatcher) {\n            runCatching {\n                mappingUseCase.getRouteDirectionsUseCase(origin = origin, destination = destination)\n            }.onSuccess { routeDirection ->\n                _eventFlow.emit(value = MappingEvent.NewRouteDirection(routeDirection))\n            }.onFailure {\n                Timber.v(\"Failure: ${it.message}\")\n                it.handleException()\n            }\n        }\n    }\n\n\n    private suspend fun broadcastRescueTransaction() {\n        runCatching {\n            mappingUseCase.broadcastRescueTransactionUseCase()\n        }.onFailure {\n            it.handleException()\n        }\n    }\n\n    private suspend fun broadcastToNearbyCyclists() {\n        val location = state.value.userLocation ?: return\n        runCatching {\n            mappingUseCase.broadcastToNearbyCyclists(\n                locationModel = LiveLocationWSModel(\n                    latitude = location.latitude,\n                    longitude = location.longitude\n                )\n            )\n        }.onFailure {\n            it.handleException()\n        }\n    }\n\n    private fun declineRescueRequest(id: String) {\n        viewModelScope.launch(context = defaultDispatcher) {\n            runCatching {\n                isLoading(true)\n                mappingUseCase.deleteRescueRespondentUseCase(userId = getId(), respondentId = id)\n            }.onSuccess {\n                removeRescueRespondent(id)\n                broadcastToNearbyCyclists()\n            }.onFailure {\n                it.handleDeclineRescueRequest()\n            }\n            isLoading(false)\n            savedStateHandle[MAPPING_VM_STATE_KEY] = state.value\n\n        }\n    }\n\n    private suspend fun removeRescueRespondent(id: String) {\n        state.value.newRescueRequest?.request?.toMutableList()?.apply {\n            val respondentRemoved = removeAll { it.id == id }\n            if (!respondentRemoved) {\n                _eventFlow.emit(value = MappingEvent.RemoveRespondentFailed())\n                return@apply\n            }\n            _state.update {\n                it.copy(\n                    newRescueRequest = NewRescueRequestsModel(this)\n                )\n            }\n        }\n    }\n\n\n    private fun requestHelp() {\n        viewModelScope.launch(context = defaultDispatcher) {\n            runCatching {\n                uploadUserProfile(onSuccess = {\n                    viewModelScope.launch(context = defaultDispatcher) {\n                        _eventFlow.emit(MappingEvent.RequestHelpSuccess)\n                    }\n                })\n            }.onFailure {\n                it.handleException()\n            }\n        }.invokeOnCompletion {\n            savedStateHandle[MAPPING_VM_STATE_KEY] = state.value\n        }\n    }\n\n    fun onEvent(event: MappingVmEvent) {\n        when (event) {\n\n            is MappingVmEvent.SubscribeToDataChanges -> {\n                observeDataChanges()\n            }\n\n\n            is MappingVmEvent.GetRouteDirections -> {\n                showRouteDirection(origin = event.origin, destination = event.destination)\n            }\n\n            is MappingVmEvent.RespondToHelp -> {\n                respondToHelp(event.selectedRescuee)\n            }\n\n            is MappingVmEvent.SelectRescueMapIcon -> {\n                selectRescueeMapIcon(event.id)\n            }\n\n            is MappingVmEvent.RequestHelp -> {\n                requestHelp()\n            }\n\n            is MappingVmEvent.CancelRescueTransaction -> {\n                removeAssignedTransaction()\n                clearTravelledPath()\n            }\n\n\n            is MappingVmEvent.LoadData -> {\n                loadData()\n            }\n\n\n            is MappingVmEvent.DeclineRescueRequest -> {\n                declineRescueRequest(event.id)\n                clearTravelledPath()\n            }\n\n            is MappingVmEvent.AcceptRescueRequest -> {\n                acceptRescueRequest(event.id)\n            }\n\n            is MappingVmEvent.CancelRequestHelp -> {\n                cancelHelpRequest()\n                clearTravelledPath()\n            }\n\n        }\n        savedStateHandle[MAPPING_VM_STATE_KEY] = state.value\n    }\n\n\n    private suspend fun calculateSelectedRescueeDistance(userLocation: LocationModel?, id: String) {\n        val selectedRescuee = state.value.nearbyCyclists?.findUser(id) ?: return\n        val selectedRescueeLocation = selectedRescuee.location\n\n\n        runCatching {\n            isLoading(true)\n            mappingUseCase.getCalculatedDistanceUseCase(\n                startingLocation = LocationModel(\n                    latitude = userLocation?.latitude,\n                    longitude = userLocation?.longitude\n                ), destinationLocation = LocationModel(\n                    latitude = selectedRescueeLocation!!.latitude,\n                    longitude = selectedRescueeLocation.longitude\n                )\n            )\n        }.onSuccess { distance ->\n            val timeRemaining = FormatterUtils.getCalculatedETA(distance)\n            trackingHandler.showSelectedRescuee(\n                selectedRescuee = selectedRescuee,\n                distance = distance,\n                timeRemaining = timeRemaining)\n        }.onFailure {\n            _eventFlow.emit(value = MappingEvent.FailedToCalculateDistance)\n        }.also {\n            isLoading(false)\n        }\n    }\n\n\n    private suspend fun removeUserTransaction(id: String) {\n        mappingUseCase.createUserUseCase(\n            user = UserItem.removeUserTransaction(id)\n        )\n    }\n\n\n    private fun subscribeToTransactionLocationUpdates() {\n        if (getRescueTransactionUpdatesJob?.isActive == true) {\n            return\n        }\n        getTransactionLocationUpdatesJob =\n            viewModelScope.launch(context = SupervisorJob() + defaultDispatcher) {\n                mappingUseCase.getTransactionLocationUpdatesUseCase().distinctUntilChanged().catch {\n                    Timber.e(\"ERROR GETTING TRANSACTION LOCATION: ${it.message}\")\n                }.onEach { liveLocation ->\n                    trackingHandler.updateTransactionLocation(location = liveLocation)\n                    liveLocation.updateTransactionETA()\n                    liveLocation.updateTransactionDistance()\n                }.launchIn(this@launch)\n\n            }\n    }\n\n    private suspend fun LiveLocationWSModel.updateTransactionDistance() {\n        coroutineScope {\n            val rescueTransaction = state.value.userLocation\n            latitude ?: return@coroutineScope\n            longitude ?: return@coroutineScope\n\n            rescueTransaction?.let { transaction ->\n\n                val distance = mappingUseCase.getCalculatedDistanceUseCase(\n                    startingLocation = LocationModel(latitude, longitude),\n                    destinationLocation = LocationModel(transaction.latitude, transaction.longitude)\n                ).toInt()\n\n\n                if (distance <= NEAREST_METERS) {\n                    _eventFlow.emit(value = MappingEvent.DestinationReached)\n                    removeAssignedTransaction()\n                    clearTravelledPath()\n                }\n\n            }\n        }\n    }\n\n\n    private fun LiveLocationWSModel.updateTransactionETA() {\n        val userLocation = state.value.userLocation\n        userLocation ?: return\n        this.latitude ?: return\n        this.longitude ?: return\n\n        val eta = getETABetweenTwoPoints(\n            startingLocation = LocationModel(\n                latitude = this.latitude,\n                longitude = this.longitude\n            ), endLocation = userLocation\n        )\n        _state.update { it.copy(rescuerETA = eta) }\n    }\n\n    private fun getETABetweenTwoPoints(\n        startingLocation: LocationModel,\n        endLocation: LocationModel\n    ): String {\n        val distance = mappingUseCase.getCalculatedDistanceUseCase(\n            startingLocation = startingLocation,\n            destinationLocation = endLocation\n        )\n\n        return FormatterUtils.getCalculatedETA(distanceMeters = distance)\n    }\n\n\n    private suspend fun assignRequestTransaction(\n        rescueTransaction: RescueTransactionItem,\n        user: UserItem,\n        rescuer: UserItem,\n        transactionId: String\n    ) {\n\n        runCatching {\n\n            transactionId.assignRequestTransaction(\n                role = Role.RESCUEE.name.lowercase(),\n                id = user.id\n            )\n\n            transactionId.assignRequestTransaction(\n                role = Role.RESCUER.name.lowercase(),\n                id = rescuer.id\n            )\n\n        }.onSuccess {\n            broadcastToNearbyCyclists()\n            _eventFlow.emit(value = MappingEvent.AcceptRescueRequestSuccess)\n            delay(500)\n            updateTransactionETA(rescuer, rescueTransaction)\n            isLoading(false)\n            broadcastRescueTransaction()\n        }.onFailure { exception ->\n            isLoading(false)\n            exception.handleException()\n        }\n\n    }\n\n    private fun updateTransactionETA(rescuer: UserItem, rescueTransaction: RescueTransactionItem) {\n        val userLocation = state.value.userLocation ?: return\n\n        val estimatedTimeArrival = rescuer.location?.let {\n            getETABetweenTwoPoints(\n                startingLocation = it,\n                endLocation = userLocation\n            )\n        }\n        _state.update {\n            it.copy(\n                rescueTransaction = rescueTransaction,\n                rescuerETA = estimatedTimeArrival ?: \"\",\n                rescuer = rescuer\n            )\n        }\n    }\n\n    private fun isLoading(loading: Boolean) {\n        _state.update { it.copy(isLoading = loading) }\n    }\n\n\n    private suspend fun String.assignRequestTransaction(role: String, id: String?) {\n        mappingUseCase.createUserUseCase(\n            user = UserItem.empty(id = id, transactionId = this, role = role)\n        )\n    }\n\n\n    private suspend fun Throwable.handleDeclineRescueRequest() {\n        when (this) {\n            is MappingExceptions.NetworkException -> {\n                _eventFlow.emit(value = MappingEvent.NoInternetConnection)\n            }\n\n            else -> {\n                Timber.d(\"Failed to update user\")\n            }\n        }\n    }\n\n\n    private suspend fun cancelUserHelpRequest() {\n\n        mappingUseCase.createUserUseCase(\n            user = UserItem.cancelUserHelpRequest(id = getId()))\n    }\n\n\n    private fun NearbyCyclist.getUser() {\n\n        val user = findUser(id = getId())\n        _state.update { it.copy(user = user) }\n        val respondents = user.getUserRescueRespondents(this)\n        _state.update {\n            it.copy(\n                newRescueRequest = NewRescueRequestsModel(\n                    request = respondents\n                )\n            )\n        }\n    }\n\n    private fun UserItem.getUserRescueRespondents(nearbyCyclist: NearbyCyclist): List<RescueRequestItemModel> {\n        val rescueRespondentsSnapShot: MutableList<RescueRequestItemModel> = mutableListOf()\n\n        rescueRequest?.respondents?.forEach { respondent ->\n            val userRespondent = nearbyCyclist.findUser(id = respondent.clientId)\n            val distance = calculateDistance(startLocation = location, endLocation = userRespondent.location)\n\n            distance?.let {\n                val formattedETA = FormatterUtils.getCalculatedETA(distanceMeters = it)\n                rescueRespondentsSnapShot.add(\n                    element = userRespondent.toRescueRequest(\n                        distance = it.formatToDistanceKm(),\n                        eta = formattedETA\n                    )\n                )\n            }\n        }\n\n        return rescueRespondentsSnapShot.distinct()\n    }\n\n    private fun calculateDistance(startLocation: LocationModel?, endLocation: LocationModel?): Double? {\n        val startLatitude = startLocation?.latitude ?: return null\n        val startLongitude = startLocation.longitude ?: return null\n        val endLatitude = endLocation?.latitude ?: return null\n        val endLongitude = endLocation.longitude ?: return null\n\n        return mappingUseCase.getCalculatedDistanceUseCase(\n            startingLocation = LocationModel(latitude = startLatitude, longitude = startLongitude),\n            destinationLocation = LocationModel(latitude = endLatitude, longitude = endLongitude)\n        )\n    }\n\n    private fun NearbyCyclist.getNearbyCyclist() {\n        _state.update { it.copy(nearbyCyclists = this.apply { users.distinct() }) }\n    }\n\n    private suspend fun broadcastRescueTransactionToRespondent(location: LocationModel) {\n        val rescueTransaction = state.value.rescueTransaction ?: return\n        runCatching {\n\n            val user = state.value.user\n            mappingUseCase.broadcastRescueTransactionToRespondent(\n                LiveLocationWSModel(\n                    latitude = location.latitude,\n                    longitude = location.longitude,\n                    room = rescueTransaction.id\n                ),\n                user = user,\n                rescueTransactionItem = rescueTransaction\n            )\n\n        }.onFailure {\n            Timber.v(\"Broadcasting location to transaction failed: ${it.message}\")\n        }\n    }\n\n\n    private fun unSubscribeToTransactionLocationUpdates() {\n        getTransactionLocationUpdatesJob?.cancel()\n    }\n\n    private fun subscribeToRescueTransactionUpdates() {\n        if (getRescueTransactionUpdatesJob?.isActive == true) {\n            return\n        }\n        getRescueTransactionUpdatesJob =\n            viewModelScope.launch(context = SupervisorJob() + defaultDispatcher) {\n\n                mappingUseCase.getRescueTransactionUpdatesUseCase().catch {\n                    Timber.e(\"ERROR GETTING RESCUE TRANSACTION: ${it.message}\")\n\n                }.onEach {\n                    it.updateRescueTransaction()\n                    it.updateRescueClient()\n                    trackingHandler.checkRescueRequestAccepted(\n                        rescueTransaction = it,\n                        id = getId()\n                    )\n                }.launchIn(this@launch).invokeOnCompletion {\n                    savedStateHandle[MAPPING_VM_STATE_KEY] = state.value\n                }\n\n            }\n    }\n\n\n\n\n    private fun RescueTransaction.updateRescueTransaction() {\n        val rescueTransaction = trackingHandler.getUserRescueTransaction(this)\n        _state.update { it.copy(rescueTransaction = rescueTransaction) }\n    }\n\n    private suspend fun RescueTransaction.updateRescueClient() {\n        coroutineScope {\n            val rescueTransaction =\n                trackingHandler.getUserRescueTransaction(this@updateRescueClient)\n            _state.update { it.copy(rescueTransaction = rescueTransaction) }\n            updateClient()\n\n        }\n    }\n\n    private fun unSubscribeToRescueTransactionUpdates() {\n        getRescueTransactionUpdatesJob?.cancel()\n    }\n\n    private fun unSubscribeToNearbyUsersChanges() {\n        getUsersUpdatesJob?.cancel()\n    }\n\n    private fun subscribeToLocationUpdates() {\n        if (locationUpdatesJob?.isActive == true) {\n            return\n        }\n        locationUpdatesJob = viewModelScope.launch(context = defaultDispatcher) {\n\n            mappingUseCase.getUserLocationUseCase().catch {\n                Timber.e(\"Error Location Updates: ${it.message}\")\n            }.onEach { location ->\n                broadcastRescueTransactionToRespondent(location)\n                trackingHandler.updateLocation(location)\n                updateSpeedometer(location)\n                getNearbyCyclist()\n            }.launchIn(this@launch).invokeOnCompletion {\n                savedStateHandle[MAPPING_VM_STATE_KEY] = state.value\n            }\n        }\n    }\n\n    private fun updateSpeedometer(location: LocationModel){\n        val isUserRescuer = state.value.user.isRescuer()\n        if(isUserRescuer) {\n            trackingHandler.setSpeed(location.speed)\n            trackingHandler.getTopSpeed(location.speed)\n            travelledPath.add(element = LatLng(location.latitude!!, location.longitude!!))\n            val distance = SphericalUtil.computeLength(travelledPath).formatToDistanceKm()\n            trackingHandler.setTravelledDistance(distance)\n        }\n    }\n\n\n    private fun subscribeToNearbyUsersChanges() {\n        if (getUsersUpdatesJob?.isActive == true) {\n            return\n        }\n\n        getUsersUpdatesJob = viewModelScope.launch(context = SupervisorJob() + defaultDispatcher) {\n\n            mappingUseCase.getUserUpdatesUseCase().catch {\n                Timber.e(\"ERROR GETTING USERS: ${it.message}\")\n            }.onEach {\n                it.getUser()\n                it.getNearbyCyclist()\n                trackingHandler.updateClient()\n            }.launchIn(this).invokeOnCompletion {\n                savedStateHandle[MAPPING_VM_STATE_KEY] = state.value\n            }\n        }\n    }\n\n    private fun unSubscribeToLocationUpdates() {\n        locationUpdatesJob?.cancel()\n    }\n\n\n    private suspend inline fun uploadUserProfile(crossinline onSuccess: () -> Unit) {\n        coroutineScope {\n            val userLocation = state.value.userLocation\n\n            if (userLocation == null) {\n                _eventFlow.emit(MappingEvent.LocationNotAvailable(reason = \"Searching for GPS\"))\n                return@coroutineScope\n            }\n\n            uploadProfile(location = userLocation, onSuccess = onSuccess)\n\n        }\n    }\n\n\n    private suspend inline fun uploadProfile(\n        location: LocationModel,\n        crossinline onSuccess: () -> Unit\n    ) {\n\n        val isProfileUploaded = state.value.profileUploaded\n\n        if (isProfileUploaded) {\n            onSuccess()\n            return\n        }\n\n        val fullAddress = mappingUseCase.getFullAddressUseCase(\n            latitude = location.latitude,\n            longitude = location.longitude\n        )\n\n        coroutineScope {\n\n            runCatching {\n                isLoading(true)\n                mappingUseCase.createUserUseCase(\n                    user = UserItem(\n                        id = getId(),\n                        name = getName(),\n                        address = fullAddress,\n                        profilePictureUrl = getPhotoUrl(),\n                        contactNumber = getPhoneNumber(),\n                        location = LocationModel(\n                            latitude = location.latitude,\n                            longitude = location.longitude\n                        ),\n                        rescueRequest = RescueRequest(), userAssistance = UserAssistanceModel()\n                    )\n                )\n                fullAddress?.let { mappingUseCase::setAddressUseCase }\n\n            }.onSuccess {\n                isLoading(false)\n                broadcastToNearbyCyclists()\n                onSuccess()\n                _state.update { it.copy(profileUploaded = true) }\n\n            }.onFailure { exception ->\n                Timber.e(\"Error uploading profile: ${exception.message}\")\n                isLoading(false)\n                exception.handleException()\n            }\n        }\n    }\n\n\n    private suspend fun Throwable.handleException() {\n        trackingHandler.handleException(this)\n        savedStateHandle[MAPPING_VM_STATE_KEY] = state.value\n    }\n\n\n    private suspend fun createMockUpUsers() {\n        runCatching {\n            mappingUseCase.createMockUsers()\n        }.onSuccess {\n            Timber.v(\"CREATED MOCK USERS!\")\n            broadcastToNearbyCyclists()\n        }.onFailure {\n            Timber.e(\"FAILED TO CREATE MOCK USERS: ${it.message}\")\n        }\n    }\n\n\n    override fun onCleared() {\n        super.onCleared()\n        unSubscribeToLocationUpdates()\n        unSubscribeToNearbyUsersChanges()\n        unSubscribeToRescueTransactionUpdates()\n        unSubscribeToTransactionLocationUpdates()\n\n    }\n\n\n    private fun getId(): String = authUseCase.getIdUseCase()\n\n    private suspend fun getName(): String = settingUseCase.getNameUseCase()\n\n    private suspend fun getPhoneNumber(): String =\n        settingUseCase.getPhoneNumberUseCase()\n\n    private suspend fun getPhotoUrl() = settingUseCase.getPhotoUrlUseCase()\n\n    private fun clearTravelledPath(){\n        travelledPath = mutableListOf()\n    }\n\n\n\n}\n\n\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/MappingViewModel.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/MappingViewModel.kt
---- a/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/MappingViewModel.kt	(revision 7fc48cc74bcb79dab1f27f28e2a348ccda16dc6e)
-+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/MappingViewModel.kt	(date 1692032357795)
-@@ -138,7 +138,7 @@
-                 it.handleException()
-             }.onEach {
-                 it.getUser()
--                it.getNearbyCyclist()
-+                it.updateNearbyCyclists()
-                 savedStateHandle[MAPPING_VM_STATE_KEY] = state.value
-             }.launchIn(this)
- 
-@@ -661,8 +661,9 @@
-         )
-     }
- 
--    private fun NearbyCyclist.getNearbyCyclist() {
--        _state.update { it.copy(nearbyCyclists = this.apply { users.distinct() }) }
-+    private fun NearbyCyclist.updateNearbyCyclists() {
-+        _state.update { it.copy(nearbyCyclists = this.apply { users.distinctBy { v -> v.id } }) }
-+        Timber.v("NEARBY CYCLISTS: ${this.users}")
-     }
- 
-     private suspend fun broadcastRescueTransactionToRespondent(location: LocationModel) {
-@@ -749,8 +750,8 @@
-             mappingUseCase.getUserLocationUseCase().catch {
-                 Timber.e("Error Location Updates: ${it.message}")
-             }.onEach { location ->
--                broadcastRescueTransactionToRespondent(location)
-                 trackingHandler.updateLocation(location)
-+                broadcastRescueTransactionToRespondent(location)
-                 updateSpeedometer(location)
-                 getNearbyCyclist()
-             }.launchIn(this@launch).invokeOnCompletion {
-@@ -782,7 +783,7 @@
-                 Timber.e("ERROR GETTING USERS: ${it.message}")
-             }.onEach {
-                 it.getUser()
--                it.getNearbyCyclist()
-+                it.updateNearbyCyclists()
-                 trackingHandler.updateClient()
-             }.launchIn(this).invokeOnCompletion {
-                 savedStateHandle[MAPPING_VM_STATE_KEY] = state.value
-Index: app/src/main/java/com/example/cyclistance/feature_mapping/domain/helper/TrackingStateHandler.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.cyclistance.feature_mapping.domain.helper\n\nimport com.example.cyclistance.core.utils.constants.MappingConstants\nimport com.example.cyclistance.core.utils.validation.FormatterUtils.formatToDistanceKm\nimport com.example.cyclistance.core.utils.validation.FormatterUtils.isLocationAvailable\nimport com.example.cyclistance.feature_authentication.domain.exceptions.AuthExceptions\nimport com.example.cyclistance.feature_mapping.domain.exceptions.MappingExceptions\nimport com.example.cyclistance.feature_mapping.domain.model.Role\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RescueTransaction\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RescueTransactionItem\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RouteModel\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.StatusModel\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.LocationModel\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.TransactionModel\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.UserItem\nimport com.example.cyclistance.feature_mapping.domain.model.location.LiveLocationWSModel\nimport com.example.cyclistance.feature_mapping.domain.model.ui.rescue.MapSelectedRescuee\nimport com.example.cyclistance.feature_mapping.domain.model.ui.rescue.NewRescueRequestsModel\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.event.MappingEvent\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.state.MappingState\nimport com.example.cyclistance.feature_settings.domain.exceptions.SettingExceptions\nimport kotlinx.coroutines.coroutineScope\nimport kotlinx.coroutines.flow.MutableSharedFlow\nimport kotlinx.coroutines.flow.MutableStateFlow\nimport kotlinx.coroutines.flow.update\nimport timber.log.Timber\n\nclass TrackingStateHandler(\n\n    val state: MutableStateFlow<MappingState>,\n    val eventFlow: MutableSharedFlow<MappingEvent>) {\n\n\n    suspend fun updateClient() {\n\n        coroutineScope {\n            val rescueTransaction = state.value.rescueTransaction\n            val cyclists = state.value.nearbyCyclists\n            val userRole = state.value.user.getRole()\n\n            if (userRole == Role.RESCUEE.name.lowercase()) {\n                rescueTransaction?.rescuerId?.let { id ->\n                    state.update { it.copy(rescuer = cyclists?.findUser(id), rescuee = null) }\n                }\n                return@coroutineScope\n            }\n\n            rescueTransaction?.rescueeId?.let { rescueeId ->\n                state.update { it.copy(rescuee = cyclists?.findUser(rescueeId), rescuer = null) }\n            }\n\n        }\n    }\n\n    fun getUserRescueTransaction(rescueTransaction: RescueTransaction): RescueTransactionItem? {\n\n        val transactionId = state.value.user.transaction?.transactionId\n        return transactionId?.let { rescueTransaction.findTransaction(it) }\n\n    }\n\n    fun clearTransactionRoles() {\n        state.update {\n            it.copy(\n                respondedToHelp = true,\n                rescueTransaction = RescueTransactionItem(),\n                rescuee = null,\n                rescuer = null,\n                newRescueRequest = NewRescueRequestsModel(),\n                user = it.user.copy(transaction = TransactionModel())\n            )\n        }\n    }\n\n    suspend fun showSelectedRescuee(\n        selectedRescuee: UserItem,\n        distance: Double,\n        timeRemaining: String\n    ) {\n\n        eventFlow.emit(\n            value = MappingEvent.NewSelectedRescuee(\n                selectedRescuee = MapSelectedRescuee(\n                    userId = selectedRescuee.id!!,\n                    userProfileImage = selectedRescuee.profilePictureUrl\n                                       ?: MappingConstants.IMAGE_PLACEHOLDER_URL,\n                    name = selectedRescuee.name ?: \"name unavailable\",\n                    issue = selectedRescuee.getDescription() ?: \"\",\n                    bikeType = selectedRescuee.getBikeType() ?: \"\",\n                    address = selectedRescuee.address ?: \"\",\n                    message = selectedRescuee.getMessage() ?: \"\",\n                    distanceRemaining = distance.formatToDistanceKm(),\n                    timeRemaining = timeRemaining\n                )\n            )\n        )\n    }\n\n    fun updateLocation(location: LocationModel) {\n        val latitude = location.latitude.takeIf { it != 0.0 } ?: return\n        val longitude = location.longitude.takeIf { it != 0.0 } ?: return\n        state.update {\n            it.copy(\n                userLocation = LocationModel(\n                    latitude = latitude,\n                    longitude = longitude\n                )\n            )\n        }\n\n\n    }\n\n    fun updateTransactionLocation(location: LiveLocationWSModel) {\n        val longitude = location.longitude ?: return\n        val latitude = location.latitude ?: return\n        state.update {\n            it.copy(\n                transactionLocation = LocationModel(\n                    latitude = latitude,\n                    longitude = longitude\n                )\n            )\n        }\n    }\n\n    suspend inline fun checkCurrentTransactions(\n        user: UserItem,\n        rescuer: UserItem,\n        crossinline noCurrentTransaction: suspend () -> Unit\n    ) {\n\n        val userHasCurrentTransaction =\n            (user.transaction ?: TransactionModel()).transactionId.isNotEmpty()\n\n        val rescuerHasCurrentTransaction =\n            (rescuer.transaction ?: TransactionModel()).transactionId.isNotEmpty()\n\n        val rescuerLocationAvailable = rescuer.location.isLocationAvailable()\n        val userLocationAvailable = user.location.isLocationAvailable()\n\n        if (!rescuerLocationAvailable) {\n            eventFlow.emit(value = MappingEvent.RescuerLocationNotAvailable())\n            return\n        }\n\n        if (!userLocationAvailable) {\n            eventFlow.emit(value = MappingEvent.LocationNotAvailable(\"Location not found\"))\n            return\n        }\n\n        if (rescuerHasCurrentTransaction) {\n            eventFlow.emit(value = MappingEvent.RescueHasTransaction)\n            return\n        }\n\n        if (userHasCurrentTransaction) {\n            eventFlow.emit(value = MappingEvent.UserHasCurrentTransaction)\n            return\n        }\n\n\n        noCurrentTransaction()\n    }\n\n\n    fun getAcceptedRescueRequestItem(\n        transactionId: String,\n        rescuer: UserItem,\n\n    ): RescueTransactionItem {\n        val user = state.value.user\n        return RescueTransactionItem(\n            id = transactionId,\n            rescuerId = rescuer.id,\n            rescueeId = user.id,\n            status = StatusModel(started = true, onGoing = true),\n            route = RouteModel(\n                startingLocation = LocationModel(\n                    latitude = rescuer.location!!.latitude,\n                    longitude = rescuer.location.longitude\n                ),\n                destinationLocation = LocationModel(\n                    latitude = user.location!!.latitude,\n                    longitude = user.location.longitude\n                )\n            )\n        )\n    }\n\n    fun getTransactionId(rescuer: UserItem): String {\n        val user = state.value.user\n        return user.id?.take(3) + rescuer.id?.take(3) + System.currentTimeMillis().toString()\n            .takeLast(6)\n    }\n\n    suspend fun checkRescueRequestAccepted(rescueTransaction: RescueTransaction, id: String) {\n        val respondedToHelp = state.value.respondedToHelp\n        val user = state.value.user\n\n        val userId = state.value.user.id ?: id\n\n        if (respondedToHelp.not()) {\n            return\n        }\n\n\n\n        getUserRescueTransaction(rescueTransaction = rescueTransaction)\n            ?.let { transaction ->\n\n                if (transaction.isRescueCancelled()) {\n                    return@let\n                }\n\n                if (transaction.rescuerId != userId) {\n                    return@let\n                }\n\n                if (user.isRescuee()) {\n                    return@let\n                }\n\n                if (transaction.rescueeId.isNullOrEmpty()) {\n                    return@let\n                }\n\n                eventFlow.emit(value = MappingEvent.RescueRequestAccepted)\n            }\n\n\n    }\n\n    suspend fun handleException(exception: Throwable) {\n        when (exception) {\n\n            is MappingExceptions.NetworkException -> {\n                eventFlow.emit(value = MappingEvent.NoInternetConnection)\n            }\n\n            is MappingExceptions.UnexpectedErrorException -> {\n                eventFlow.emit(\n                    MappingEvent.UnexpectedError(\n                        reason = exception.message\n                    )\n                )\n            }\n\n            is AuthExceptions.UserException -> {\n                eventFlow.emit(\n                    MappingEvent.UserFailed(\n                        reason = exception.message\n                    )\n                )\n            }\n\n            is MappingExceptions.AddressException -> {\n                eventFlow.emit(\n                    MappingEvent.AddressFailed(\n                        reason = exception.message ?: \"Searching for GPS\"\n                    )\n                )\n            }\n\n            is SettingExceptions.PhoneNumberException, is MappingExceptions.NameException -> {\n                eventFlow.emit(MappingEvent.InsufficientUserCredential)\n            }\n\n            else -> {\n                Timber.e(\"Error HandleException: ${exception.message}\")\n            }\n\n        }\n    }\n\n\n    fun getTopSpeed(currentSpeed: Double) {\n        val topSpeed = state.value.getTopSpeed()\n        if (currentSpeed > topSpeed) {\n            state.update { it.copy(speedometerState = it.speedometerState.copy(topSpeed = currentSpeed)) }\n        }\n    }\n\n    fun setSpeed(currentSpeedKph: Double){\n        state.update { it.copy(speedometerState = it.speedometerState.copy(currentSpeedKph = currentSpeedKph)) }\n    }\n\n    fun setTravelledDistance(distance: String){\n\n        state.update { it.copy(speedometerState = it.speedometerState.copy(travelledDistance = distance)) }\n    }\n}\n\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/helper/TrackingStateHandler.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/helper/TrackingStateHandler.kt
---- a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/helper/TrackingStateHandler.kt	(revision 7fc48cc74bcb79dab1f27f28e2a348ccda16dc6e)
-+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/helper/TrackingStateHandler.kt	(date 1692031158823)
-@@ -97,8 +97,8 @@
-     }
- 
-     fun updateLocation(location: LocationModel) {
--        val latitude = location.latitude.takeIf { it != 0.0 } ?: return
--        val longitude = location.longitude.takeIf { it != 0.0 } ?: return
-+        val latitude = location.latitude ?: return
-+        val longitude = location.longitude ?: return
-         state.update {
-             it.copy(
-                 userLocation = LocationModel(
-Index: app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/components/MappingMapsScreen.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.components\n\nimport android.annotation.SuppressLint\nimport android.graphics.Color\nimport androidx.compose.foundation.layout.Box\nimport androidx.compose.foundation.layout.fillMaxSize\nimport androidx.compose.runtime.*\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.platform.LocalContext\nimport androidx.compose.ui.viewinterop.AndroidViewBinding\nimport androidx.core.content.ContextCompat\nimport androidx.core.graphics.drawable.toBitmap\nimport androidx.lifecycle.*\nimport com.example.cyclistance.R\nimport com.example.cyclistance.core.utils.constants.MappingConstants.ICON_LAYER_ID\nimport com.example.cyclistance.core.utils.constants.MappingConstants.ICON_SOURCE_ID\nimport com.example.cyclistance.core.utils.constants.MappingConstants.ROUTE_LAYER_ID\nimport com.example.cyclistance.core.utils.constants.MappingConstants.ROUTE_SOURCE_ID\nimport com.example.cyclistance.core.utils.constants.MappingConstants.TRANSACTION_ICON_ID\nimport com.example.cyclistance.core.utils.validation.FormatterUtils.getMapIconImageDescription\nimport com.example.cyclistance.databinding.ActivityMappingBinding\nimport com.example.cyclistance.feature_mapping.domain.model.Role\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RouteDirection\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.LocationModel\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.event.MappingUiEvent\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.state.MappingState\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.state.MappingUiState\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.utils.*\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.utils.MappingUtils.setDefaultSettings\nimport com.example.cyclistance.navigation.IsDarkTheme\nimport com.mapbox.geojson.Feature\nimport com.mapbox.geojson.FeatureCollection\nimport com.mapbox.geojson.Point\nimport com.mapbox.mapboxsdk.annotations.IconFactory\nimport com.mapbox.mapboxsdk.annotations.MarkerOptions\nimport com.mapbox.mapboxsdk.geometry.LatLng\nimport com.mapbox.mapboxsdk.maps.MapboxMap\nimport com.mapbox.mapboxsdk.maps.Style\nimport com.mapbox.mapboxsdk.style.expressions.Expression.*\nimport com.mapbox.mapboxsdk.style.layers.LineLayer\nimport com.mapbox.mapboxsdk.style.layers.Property\nimport com.mapbox.mapboxsdk.style.layers.PropertyFactory.*\nimport com.mapbox.mapboxsdk.style.layers.SymbolLayer\nimport com.mapbox.mapboxsdk.style.sources.GeoJsonSource\nimport timber.log.Timber\n\n\n@SuppressLint(\"MissingPermission\")\n@Suppress(\"Deprecation\")\n@Composable\nfun MappingMapsScreen(\n    modifier: Modifier,\n    state: MappingState,\n    uiState: MappingUiState,\n    mapboxMap: MapboxMap?,\n    hasTransaction: Boolean,\n    isNavigating: Boolean,\n    routeDirection: RouteDirection?,\n    isRescueCancelled: Boolean,\n    event: (MappingUiEvent) -> Unit\n//    requestNavigationCameraToOverview: () -> Unit, //todo use this one\n) {\n\n\n    val context = LocalContext.current\n\n\n    val nearbyCyclists = remember(state.nearbyCyclists?.users?.size, mapboxMap) {\n        state.nearbyCyclists?.users\n    }\n    val dismissNearbyCyclistsIcon = remember(mapboxMap) {\n        {\n            mapboxMap?.removeAnnotations()\n        }\n    }\n\n    val showNearbyCyclistsIcon = remember(nearbyCyclists, mapboxMap) {\n        {\n            dismissNearbyCyclistsIcon()\n\n            nearbyCyclists?.filter {\n                it.isUserNeedHelp() == true\n            }?.forEach { cyclist ->\n                val location = cyclist.location\n                val latitude = location?.latitude ?: return@forEach\n                val longitude = location.longitude ?: return@forEach\n                val description = cyclist.getDescription()\n                val iconImage = description?.getMapIconImageDescription(context)\n                    ?.toBitmap(width = 120, height = 120)\n                iconImage?.let { bitmap ->\n                    mapboxMap ?: return@let\n                    val icon = IconFactory.getInstance(context).fromBitmap(bitmap)\n                    MarkerOptions().apply {\n                        setIcon(icon)\n                        position(LatLng(latitude, longitude))\n                        title = cyclist.id\n                    }.also(mapboxMap::addMarker)\n                }\n            }\n        }\n    }\n\n\n    val hasActiveTransaction = remember(hasTransaction, isRescueCancelled) {\n        hasTransaction || isRescueCancelled\n    }\n\n    val isUserNavigating = remember(key1 = isNavigating, key2 = routeDirection?.geometry) {\n        val geometry = routeDirection?.geometry\n        isNavigating || geometry?.isNotEmpty() == true\n    }\n\n    LaunchedEffect(key1 = nearbyCyclists, key2 = isUserNavigating, key3 = hasActiveTransaction) {\n\n        if (isUserNavigating || hasActiveTransaction) {\n            dismissNearbyCyclistsIcon()\n            return@LaunchedEffect\n        }\n\n        showNearbyCyclistsIcon()\n    }\n\n\n    LaunchedEffect(key1 = mapboxMap, uiState.isFabExpanded) {\n\n        mapboxMap?.setOnMarkerClickListener {\n            event(MappingUiEvent.RescueeMapIconSelected(it.title))\n            true\n        }\n\n        mapboxMap?.addOnMapClickListener {\n            event(MappingUiEvent.OnMapClick)\n            true\n        }\n\n        mapboxMap?.addOnCameraMoveListener {\n            if (uiState.isFabExpanded) {\n                event(MappingUiEvent.OnCollapseExpandableFAB)\n            }\n        }\n\n        mapboxMap?.addOnMapLongClickListener {\n            event(MappingUiEvent.OnMapLongClick)\n            true\n        }\n\n    }\n\n\n    val clientLocation =\n        remember(state.transactionLocation, state.rescuer?.location, state.rescuee?.location) {\n            with(state) {\n                transactionLocation ?: rescuer?.location ?: rescuee?.location\n            }\n        }\n\n    val hasTransactionLocationChanges = remember(clientLocation) {\n        clientLocation != null\n    }\n\n    val dismissTransactionLocationIcon = remember(mapboxMap) {\n        {\n            mapboxMap?.getStyle { style ->\n                if (style.isFullyLoaded) {\n                    style.removeImage(TRANSACTION_ICON_ID)\n                    val geoJsonSource = style.getSourceAs<GeoJsonSource>(ICON_SOURCE_ID)\n                    geoJsonSource?.setGeoJson(FeatureCollection.fromFeatures(arrayOf()))\n                }\n            }\n        }\n    }\n\n    val showTransactionLocationIcon = remember(mapboxMap, state.user) {\n        { location: LocationModel ->\n            dismissTransactionLocationIcon()\n            val role = state.user.transaction?.role\n            val mapIcon = if (role == Role.RESCUEE.name.lowercase()) {\n                R.drawable.ic_map_rescuer\n            } else {\n                R.drawable.ic_map_rescuee\n            }\n            mapboxMap?.getStyle { style ->\n                if (style.isFullyLoaded) {\n                    val longitude = location.longitude ?: return@getStyle\n                    val latitude = location.latitude ?: return@getStyle\n                    style.removeImage(TRANSACTION_ICON_ID)\n                    ContextCompat.getDrawable(context, mapIcon)?.toBitmap(width = 100, height = 100)\n                        ?.let { iconBitmap ->\n                            style.addImage(TRANSACTION_ICON_ID, iconBitmap)\n                            val geoJsonSource = style.getSourceAs<GeoJsonSource>(ICON_SOURCE_ID)\n                            val feature =\n                                Feature.fromGeometry(Point.fromLngLat(longitude, latitude))\n                            geoJsonSource?.setGeoJson(feature)\n                        }\n                }\n            }\n        }\n    }\n\n    LaunchedEffect(\n        key1 = hasActiveTransaction,\n        key2 = hasTransactionLocationChanges,\n        key3 = clientLocation) {\n\n        if (hasTransactionLocationChanges.not() || hasActiveTransaction.not()) {\n            dismissTransactionLocationIcon()\n            return@LaunchedEffect\n        }\n\n        clientLocation?.latitude ?: return@LaunchedEffect\n        showTransactionLocationIcon(clientLocation)\n    }\n\n    Map(\n        modifier = modifier,\n        event = event)\n\n}\n\n\n@Composable\nprivate fun Map(\n    modifier: Modifier,\n    event: (MappingUiEvent) -> Unit) {\n\n\n    val isDarkTheme = IsDarkTheme.current\n    Box(modifier = modifier) {\n\n        AndroidViewBinding(\n            factory = ActivityMappingBinding::inflate,\n            modifier = Modifier.fillMaxSize()) {\n            val viewContext = this.root.context\n            var mapboxMap: MapboxMap? = null\n\n            val initSource = { loadedMapStyle: Style ->\n                loadedMapStyle.addSource(GeoJsonSource(ICON_SOURCE_ID))\n                loadedMapStyle.addSource(GeoJsonSource(ROUTE_SOURCE_ID))\n            }\n\n            val initLayers = { loadedMapStyle: Style ->\n\n\n                val drawableIcon = ContextCompat.getDrawable(viewContext, R.drawable.ic_map_rescuer)\n                val bitmapIcon = drawableIcon?.toBitmap(width = 100, height = 100)\n                bitmapIcon?.let { loadedMapStyle.addImage(TRANSACTION_ICON_ID, it) }\n\n                loadedMapStyle.addLayer(\n                    SymbolLayer(ICON_LAYER_ID, ICON_SOURCE_ID).apply {\n                        setProperties(\n                            iconImage(TRANSACTION_ICON_ID),\n                            iconAllowOverlap(true),\n                            iconIgnorePlacement(true)\n                        )\n                    }\n                )\n\n\n                loadedMapStyle.addLayerBelow(\n                    LineLayer(ROUTE_LAYER_ID, ROUTE_SOURCE_ID).apply {\n                        setProperties(\n                            lineCap(Property.LINE_CAP_ROUND),\n                            lineJoin(Property.LINE_JOIN_ROUND),\n                            lineWidth(5f),\n                            lineColor(Color.parseColor(\"#006eff\"))\n                        )\n                    }, ICON_LAYER_ID)\n\n\n            }\n\n\n            root.findViewTreeLifecycleOwner()?.lifecycle?.addObserver(\n                LifecycleEventObserver { _, event ->\n                    when (event) {\n                        Lifecycle.Event.ON_CREATE -> {\n\n                            Timber.v(\"Lifecycle Event: ON_CREATE\")\n                            mapView.getMapAsync {\n\n\n                                it.setStyle(if (isDarkTheme) Style.DARK else Style.LIGHT) { loadedStyle ->\n\n                                    if (loadedStyle.isFullyLoaded) {\n                                        event(MappingUiEvent.OnInitializeMap(it))\n                                        mapboxMap = it\n                                        initSource(loadedStyle)\n                                        initLayers(loadedStyle)\n                                    }\n                                }\n                                it.setDefaultSettings()\n                            }\n                        }\n\n                        Lifecycle.Event.ON_START -> {\n                            Timber.v(\"Lifecycle Event: ON_START\")\n                            mapView.onStart()\n                        }\n\n                        Lifecycle.Event.ON_RESUME -> {\n                            Timber.v(\"Lifecycle Event: ON_RESUME\")\n                        }\n\n                        Lifecycle.Event.ON_PAUSE -> {\n                            val camera = mapboxMap?.cameraPosition\n                            val cameraCenter = camera?.target\n                            val cameraZoom = camera?.zoom\n                            cameraCenter?.let {\n                                cameraZoom?.let {\n                                    val cameraMoved =\n                                        cameraCenter.latitude != 0.0 && cameraCenter.longitude != 0.0 && cameraZoom != 3.0\n\n                                    if (!cameraMoved) {\n                                        return@let\n                                    }\n\n\n                                    /*  event(\n                                          MappingUiEvent.OnChangeCameraState(\n                                              cameraState = CameraState(\n                                                  position = cameraCenter,\n                                                  zoom = cameraZoom)))*/\n                                }\n                            }\n                        }\n\n                        Lifecycle.Event.ON_STOP -> {\n                            Timber.v(\"Lifecycle Event: ON_STOP\")\n\n                            mapView.onStop()\n                        }\n\n                        Lifecycle.Event.ON_DESTROY -> {\n\n                            mapView.onDestroy()\n                        }\n\n                        else -> {}\n\n                    }\n                }\n            )\n        }\n    }\n}\n\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/components/MappingMapsScreen.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/components/MappingMapsScreen.kt
---- a/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/components/MappingMapsScreen.kt	(revision 7fc48cc74bcb79dab1f27f28e2a348ccda16dc6e)
-+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/components/MappingMapsScreen.kt	(date 1692033917551)
-@@ -70,6 +70,7 @@
-     }
-     val dismissNearbyCyclistsIcon = remember(mapboxMap) {
-         {
-+
-             mapboxMap?.removeAnnotations()
-         }
-     }
-@@ -78,7 +79,9 @@
-         {
-             dismissNearbyCyclistsIcon()
- 
--            nearbyCyclists?.filter {
-+            nearbyCyclists?.filter{
-+                it.id != state.user.id
-+            }?.filter {
-                 it.isUserNeedHelp() == true
-             }?.forEach { cyclist ->
-                 val location = cyclist.location
-@@ -110,7 +113,10 @@
-         isNavigating || geometry?.isNotEmpty() == true
-     }
- 
--    LaunchedEffect(key1 = nearbyCyclists, key2 = isUserNavigating, key3 = hasActiveTransaction) {
-+    val shouldShowNearbyCyclists = remember(nearbyCyclists, isUserNavigating, hasActiveTransaction) {
-+        isUserNavigating || hasActiveTransaction
-+    }
-+    LaunchedEffect(key1 = shouldShowNearbyCyclists, key2 = mapboxMap) {
- 
-         if (isUserNavigating || hasActiveTransaction) {
-             dismissNearbyCyclistsIcon()
Index: .idea/shelf/NearbyCylistState/shelved.patch
===================================================================
diff --git a/.idea/shelf/NearbyCylistState/shelved.patch b/.idea/shelf/NearbyCylistState/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/NearbyCylistState/shelved.patch	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
+++ /dev/null	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
@@ -1,341 +0,0 @@
-Index: app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/MappingViewModel.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.cyclistance.feature_mapping.presentation.mapping_main_screen\n\nimport androidx.compose.runtime.mutableStateListOf\nimport androidx.lifecycle.SavedStateHandle\nimport androidx.lifecycle.ViewModel\nimport androidx.lifecycle.viewModelScope\nimport com.example.cyclistance.core.utils.constants.MappingConstants.MAPPING_VM_STATE_KEY\nimport com.example.cyclistance.core.utils.constants.MappingConstants.NEAREST_METERS\nimport com.example.cyclistance.core.utils.validation.FormatterUtils\nimport com.example.cyclistance.core.utils.validation.FormatterUtils.formatToDistanceKm\nimport com.example.cyclistance.core.utils.validation.FormatterUtils.isLocationAvailable\nimport com.example.cyclistance.feature_authentication.domain.use_case.AuthenticationUseCase\nimport com.example.cyclistance.feature_mapping.data.mapper.UserMapper.toRescueRequest\nimport com.example.cyclistance.feature_mapping.domain.exceptions.MappingExceptions\nimport com.example.cyclistance.feature_mapping.domain.helper.TrackingStateHandler\nimport com.example.cyclistance.feature_mapping.domain.model.Role\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue.RescueRequestItemModel\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RescueTransaction\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RescueTransactionItem\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.LocationModel\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.NearbyCyclist\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.RescueRequest\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.UserAssistanceModel\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.UserItem\nimport com.example.cyclistance.feature_mapping.domain.model.location.LiveLocationWSModel\nimport com.example.cyclistance.feature_mapping.domain.model.ui.rescue.MapSelectedRescuee\nimport com.example.cyclistance.feature_mapping.domain.model.ui.rescue.NewRescueRequestsModel\nimport com.example.cyclistance.feature_mapping.domain.use_case.MappingUseCase\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.event.MappingEvent\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.event.MappingVmEvent\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.state.MappingState\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.utils.createMockUsers\nimport com.example.cyclistance.feature_settings.domain.use_case.SettingUseCase\nimport com.google.android.gms.maps.model.LatLng\nimport com.google.maps.android.SphericalUtil\nimport com.mapbox.geojson.Point\nimport dagger.hilt.android.lifecycle.HiltViewModel\nimport kotlinx.coroutines.CoroutineDispatcher\nimport kotlinx.coroutines.Job\nimport kotlinx.coroutines.SupervisorJob\nimport kotlinx.coroutines.coroutineScope\nimport kotlinx.coroutines.delay\nimport kotlinx.coroutines.flow.MutableSharedFlow\nimport kotlinx.coroutines.flow.MutableStateFlow\nimport kotlinx.coroutines.flow.SharedFlow\nimport kotlinx.coroutines.flow.asSharedFlow\nimport kotlinx.coroutines.flow.asStateFlow\nimport kotlinx.coroutines.flow.catch\nimport kotlinx.coroutines.flow.distinctUntilChanged\nimport kotlinx.coroutines.flow.launchIn\nimport kotlinx.coroutines.flow.onEach\nimport kotlinx.coroutines.flow.update\nimport kotlinx.coroutines.launch\nimport timber.log.Timber\nimport javax.inject.Inject\n\n@HiltViewModel\nclass MappingViewModel @Inject constructor(\n    private val savedStateHandle: SavedStateHandle,\n    private val authUseCase: AuthenticationUseCase,\n    private val settingUseCase: SettingUseCase,\n    private val mappingUseCase: MappingUseCase,\n    private val defaultDispatcher: CoroutineDispatcher\n) : ViewModel() {\n\n\n    private var loadDataJob: Job? = null\n    private var getUsersUpdatesJob: Job? = null\n    private var locationUpdatesJob: Job? = null\n    private var getRescueTransactionUpdatesJob: Job? = null\n    private var getTransactionLocationUpdatesJob: Job? = null\n    private var trackingHandler: TrackingStateHandler\n\n    private val _state: MutableStateFlow<MappingState> = MutableStateFlow(\n        savedStateHandle[MAPPING_VM_STATE_KEY] ?: MappingState()\n    )\n    val state = _state.asStateFlow()\n\n    private val _eventFlow: MutableSharedFlow<MappingEvent> = MutableSharedFlow()\n    val eventFlow: SharedFlow<MappingEvent> = _eventFlow.asSharedFlow()\n    private var travelledPath: MutableList<LatLng> = mutableStateListOf()\n\n\n\n    init {\n        trackingHandler = TrackingStateHandler(state = _state, eventFlow = _eventFlow)\n        loadData()\n        observeDataChanges()\n    }\n\n    private fun observeDataChanges() {\n        subscribeToLocationUpdates()\n        subscribeToNearbyUsersChanges()\n        subscribeToRescueTransactionUpdates()\n        subscribeToTransactionLocationUpdates()\n    }\n\n    private fun loadData() {\n        if (loadDataJob?.isActive == true) return\n        loadDataJob = viewModelScope.launch(SupervisorJob() + defaultDispatcher) {\n            // TODO: Remove when the backend is ready\n            createMockUpUsers()\n            getNearbyCyclist()\n            loadRescueTransaction()\n            loadClient()\n        }\n\n    }\n\n\n    private suspend fun loadClient() {\n        coroutineScope {\n            trackingHandler.updateClient()\n        }\n    }\n\n    private suspend fun updateClient() {\n        trackingHandler.updateClient()\n    }\n\n\n    private suspend fun getNearbyCyclist() {\n        val userLocation = state.value.getCurrentLocation()\n\n        userLocation?.latitude ?: return\n        userLocation.longitude ?: return\n\n        if (state.value.nearbyCyclists != null) {\n            return\n        }\n\n        coroutineScope {\n\n            mappingUseCase.getUsersUseCase(\n                latitude = userLocation.latitude,\n                longitude = userLocation.longitude\n            ).distinctUntilChanged().catch {\n                it.handleException()\n            }.onEach {\n                it.getUser()\n                it.updateNearbyCyclists()\n                savedStateHandle[MAPPING_VM_STATE_KEY] = state.value\n            }.launchIn(this)\n\n        }\n\n    }\n\n\n    private suspend fun loadRescueTransaction() {\n        coroutineScope {\n            val transactionId = state.value.user.getTransactionId()\n            if (transactionId.isNullOrEmpty()) {\n                return@coroutineScope\n            }\n\n            mappingUseCase.getRescueTransactionByIdUseCase(transactionId).catch {\n                it.handleException()\n            }.onEach { rescueTransaction ->\n                _state.update { it.copy(rescueTransaction = rescueTransaction) }\n            }.launchIn(this).invokeOnCompletion {\n                savedStateHandle[MAPPING_VM_STATE_KEY] = state.value\n            }\n\n        }\n\n    }\n\n\n    private fun acceptRescueRequest(id: String) {\n        viewModelScope.launch(context = SupervisorJob() + defaultDispatcher) {\n\n            val rescuer = state.value.nearbyCyclists?.findUser(id) ?: return@launch\n            _state.update { it.copy(rescueRequestAcceptedUser = rescuer) }\n            val transactionId = trackingHandler.getTransactionId(rescuer)\n            val user = state.value.user\n\n            trackingHandler.checkCurrentTransactions(user = user, rescuer = rescuer) {\n\n                coroutineScope {\n                    runCatching {\n                        isLoading(true)\n                        trackingHandler.getAcceptedRescueRequestItem(\n                            transactionId = transactionId,\n                            rescuer = rescuer\n                        ).apply {\n                            mappingUseCase.createRescueTransactionUseCase(rescueTransaction = this)\n                        }\n\n                    }.onSuccess { rescueTransaction ->\n                        broadcastRescueTransaction()\n                        assignRequestTransaction(\n                            rescueTransaction = rescueTransaction,\n                            user = user,\n                            rescuer = rescuer,\n                            transactionId = transactionId\n                        )\n                        user.location?.let { broadcastRescueTransactionToRespondent(it) }\n                    }.onFailure { exception ->\n                        isLoading(false)\n                        exception.handleException()\n                    }\n                }\n\n                savedStateHandle[MAPPING_VM_STATE_KEY] = state.value\n\n            }\n        }\n    }\n\n    private fun cancelHelpRequest() {\n        viewModelScope.launch(context = defaultDispatcher) {\n            runCatching {\n                isLoading(true)\n                cancelUserHelpRequest()\n            }.onSuccess {\n                _eventFlow.emit(value = MappingEvent.CancelHelpRequestSuccess)\n                broadcastToNearbyCyclists()\n                _state.update { it.copy(rescueRequestAcceptedUser = null) }\n            }.onFailure { exception ->\n                Timber.e(\"Failed to cancel search assistance: ${exception.message}\")\n                exception.handleException()\n            }\n            isLoading(false)\n            savedStateHandle[MAPPING_VM_STATE_KEY] = state.value\n        }\n    }\n\n\n    private fun removeAssignedTransaction() {\n        viewModelScope.launch(context = defaultDispatcher) {\n            runCatching {\n                removeUserTransaction(id = getId())\n            }.onSuccess {\n                broadcastToNearbyCyclists()\n                broadcastRescueTransaction()\n                isLoading(false)\n                _eventFlow.emit(value = MappingEvent.RemoveAssignedTransactionSuccess)\n                trackingHandler.clearTransactionRoles()\n            }.onFailure { exception ->\n                isLoading(false)\n                exception.handleException()\n            }\n        }\n\n    }\n\n    private fun selectRescueeMapIcon(id: String) {\n        viewModelScope.launch(context = defaultDispatcher) {\n\n            val userLocation = state.value.user.location ?: state.value.userLocation\n\n            if (!userLocation.isLocationAvailable()) {\n                viewModelScope.launch(context = defaultDispatcher) {\n                    _eventFlow.emit(value = MappingEvent.LocationNotAvailable(\"Tracking your Location\"))\n                }\n                return@launch\n            }\n\n            calculateSelectedRescueeDistance(userLocation, id)\n\n        }\n    }\n\n    private fun respondToHelp(selectedRescuee: MapSelectedRescuee) {\n        viewModelScope.launch(context = defaultDispatcher) {\n            runCatching {\n                uploadUserProfile(onSuccess = {\n                    viewModelScope.launch(context = defaultDispatcher) {\n                        mappingUseCase.addRescueRespondentUseCase(\n                            userId = selectedRescuee.userId,\n                            respondentId = getId()\n                        )\n                    }\n                })\n            }.onSuccess {\n                _eventFlow.emit(value = MappingEvent.RespondToHelpSuccess())\n                broadcastToNearbyCyclists()\n                broadcastRescueTransaction()\n                _state.update { it.copy(respondedToHelp = true) }\n            }.onFailure {\n                it.handleException()\n            }\n\n        }\n    }\n\n    private fun showRouteDirection(origin: Point, destination: Point) {\n        viewModelScope.launch(context = defaultDispatcher) {\n            runCatching {\n                mappingUseCase.getRouteDirectionsUseCase(origin = origin, destination = destination)\n            }.onSuccess { routeDirection ->\n                _eventFlow.emit(value = MappingEvent.NewRouteDirection(routeDirection))\n            }.onFailure {\n                Timber.v(\"Failure: ${it.message}\")\n                it.handleException()\n            }\n        }\n    }\n\n\n    private suspend fun broadcastRescueTransaction() {\n        runCatching {\n            mappingUseCase.broadcastRescueTransactionUseCase()\n        }.onFailure {\n            it.handleException()\n        }\n    }\n\n    private suspend fun broadcastToNearbyCyclists() {\n        val location = state.value.userLocation ?: return\n        runCatching {\n            mappingUseCase.broadcastToNearbyCyclists(\n                locationModel = LiveLocationWSModel(\n                    latitude = location.latitude,\n                    longitude = location.longitude\n                )\n            )\n        }.onFailure {\n            it.handleException()\n        }\n    }\n\n    private fun declineRescueRequest(id: String) {\n        viewModelScope.launch(context = defaultDispatcher) {\n            runCatching {\n                isLoading(true)\n                mappingUseCase.deleteRescueRespondentUseCase(userId = getId(), respondentId = id)\n            }.onSuccess {\n                removeRescueRespondent(id)\n                broadcastToNearbyCyclists()\n            }.onFailure {\n                it.handleDeclineRescueRequest()\n            }\n            isLoading(false)\n            savedStateHandle[MAPPING_VM_STATE_KEY] = state.value\n\n        }\n    }\n\n    private suspend fun removeRescueRespondent(id: String) {\n        state.value.newRescueRequest?.request?.toMutableList()?.apply {\n            val respondentRemoved = removeAll { it.id == id }\n            if (!respondentRemoved) {\n                _eventFlow.emit(value = MappingEvent.RemoveRespondentFailed())\n                return@apply\n            }\n            _state.update {\n                it.copy(\n                    newRescueRequest = NewRescueRequestsModel(this)\n                )\n            }\n        }\n    }\n\n\n    private fun requestHelp() {\n        viewModelScope.launch(context = defaultDispatcher) {\n            runCatching {\n                uploadUserProfile(onSuccess = {\n                    viewModelScope.launch(context = defaultDispatcher) {\n                        _eventFlow.emit(MappingEvent.RequestHelpSuccess)\n                    }\n                })\n            }.onFailure {\n                it.handleException()\n            }\n        }.invokeOnCompletion {\n            savedStateHandle[MAPPING_VM_STATE_KEY] = state.value\n        }\n    }\n\n    fun onEvent(event: MappingVmEvent) {\n        when (event) {\n\n            is MappingVmEvent.SubscribeToDataChanges -> {\n                observeDataChanges()\n            }\n\n\n            is MappingVmEvent.GetRouteDirections -> {\n                showRouteDirection(origin = event.origin, destination = event.destination)\n            }\n\n            is MappingVmEvent.RespondToHelp -> {\n                respondToHelp(event.selectedRescuee)\n            }\n\n            is MappingVmEvent.SelectRescueMapIcon -> {\n                selectRescueeMapIcon(event.id)\n            }\n\n            is MappingVmEvent.RequestHelp -> {\n                requestHelp()\n            }\n\n            is MappingVmEvent.CancelRescueTransaction -> {\n                removeAssignedTransaction()\n                clearTravelledPath()\n            }\n\n\n            is MappingVmEvent.LoadData -> {\n                loadData()\n            }\n\n\n            is MappingVmEvent.DeclineRescueRequest -> {\n                declineRescueRequest(event.id)\n                clearTravelledPath()\n            }\n\n            is MappingVmEvent.AcceptRescueRequest -> {\n                acceptRescueRequest(event.id)\n            }\n\n            is MappingVmEvent.CancelRequestHelp -> {\n                cancelHelpRequest()\n                clearTravelledPath()\n            }\n\n        }\n        savedStateHandle[MAPPING_VM_STATE_KEY] = state.value\n    }\n\n\n    private suspend fun calculateSelectedRescueeDistance(userLocation: LocationModel?, id: String) {\n        val selectedRescuee = state.value.nearbyCyclists?.findUser(id) ?: return\n        val selectedRescueeLocation = selectedRescuee.location\n\n\n        runCatching {\n            isLoading(true)\n            mappingUseCase.getCalculatedDistanceUseCase(\n                startingLocation = LocationModel(\n                    latitude = userLocation?.latitude,\n                    longitude = userLocation?.longitude\n                ), destinationLocation = LocationModel(\n                    latitude = selectedRescueeLocation!!.latitude,\n                    longitude = selectedRescueeLocation.longitude\n                )\n            )\n        }.onSuccess { distance ->\n            val timeRemaining = FormatterUtils.getCalculatedETA(distance)\n            trackingHandler.showSelectedRescuee(\n                selectedRescuee = selectedRescuee,\n                distance = distance,\n                timeRemaining = timeRemaining)\n        }.onFailure {\n            _eventFlow.emit(value = MappingEvent.FailedToCalculateDistance)\n        }.also {\n            isLoading(false)\n        }\n    }\n\n\n    private suspend fun removeUserTransaction(id: String) {\n        mappingUseCase.createUserUseCase(\n            user = UserItem.removeUserTransaction(id)\n        )\n    }\n\n\n    private fun subscribeToTransactionLocationUpdates() {\n        if (getRescueTransactionUpdatesJob?.isActive == true) {\n            return\n        }\n        getTransactionLocationUpdatesJob =\n            viewModelScope.launch(context = SupervisorJob() + defaultDispatcher) {\n                mappingUseCase.getTransactionLocationUpdatesUseCase().distinctUntilChanged().catch {\n                    Timber.e(\"ERROR GETTING TRANSACTION LOCATION: ${it.message}\")\n                }.onEach { liveLocation ->\n                    trackingHandler.updateTransactionLocation(location = liveLocation)\n                    liveLocation.updateTransactionETA()\n                    liveLocation.updateTransactionDistance()\n                }.launchIn(this@launch)\n\n            }\n    }\n\n    private suspend fun LiveLocationWSModel.updateTransactionDistance() {\n        coroutineScope {\n            val rescueTransaction = state.value.userLocation\n            latitude ?: return@coroutineScope\n            longitude ?: return@coroutineScope\n\n            rescueTransaction?.let { transaction ->\n\n                val distance = mappingUseCase.getCalculatedDistanceUseCase(\n                    startingLocation = LocationModel(latitude, longitude),\n                    destinationLocation = LocationModel(transaction.latitude, transaction.longitude)\n                ).toInt()\n\n\n                if (distance <= NEAREST_METERS) {\n                    _eventFlow.emit(value = MappingEvent.DestinationReached)\n                    removeAssignedTransaction()\n                    clearTravelledPath()\n                }\n\n            }\n        }\n    }\n\n\n    private fun LiveLocationWSModel.updateTransactionETA() {\n        val userLocation = state.value.userLocation\n        userLocation ?: return\n        this.latitude ?: return\n        this.longitude ?: return\n\n        val eta = getETABetweenTwoPoints(\n            startingLocation = LocationModel(\n                latitude = this.latitude,\n                longitude = this.longitude\n            ), endLocation = userLocation\n        )\n        _state.update { it.copy(rescuerETA = eta) }\n    }\n\n    private fun getETABetweenTwoPoints(\n        startingLocation: LocationModel,\n        endLocation: LocationModel\n    ): String {\n        val distance = mappingUseCase.getCalculatedDistanceUseCase(\n            startingLocation = startingLocation,\n            destinationLocation = endLocation\n        )\n\n        return FormatterUtils.getCalculatedETA(distanceMeters = distance)\n    }\n\n\n    private suspend fun assignRequestTransaction(\n        rescueTransaction: RescueTransactionItem,\n        user: UserItem,\n        rescuer: UserItem,\n        transactionId: String\n    ) {\n\n        runCatching {\n\n            transactionId.assignRequestTransaction(\n                role = Role.RESCUEE.name.lowercase(),\n                id = user.id\n            )\n\n            transactionId.assignRequestTransaction(\n                role = Role.RESCUER.name.lowercase(),\n                id = rescuer.id\n            )\n\n        }.onSuccess {\n            broadcastToNearbyCyclists()\n            _eventFlow.emit(value = MappingEvent.AcceptRescueRequestSuccess)\n            delay(500)\n            updateTransactionETA(rescuer, rescueTransaction)\n            isLoading(false)\n            broadcastRescueTransaction()\n        }.onFailure { exception ->\n            isLoading(false)\n            exception.handleException()\n        }\n\n    }\n\n    private fun updateTransactionETA(rescuer: UserItem, rescueTransaction: RescueTransactionItem) {\n        val userLocation = state.value.userLocation ?: return\n\n        val estimatedTimeArrival = rescuer.location?.let {\n            getETABetweenTwoPoints(\n                startingLocation = it,\n                endLocation = userLocation\n            )\n        }\n        _state.update {\n            it.copy(\n                rescueTransaction = rescueTransaction,\n                rescuerETA = estimatedTimeArrival ?: \"\",\n                rescuer = rescuer\n            )\n        }\n    }\n\n    private fun isLoading(loading: Boolean) {\n        _state.update { it.copy(isLoading = loading) }\n    }\n\n\n    private suspend fun String.assignRequestTransaction(role: String, id: String?) {\n        mappingUseCase.createUserUseCase(\n            user = UserItem.empty(id = id, transactionId = this, role = role)\n        )\n    }\n\n\n    private suspend fun Throwable.handleDeclineRescueRequest() {\n        when (this) {\n            is MappingExceptions.NetworkException -> {\n                _eventFlow.emit(value = MappingEvent.NoInternetConnection)\n            }\n\n            else -> {\n                Timber.d(\"Failed to update user\")\n            }\n        }\n    }\n\n\n    private suspend fun cancelUserHelpRequest() {\n\n        mappingUseCase.createUserUseCase(\n            user = UserItem.cancelUserHelpRequest(id = getId()))\n    }\n\n\n    private fun NearbyCyclist.getUser() {\n\n        val user = findUser(id = getId())\n        _state.update { it.copy(user = user) }\n        val respondents = user.getUserRescueRespondents(this)\n        _state.update {\n            it.copy(\n                newRescueRequest = NewRescueRequestsModel(\n                    request = respondents\n                )\n            )\n        }\n    }\n\n    private fun UserItem.getUserRescueRespondents(nearbyCyclist: NearbyCyclist): List<RescueRequestItemModel> {\n        val rescueRespondentsSnapShot: MutableList<RescueRequestItemModel> = mutableListOf()\n\n        rescueRequest?.respondents?.forEach { respondent ->\n            val userRespondent = nearbyCyclist.findUser(id = respondent.clientId)\n            val distance = calculateDistance(startLocation = location, endLocation = userRespondent.location)\n\n            distance?.let {\n                val formattedETA = FormatterUtils.getCalculatedETA(distanceMeters = it)\n                rescueRespondentsSnapShot.add(\n                    element = userRespondent.toRescueRequest(\n                        distance = it.formatToDistanceKm(),\n                        eta = formattedETA\n                    )\n                )\n            }\n        }\n\n        return rescueRespondentsSnapShot.distinct()\n    }\n\n    private fun calculateDistance(startLocation: LocationModel?, endLocation: LocationModel?): Double? {\n        val startLatitude = startLocation?.latitude ?: return null\n        val startLongitude = startLocation.longitude ?: return null\n        val endLatitude = endLocation?.latitude ?: return null\n        val endLongitude = endLocation.longitude ?: return null\n\n        return mappingUseCase.getCalculatedDistanceUseCase(\n            startingLocation = LocationModel(latitude = startLatitude, longitude = startLongitude),\n            destinationLocation = LocationModel(latitude = endLatitude, longitude = endLongitude)\n        )\n    }\n\n    private fun NearbyCyclist.updateNearbyCyclists() {\n        _state.update { it.copy(nearbyCyclists = this.apply { users.distinctBy { v -> v.id } }) }\n        Timber.v(\"NEARBY CYCLISTS: ${this.users}\")\n    }\n\n    private suspend fun broadcastRescueTransactionToRespondent(location: LocationModel) {\n        val rescueTransaction = state.value.rescueTransaction ?: return\n        runCatching {\n\n            val user = state.value.user\n            mappingUseCase.broadcastRescueTransactionToRespondent(\n                LiveLocationWSModel(\n                    latitude = location.latitude,\n                    longitude = location.longitude,\n                    room = rescueTransaction.id\n                ),\n                user = user,\n                rescueTransactionItem = rescueTransaction\n            )\n\n        }.onFailure {\n            Timber.v(\"Broadcasting location to transaction failed: ${it.message}\")\n        }\n    }\n\n\n    private fun unSubscribeToTransactionLocationUpdates() {\n        getTransactionLocationUpdatesJob?.cancel()\n    }\n\n    private fun subscribeToRescueTransactionUpdates() {\n        if (getRescueTransactionUpdatesJob?.isActive == true) {\n            return\n        }\n        getRescueTransactionUpdatesJob =\n            viewModelScope.launch(context = SupervisorJob() + defaultDispatcher) {\n\n                mappingUseCase.getRescueTransactionUpdatesUseCase().catch {\n                    Timber.e(\"ERROR GETTING RESCUE TRANSACTION: ${it.message}\")\n\n                }.onEach {\n                    it.updateRescueTransaction()\n                    it.updateRescueClient()\n                    trackingHandler.checkRescueRequestAccepted(\n                        rescueTransaction = it,\n                        id = getId()\n                    )\n                }.launchIn(this@launch).invokeOnCompletion {\n                    savedStateHandle[MAPPING_VM_STATE_KEY] = state.value\n                }\n\n            }\n    }\n\n\n\n\n    private fun RescueTransaction.updateRescueTransaction() {\n        val rescueTransaction = trackingHandler.getUserRescueTransaction(this)\n        _state.update { it.copy(rescueTransaction = rescueTransaction) }\n    }\n\n    private suspend fun RescueTransaction.updateRescueClient() {\n        coroutineScope {\n            val rescueTransaction =\n                trackingHandler.getUserRescueTransaction(this@updateRescueClient)\n            _state.update { it.copy(rescueTransaction = rescueTransaction) }\n            updateClient()\n\n        }\n    }\n\n    private fun unSubscribeToRescueTransactionUpdates() {\n        getRescueTransactionUpdatesJob?.cancel()\n    }\n\n    private fun unSubscribeToNearbyUsersChanges() {\n        getUsersUpdatesJob?.cancel()\n    }\n\n    private fun subscribeToLocationUpdates() {\n        if (locationUpdatesJob?.isActive == true) {\n            return\n        }\n        locationUpdatesJob = viewModelScope.launch(context = defaultDispatcher) {\n\n            mappingUseCase.getUserLocationUseCase().catch {\n                Timber.e(\"Error Location Updates: ${it.message}\")\n            }.onEach { location ->\n                trackingHandler.updateLocation(location)\n                broadcastRescueTransactionToRespondent(location)\n                updateSpeedometer(location)\n                getNearbyCyclist()\n            }.launchIn(this@launch).invokeOnCompletion {\n                savedStateHandle[MAPPING_VM_STATE_KEY] = state.value\n            }\n        }\n    }\n\n    private fun updateSpeedometer(location: LocationModel){\n        val isUserRescuer = state.value.user.isRescuer()\n        if(isUserRescuer) {\n            trackingHandler.setSpeed(location.speed)\n            trackingHandler.getTopSpeed(location.speed)\n            travelledPath.add(element = LatLng(location.latitude!!, location.longitude!!))\n            val distance = SphericalUtil.computeLength(travelledPath).formatToDistanceKm()\n            trackingHandler.setTravelledDistance(distance)\n        }\n    }\n\n\n    private fun subscribeToNearbyUsersChanges() {\n        if (getUsersUpdatesJob?.isActive == true) {\n            return\n        }\n\n        getUsersUpdatesJob = viewModelScope.launch(context = SupervisorJob() + defaultDispatcher) {\n\n            mappingUseCase.getUserUpdatesUseCase().catch {\n                Timber.e(\"ERROR GETTING USERS: ${it.message}\")\n            }.onEach {\n                it.getUser()\n                it.updateNearbyCyclists()\n                trackingHandler.updateClient()\n            }.launchIn(this).invokeOnCompletion {\n                savedStateHandle[MAPPING_VM_STATE_KEY] = state.value\n            }\n        }\n    }\n\n    private fun unSubscribeToLocationUpdates() {\n        locationUpdatesJob?.cancel()\n    }\n\n\n    private suspend inline fun uploadUserProfile(crossinline onSuccess: () -> Unit) {\n        coroutineScope {\n            val userLocation = state.value.userLocation\n\n            if (userLocation == null) {\n                _eventFlow.emit(MappingEvent.LocationNotAvailable(reason = \"Searching for GPS\"))\n                return@coroutineScope\n            }\n\n            uploadProfile(location = userLocation, onSuccess = onSuccess)\n\n        }\n    }\n\n\n    private suspend inline fun uploadProfile(\n        location: LocationModel,\n        crossinline onSuccess: () -> Unit\n    ) {\n\n        val isProfileUploaded = state.value.profileUploaded\n\n        if (isProfileUploaded) {\n            onSuccess()\n            return\n        }\n\n        val fullAddress = mappingUseCase.getFullAddressUseCase(\n            latitude = location.latitude,\n            longitude = location.longitude\n        )\n\n        coroutineScope {\n\n            runCatching {\n                isLoading(true)\n                mappingUseCase.createUserUseCase(\n                    user = UserItem(\n                        id = getId(),\n                        name = getName(),\n                        address = fullAddress,\n                        profilePictureUrl = getPhotoUrl(),\n                        contactNumber = getPhoneNumber(),\n                        location = LocationModel(\n                            latitude = location.latitude,\n                            longitude = location.longitude\n                        ),\n                        rescueRequest = RescueRequest(), userAssistance = UserAssistanceModel()\n                    )\n                )\n                fullAddress?.let { mappingUseCase::setAddressUseCase }\n\n            }.onSuccess {\n                isLoading(false)\n                broadcastToNearbyCyclists()\n                onSuccess()\n                _state.update { it.copy(profileUploaded = true) }\n\n            }.onFailure { exception ->\n                Timber.e(\"Error uploading profile: ${exception.message}\")\n                isLoading(false)\n                exception.handleException()\n            }\n        }\n    }\n\n\n    private suspend fun Throwable.handleException() {\n        trackingHandler.handleException(this)\n        savedStateHandle[MAPPING_VM_STATE_KEY] = state.value\n    }\n\n\n    private suspend fun createMockUpUsers() {\n        runCatching {\n            mappingUseCase.createMockUsers()\n        }.onSuccess {\n            Timber.v(\"CREATED MOCK USERS!\")\n            broadcastToNearbyCyclists()\n        }.onFailure {\n            Timber.e(\"FAILED TO CREATE MOCK USERS: ${it.message}\")\n        }\n    }\n\n\n    override fun onCleared() {\n        super.onCleared()\n        unSubscribeToLocationUpdates()\n        unSubscribeToNearbyUsersChanges()\n        unSubscribeToRescueTransactionUpdates()\n        unSubscribeToTransactionLocationUpdates()\n\n    }\n\n\n    private fun getId(): String = authUseCase.getIdUseCase()\n\n    private suspend fun getName(): String = settingUseCase.getNameUseCase()\n\n    private suspend fun getPhoneNumber(): String =\n        settingUseCase.getPhoneNumberUseCase()\n\n    private suspend fun getPhotoUrl() = settingUseCase.getPhotoUrlUseCase()\n\n    private fun clearTravelledPath(){\n        travelledPath = mutableListOf()\n    }\n\n\n\n}\n\n\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/MappingViewModel.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/MappingViewModel.kt
---- a/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/MappingViewModel.kt	(revision cea8388e8c150db9962f0c7e4615c7b6f9c7d83e)
-+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/MappingViewModel.kt	(date 1692092204062)
-@@ -79,11 +79,15 @@
-     private val _eventFlow: MutableSharedFlow<MappingEvent> = MutableSharedFlow()
-     val eventFlow: SharedFlow<MappingEvent> = _eventFlow.asSharedFlow()
-     private var travelledPath: MutableList<LatLng> = mutableStateListOf()
--
-+    private var _nearbyCyclistState = mutableStateListOf<UserItem>()
-+    val nearbyCyclistState = _nearbyCyclistState
- 
- 
-     init {
--        trackingHandler = TrackingStateHandler(state = _state, eventFlow = _eventFlow)
-+        trackingHandler = TrackingStateHandler(
-+            state = _state,
-+            eventFlow = _eventFlow,
-+            nearbyCyclist = _nearbyCyclistState)
-         loadData()
-         observeDataChanges()
-     }
-@@ -125,7 +129,7 @@
-         userLocation?.latitude ?: return
-         userLocation.longitude ?: return
- 
--        if (state.value.nearbyCyclists != null) {
-+        if (_nearbyCyclistState.isNotEmpty()) {
-             return
-         }
- 
-@@ -167,10 +171,11 @@
-     }
- 
- 
-+
-     private fun acceptRescueRequest(id: String) {
-         viewModelScope.launch(context = SupervisorJob() + defaultDispatcher) {
- 
--            val rescuer = state.value.nearbyCyclists?.findUser(id) ?: return@launch
-+            val rescuer = _nearbyCyclistState?.findUser(id) ?: return@launch
-             _state.update { it.copy(rescueRequestAcceptedUser = rescuer) }
-             val transactionId = trackingHandler.getTransactionId(rescuer)
-             val user = state.value.user
-@@ -425,7 +430,7 @@
- 
- 
-     private suspend fun calculateSelectedRescueeDistance(userLocation: LocationModel?, id: String) {
--        val selectedRescuee = state.value.nearbyCyclists?.findUser(id) ?: return
-+        val selectedRescuee = _nearbyCyclistState?.findUser(id) ?: return
-         val selectedRescueeLocation = selectedRescuee.location
- 
- 
-@@ -662,8 +667,7 @@
-     }
- 
-     private fun NearbyCyclist.updateNearbyCyclists() {
--        _state.update { it.copy(nearbyCyclists = this.apply { users.distinctBy { v -> v.id } }) }
--        Timber.v("NEARBY CYCLISTS: ${this.users}")
-+        _nearbyCyclistState.addAll(this.users)
-     }
- 
-     private suspend fun broadcastRescueTransactionToRespondent(location: LocationModel) {
-Index: app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chat/chats/ChatsViewModel.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.cyclistance.feature_messaging.presentation.chat.chats\n\nimport androidx.compose.runtime.mutableStateListOf\nimport androidx.lifecycle.SavedStateHandle\nimport androidx.lifecycle.ViewModel\nimport androidx.lifecycle.viewModelScope\nimport com.example.cyclistance.core.utils.constants.MessagingConstants\nimport com.example.cyclistance.core.utils.constants.MessagingConstants.MESSAGING_VM_STATE_KEY\nimport com.example.cyclistance.feature_messaging.domain.model.helper.MessagingUserHandler\nimport com.example.cyclistance.feature_messaging.domain.model.ui.chats.ChatItemModel\nimport com.example.cyclistance.feature_messaging.domain.model.ui.chats.MessagingUserItemModel\nimport com.example.cyclistance.feature_messaging.domain.model.ui.chats.MessagingUserModel\nimport com.example.cyclistance.feature_messaging.domain.model.ui.chats.MessagingUserModel.Companion.filterWithout\nimport com.example.cyclistance.feature_messaging.domain.model.ui.chats.MessagingUserModel.Companion.findUser\nimport com.example.cyclistance.feature_messaging.domain.use_case.MessagingUseCase\nimport com.example.cyclistance.feature_messaging.presentation.chat.chats.event.ChatVmEvent\nimport com.example.cyclistance.feature_messaging.presentation.chat.chats.state.ChatState\nimport dagger.hilt.android.lifecycle.HiltViewModel\nimport kotlinx.coroutines.SupervisorJob\nimport kotlinx.coroutines.coroutineScope\nimport kotlinx.coroutines.flow.MutableStateFlow\nimport kotlinx.coroutines.flow.asStateFlow\nimport kotlinx.coroutines.flow.update\nimport kotlinx.coroutines.launch\nimport timber.log.Timber\nimport javax.inject.Inject\n\n@HiltViewModel\nclass ChatsViewModel @Inject constructor(\n    private val savedStateHandle: SavedStateHandle,\n    private val messagingUseCase: MessagingUseCase) : ViewModel() {\n\n    private val _state = MutableStateFlow(savedStateHandle[MESSAGING_VM_STATE_KEY] ?: ChatState())\n    val state = _state.asStateFlow()\n\n    private val messageUserFlow = MutableStateFlow(MessagingUserModel())\n\n\n    private val _chatsState = mutableStateListOf<Pair<MessagingUserItemModel, ChatItemModel>>()\n    val chatsState: List<Pair<MessagingUserItemModel, ChatItemModel>> = _chatsState\n\n    init {\n        refreshToken()\n        initializeListener()\n        saveState()\n    }\n\n\n    fun onEvent(event: ChatVmEvent) {\n        when (event) {\n            is ChatVmEvent.RefreshChat -> {\n                _chatsState.clear()\n                removeChatListener()\n                removeUserListener()\n                initializeListener()\n            }\n        }\n    }\n\n\n    private fun isLoading(isLoading: Boolean) {\n        _state.update { it.copy(isLoading = isLoading) }\n    }\n\n    private fun initializeListener() {\n        viewModelScope.launch(SupervisorJob()) {\n            addUserListener()\n            addChatListener()\n        }\n\n    }\n\n    private suspend fun addUserListener() {\n\n        coroutineScope {\n            runCatching {\n                messagingUseCase.addUserListenerUseCase(onNewMessageUser = { messageUser ->\n                    this.launch(SupervisorJob()) {\n                        messageUserFlow.emit(value = messageUser)\n                    }\n                })\n            }.onFailure {\n                Timber.e(\"Failed to retrieve chats ${it.message}\")\n            }\n            saveState()\n        }\n    }\n\n    private fun saveState() {\n        savedStateHandle[MessagingConstants.SEARCH_USER_VM_STATE_KEY] = _state.value\n    }\n\n    private suspend fun addChatListener() {\n        coroutineScope {\n            runCatching {\n                messagingUseCase.addChatListenerUseCase(onAddedChat = { chat ->\n                    this.launch(SupervisorJob()) {\n                        handleAddChat(chat)\n                    }\n                }, onModifiedChat = { chat ->\n                    handleModifiedChat(chat)\n                })\n\n            }.onFailure {\n                Timber.e(\"Failed to retrieve chats ${it.message}\")\n            }.also {\n                isLoading(false)\n                saveState()\n            }\n        }\n    }\n\n\n    private suspend fun handleAddChat(chat: ChatItemModel) {\n        val uid = messagingUseCase.getUidUseCase()\n        messageUserFlow.collect { messageUser ->\n            val matchedMessageUser = messageUser.filterWithout(uid).findUser(chat.conversionId)\n            _state.update { it.copy(messageUserInfo = messageUser.findUser(uid)) }\n            val messagingUserHandler = matchedMessageUser?.let { foundUser ->\n                MessagingUserHandler(\n                    messagingUserItem = foundUser,\n                    chatItem = chat,\n                    chats = _chatsState)\n            }\n            messagingUserHandler?.handleNewAddedChat()\n            isLoading(false)\n        }\n\n    }\n\n\n    private fun handleModifiedChat(chat: ChatItemModel) {\n        val uid = messagingUseCase.getUidUseCase()\n        _state.update { it.copy(messageUserInfo = messageUserFlow.value.findUser(uid)) }\n\n        val matchedMessageUser = messageUserFlow.value.findUser(chat.conversionId)\n        val messagingUserHandler = matchedMessageUser?.let { foundUser ->\n            MessagingUserHandler(\n                messagingUserItem = foundUser,\n                chatItem = chat,\n                chats = _chatsState)\n        }\n        messagingUserHandler?.handleModifiedChat()\n        isLoading(false)\n    }\n\n\n    private fun removeChatListener() {\n        messagingUseCase.removeChatListenerUseCase()\n    }\n\n    private fun removeUserListener() {\n        messagingUseCase.removeUserListenerUseCase()\n    }\n\n    private fun refreshToken() {\n        viewModelScope.launch(SupervisorJob()) {\n            runCatching {\n                isLoading(true)\n                messagingUseCase.refreshTokenUseCase()\n            }.onSuccess {\n                Timber.v(\"Successfully refreshed token\")\n            }.onFailure {\n                Timber.e(\"Failed to refresh token ${it.message}\")\n            }\n\n        }\n        saveState()\n    }\n\n    override fun onCleared() {\n        super.onCleared()\n        removeChatListener()\n        removeUserListener()\n    }\n}\n\n\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chat/chats/ChatsViewModel.kt b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chat/chats/ChatsViewModel.kt
---- a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chat/chats/ChatsViewModel.kt	(revision cea8388e8c150db9962f0c7e4615c7b6f9c7d83e)
-+++ b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chat/chats/ChatsViewModel.kt	(date 1692090368272)
-@@ -22,6 +22,7 @@
- import kotlinx.coroutines.flow.asStateFlow
- import kotlinx.coroutines.flow.update
- import kotlinx.coroutines.launch
-+import okhttp3.internal.toImmutableList
- import timber.log.Timber
- import javax.inject.Inject
- 
-@@ -37,7 +38,7 @@
- 
- 
-     private val _chatsState = mutableStateListOf<Pair<MessagingUserItemModel, ChatItemModel>>()
--    val chatsState: List<Pair<MessagingUserItemModel, ChatItemModel>> = _chatsState
-+    val chatsState: List<Pair<MessagingUserItemModel, ChatItemModel>> = _chatsState.toImmutableList()
- 
-     init {
-         refreshToken()
-Index: app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/components/MappingScreenContent.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.components\n\nimport androidx.compose.animation.AnimatedVisibility\nimport androidx.compose.animation.core.tween\nimport androidx.compose.animation.expandVertically\nimport androidx.compose.animation.fadeIn\nimport androidx.compose.animation.fadeOut\nimport androidx.compose.animation.shrinkVertically\nimport androidx.compose.foundation.layout.Box\nimport androidx.compose.foundation.layout.fillMaxSize\nimport androidx.compose.foundation.layout.fillMaxWidth\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.material.BottomSheetScaffoldState\nimport androidx.compose.material.CircularProgressIndicator\nimport androidx.compose.material.ExperimentalMaterialApi\nimport androidx.compose.material.MaterialTheme\nimport androidx.compose.material.Surface\nimport androidx.compose.runtime.Composable\nimport androidx.compose.runtime.derivedStateOf\nimport androidx.compose.runtime.getValue\nimport androidx.compose.runtime.remember\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.platform.LocalConfiguration\nimport androidx.compose.ui.unit.dp\nimport androidx.constraintlayout.compose.ConstraintLayout\nimport androidx.constraintlayout.compose.Dimension\nimport com.example.cyclistance.core.presentation.dialogs.no_internet_dialog.NoInternetDialog\nimport com.example.cyclistance.core.presentation.dialogs.permissions_dialog.DialogForegroundLocationPermission\nimport com.example.cyclistance.core.presentation.dialogs.permissions_dialog.DialogPhonePermission\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.components.emergency_call.EmergencyCallDialog\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.state.EmergencyCallState\nimport com.example.cyclistance.feature_mapping.domain.model.ui.rescue.CancelledRescueModel\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.components.banner.MappingExpandableBanner\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.components.bottomSheet.MappingBottomSheet\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.components.buttons.RequestHelpButton\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.components.buttons.RespondToHelpButton\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.components.fabs.ExpandableFABSection\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.components.fabs.FloatingButtonSection\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.components.request.MappingRequestAccepted\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.components.request.MappingRequestCancelled\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.components.rescue_request.RescueRequestDialog\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.components.rescue_results.RescueResultsDialog\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.components.sino_track.SinoTrackWebView\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.event.MappingUiEvent\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.state.MappingState\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.state.MappingUiState\nimport com.google.accompanist.permissions.ExperimentalPermissionsApi\nimport com.google.accompanist.permissions.MultiplePermissionsState\nimport com.google.accompanist.permissions.rememberMultiplePermissionsState\nimport com.mapbox.mapboxsdk.maps.MapboxMap\n\n\n@OptIn(ExperimentalPermissionsApi::class, ExperimentalMaterialApi::class)\n@Composable\nfun MappingScreenContent(\n    modifier: Modifier,\n    bottomSheetScaffoldState: BottomSheetScaffoldState,\n    state: MappingState,\n    emergencyState: EmergencyCallState,\n    mapboxMap: MapboxMap?,\n    hasTransaction: Boolean = false,\n    isRescueCancelled: Boolean = false,\n    isNavigating: Boolean,\n    uiState: MappingUiState,\n    locationPermissionState: MultiplePermissionsState = rememberMultiplePermissionsState(permissions = emptyList()),\n    event: (MappingUiEvent) -> Unit = {},\n) {\n\n    val respondentCount by remember(state.newRescueRequest?.request?.size) {\n        derivedStateOf { (state.newRescueRequest?.request)?.size ?: 0 }\n    }\n\n\n    val configuration = LocalConfiguration.current\n\n    Surface(\n        modifier = modifier\n            .fillMaxSize(),\n        color = MaterialTheme.colors.background) {\n\n\n        Box {\n\n            if (uiState.isRescueRequestDialogVisible) {\n                RescueRequestDialog(\n                    modifier = Modifier\n                        .fillMaxSize(),\n                    mappingState = state,\n                    uiState = uiState,\n                    event = event\n                )\n            }\n\n\n            if(uiState.isRescueResultsDialogVisible){\n\n                RescueResultsDialog(\n                    modifier = Modifier.fillMaxSize(),\n                    mappingState = state,\n                    uiState = uiState,\n                    event = event\n                )\n\n            }\n\n\n            MappingBottomSheet(\n                state = state,\n                onClickRescueArrivedButton = { event(MappingUiEvent.RescueArrivedConfirmed) },\n                onClickReachedDestinationButton = { event(MappingUiEvent.DestinationReachedConfirmed) },\n                onClickCancelSearchButton = { event(MappingUiEvent.CancelSearchConfirmed) },\n                onClickCallRescueTransactionButton = { event(MappingUiEvent.CallRescueTransaction) },\n                onClickChatRescueTransactionButton = { event(MappingUiEvent.ChatRescueTransaction) },\n                onClickCancelRescueTransactionButton = { event(MappingUiEvent.CancelRescueTransaction) },\n                bottomSheetScaffoldState = bottomSheetScaffoldState,\n                bottomSheetType = uiState.bottomSheetType,\n                modifier = Modifier\n                    .fillMaxWidth()\n                    .padding(horizontal = 12.dp),\n                onClickReportIncident = { event(MappingUiEvent.OnReportIncident(it)) }) {\n\n\n                ConstraintLayout(modifier = Modifier.fillMaxSize()) {\n\n                    val (mapScreen, requestHelpButton, circularProgressbar, dialog, respondToHelpButton, fabSection, expandableFabSection) = createRefs()\n\n\n                    MappingMapsScreen(\n                        state = state,\n                        modifier = Modifier.constrainAs(mapScreen) {\n                            top.linkTo(parent.top)\n                            end.linkTo(parent.end)\n                            start.linkTo(parent.start)\n                            bottom.linkTo(parent.bottom)\n                        },\n                        hasTransaction = hasTransaction,\n                        isRescueCancelled = isRescueCancelled,\n                        mapboxMap = mapboxMap,\n                        routeDirection = uiState.routeDirection,\n                        isNavigating = isNavigating,\n                        event = event,\n                        uiState = uiState\n                    )\n\n\n\n\n                    AnimatedVisibility(\n                        visible = uiState.mapSelectedRescuee != null,\n                        enter = expandVertically(expandFrom = Alignment.Top) { 20 },\n                        exit = shrinkVertically(animationSpec = tween()) { fullHeight ->\n                            fullHeight / 2\n                        },\n                    ) {\n                        if (uiState.mapSelectedRescuee != null) {\n                            MappingExpandableBanner(\n                                modifier = Modifier\n                                    .padding(all = 6.dp)\n                                    .fillMaxWidth(), banner = uiState.mapSelectedRescuee,\n                                onClickDismissButton = { event(MappingUiEvent.DismissBanner) })\n                        }\n                    }\n\n                    FloatingButtonSection(\n                        modifier = Modifier\n                            .constrainAs(fabSection) {\n                                end.linkTo(parent.end, margin = 8.dp)\n                                bottom.linkTo(\n                                    parent.bottom,\n                                    margin = (configuration.screenHeightDp / 2.5).dp)\n                            },\n                        locationPermissionGranted = locationPermissionState.allPermissionsGranted,\n                        onClickLocateUserButton = { event(MappingUiEvent.LocateUser) },\n                        onClickRouteOverviewButton = { event(MappingUiEvent.RouteOverview) },\n                        onClickRecenterButton = { event(MappingUiEvent.RecenterRoute) },\n                        onClickOpenNavigationButton = { event(MappingUiEvent.OpenNavigation) },\n                        isNavigating = isNavigating,\n                        uiState = uiState\n                    )\n\n\n\n\n                    AnimatedVisibility(\n                        visible = bottomSheetScaffoldState.bottomSheetState.isCollapsed,\n                        enter = fadeIn(),\n                        exit = fadeOut(), modifier = Modifier.constrainAs(expandableFabSection) {\n                            end.linkTo(parent.end, margin = 8.dp)\n                            bottom.linkTo(parent.bottom, margin = 15.dp)\n                        }) {\n\n                        ExpandableFABSection(\n                            onClickEmergencyCall = { event(MappingUiEvent.ShowEmergencyCallDialog) },\n                            onClickFamilyTracker = { event(MappingUiEvent.OpenFamilyTracker) },\n                            onClickRescueRequest = { event(MappingUiEvent.ShowRescueRequestDialog) },\n                            onClickFab = { event(MappingUiEvent.OnToggleExpandableFAB) },\n                            onClickBikeTracker = { event(MappingUiEvent.ShowSinoTrackWebView) },\n                            isFabExpanded = uiState.isFabExpanded,\n                            badgeCount = respondentCount\n                        )\n                    }\n\n\n                    val buttonVisible =\n                        isNavigating.not() && uiState.isFabExpanded.not() && bottomSheetScaffoldState.bottomSheetState.isCollapsed\n                    val requestHelpVisible = uiState.requestHelpButtonVisible && buttonVisible\n                    val respondToHelpVisible =\n                        uiState.requestHelpButtonVisible.not() && buttonVisible\n\n                    RequestHelpButton(\n                        modifier = Modifier.constrainAs(requestHelpButton) {\n                            bottom.linkTo(parent.bottom, margin = 15.dp)\n                            end.linkTo(parent.end)\n                            start.linkTo(parent.start)\n                        }, onClickRequestHelpButton = { event(MappingUiEvent.RequestHelp) },\n                        state = state,\n                        visible = requestHelpVisible\n\n                    )\n\n                    RespondToHelpButton(\n                        modifier = Modifier.constrainAs(respondToHelpButton) {\n                            bottom.linkTo(parent.bottom, margin = 15.dp)\n                            end.linkTo(parent.end)\n                            start.linkTo(parent.start)\n                        },\n                        onClickRespondButton = { event(MappingUiEvent.RespondToHelp) },\n                        state = state,\n                        visible = respondToHelpVisible\n                    )\n\n                    if (state.isLoading) {\n                        CircularProgressIndicator(\n                            modifier = Modifier.constrainAs(\n                                circularProgressbar) {\n                                top.linkTo(parent.top)\n                                end.linkTo(parent.end)\n                                start.linkTo(parent.start)\n                                bottom.linkTo(parent.bottom)\n                                this.centerTo(parent)\n                            })\n                    }\n\n\n                    if (uiState.isEmergencyCallDialogVisible) {\n                        EmergencyCallDialog(\n                            modifier = Modifier.constrainAs(dialog) {\n                                end.linkTo(parent.end)\n                                start.linkTo(parent.start)\n                                bottom.linkTo(parent.bottom)\n                                width = Dimension.matchParent\n                                height = Dimension.wrapContent\n                            },\n                            onDismiss = { event(MappingUiEvent.DismissEmergencyCallDialog) },\n                            emergencyCallModel = emergencyState.emergencyCallModel,\n                            onClick = {\n                                event(\n                                    MappingUiEvent.OnEmergencyCall(\n                                        it.phoneNumber\n                                    )\n                                )\n                            }, onAddContact = {\n                                event(MappingUiEvent.OnAddEmergencyContact)\n                                event(MappingUiEvent.DismissEmergencyCallDialog)\n                            }\n\n                        )\n                    }\n\n                    if (uiState.isNoInternetVisible) {\n                        NoInternetDialog(\n                            onDismiss = { event(MappingUiEvent.DismissNoInternetDialog) },\n                            modifier = Modifier.constrainAs(dialog) {\n                                end.linkTo(parent.end)\n                                start.linkTo(parent.start)\n                                bottom.linkTo(parent.bottom)\n                                width = Dimension.matchParent\n                                height = Dimension.wrapContent\n                            })\n                    }\n\n                    if (uiState.locationPermissionDialogVisible) {\n                        DialogForegroundLocationPermission(\n                            modifier = Modifier.constrainAs(\n                                dialog) {\n                                end.linkTo(parent.end)\n                                start.linkTo(parent.start)\n                                bottom.linkTo(parent.bottom)\n                                height = Dimension.wrapContent\n                                centerTo(parent)\n                            }, onDismiss = { event(MappingUiEvent.DismissLocationPermission) }\n                        )\n                    }\n\n                    if (uiState.phonePermissionDialogVisible) {\n                        DialogPhonePermission(modifier = Modifier.constrainAs(dialog) {\n                            end.linkTo(parent.end)\n                            start.linkTo(parent.start)\n                            bottom.linkTo(parent.bottom)\n                            height = Dimension.wrapContent\n                            centerTo(parent)\n                        }, onDismiss = { event(MappingUiEvent.DismissPhonePermission) })\n                    }\n\n                    AnimatedVisibility(\n                        visible = isRescueCancelled && uiState.rescueRequestAccepted.not(),\n                        enter = fadeIn(),\n                        exit = fadeOut(animationSpec = tween(durationMillis = 220))) {\n\n                        val rescueTransaction = state.rescueTransaction ?: return@AnimatedVisibility\n\n                        MappingRequestCancelled(\n                            modifier = Modifier.fillMaxSize(),\n                            onClickOkButton = { event(MappingUiEvent.CancelledRescueConfirmed) },\n                            cancelledRescueModel = CancelledRescueModel(\n                                transactionID = rescueTransaction.id,\n                                rescueCancelledBy = rescueTransaction.getCancellationName(),\n                                reason = rescueTransaction.getCancellationReason(),\n                                message = rescueTransaction.getCancellationMessage()\n                            ))\n                    }\n\n                    AnimatedVisibility(\n                        visible = uiState.rescueRequestAccepted && isRescueCancelled.not(),\n                        enter = fadeIn(),\n                        exit = fadeOut(animationSpec = tween(durationMillis = 220))) {\n                        MappingRequestAccepted(\n                            modifier = Modifier.fillMaxSize(),\n                            onClickOkButton = { event(MappingUiEvent.RescueRequestAccepted) },\n                            acceptedName = state.rescuee?.name ?: \"Name placeholder\",\n                        )\n                    }\n                }\n            }\n\n\n            if (uiState.isSinoTrackWebViewVisible) {\n                SinoTrackWebView(onDismiss = { event(MappingUiEvent.DismissSinoTrackWebView) })\n            }\n\n        }\n    }\n}\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/components/MappingScreenContent.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/components/MappingScreenContent.kt
---- a/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/components/MappingScreenContent.kt	(revision cea8388e8c150db9962f0c7e4615c7b6f9c7d83e)
-+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/components/MappingScreenContent.kt	(date 1692090369839)
-@@ -30,6 +30,7 @@
- import com.example.cyclistance.core.presentation.dialogs.permissions_dialog.DialogPhonePermission
- import com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.components.emergency_call.EmergencyCallDialog
- import com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.state.EmergencyCallState
-+import com.example.cyclistance.feature_mapping.domain.model.api.user.UserItem
- import com.example.cyclistance.feature_mapping.domain.model.ui.rescue.CancelledRescueModel
- import com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.components.banner.MappingExpandableBanner
- import com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.components.bottomSheet.MappingBottomSheet
-@@ -63,6 +64,7 @@
-     isRescueCancelled: Boolean = false,
-     isNavigating: Boolean,
-     uiState: MappingUiState,
-+    nearbyCyclist: List<UserItem>,
-     locationPermissionState: MultiplePermissionsState = rememberMultiplePermissionsState(permissions = emptyList()),
-     event: (MappingUiEvent) -> Unit = {},
- ) {
-@@ -140,7 +142,8 @@
-                         routeDirection = uiState.routeDirection,
-                         isNavigating = isNavigating,
-                         event = event,
--                        uiState = uiState
-+                        uiState = uiState,
-+                        nearbyCyclist = nearbyCyclist,
-                     )
- 
- 
-Index: app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/MappingScreen.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.cyclistance.feature_mapping.presentation.mapping_main_screen\n\nimport android.Manifest\nimport android.annotation.SuppressLint\nimport android.app.Activity.RESULT_OK\nimport android.widget.Toast\nimport androidx.activity.compose.rememberLauncherForActivityResult\nimport androidx.activity.result.contract.ActivityResultContracts\nimport androidx.compose.animation.*\nimport androidx.compose.foundation.layout.*\nimport androidx.compose.material.*\nimport androidx.compose.runtime.*\nimport androidx.compose.runtime.saveable.rememberSaveable\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.platform.LocalContext\nimport androidx.hilt.navigation.compose.hiltViewModel\nimport androidx.lifecycle.compose.collectAsStateWithLifecycle\nimport androidx.navigation.NavController\nimport com.example.cyclistance.R\nimport com.example.cyclistance.core.domain.model.AlertDialogState\nimport com.example.cyclistance.core.utils.connection.ConnectionStatus.checkLocationSetting\nimport com.example.cyclistance.core.utils.connection.ConnectionStatus.hasGPSConnection\nimport com.example.cyclistance.core.utils.constants.EmergencyCallConstants.SHOULD_OPEN_CONTACT_DIALOG\nimport com.example.cyclistance.core.utils.constants.MappingConstants.DEFAULT_CAMERA_ANIMATION_DURATION\nimport com.example.cyclistance.core.utils.constants.MappingConstants.FAST_CAMERA_ANIMATION_DURATION\nimport com.example.cyclistance.core.utils.constants.MappingConstants.LOCATE_USER_ZOOM_LEVEL\nimport com.example.cyclistance.core.utils.constants.MappingConstants.ROUTE_SOURCE_ID\nimport com.example.cyclistance.core.utils.constants.MappingConstants.SELECTION_RESCUEE_TYPE\nimport com.example.cyclistance.core.utils.constants.MappingConstants.SELECTION_RESCUER_TYPE\nimport com.example.cyclistance.core.utils.constants.NavigationConstants.LATITUDE\nimport com.example.cyclistance.core.utils.constants.NavigationConstants.LONGITUDE\nimport com.example.cyclistance.core.utils.contexts.callPhoneNumber\nimport com.example.cyclistance.core.utils.contexts.startLocationServiceIntentAction\nimport com.example.cyclistance.core.utils.permissions.requestPermission\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.EmergencyCallViewModel\nimport com.example.cyclistance.feature_mapping.domain.model.Role\nimport com.example.cyclistance.feature_mapping.domain.model.ui.camera.CameraState\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.components.*\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.event.MappingEvent\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.event.MappingUiEvent\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.event.MappingVmEvent\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.state.MappingUiState\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.utils.BottomSheetType\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.utils.MappingUtils\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.utils.MappingUtils.animateCameraPosition\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.utils.MappingUtils.changeToNormalPuckIcon\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.utils.MappingUtils.openNavigationApp\nimport com.example.cyclistance.navigation.Screens\nimport com.example.cyclistance.navigation.nav_graph.navigateScreen\nimport com.google.accompanist.permissions.ExperimentalPermissionsApi\nimport com.google.accompanist.permissions.isGranted\nimport com.google.accompanist.permissions.rememberMultiplePermissionsState\nimport com.google.accompanist.permissions.rememberPermissionState\nimport com.mapbox.core.constants.Constants.PRECISION_6\nimport com.mapbox.geojson.Feature\nimport com.mapbox.geojson.FeatureCollection\nimport com.mapbox.geojson.LineString\nimport com.mapbox.geojson.Point\nimport com.mapbox.mapboxsdk.geometry.LatLng\nimport com.mapbox.mapboxsdk.location.LocationComponentActivationOptions\nimport com.mapbox.mapboxsdk.location.modes.CameraMode\nimport com.mapbox.mapboxsdk.location.modes.RenderMode\nimport com.mapbox.mapboxsdk.maps.MapboxMap\nimport com.mapbox.mapboxsdk.style.sources.GeoJsonSource\nimport kotlinx.coroutines.flow.collectLatest\nimport kotlinx.coroutines.launch\nimport timber.log.Timber\n\n\n@SuppressLint(\"MissingPermission\")\n@OptIn(ExperimentalMaterialApi::class)\n@ExperimentalPermissionsApi\n@Composable\nfun MappingScreen(\n    hasInternetConnection: Boolean,\n    mappingViewModel: MappingViewModel = hiltViewModel(),\n    emergencyViewModel: EmergencyCallViewModel = hiltViewModel(),\n    paddingValues: PaddingValues,\n    isNavigating: Boolean,\n    onChangeNavigatingState: (isNavigating: Boolean) -> Unit,\n    navController: NavController) {\n\n\n    val context = LocalContext.current\n    val state by mappingViewModel.state.collectAsStateWithLifecycle()\n    val emergencyState by emergencyViewModel.state.collectAsStateWithLifecycle()\n    val coroutineScope = rememberCoroutineScope()\n\n    var uiState by rememberSaveable { mutableStateOf(MappingUiState()) }\n    var cameraState by rememberSaveable { mutableStateOf(CameraState()) }\n    val locationComponentOptions = MappingUtils.rememberLocationComponentOptions()\n    var mapboxMap by remember<MutableState<MapboxMap?>> {\n        mutableStateOf(null)\n    }\n\n    val bottomSheetScaffoldState = rememberBottomSheetScaffoldState(\n        bottomSheetState = rememberBottomSheetState(initialValue = BottomSheetValue.Collapsed)\n    )\n\n    val collapseBottomSheet = remember {\n        {\n            coroutineScope.launch {\n                if (bottomSheetScaffoldState.bottomSheetState.isExpanded) {\n                    bottomSheetScaffoldState.bottomSheetState.collapse()\n                }\n            }\n        }\n    }\n\n    val expandBottomSheet = remember {\n        {\n            coroutineScope.launch {\n                if (bottomSheetScaffoldState.bottomSheetState.isCollapsed) {\n                    bottomSheetScaffoldState.bottomSheetState.expand()\n                }\n            }\n        }\n    }\n\n\n    val foregroundLocationPermissionsState = rememberMultiplePermissionsState(\n        permissions = listOf(\n            Manifest.permission.ACCESS_FINE_LOCATION,\n            Manifest.permission.ACCESS_COARSE_LOCATION))\n\n\n    val userLocationAvailable by remember(\n        foregroundLocationPermissionsState.allPermissionsGranted,\n        state.userLocation) {\n        derivedStateOf {\n            foregroundLocationPermissionsState.allPermissionsGranted.and(state.userLocation != null)\n        }\n    }\n\n\n    val pulsingEnabled by remember(\n        uiState.searchingAssistance,\n        foregroundLocationPermissionsState.allPermissionsGranted\n    ) {\n        derivedStateOf { uiState.searchingAssistance.and(foregroundLocationPermissionsState.allPermissionsGranted) }\n    }\n\n\n    val showUserLocation = remember(mapboxMap, isNavigating, userLocationAvailable) {\n        {\n            mapboxMap?.style?.let { style ->\n                if (isNavigating) {\n\n                    val buildLocationComponentActivationOptions =\n                        LocationComponentActivationOptions.builder(context, style)\n                            .locationComponentOptions(locationComponentOptions.build())\n                            .build()\n                    mapboxMap?.locationComponent?.apply {\n                        activateLocationComponent(buildLocationComponentActivationOptions)\n                        isLocationComponentEnabled = userLocationAvailable\n                        cameraMode = CameraMode.NONE\n                        renderMode = RenderMode.GPS\n\n                    }\n\n                } else {\n                    val buildLocationComponentActivationOptions =\n                        LocationComponentActivationOptions.builder(context, style)\n                            .locationComponentOptions(\n                                locationComponentOptions\n                                    .changeToNormalPuckIcon(context)\n                                    .pulseEnabled(pulsingEnabled)\n                                    .build())\n                            .build()\n                    mapboxMap?.locationComponent?.apply {\n                        activateLocationComponent(buildLocationComponentActivationOptions)\n                        isLocationComponentEnabled = userLocationAvailable\n                        cameraMode = CameraMode.NONE\n                        renderMode = RenderMode.NORMAL\n                    }\n                }\n            }\n            Unit\n        }\n    }\n\n\n    val locateUser =\n        remember(userLocationAvailable, mapboxMap) {\n            { zoomLevel: Double, latLng: LatLng, cameraAnimationDuration: Int ->\n\n                val mapboxLoaded =\n                    (mapboxMap?.locationComponent != null) && (mapboxMap?.style?.isFullyLoaded\n                                                               ?: false)\n                if (userLocationAvailable && mapboxLoaded) {\n                    showUserLocation()\n                    mapboxMap?.animateCameraPosition(\n                        latLng = latLng,\n                        zoomLevel = zoomLevel,\n                        cameraAnimationDuration = cameraAnimationDuration)\n                }\n            }\n        }\n\n\n    val onInitializeMapboxMap = remember(userLocationAvailable) {\n        { mbm: MapboxMap ->\n            if (mapboxMap == null) {\n                mapboxMap = mbm\n            }\n\n            if (userLocationAvailable) {\n                val camera = cameraState\n                locateUser(camera.zoom, camera.position, FAST_CAMERA_ANIMATION_DURATION)\n\n            }\n        }\n    }\n\n\n    val settingResultRequest = rememberLauncherForActivityResult(\n        contract = ActivityResultContracts.StartIntentSenderForResult()\n    ) { activityResult ->\n        if (activityResult.resultCode == RESULT_OK) {\n            context.startLocationServiceIntentAction()\n            Timber.d(\"GPS Setting Request Accepted\")\n            return@rememberLauncherForActivityResult\n        }\n        Timber.d(\"GPS Setting Request Denied\")\n    }\n\n    val requestHelp = remember {\n        {\n            if (!context.hasGPSConnection()) {\n                context.checkLocationSetting(\n                    onDisabled = settingResultRequest::launch,\n                    onEnabled = {\n                        mappingViewModel.onEvent(\n                            event = MappingVmEvent.RequestHelp)\n\n                    })\n            } else {\n                mappingViewModel.onEvent(\n                    event = MappingVmEvent.RequestHelp)\n\n            }\n        }\n    }\n\n    val onClickRequestHelpButton = remember {\n        {\n            foregroundLocationPermissionsState.requestPermission(\n                onGranted = {\n                    context.startLocationServiceIntentAction()\n                    requestHelp()\n                }, onExplain = {\n                    uiState = uiState.copy(locationPermissionDialogVisible = true)\n                })\n\n        }\n    }\n\n\n    val showRouteDirection = remember(uiState.routeDirection, mapboxMap) {\n        {\n\n            uiState.routeDirection?.geometry?.let { geometry ->\n\n                mapboxMap?.getStyle { style ->\n                    if (style.isFullyLoaded.not() || geometry.isEmpty()) {\n                        return@getStyle\n                    }\n\n                    val routeLineSource = style.getSourceAs<GeoJsonSource>(ROUTE_SOURCE_ID)\n                    routeLineSource?.setGeoJson(\n                        FeatureCollection.fromFeature(\n                            Feature.fromGeometry(\n                                LineString.fromPolyline(geometry, PRECISION_6))))\n                }\n            }\n            Unit\n        }\n    }\n\n    val removeRouteDirection = remember(mapboxMap) {\n        {\n            mapboxMap?.getStyle { style ->\n\n                if (style.isFullyLoaded.not()) {\n                    return@getStyle\n                }\n\n                val routeLineSource = style.getSourceAs<GeoJsonSource>(ROUTE_SOURCE_ID)\n                routeLineSource?.setGeoJson(FeatureCollection.fromFeatures(arrayOf()))\n            }\n            Unit\n        }\n    }\n\n\n    val onClickLocateUserButton = remember {\n        {\n            foregroundLocationPermissionsState.requestPermission(\n                onGranted = {\n                    if (!context.hasGPSConnection()) {\n                        context.checkLocationSetting(\n                            onDisabled = settingResultRequest::launch)\n                    }\n                    state.userLocation?.let {\n                        it.latitude ?: return@let\n                        it.longitude ?: return@let\n                        val point = LatLng(it.latitude, it.longitude)\n                        locateUser(LOCATE_USER_ZOOM_LEVEL, point, DEFAULT_CAMERA_ANIMATION_DURATION)\n                    }\n\n                }, onExplain = {\n                    uiState = uiState.copy(locationPermissionDialogVisible = true)\n                })\n        }\n    }\n\n    val openNavigationApp = remember(state.rescueTransaction?.route) {\n        {\n            val rescueTransaction = state.rescueTransaction\n            rescueTransaction?.let{\n                val latitude =  it.getDestinationLatitude() ?: return@let\n                val longitude = it.getDestinationLongitude() ?: return@let\n                context.openNavigationApp(latitude = latitude, longitude = longitude)\n            }\n\n        }\n    }\n\n    val onClickRouteOverViewButton = remember(mapboxMap) {\n        {\n            mapboxMap?.locationComponent?.cameraMode = CameraMode.TRACKING\n        }\n    }\n\n    val onClickRecenterButton = remember(mapboxMap) {\n        {\n            mapboxMap?.locationComponent?.cameraMode = CameraMode.TRACKING_GPS\n        }\n    }\n\n    val onClickOpenNavigationButton = remember {\n        {\n            openNavigationApp()\n        }\n    }\n\n    val onClickCancelSearchButton = remember {\n        {\n            coroutineScope.launch {\n                collapseBottomSheet()\n            }.invokeOnCompletion {\n                mappingViewModel.onEvent(event = MappingVmEvent.CancelRequestHelp)\n                uiState = uiState.copy(searchingAssistance = false)\n            }\n            Unit\n        }\n    }\n\n    val onChangeCameraPosition = remember {\n        { _cameraState: CameraState ->\n            cameraState = _cameraState\n\n        }\n    }\n\n    val onClickCancelRescueButton = remember(state.rescuer, state.rescueTransaction) {\n        {\n            val role = state.user.transaction?.role\n            val isRescuee = role == Role.RESCUEE.name.lowercase()\n            val transactionId = state.rescueTransaction?.id\n            val selectionType = if (isRescuee) SELECTION_RESCUEE_TYPE else SELECTION_RESCUER_TYPE\n            val clientId = state.rescuer?.id ?: state.rescuee?.id\n\n            navController.navigateScreen(route = \"${Screens.MappingNavigation.Cancellation.screenRoute}/$selectionType/$transactionId/$clientId\")\n\n        }\n    }\n\n    val onDismissNoInternetDialog = remember {\n        {\n            uiState = uiState.copy(\n                isNoInternetVisible = false\n            )\n        }\n    }\n\n    val hasTransaction = remember(key1 = state.rescueTransaction, key2 = state.user.transaction) {\n        val transaction = state.rescueTransaction\n        val rescueTransactionId = state.rescueTransaction?.id ?: \"\"\n        val userTransactionId = state.user.transaction?.transactionId ?: \"\"\n        transaction != null && rescueTransactionId.isNotEmpty() && userTransactionId.isNotEmpty()\n    }\n\n    val isRescueCancelled =\n        remember(state.rescueTransaction) {\n            (state.rescueTransaction?.cancellation)?.rescueCancelled == true\n        }\n\n    val clientPhoneNumber = remember(state.rescuee, state.rescuer) {\n        val client = state.rescuee ?: state.rescuer\n        client?.contactNumber\n    }\n\n    val callClient = remember(clientPhoneNumber) {\n        {\n            clientPhoneNumber?.let(context::callPhoneNumber)\n        }\n    }\n    val phonePermissionState =\n        rememberPermissionState(permission = Manifest.permission.CALL_PHONE) { permissionGranted ->\n            if (permissionGranted) {\n                callClient()\n            }\n        }\n    val onClickChatButton = remember(clientPhoneNumber) {\n        {\n\n\n        }\n    }\n\n    val onClickCallButton = remember(clientPhoneNumber) {\n        {\n            phonePermissionState.requestPermission(\n                onGranted = {\n                    callClient()\n                },\n                onExplain = {\n                    uiState = uiState.copy(phonePermissionDialogVisible = true)\n                })\n        }\n    }\n\n    val onRequestNavigationCameraToOverview = remember(mapboxMap) {\n        {\n            val locationComponent = mapboxMap?.locationComponent\n            locationComponent?.cameraMode = CameraMode.TRACKING\n        }\n    }\n\n    val onClickOkCancelledRescue = remember {\n        {\n            mappingViewModel.onEvent(event = MappingVmEvent.CancelRescueTransaction)\n        }\n    }\n\n    val onClickRescueeMapIcon = remember {\n        { id: String ->\n            mappingViewModel.onEvent(event = MappingVmEvent.SelectRescueMapIcon(id))\n        }\n    }\n\n    val onDismissRescueeBanner = remember {\n        {\n            val isRescueeBannerVisible = uiState.mapSelectedRescuee != null\n            if (isRescueeBannerVisible) {\n                uiState = uiState.copy(\n                    mapSelectedRescuee = null,\n                    requestHelpButtonVisible = true\n                )\n            }\n        }\n    }\n\n\n    val onCollapseExpandableFAB = remember {\n        {\n            uiState = uiState.copy(\n                isFabExpanded = false\n            )\n        }\n    }\n\n\n    val onToggleExpandedFAB = remember {\n        {\n            uiState = uiState.copy(\n                isFabExpanded = !uiState.isFabExpanded\n            )\n        }\n    }\n\n    val onMapClick = remember {\n        {\n            if (uiState.bottomSheetType == BottomSheetType.ReportIncident.type) {\n                collapseBottomSheet()\n            }\n            onDismissRescueeBanner()\n            onCollapseExpandableFAB()\n\n        }\n    }\n\n    val onMapLongClick = remember {\n        {\n            onDismissRescueeBanner()\n            onCollapseExpandableFAB()\n            uiState = uiState.copy(bottomSheetType = BottomSheetType.ReportIncident.type).also {\n                expandBottomSheet()\n            }\n        }\n    }\n\n    val onClickRespondToHelpButton = remember {\n        {\n            uiState.mapSelectedRescuee?.let {\n                mappingViewModel.onEvent(\n                    event = MappingVmEvent.RespondToHelp(\n                        selectedRescuee = it\n                    ))\n            }\n            Unit\n        }\n    }\n    val onClickOkAcceptedRescue = remember {\n        {\n            onChangeNavigatingState(true)\n            uiState = uiState.copy(\n                rescueRequestAccepted = false,\n                bottomSheetType = BottomSheetType.OnGoingRescue.type\n            ).also {\n                expandBottomSheet()\n            }\n        }\n    }\n\n    val onDismissLocationPermissionDialog = remember {\n        {\n            uiState = uiState.copy(locationPermissionDialogVisible = false)\n        }\n    }\n\n    val onDismissPhonePermissionDialog = remember {\n        {\n            uiState = uiState.copy(phonePermissionDialogVisible = false)\n        }\n    }\n    val onClickCancelButton = remember {\n        { id: String ->\n            mappingViewModel.onEvent(MappingVmEvent.DeclineRescueRequest(id))\n        }\n    }\n\n    val onClickConfirmButton = remember {\n        { id: String ->\n            mappingViewModel.onEvent(MappingVmEvent.AcceptRescueRequest(id))\n        }\n    }\n\n    val onClickReportIncident = remember {\n        {\n\n        }\n    }\n\n    val showEmergencyCallDialog = remember {\n        {\n            uiState = uiState.copy(\n                isEmergencyCallDialogVisible = true\n            )\n        }\n    }\n\n    val dismissEmergencyCallDialog = remember {\n        {\n            uiState = uiState.copy(\n                isEmergencyCallDialogVisible = false\n            )\n        }\n    }\n\n    val onDismissAlertDialog = remember {\n        {\n            uiState = uiState.copy(\n                alertDialogState = AlertDialogState()\n            )\n        }\n    }\n\n    val onShowRescueRequestDialog = remember {\n        {\n            uiState = uiState.copy(\n                isRescueRequestDialogVisible = true\n            )\n        }\n    }\n\n    val onDismissRescueRequestDialog = remember {\n        {\n            uiState = uiState.copy(\n                isRescueRequestDialogVisible = false\n            )\n        }\n    }\n\n    val onDismissSinoTrackWebView = remember {\n        {\n            uiState = uiState.copy(\n                isSinoTrackWebViewVisible = false\n            )\n        }\n    }\n\n    val onShowSinoTrackWebView = remember {\n        {\n            uiState = uiState.copy(\n                isSinoTrackWebViewVisible = true\n            )\n        }\n    }\n\n    val onDismissRescueResultsDialog = remember {\n        {\n            uiState = uiState.copy(\n                isRescueResultsDialogVisible = false\n            )\n        }\n    }\n\n    val callPhoneNumber = remember {\n        { phoneNumber: String ->\n            context.callPhoneNumber(phoneNumber)\n        }\n    }\n\n    val openPhoneCallPermissionState =\n        rememberPermissionState(permission = Manifest.permission.CALL_PHONE) { permissionGranted ->\n            if (permissionGranted) {\n                uiState.selectedPhoneNumber.takeIf { it.isNotEmpty() }\n                    ?.let { callPhoneNumber(it) }\n            }\n        }\n\n    val onEmergencyCall = remember {\n        { phoneNumber: String ->\n            if (!openPhoneCallPermissionState.status.isGranted) {\n                uiState = uiState.copy(selectedPhoneNumber = phoneNumber)\n                openPhoneCallPermissionState.launchPermissionRequest()\n            } else {\n                callPhoneNumber(phoneNumber)\n            }\n        }\n    }\n\n    val onAddEmergencyContact = remember {\n        {\n            navController.navigateScreen(Screens.EmergencyCallNavigation.EmergencyCall.screenRoute + \"?$SHOULD_OPEN_CONTACT_DIALOG=${true}\")\n        }\n    }\n\n\n    LaunchedEffect(key1 = true, key2 = state.userLocation) {\n\n        mappingViewModel.eventFlow.collectLatest { event ->\n            when (event) {\n\n\n                is MappingEvent.RequestHelpSuccess -> {\n                    navController.navigateScreen(\n                        Screens.MappingNavigation.ConfirmDetails.screenRoute + \"?$LATITUDE=${state.userLocation?.latitude}&$LONGITUDE=${state.userLocation?.longitude}\")\n                }\n\n                is MappingEvent.InsufficientUserCredential -> {\n                    navController.navigateScreen(\n                        Screens.SettingsNavigation.EditProfile.screenRoute)\n                }\n\n                is MappingEvent.LocationNotAvailable -> {\n                    Toast.makeText(context, event.reason, Toast.LENGTH_SHORT).show()\n                }\n\n                is MappingEvent.RescuerLocationNotAvailable -> {\n                    Toast.makeText(context, event.reason, Toast.LENGTH_SHORT).show()\n                }\n\n                is MappingEvent.UnexpectedError -> {\n                    Toast.makeText(context, event.reason, Toast.LENGTH_SHORT).show()\n                }\n\n                is MappingEvent.UserFailed -> {\n                    Toast.makeText(context, event.reason, Toast.LENGTH_SHORT).show()\n                }\n\n                is MappingEvent.RespondToHelpSuccess -> {\n                    Toast.makeText(context, event.reason, Toast.LENGTH_SHORT).show()\n                }\n\n                is MappingEvent.AddressFailed -> {\n                    Toast.makeText(context, event.reason, Toast.LENGTH_SHORT).show()\n                }\n\n                is MappingEvent.NoInternetConnection -> {\n                    uiState = uiState.copy(\n                        isNoInternetVisible = true\n                    )\n                }\n\n                is MappingEvent.NewSelectedRescuee -> {\n                    uiState = uiState.copy(\n                        mapSelectedRescuee = event.selectedRescuee,\n                        requestHelpButtonVisible = false\n                    )\n                }\n\n                is MappingEvent.NewRouteDirection -> {\n                    uiState = uiState.copy(\n                        routeDirection = event.routeDirection\n                    )\n                }\n\n                is MappingEvent.RemoveAssignedTransactionSuccess -> {\n                    uiState = uiState.copy(\n                        rescueRequestAccepted = false,\n                        requestHelpButtonVisible = true,\n                        searchingAssistance = false,\n                        routeDirection = null,\n                        mapSelectedRescuee = null,\n                    ).also {\n                        collapseBottomSheet()\n                    }\n                    onChangeNavigatingState(false)\n\n                }\n\n                is MappingEvent.RescueRequestAccepted -> {\n                    uiState = uiState.copy(\n                        rescueRequestAccepted = true\n                    )\n                }\n\n                is MappingEvent.CancelHelpRequestSuccess -> {\n                    uiState = uiState.copy(\n                        requestHelpButtonVisible = true\n                    )\n                }\n\n                is MappingEvent.AcceptRescueRequestSuccess -> {\n                    uiState = uiState.copy(\n                        requestHelpButtonVisible = false,\n                        bottomSheetType = BottomSheetType.OnGoingRescue.type\n                    ).also {\n                        expandBottomSheet()\n                        onDismissRescueRequestDialog()\n                    }\n                }\n\n                is MappingEvent.FailedToCalculateDistance -> {\n                    Toast.makeText(context, \"Failed to Calculate Distance\", Toast.LENGTH_SHORT)\n                        .show()\n                }\n\n                is MappingEvent.DestinationReached -> {\n                    val role = state.user.transaction?.role\n                    val type = if (role == Role.RESCUEE.name.lowercase()) {\n                        BottomSheetType.RescuerArrived.type\n                    } else {\n                        BottomSheetType.DestinationReached.type\n                    }\n                    uiState = uiState.copy(bottomSheetType = type).also {\n                        expandBottomSheet()\n                    }\n\n                }\n\n                is MappingEvent.RemoveRespondentFailed -> {\n                    Toast.makeText(context, event.reason, Toast.LENGTH_SHORT).show()\n                }\n\n                is MappingEvent.RescueHasTransaction -> {\n                    uiState = uiState.copy(\n                        alertDialogState = AlertDialogState(\n                            title = \"Cannot Request\",\n                            description = \"Unfortunately the Rescuer is currently in a Rescue.\",\n                            icon = R.raw.error\n                        )\n                    )\n                }\n\n                is MappingEvent.UserHasCurrentTransaction -> {\n                    uiState = uiState.copy(\n                        alertDialogState = AlertDialogState(\n                            title = \"Cannot Request\",\n                            description = \"You can only have one transaction at a time\",\n                            icon = R.raw.error\n                        )\n                    )\n                }\n\n\n                else -> {}\n            }\n        }\n    }\n\n\n    LaunchedEffect(key1 = uiState.routeDirection, key2 = mapboxMap) {\n\n        val route = uiState.routeDirection ?: return@LaunchedEffect\n\n        if (route.geometry.isEmpty()) {\n            removeRouteDirection()\n            return@LaunchedEffect\n        }\n        showRouteDirection()\n    }\n\n\n    LaunchedEffect(\n        key1 = state.rescueTransaction?.route,\n        key2 = hasTransaction,\n        key3 = isRescueCancelled) {\n\n        val rescueTransaction = state.rescueTransaction\n\n\n        if (hasTransaction.not() || isRescueCancelled) {\n            uiState = uiState.copy(routeDirection = null)\n            return@LaunchedEffect\n        }\n\n\n        val startingLongitude = rescueTransaction?.getStartingLongitude() ?: return@LaunchedEffect\n        val startingLatitude = rescueTransaction.getStartingLatitude() ?: return@LaunchedEffect\n        val destinationLongitude = rescueTransaction.getDestinationLongitude() ?: return@LaunchedEffect\n        val destinationLatitude = rescueTransaction.getDestinationLatitude() ?: return@LaunchedEffect\n\n        mappingViewModel.onEvent(\n            event = MappingVmEvent.GetRouteDirections(\n                origin = Point.fromLngLat(startingLongitude, startingLatitude),\n                destination = Point.fromLngLat(\n                    destinationLongitude,\n                    destinationLatitude)))\n\n\n    }\n\n\n\n    LaunchedEffect(key1 = hasInternetConnection) {\n        val nearbyCyclistLoaded = state.nearbyCyclists != null\n        val userLoaded = state.user.id != null\n        val dataHaveBeenLoaded = userLoaded && nearbyCyclistLoaded\n\n        if (hasInternetConnection.not()) {\n            return@LaunchedEffect\n        }\n\n        if (dataHaveBeenLoaded.not()) {\n            mappingViewModel.onEvent(MappingVmEvent.LoadData)\n        }\n        mappingViewModel.onEvent(MappingVmEvent.SubscribeToDataChanges)\n    }\n\n\n\n    LaunchedEffect(key1 = isNavigating, key2 = userLocationAvailable, key3 = pulsingEnabled) {\n        showUserLocation()\n    }\n\n    LaunchedEffect(key1 = uiState.bottomSheetType) {\n        coroutineScope.launch {\n            if (uiState.bottomSheetType?.isNotEmpty() == true) {\n                expandBottomSheet()\n            }\n        }\n    }\n\n\n\n    LaunchedEffect(key1 = hasTransaction, key2 = isRescueCancelled) {\n\n        if (hasTransaction.not()) {\n            return@LaunchedEffect\n        }\n\n        if (isRescueCancelled) {\n            return@LaunchedEffect\n        }\n\n        onChangeNavigatingState(false)\n\n    }\n\n\n    LaunchedEffect(key1 = foregroundLocationPermissionsState.allPermissionsGranted) {\n        if (!foregroundLocationPermissionsState.allPermissionsGranted) {\n            return@LaunchedEffect\n        }\n\n        if (!context.hasGPSConnection()) {\n            context.checkLocationSetting(onDisabled = settingResultRequest::launch)\n        }\n\n        context.startLocationServiceIntentAction()\n\n    }\n\n\n\n\n\n    MappingScreenContent(\n        modifier = Modifier.padding(paddingValues),\n        state = state,\n        locationPermissionState = foregroundLocationPermissionsState,\n        bottomSheetScaffoldState = bottomSheetScaffoldState,\n        hasTransaction = hasTransaction,\n        isRescueCancelled = isRescueCancelled,\n        isNavigating = isNavigating,\n        mapboxMap = mapboxMap,\n        uiState = uiState,\n        emergencyState = emergencyState,\n        event = { event ->\n            when (event) {\n                is MappingUiEvent.RequestHelp -> onClickRequestHelpButton()\n                is MappingUiEvent.RespondToHelp -> onClickRespondToHelpButton()\n                is MappingUiEvent.CancelSearchConfirmed -> onClickCancelSearchButton()\n                is MappingUiEvent.CallRescueTransaction -> onClickCallButton()\n                is MappingUiEvent.ChatRescueTransaction -> onClickChatButton()\n                is MappingUiEvent.CancelRescueTransaction -> onClickCancelRescueButton()\n                is MappingUiEvent.CancelledRescueConfirmed -> onClickOkCancelledRescue()\n                is MappingUiEvent.OnInitializeMap -> onInitializeMapboxMap(event.mapboxMap)\n                is MappingUiEvent.RescueRequestAccepted -> onClickOkAcceptedRescue()\n                is MappingUiEvent.OnChangeCameraState -> onChangeCameraPosition(event.cameraState)\n                is MappingUiEvent.DismissNoInternetDialog -> onDismissNoInternetDialog()\n                is MappingUiEvent.RescueeMapIconSelected -> onClickRescueeMapIcon(event.id)\n                is MappingUiEvent.OnMapClick -> onMapClick()\n                is MappingUiEvent.DismissBanner -> onDismissRescueeBanner()\n                is MappingUiEvent.LocateUser -> onClickLocateUserButton()\n                is MappingUiEvent.RouteOverview -> onClickRouteOverViewButton()\n                is MappingUiEvent.RecenterRoute -> onClickRecenterButton()\n                is MappingUiEvent.OpenNavigation -> onClickOpenNavigationButton()\n                is MappingUiEvent.OnRequestNavigationCameraToOverview -> onRequestNavigationCameraToOverview()\n                is MappingUiEvent.RescueArrivedConfirmed -> {}\n                is MappingUiEvent.DestinationReachedConfirmed -> {}\n                is MappingUiEvent.DismissLocationPermission -> onDismissLocationPermissionDialog()\n                is MappingUiEvent.DismissPhonePermission -> onDismissPhonePermissionDialog()\n                is MappingUiEvent.OnToggleExpandableFAB -> onToggleExpandedFAB()\n                is MappingUiEvent.ShowEmergencyCallDialog -> showEmergencyCallDialog()\n                is MappingUiEvent.DismissEmergencyCallDialog -> dismissEmergencyCallDialog()\n                is MappingUiEvent.OpenFamilyTracker -> {}\n                is MappingUiEvent.ShowRescueRequestDialog -> onShowRescueRequestDialog()\n                is MappingUiEvent.DismissRescueRequestDialog -> onDismissRescueRequestDialog()\n                is MappingUiEvent.CancelRequestHelp -> onClickCancelButton(event.id)\n                is MappingUiEvent.ConfirmRequestHelp -> onClickConfirmButton(event.id)\n                is MappingUiEvent.DismissAlertDialog -> onDismissAlertDialog()\n                is MappingUiEvent.OnCollapseExpandableFAB -> onCollapseExpandableFAB()\n                is MappingUiEvent.OnMapLongClick -> onMapLongClick()\n                is MappingUiEvent.OnReportIncident -> onClickReportIncident()\n                is MappingUiEvent.DismissSinoTrackWebView -> onDismissSinoTrackWebView()\n                is MappingUiEvent.ShowSinoTrackWebView -> onShowSinoTrackWebView()\n                is MappingUiEvent.DismissRescueResultsDialog -> onDismissRescueResultsDialog()\n                is MappingUiEvent.OnEmergencyCall -> onEmergencyCall(event.phoneNumber)\n                is MappingUiEvent.OnAddEmergencyContact -> onAddEmergencyContact()\n\n\n            }\n        }\n\n\n    )\n\n}\n\n\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/MappingScreen.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/MappingScreen.kt
---- a/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/MappingScreen.kt	(revision cea8388e8c150db9962f0c7e4615c7b6f9c7d83e)
-+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/MappingScreen.kt	(date 1692092204082)
-@@ -86,6 +86,7 @@
-     val emergencyState by emergencyViewModel.state.collectAsStateWithLifecycle()
-     val coroutineScope = rememberCoroutineScope()
- 
-+    val nearbyCyclist = mappingViewModel.nearbyCyclistState
-     var uiState by rememberSaveable { mutableStateOf(MappingUiState()) }
-     var cameraState by rememberSaveable { mutableStateOf(CameraState()) }
-     val locationComponentOptions = MappingUtils.rememberLocationComponentOptions()
-@@ -837,7 +838,7 @@
- 
- 
-     LaunchedEffect(key1 = hasInternetConnection) {
--        val nearbyCyclistLoaded = state.nearbyCyclists != null
-+        val nearbyCyclistLoaded = nearbyCyclist.isNotEmpty()
-         val userLoaded = state.user.id != null
-         val dataHaveBeenLoaded = userLoaded && nearbyCyclistLoaded
- 
-@@ -902,6 +903,7 @@
-     MappingScreenContent(
-         modifier = Modifier.padding(paddingValues),
-         state = state,
-+        nearbyCyclist = nearbyCyclist,
-         locationPermissionState = foregroundLocationPermissionsState,
-         bottomSheetScaffoldState = bottomSheetScaffoldState,
-         hasTransaction = hasTransaction,
-Index: app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/state/MappingState.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.state\n\nimport android.os.Parcelable\nimport com.example.cyclistance.core.utils.annotations.StableState\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RescueTransactionItem\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.LocationModel\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.NearbyCyclist\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.UserItem\nimport com.example.cyclistance.feature_mapping.domain.model.ui.rescue.NewRescueRequestsModel\nimport kotlinx.parcelize.Parcelize\n\n@Parcelize\n@StableState\ndata class MappingState(\n    val isLoading: Boolean = false,\n    val userLocation: LocationModel? = null,\n    val rescueTransaction: RescueTransactionItem? = null,\n    val user: UserItem = UserItem(),\n    val rescueRequestAcceptedUser: UserItem? = null,\n    val rescuer: UserItem? = null,\n    val rescuee: UserItem? = null,\n    val profileUploaded: Boolean = false,\n    val respondedToHelp: Boolean = false,\n    val transactionLocation: LocationModel? = null,\n    val rescuerETA: String = \"\",\n    val rescuerDistance: String = \"\",\n    val nearbyCyclists: NearbyCyclist? = null,\n    val newRescueRequest: NewRescueRequestsModel? = null,\n    val speedometerState: SpeedometerState = SpeedometerState(),\n) : Parcelable{\n\n\n    fun getTravelledDistance() = speedometerState.travelledDistance\n    fun getTopSpeed() = speedometerState.topSpeed\n    fun getCurrentSpeedKph() = speedometerState.currentSpeedKph\n\n\n    fun getCurrentLocation() = user.location ?: userLocation\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/state/MappingState.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/state/MappingState.kt
---- a/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/state/MappingState.kt	(revision cea8388e8c150db9962f0c7e4615c7b6f9c7d83e)
-+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/state/MappingState.kt	(date 1692088036449)
-@@ -4,7 +4,6 @@
- import com.example.cyclistance.core.utils.annotations.StableState
- import com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RescueTransactionItem
- import com.example.cyclistance.feature_mapping.domain.model.api.user.LocationModel
--import com.example.cyclistance.feature_mapping.domain.model.api.user.NearbyCyclist
- import com.example.cyclistance.feature_mapping.domain.model.api.user.UserItem
- import com.example.cyclistance.feature_mapping.domain.model.ui.rescue.NewRescueRequestsModel
- import kotlinx.parcelize.Parcelize
-@@ -24,7 +23,6 @@
-     val transactionLocation: LocationModel? = null,
-     val rescuerETA: String = "",
-     val rescuerDistance: String = "",
--    val nearbyCyclists: NearbyCyclist? = null,
-     val newRescueRequest: NewRescueRequestsModel? = null,
-     val speedometerState: SpeedometerState = SpeedometerState(),
- ) : Parcelable{
-Index: app/src/main/java/com/example/cyclistance/core/utils/validation/FormatterUtils.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.cyclistance.core.utils.validation\n\nimport android.content.Context\nimport android.graphics.drawable.Drawable\nimport androidx.appcompat.content.res.AppCompatResources\nimport com.example.cyclistance.R\nimport com.example.cyclistance.core.utils.constants.MappingConstants\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.LocationModel\nimport java.text.SimpleDateFormat\nimport java.util.Date\nimport java.util.Locale\n\nobject FormatterUtils {\n    private const val METER_TO_KILOMETER = 1000\n\n    fun Double.formatToDistanceKm(): String {\n\n        return if (this <= 0.0) {\n            \"0 m\"\n        } else if (this < 1000) {\n            \"%.2f m\".format(this)\n        } else {\n            \"%.2f km\".format((this / METER_TO_KILOMETER))\n        }\n    }\n\n\n\n\n    // TODO: test this code\n    fun LocationModel?.isLocationAvailable() = (this?.latitude != null).and(this?.longitude != null)\n\n    fun getCalculatedETA(\n        distanceMeters: Double,\n        averageSpeedKm: Double = MappingConstants.DEFAULT_BIKE_AVERAGE_SPEED_KM): String {\n        val distanceToKm = distanceMeters / 1000\n        if (distanceToKm <= 0.0) {\n            return \"0 min\"\n        }\n        val eta = distanceToKm / averageSpeedKm\n        val hours = eta.toInt()\n        val minutes = (eta - hours) * 60\n        val minutesInt = minutes.toInt()\n        val minsFormat = if (minutesInt <= 1) \"$minutesInt min\" else \"$minutesInt mins\"\n        val hourFormat = if (hours >= 1) \"$hours hrs \" else \"\"\n        return \"$hourFormat$minsFormat\"\n    }\n\n    // TODO: test this code\n    fun String.getMapIconImageDescription(context: Context): Drawable? {\n        this.getMapIconImage().let { image ->\n            return AppCompatResources.getDrawable(context, image)\n        }\n        return null\n    }\n\n    fun String.bikeDescriptionToIcon(): Int {\n        return when (this) {\n            MappingConstants.INJURY_TEXT -> {\n                R.drawable.ic_injury\n            }\n\n            MappingConstants.BROKEN_FRAME_TEXT -> {\n                R.drawable.ic_broken_frame\n            }\n\n            MappingConstants.INCIDENT_TEXT -> {\n                R.drawable.ic_injury\n            }\n\n            MappingConstants.BROKEN_CHAIN_TEXT -> {\n                R.drawable.ic_broken_chain\n            }\n\n            MappingConstants.FLAT_TIRES_TEXT -> {\n                R.drawable.ic_flat_tire\n            }\n\n            MappingConstants.FAULTY_BRAKES_TEXT -> {\n                R.drawable.ic_faulty_brakes\n            }\n\n            else -> throw RuntimeException(\"No icon found for $this\")\n        }\n    }\n\n    fun String.getMapIconImage(): Int {\n        return when (this) {\n            MappingConstants.INJURY_TEXT -> {\n                R.drawable.ic_injury_em\n            }\n\n            MappingConstants.BROKEN_FRAME_TEXT -> {\n                R.drawable.ic_broken_frame_em\n            }\n\n            MappingConstants.INCIDENT_TEXT -> {\n                R.drawable.ic_incident_em\n            }\n\n            MappingConstants.BROKEN_CHAIN_TEXT -> {\n                R.drawable.ic_broken_chain_em\n            }\n\n            MappingConstants.FLAT_TIRES_TEXT -> {\n                R.drawable.ic_flat_tire_em\n            }\n\n            MappingConstants.FAULTY_BRAKES_TEXT -> {\n                R.drawable.ic_faulty_brakes_em\n            }\n\n            else -> throw RuntimeException(\"No icon found for $this\")\n        }\n    }\n\n\n    fun Date.toReadableDateTime(pattern: String = \"dd/MM/yyyy HH:mm\"): String {\n        return SimpleDateFormat(pattern, Locale.getDefault()).format(this)\n    }\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/core/utils/validation/FormatterUtils.kt b/app/src/main/java/com/example/cyclistance/core/utils/validation/FormatterUtils.kt
---- a/app/src/main/java/com/example/cyclistance/core/utils/validation/FormatterUtils.kt	(revision cea8388e8c150db9962f0c7e4615c7b6f9c7d83e)
-+++ b/app/src/main/java/com/example/cyclistance/core/utils/validation/FormatterUtils.kt	(date 1692089690533)
-@@ -6,6 +6,7 @@
- import com.example.cyclistance.R
- import com.example.cyclistance.core.utils.constants.MappingConstants
- import com.example.cyclistance.feature_mapping.domain.model.api.user.LocationModel
-+import com.example.cyclistance.feature_mapping.domain.model.api.user.UserItem
- import java.text.SimpleDateFormat
- import java.util.Date
- import java.util.Locale
-@@ -24,7 +25,9 @@
-         }
-     }
- 
--
-+    fun MutableList<UserItem>.findUser(id: String): UserItem {
-+        return find { it.id == id } ?: UserItem()
-+    }
- 
- 
-     // TODO: test this code
-Index: app/src/main/java/com/example/cyclistance/feature_mapping/domain/helper/TrackingStateHandler.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.cyclistance.feature_mapping.domain.helper\n\nimport com.example.cyclistance.core.utils.constants.MappingConstants\nimport com.example.cyclistance.core.utils.validation.FormatterUtils.formatToDistanceKm\nimport com.example.cyclistance.core.utils.validation.FormatterUtils.isLocationAvailable\nimport com.example.cyclistance.feature_authentication.domain.exceptions.AuthExceptions\nimport com.example.cyclistance.feature_mapping.domain.exceptions.MappingExceptions\nimport com.example.cyclistance.feature_mapping.domain.model.Role\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RescueTransaction\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RescueTransactionItem\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RouteModel\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.StatusModel\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.LocationModel\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.TransactionModel\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.UserItem\nimport com.example.cyclistance.feature_mapping.domain.model.location.LiveLocationWSModel\nimport com.example.cyclistance.feature_mapping.domain.model.ui.rescue.MapSelectedRescuee\nimport com.example.cyclistance.feature_mapping.domain.model.ui.rescue.NewRescueRequestsModel\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.event.MappingEvent\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.state.MappingState\nimport com.example.cyclistance.feature_settings.domain.exceptions.SettingExceptions\nimport kotlinx.coroutines.coroutineScope\nimport kotlinx.coroutines.flow.MutableSharedFlow\nimport kotlinx.coroutines.flow.MutableStateFlow\nimport kotlinx.coroutines.flow.update\nimport timber.log.Timber\n\nclass TrackingStateHandler(\n\n    val state: MutableStateFlow<MappingState>,\n    val eventFlow: MutableSharedFlow<MappingEvent>) {\n\n\n    suspend fun updateClient() {\n\n        coroutineScope {\n            val rescueTransaction = state.value.rescueTransaction\n            val cyclists = state.value.nearbyCyclists\n            val userRole = state.value.user.getRole()\n\n            if (userRole == Role.RESCUEE.name.lowercase()) {\n                rescueTransaction?.rescuerId?.let { id ->\n                    state.update { it.copy(rescuer = cyclists?.findUser(id), rescuee = null) }\n                }\n                return@coroutineScope\n            }\n\n            rescueTransaction?.rescueeId?.let { rescueeId ->\n                state.update { it.copy(rescuee = cyclists?.findUser(rescueeId), rescuer = null) }\n            }\n\n        }\n    }\n\n    fun getUserRescueTransaction(rescueTransaction: RescueTransaction): RescueTransactionItem? {\n\n        val transactionId = state.value.user.transaction?.transactionId\n        return transactionId?.let { rescueTransaction.findTransaction(it) }\n\n    }\n\n    fun clearTransactionRoles() {\n        state.update {\n            it.copy(\n                respondedToHelp = true,\n                rescueTransaction = RescueTransactionItem(),\n                rescuee = null,\n                rescuer = null,\n                newRescueRequest = NewRescueRequestsModel(),\n                user = it.user.copy(transaction = TransactionModel())\n            )\n        }\n    }\n\n    suspend fun showSelectedRescuee(\n        selectedRescuee: UserItem,\n        distance: Double,\n        timeRemaining: String\n    ) {\n\n        eventFlow.emit(\n            value = MappingEvent.NewSelectedRescuee(\n                selectedRescuee = MapSelectedRescuee(\n                    userId = selectedRescuee.id!!,\n                    userProfileImage = selectedRescuee.profilePictureUrl\n                                       ?: MappingConstants.IMAGE_PLACEHOLDER_URL,\n                    name = selectedRescuee.name ?: \"name unavailable\",\n                    issue = selectedRescuee.getDescription() ?: \"\",\n                    bikeType = selectedRescuee.getBikeType() ?: \"\",\n                    address = selectedRescuee.address ?: \"\",\n                    message = selectedRescuee.getMessage() ?: \"\",\n                    distanceRemaining = distance.formatToDistanceKm(),\n                    timeRemaining = timeRemaining\n                )\n            )\n        )\n    }\n\n    fun updateLocation(location: LocationModel) {\n        val latitude = location.latitude ?: return\n        val longitude = location.longitude ?: return\n        state.update {\n            it.copy(\n                userLocation = LocationModel(\n                    latitude = latitude,\n                    longitude = longitude\n                )\n            )\n        }\n\n\n    }\n\n    fun updateTransactionLocation(location: LiveLocationWSModel) {\n        val longitude = location.longitude ?: return\n        val latitude = location.latitude ?: return\n        state.update {\n            it.copy(\n                transactionLocation = LocationModel(\n                    latitude = latitude,\n                    longitude = longitude\n                )\n            )\n        }\n    }\n\n    suspend inline fun checkCurrentTransactions(\n        user: UserItem,\n        rescuer: UserItem,\n        crossinline noCurrentTransaction: suspend () -> Unit\n    ) {\n\n        val userHasCurrentTransaction =\n            (user.transaction ?: TransactionModel()).transactionId.isNotEmpty()\n\n        val rescuerHasCurrentTransaction =\n            (rescuer.transaction ?: TransactionModel()).transactionId.isNotEmpty()\n\n        val rescuerLocationAvailable = rescuer.location.isLocationAvailable()\n        val userLocationAvailable = user.location.isLocationAvailable()\n\n        if (!rescuerLocationAvailable) {\n            eventFlow.emit(value = MappingEvent.RescuerLocationNotAvailable())\n            return\n        }\n\n        if (!userLocationAvailable) {\n            eventFlow.emit(value = MappingEvent.LocationNotAvailable(\"Location not found\"))\n            return\n        }\n\n        if (rescuerHasCurrentTransaction) {\n            eventFlow.emit(value = MappingEvent.RescueHasTransaction)\n            return\n        }\n\n        if (userHasCurrentTransaction) {\n            eventFlow.emit(value = MappingEvent.UserHasCurrentTransaction)\n            return\n        }\n\n\n        noCurrentTransaction()\n    }\n\n\n    fun getAcceptedRescueRequestItem(\n        transactionId: String,\n        rescuer: UserItem,\n\n    ): RescueTransactionItem {\n        val user = state.value.user\n        return RescueTransactionItem(\n            id = transactionId,\n            rescuerId = rescuer.id,\n            rescueeId = user.id,\n            status = StatusModel(started = true, onGoing = true),\n            route = RouteModel(\n                startingLocation = LocationModel(\n                    latitude = rescuer.location!!.latitude,\n                    longitude = rescuer.location.longitude\n                ),\n                destinationLocation = LocationModel(\n                    latitude = user.location!!.latitude,\n                    longitude = user.location.longitude\n                )\n            )\n        )\n    }\n\n    fun getTransactionId(rescuer: UserItem): String {\n        val user = state.value.user\n        return user.id?.take(3) + rescuer.id?.take(3) + System.currentTimeMillis().toString()\n            .takeLast(6)\n    }\n\n    suspend fun checkRescueRequestAccepted(rescueTransaction: RescueTransaction, id: String) {\n        val respondedToHelp = state.value.respondedToHelp\n        val user = state.value.user\n\n        val userId = state.value.user.id ?: id\n\n        if (respondedToHelp.not()) {\n            return\n        }\n\n\n\n        getUserRescueTransaction(rescueTransaction = rescueTransaction)\n            ?.let { transaction ->\n\n                if (transaction.isRescueCancelled()) {\n                    return@let\n                }\n\n                if (transaction.rescuerId != userId) {\n                    return@let\n                }\n\n                if (user.isRescuee()) {\n                    return@let\n                }\n\n                if (transaction.rescueeId.isNullOrEmpty()) {\n                    return@let\n                }\n\n                eventFlow.emit(value = MappingEvent.RescueRequestAccepted)\n            }\n\n\n    }\n\n    suspend fun handleException(exception: Throwable) {\n        when (exception) {\n\n            is MappingExceptions.NetworkException -> {\n                eventFlow.emit(value = MappingEvent.NoInternetConnection)\n            }\n\n            is MappingExceptions.UnexpectedErrorException -> {\n                eventFlow.emit(\n                    MappingEvent.UnexpectedError(\n                        reason = exception.message\n                    )\n                )\n            }\n\n            is AuthExceptions.UserException -> {\n                eventFlow.emit(\n                    MappingEvent.UserFailed(\n                        reason = exception.message\n                    )\n                )\n            }\n\n            is MappingExceptions.AddressException -> {\n                eventFlow.emit(\n                    MappingEvent.AddressFailed(\n                        reason = exception.message ?: \"Searching for GPS\"\n                    )\n                )\n            }\n\n            is SettingExceptions.PhoneNumberException, is MappingExceptions.NameException -> {\n                eventFlow.emit(MappingEvent.InsufficientUserCredential)\n            }\n\n            else -> {\n                Timber.e(\"Error HandleException: ${exception.message}\")\n            }\n\n        }\n    }\n\n\n    fun getTopSpeed(currentSpeed: Double) {\n        val topSpeed = state.value.getTopSpeed()\n        if (currentSpeed > topSpeed) {\n            state.update { it.copy(speedometerState = it.speedometerState.copy(topSpeed = currentSpeed)) }\n        }\n    }\n\n    fun setSpeed(currentSpeedKph: Double){\n        state.update { it.copy(speedometerState = it.speedometerState.copy(currentSpeedKph = currentSpeedKph)) }\n    }\n\n    fun setTravelledDistance(distance: String){\n\n        state.update { it.copy(speedometerState = it.speedometerState.copy(travelledDistance = distance)) }\n    }\n}\n\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/helper/TrackingStateHandler.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/helper/TrackingStateHandler.kt
---- a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/helper/TrackingStateHandler.kt	(revision cea8388e8c150db9962f0c7e4615c7b6f9c7d83e)
-+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/helper/TrackingStateHandler.kt	(date 1692089690546)
-@@ -1,6 +1,7 @@
- package com.example.cyclistance.feature_mapping.domain.helper
- 
- import com.example.cyclistance.core.utils.constants.MappingConstants
-+import com.example.cyclistance.core.utils.validation.FormatterUtils.findUser
- import com.example.cyclistance.core.utils.validation.FormatterUtils.formatToDistanceKm
- import com.example.cyclistance.core.utils.validation.FormatterUtils.isLocationAvailable
- import com.example.cyclistance.feature_authentication.domain.exceptions.AuthExceptions
-@@ -26,7 +27,7 @@
- import timber.log.Timber
- 
- class TrackingStateHandler(
--
-+    val nearbyCyclist: MutableList<UserItem>,
-     val state: MutableStateFlow<MappingState>,
-     val eventFlow: MutableSharedFlow<MappingEvent>) {
- 
-@@ -35,18 +36,18 @@
- 
-         coroutineScope {
-             val rescueTransaction = state.value.rescueTransaction
--            val cyclists = state.value.nearbyCyclists
-+            val cyclists = nearbyCyclist
-             val userRole = state.value.user.getRole()
- 
-             if (userRole == Role.RESCUEE.name.lowercase()) {
-                 rescueTransaction?.rescuerId?.let { id ->
--                    state.update { it.copy(rescuer = cyclists?.findUser(id), rescuee = null) }
-+                    state.update { it.copy(rescuer = cyclists.findUser(id), rescuee = null) }
-                 }
-                 return@coroutineScope
-             }
- 
-             rescueTransaction?.rescueeId?.let { rescueeId ->
--                state.update { it.copy(rescuee = cyclists?.findUser(rescueeId), rescuer = null) }
-+                state.update { it.copy(rescuee = cyclists.findUser(rescueeId), rescuer = null) }
-             }
- 
-         }
-Index: app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/components/MappingMapsScreen.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.components\n\nimport android.annotation.SuppressLint\nimport android.graphics.Color\nimport androidx.compose.foundation.layout.Box\nimport androidx.compose.foundation.layout.fillMaxSize\nimport androidx.compose.runtime.*\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.platform.LocalContext\nimport androidx.compose.ui.viewinterop.AndroidViewBinding\nimport androidx.core.content.ContextCompat\nimport androidx.core.graphics.drawable.toBitmap\nimport androidx.lifecycle.*\nimport com.example.cyclistance.R\nimport com.example.cyclistance.core.utils.constants.MappingConstants.ICON_LAYER_ID\nimport com.example.cyclistance.core.utils.constants.MappingConstants.ICON_SOURCE_ID\nimport com.example.cyclistance.core.utils.constants.MappingConstants.ROUTE_LAYER_ID\nimport com.example.cyclistance.core.utils.constants.MappingConstants.ROUTE_SOURCE_ID\nimport com.example.cyclistance.core.utils.constants.MappingConstants.TRANSACTION_ICON_ID\nimport com.example.cyclistance.core.utils.validation.FormatterUtils.getMapIconImageDescription\nimport com.example.cyclistance.databinding.ActivityMappingBinding\nimport com.example.cyclistance.feature_mapping.domain.model.Role\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RouteDirection\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.LocationModel\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.event.MappingUiEvent\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.state.MappingState\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.state.MappingUiState\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.utils.*\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.utils.MappingUtils.setDefaultSettings\nimport com.example.cyclistance.navigation.IsDarkTheme\nimport com.mapbox.geojson.Feature\nimport com.mapbox.geojson.FeatureCollection\nimport com.mapbox.geojson.Point\nimport com.mapbox.mapboxsdk.annotations.IconFactory\nimport com.mapbox.mapboxsdk.annotations.MarkerOptions\nimport com.mapbox.mapboxsdk.geometry.LatLng\nimport com.mapbox.mapboxsdk.maps.MapboxMap\nimport com.mapbox.mapboxsdk.maps.Style\nimport com.mapbox.mapboxsdk.style.expressions.Expression.*\nimport com.mapbox.mapboxsdk.style.layers.LineLayer\nimport com.mapbox.mapboxsdk.style.layers.Property\nimport com.mapbox.mapboxsdk.style.layers.PropertyFactory.*\nimport com.mapbox.mapboxsdk.style.layers.SymbolLayer\nimport com.mapbox.mapboxsdk.style.sources.GeoJsonSource\nimport timber.log.Timber\n\n\n@SuppressLint(\"MissingPermission\")\n@Suppress(\"Deprecation\")\n@Composable\nfun MappingMapsScreen(\n    modifier: Modifier,\n    state: MappingState,\n    uiState: MappingUiState,\n    mapboxMap: MapboxMap?,\n    hasTransaction: Boolean,\n    isNavigating: Boolean,\n    routeDirection: RouteDirection?,\n    isRescueCancelled: Boolean,\n    event: (MappingUiEvent) -> Unit\n//    requestNavigationCameraToOverview: () -> Unit, //todo use this one\n) {\n\n\n    val context = LocalContext.current\n\n\n    val nearbyCyclists = remember(state.nearbyCyclists?.users?.size, mapboxMap) {\n        state.nearbyCyclists?.users\n    }\n    val dismissNearbyCyclistsIcon = remember(mapboxMap) {\n        {\n            mapboxMap?.removeAnnotations()\n        }\n    }\n\n    val showNearbyCyclistsIcon = remember(nearbyCyclists, mapboxMap) {\n        {\n            dismissNearbyCyclistsIcon()\n\n            nearbyCyclists?.filter{\n                it.id != state.user.id\n            }?.filter {\n                it.isUserNeedHelp() == true\n            }?.forEach { cyclist ->\n                val location = cyclist.location\n                val latitude = location?.latitude ?: return@forEach\n                val longitude = location.longitude ?: return@forEach\n                val description = cyclist.getDescription()\n                val iconImage = description?.getMapIconImageDescription(context)\n                    ?.toBitmap(width = 120, height = 120)\n                iconImage?.let { bitmap ->\n                    mapboxMap ?: return@let\n                    val icon = IconFactory.getInstance(context).fromBitmap(bitmap)\n                    MarkerOptions().apply {\n                        setIcon(icon)\n                        position(LatLng(latitude, longitude))\n                        title = cyclist.id\n                    }.also(mapboxMap::addMarker)\n                }\n            }\n        }\n    }\n\n\n    val hasActiveTransaction = remember(hasTransaction, isRescueCancelled) {\n        hasTransaction || isRescueCancelled\n    }\n\n    val isUserNavigating = remember(key1 = isNavigating, key2 = routeDirection?.geometry) {\n        val geometry = routeDirection?.geometry\n        isNavigating || geometry?.isNotEmpty() == true\n    }\n\n    val shouldDismissNearbyIcons = remember(nearbyCyclists, isUserNavigating, hasActiveTransaction) {\n        isUserNavigating || hasActiveTransaction\n    }\n    LaunchedEffect(key1 = shouldDismissNearbyIcons, key2 = mapboxMap, key3= nearbyCyclists) {\n\n        if (shouldDismissNearbyIcons) {\n            dismissNearbyCyclistsIcon()\n            return@LaunchedEffect\n        }\n\n        showNearbyCyclistsIcon()\n    }\n\n\n    LaunchedEffect(key1 = mapboxMap, uiState.isFabExpanded) {\n\n        mapboxMap?.setOnMarkerClickListener {\n            event(MappingUiEvent.RescueeMapIconSelected(it.title))\n            true\n        }\n\n        mapboxMap?.addOnMapClickListener {\n            event(MappingUiEvent.OnMapClick)\n            true\n        }\n\n        mapboxMap?.addOnCameraMoveListener {\n            if (uiState.isFabExpanded) {\n                event(MappingUiEvent.OnCollapseExpandableFAB)\n            }\n        }\n\n        mapboxMap?.addOnMapLongClickListener {\n            event(MappingUiEvent.OnMapLongClick)\n            true\n        }\n\n    }\n\n\n    val clientLocation =\n        remember(state.transactionLocation, state.rescuer?.location, state.rescuee?.location) {\n            with(state) {\n                transactionLocation ?: rescuer?.location ?: rescuee?.location\n            }\n        }\n\n    val hasTransactionLocationChanges = remember(clientLocation) {\n        clientLocation != null\n    }\n\n    val dismissTransactionLocationIcon = remember(mapboxMap) {\n        {\n            mapboxMap?.getStyle { style ->\n                if (style.isFullyLoaded) {\n                    style.removeImage(TRANSACTION_ICON_ID)\n                    val geoJsonSource = style.getSourceAs<GeoJsonSource>(ICON_SOURCE_ID)\n                    geoJsonSource?.setGeoJson(FeatureCollection.fromFeatures(arrayOf()))\n                }\n            }\n        }\n    }\n\n    val showTransactionLocationIcon = remember(mapboxMap, state.user) {\n        { location: LocationModel ->\n            dismissTransactionLocationIcon()\n            val role = state.user.transaction?.role\n            val mapIcon = if (role == Role.RESCUEE.name.lowercase()) {\n                R.drawable.ic_map_rescuer\n            } else {\n                R.drawable.ic_map_rescuee\n            }\n            mapboxMap?.getStyle { style ->\n                if (style.isFullyLoaded) {\n                    val longitude = location.longitude ?: return@getStyle\n                    val latitude = location.latitude ?: return@getStyle\n                    style.removeImage(TRANSACTION_ICON_ID)\n                    ContextCompat.getDrawable(context, mapIcon)?.toBitmap(width = 100, height = 100)\n                        ?.let { iconBitmap ->\n                            style.addImage(TRANSACTION_ICON_ID, iconBitmap)\n                            val geoJsonSource = style.getSourceAs<GeoJsonSource>(ICON_SOURCE_ID)\n                            val feature =\n                                Feature.fromGeometry(Point.fromLngLat(longitude, latitude))\n                            geoJsonSource?.setGeoJson(feature)\n                        }\n                }\n            }\n        }\n    }\n\n    LaunchedEffect(\n        key1 = hasActiveTransaction,\n        key2 = hasTransactionLocationChanges,\n        key3 = clientLocation) {\n\n        if (hasTransactionLocationChanges.not() || hasActiveTransaction.not()) {\n            dismissTransactionLocationIcon()\n            return@LaunchedEffect\n        }\n\n        clientLocation?.latitude ?: return@LaunchedEffect\n        showTransactionLocationIcon(clientLocation)\n    }\n\n    Map(\n        modifier = modifier,\n        event = event)\n\n}\n\n\n@Composable\nprivate fun Map(\n    modifier: Modifier,\n    event: (MappingUiEvent) -> Unit) {\n\n\n    val isDarkTheme = IsDarkTheme.current\n    Box(modifier = modifier) {\n\n        AndroidViewBinding(\n            factory = ActivityMappingBinding::inflate,\n            modifier = Modifier.fillMaxSize()) {\n            val viewContext = this.root.context\n            var mapboxMap: MapboxMap? = null\n\n            val initSource = { loadedMapStyle: Style ->\n                loadedMapStyle.addSource(GeoJsonSource(ICON_SOURCE_ID))\n                loadedMapStyle.addSource(GeoJsonSource(ROUTE_SOURCE_ID))\n            }\n\n            val initLayers = { loadedMapStyle: Style ->\n\n\n                val drawableIcon = ContextCompat.getDrawable(viewContext, R.drawable.ic_map_rescuer)\n                val bitmapIcon = drawableIcon?.toBitmap(width = 100, height = 100)\n                bitmapIcon?.let { loadedMapStyle.addImage(TRANSACTION_ICON_ID, it) }\n\n                loadedMapStyle.addLayer(\n                    SymbolLayer(ICON_LAYER_ID, ICON_SOURCE_ID).apply {\n                        setProperties(\n                            iconImage(TRANSACTION_ICON_ID),\n                            iconAllowOverlap(true),\n                            iconIgnorePlacement(true)\n                        )\n                    }\n                )\n\n\n                loadedMapStyle.addLayerBelow(\n                    LineLayer(ROUTE_LAYER_ID, ROUTE_SOURCE_ID).apply {\n                        setProperties(\n                            lineCap(Property.LINE_CAP_ROUND),\n                            lineJoin(Property.LINE_JOIN_ROUND),\n                            lineWidth(5f),\n                            lineColor(Color.parseColor(\"#006eff\"))\n                        )\n                    }, ICON_LAYER_ID)\n\n\n            }\n\n\n            root.findViewTreeLifecycleOwner()?.lifecycle?.addObserver(\n                LifecycleEventObserver { _, event ->\n                    when (event) {\n                        Lifecycle.Event.ON_CREATE -> {\n\n                            Timber.v(\"Lifecycle Event: ON_CREATE\")\n                            mapView.getMapAsync {\n\n\n                                it.setStyle(if (isDarkTheme) Style.DARK else Style.LIGHT) { loadedStyle ->\n\n                                    if (loadedStyle.isFullyLoaded) {\n                                        event(MappingUiEvent.OnInitializeMap(it))\n                                        mapboxMap = it\n                                        initSource(loadedStyle)\n                                        initLayers(loadedStyle)\n                                    }\n                                }\n                                it.setDefaultSettings()\n                            }\n                        }\n\n                        Lifecycle.Event.ON_START -> {\n                            Timber.v(\"Lifecycle Event: ON_START\")\n                            mapView.onStart()\n                        }\n\n                        Lifecycle.Event.ON_RESUME -> {\n                            Timber.v(\"Lifecycle Event: ON_RESUME\")\n                        }\n\n                        Lifecycle.Event.ON_PAUSE -> {\n                            val camera = mapboxMap?.cameraPosition\n                            val cameraCenter = camera?.target\n                            val cameraZoom = camera?.zoom\n                            cameraCenter?.let {\n                                cameraZoom?.let {\n                                    val cameraMoved =\n                                        cameraCenter.latitude != 0.0 && cameraCenter.longitude != 0.0 && cameraZoom != 3.0\n\n                                    if (!cameraMoved) {\n                                        return@let\n                                    }\n\n\n                                    /*  event(\n                                          MappingUiEvent.OnChangeCameraState(\n                                              cameraState = CameraState(\n                                                  position = cameraCenter,\n                                                  zoom = cameraZoom)))*/\n                                }\n                            }\n                        }\n\n                        Lifecycle.Event.ON_STOP -> {\n                            Timber.v(\"Lifecycle Event: ON_STOP\")\n\n                            mapView.onStop()\n                        }\n\n                        Lifecycle.Event.ON_DESTROY -> {\n\n                            mapView.onDestroy()\n                        }\n\n                        else -> {}\n\n                    }\n                }\n            )\n        }\n    }\n}\n\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/components/MappingMapsScreen.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/components/MappingMapsScreen.kt
---- a/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/components/MappingMapsScreen.kt	(revision cea8388e8c150db9962f0c7e4615c7b6f9c7d83e)
-+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/components/MappingMapsScreen.kt	(date 1692092934637)
-@@ -22,6 +22,7 @@
- import com.example.cyclistance.feature_mapping.domain.model.Role
- import com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RouteDirection
- import com.example.cyclistance.feature_mapping.domain.model.api.user.LocationModel
-+import com.example.cyclistance.feature_mapping.domain.model.api.user.UserItem
- import com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.event.MappingUiEvent
- import com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.state.MappingState
- import com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.state.MappingUiState
-@@ -57,6 +58,7 @@
-     isNavigating: Boolean,
-     routeDirection: RouteDirection?,
-     isRescueCancelled: Boolean,
-+    nearbyCyclist: List<UserItem>,
-     event: (MappingUiEvent) -> Unit
- //    requestNavigationCameraToOverview: () -> Unit, //todo use this one
- ) {
-@@ -65,24 +67,23 @@
-     val context = LocalContext.current
- 
- 
--    val nearbyCyclists = remember(state.nearbyCyclists?.users?.size, mapboxMap) {
--        state.nearbyCyclists?.users
--    }
-+
-     val dismissNearbyCyclistsIcon = remember(mapboxMap) {
-         {
-             mapboxMap?.removeAnnotations()
-         }
-     }
- 
--    val showNearbyCyclistsIcon = remember(nearbyCyclists, mapboxMap) {
-+    val showNearbyCyclistsIcon = remember(nearbyCyclist.size, mapboxMap) {
-         {
-             dismissNearbyCyclistsIcon()
- 
--            nearbyCyclists?.filter{
-+            nearbyCyclist.filter{
-                 it.id != state.user.id
--            }?.filter {
-+            }.filter {
-                 it.isUserNeedHelp() == true
--            }?.forEach { cyclist ->
-+            }.forEach { cyclist ->
-+                Timber.v("Cyclist Name: ${cyclist.name}")
-                 val location = cyclist.location
-                 val latitude = location?.latitude ?: return@forEach
-                 val longitude = location.longitude ?: return@forEach
-@@ -112,10 +113,10 @@
-         isNavigating || geometry?.isNotEmpty() == true
-     }
- 
--    val shouldDismissNearbyIcons = remember(nearbyCyclists, isUserNavigating, hasActiveTransaction) {
-+    val shouldDismissNearbyIcons = remember(nearbyCyclist, isUserNavigating, hasActiveTransaction) {
-         isUserNavigating || hasActiveTransaction
-     }
--    LaunchedEffect(key1 = shouldDismissNearbyIcons, key2 = mapboxMap, key3= nearbyCyclists) {
-+    LaunchedEffect(key1 = shouldDismissNearbyIcons, key2 = mapboxMap, key3= nearbyCyclist.size) {
- 
-         if (shouldDismissNearbyIcons) {
-             dismissNearbyCyclistsIcon()
Index: .idea/shelf/Reset_password/shelved.patch
===================================================================
diff --git a/.idea/shelf/Reset_password/shelved.patch b/.idea/shelf/Reset_password/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Reset_password/shelved.patch	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
+++ /dev/null	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
@@ -1,143 +0,0 @@
-Index: app/src/main/java/com/example/cyclistance/feature_authentication/presentation/auth_reset_password/components/ResetPasswordContent.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_authentication/presentation/auth_reset_password/components/ResetPasswordContent.kt b/app/src/main/java/com/example/cyclistance/feature_authentication/presentation/auth_reset_password/components/ResetPasswordContent.kt
-new file mode 100644
---- /dev/null	(date 1691636113968)
-+++ b/app/src/main/java/com/example/cyclistance/feature_authentication/presentation/auth_reset_password/components/ResetPasswordContent.kt	(date 1691636113968)
-@@ -0,0 +1,132 @@
-+package com.example.cyclistance.feature_authentication.presentation.auth_reset_password.components
-+
-+import androidx.compose.foundation.Image
-+import androidx.compose.foundation.layout.Arrangement
-+import androidx.compose.foundation.layout.Column
-+import androidx.compose.foundation.layout.Spacer
-+import androidx.compose.foundation.layout.fillMaxHeight
-+import androidx.compose.foundation.layout.fillMaxSize
-+import androidx.compose.foundation.layout.fillMaxWidth
-+import androidx.compose.foundation.layout.height
-+import androidx.compose.foundation.layout.padding
-+import androidx.compose.material.MaterialTheme
-+import androidx.compose.material.Surface
-+import androidx.compose.material.Text
-+import androidx.compose.runtime.Composable
-+import androidx.compose.runtime.CompositionLocalProvider
-+import androidx.compose.ui.Alignment
-+import androidx.compose.ui.Modifier
-+import androidx.compose.ui.res.painterResource
-+import androidx.compose.ui.text.font.FontWeight
-+import androidx.compose.ui.text.input.TextFieldValue
-+import androidx.compose.ui.tooling.preview.Preview
-+import androidx.compose.ui.unit.dp
-+import com.example.cyclistance.R
-+import com.example.cyclistance.feature_authentication.presentation.common.PasswordTextField
-+import com.example.cyclistance.feature_mapping.presentation.common.ButtonNavigation
-+import com.example.cyclistance.navigation.IsDarkTheme
-+import com.example.cyclistance.theme.Black500
-+import com.example.cyclistance.theme.CyclistanceTheme
-+
-+@Composable
-+fun ResetPasswordContent(modifier: Modifier = Modifier) {
-+    val isDarkTheme = IsDarkTheme.current
-+    Surface(modifier = modifier.fillMaxSize(), color = MaterialTheme.colors.background) {
-+
-+        Column(
-+
-+            verticalArrangement = Arrangement.Top,
-+            horizontalAlignment = Alignment.CenterHorizontally
-+        ) {
-+
-+            Spacer(
-+                modifier = Modifier
-+                    .fillMaxHeight(0.06f)
-+            )
-+
-+            Image(
-+                contentDescription = "Display Image",
-+                painter = painterResource(id = if (isDarkTheme) R.drawable.ic_reset_pw_dark else R.drawable.ic_reset_pw_light)
-+            )
-+
-+            Column(
-+                modifier = Modifier
-+                    .padding(top = 25.dp)
-+                    .padding(horizontal = 15.dp)
-+            ) {
-+
-+                Text(
-+                    text = "Reset Password",
-+                    style = MaterialTheme.typography.subtitle1.copy(fontWeight = FontWeight.Medium),
-+                    color = MaterialTheme.colors.onBackground,
-+                    modifier = Modifier.padding(bottom = 8.dp))
-+
-+                Text(
-+                    text = "Create new password so you can login to your account",
-+                    style = MaterialTheme.typography.subtitle2.copy(fontWeight = FontWeight.Normal),
-+                    color = Black500)
-+
-+            }
-+
-+
-+            Column(
-+                modifier = Modifier.padding(horizontal = 15.dp, vertical = 20.dp),
-+                verticalArrangement = Arrangement.spacedBy(8.dp)) {
-+
-+                PasswordTextField(
-+                    placeholderText = "Current Password",
-+                    enabled = true,
-+                    password = TextFieldValue(),
-+                    passwordExceptionMessage = "",
-+                    clearIconOnClick = { /*TODO*/ },
-+                    onValueChange = {})
-+
-+
-+                PasswordTextField(
-+                    placeholderText = "New Password",
-+                    enabled = true,
-+                    password = TextFieldValue(),
-+                    passwordExceptionMessage = "",
-+                    clearIconOnClick = { /*TODO*/ },
-+                    onValueChange = {})
-+
-+
-+                PasswordTextField(
-+                    enabled = true,
-+                    placeholderText = "Confirm New Password",
-+                    password = TextFieldValue(),
-+                    passwordExceptionMessage = "",
-+                    clearIconOnClick = { /*TODO*/ },
-+                    onValueChange = {})
-+
-+            }
-+
-+
-+            Spacer(modifier = Modifier.weight(1f))
-+
-+            ButtonNavigation(
-+                modifier = Modifier.fillMaxWidth(0.8f),
-+                negativeButtonEnabled = true,
-+                positiveButtonEnabled = true,
-+                positiveButtonText = "Update",
-+                onClickNegativeButton = {},
-+                onClickPositiveButton = {})
-+
-+            Spacer(modifier = Modifier.height(45.dp))
-+
-+        }
-+
-+    }
-+
-+
-+}
-+
-+@Preview(device = "id:Galaxy Nexus")
-+@Composable
-+fun PreviewResetPasswordContent() {
-+    CompositionLocalProvider(IsDarkTheme provides true) {
-+        CyclistanceTheme(darkTheme = true) {
-+            ResetPasswordContent()
-+        }
-+    }
-+}
-\ No newline at end of file
Index: .idea/shelf/Soon__New_Message_feature/shelved.patch
===================================================================
diff --git a/.idea/shelf/Soon__New_Message_feature/shelved.patch b/.idea/shelf/Soon__New_Message_feature/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Soon__New_Message_feature/shelved.patch	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
+++ /dev/null	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
@@ -1,640 +0,0 @@
-Index: app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chat/new_message/components/NewMessageContent.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chat/new_message/components/NewMessageContent.kt b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chat/new_message/components/NewMessageContent.kt
-new file mode 100644
---- /dev/null	(date 1690273748517)
-+++ b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chat/new_message/components/NewMessageContent.kt	(date 1690273748517)
-@@ -0,0 +1,135 @@
-+package com.example.cyclistance.feature_messaging.presentation.chat.new_message.components
-+
-+import androidx.compose.foundation.layout.Column
-+import androidx.compose.foundation.layout.fillMaxSize
-+import androidx.compose.foundation.layout.fillMaxWidth
-+import androidx.compose.foundation.lazy.LazyColumn
-+import androidx.compose.foundation.lazy.items
-+import androidx.compose.material.Icon
-+import androidx.compose.material.IconButton
-+import androidx.compose.material.MaterialTheme
-+import androidx.compose.material.Surface
-+import androidx.compose.material.TopAppBar
-+import androidx.compose.material.icons.Icons
-+import androidx.compose.material.icons.filled.ArrowBack
-+import androidx.compose.runtime.Composable
-+import androidx.compose.ui.Modifier
-+import androidx.compose.ui.focus.FocusRequester
-+import androidx.compose.ui.text.input.TextFieldValue
-+import androidx.compose.ui.tooling.preview.Preview
-+import androidx.compose.ui.unit.dp
-+import com.example.cyclistance.core.domain.model.UserDetails
-+import com.example.cyclistance.feature_messaging.domain.model.ui.chats.MessagingUserItemModel
-+import com.example.cyclistance.feature_messaging.domain.model.ui.chats.MessagingUserModel
-+import com.example.cyclistance.feature_messaging.presentation.chat.common.MessagingTopAppBarTitle
-+import com.example.cyclistance.feature_messaging.presentation.chat.event.MessagingUiEvent
-+import com.example.cyclistance.feature_messaging.presentation.chat.new_message.state.NewMessageState
-+import com.example.cyclistance.feature_messaging.presentation.chat.state.MessagingUiState
-+import com.example.cyclistance.theme.CyclistanceTheme
-+
-+@Composable
-+fun NewMessageContent(
-+    modifier: Modifier = Modifier,
-+    focusRequester: FocusRequester,
-+    searchQuery: TextFieldValue,
-+    state: NewMessageState,
-+    uiState: MessagingUiState,
-+    event: (MessagingUiEvent) -> Unit) {
-+
-+    Surface(modifier = modifier.fillMaxSize(), color = MaterialTheme.colors.background) {
-+        Column(modifier = Modifier.fillMaxSize()) {
-+            TopAppBar(
-+                elevation = 10.dp,
-+                title = {
-+                    MessagingTopAppBarTitle(
-+                        modifier = Modifier,
-+                        focusRequester = focusRequester,
-+                        searchQuery = searchQuery,
-+                        isSearching = uiState.isSearching,
-+                        onChangeValueQuery = { event(MessagingUiEvent.OnSearchQueryChanged(it)) },
-+                        onClearSearchQuery = { event(MessagingUiEvent.ClearSearchQuery) },
-+                        onClickSearch = { event(MessagingUiEvent.OnClickSearch) }
-+                    )
-+                },
-+                backgroundColor = MaterialTheme.colors.background,
-+                navigationIcon = {
-+                    IconButton(onClick = { event(MessagingUiEvent.CloseScreen) }) {
-+                        Icon(
-+                            imageVector = Icons.Default.ArrowBack,
-+                            contentDescription = "Top App Bar Icon",
-+                            tint = MaterialTheme.colors.onBackground)
-+                    }
-+                })
-+
-+
-+
-+            LazyColumn(modifier = Modifier.fillMaxSize()) {
-+                items(items = state.messageUsers.users, key = { it.userDetails.uid }) { item ->
-+                    NewMessageUserItem(
-+                        modifier = Modifier.fillMaxWidth(),
-+                        name = item.userDetails.name,
-+                        photoUrl = item.userDetails.photo
-+                    )
-+                }
-+            }
-+
-+
-+        }
-+    }
-+}
-+
-+
-+private val fakeMessageUsers = MessagingUserModel(
-+    users = listOf(
-+        MessagingUserItemModel(
-+            userDetails = UserDetails(
-+                uid = "001",
-+                name = "John Doe",
-+                photo = "https://img.freepik.com/free-photo/portrait-handsome-man-with-dark-hairstyle-bristle-toothy-smile-dressed-white-sweatshirt-feels-very-glad-poses-indoor-pleased-european-guy-being-good-mood-smiles-positively-emotions-concept_273609-61405.jpg"),
-+        ),
-+        MessagingUserItemModel(
-+            userDetails = UserDetails(
-+                uid = "002",
-+                name = "John Doe",
-+                photo = "https://img.freepik.com/free-photo/portrait-handsome-man-with-dark-hairstyle-bristle-toothy-smile-dressed-white-sweatshirt-feels-very-glad-poses-indoor-pleased-european-guy-being-good-mood-smiles-positively-emotions-concept_273609-61405.jpg"),
-+        ),
-+        MessagingUserItemModel(
-+            userDetails = UserDetails(
-+                uid = "003",
-+                name = "John Doe",
-+                photo = "https://img.freepik.com/free-photo/portrait-handsome-man-with-dark-hairstyle-bristle-toothy-smile-dressed-white-sweatshirt-feels-very-glad-poses-indoor-pleased-european-guy-being-good-mood-smiles-positively-emotions-concept_273609-61405.jpg"),
-+        ),
-+        MessagingUserItemModel(
-+            userDetails = UserDetails(
-+                uid = "004",
-+                name = "John Doe",
-+                photo = "https://img.freepik.com/free-photo/portrait-handsome-man-with-dark-hairstyle-bristle-toothy-smile-dressed-white-sweatshirt-feels-very-glad-poses-indoor-pleased-european-guy-being-good-mood-smiles-positively-emotions-concept_273609-61405.jpg"),
-+        ),
-+        MessagingUserItemModel(
-+            userDetails = UserDetails(
-+                uid = "005",
-+                name = "John Doe",
-+                photo = "https://img.freepik.com/free-photo/portrait-handsome-man-with-dark-hairstyle-bristle-toothy-smile-dressed-white-sweatshirt-feels-very-glad-poses-indoor-pleased-european-guy-being-good-mood-smiles-positively-emotions-concept_273609-61405.jpg"),
-+        ),
-+
-+
-+        )
-+)
-+
-+
-+@Preview
-+@Composable
-+private fun PreviewNewMessageContent() {
-+    CyclistanceTheme(darkTheme = true) {
-+        NewMessageContent(
-+            modifier = Modifier,
-+            focusRequester = FocusRequester(),
-+            searchQuery = TextFieldValue(),
-+            state = NewMessageState(
-+                messageUsers = fakeMessageUsers
-+            ),
-+            uiState = MessagingUiState(),
-+            event = {}
-+        )
-+    }
-+}
-\ No newline at end of file
-Index: app/src/main/java/com/example/cyclistance/navigation/nav_graph/MessagingGraph.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.cyclistance.navigation.nav_graph\n\nimport androidx.compose.foundation.layout.PaddingValues\nimport androidx.navigation.NavController\nimport androidx.navigation.NavGraphBuilder\nimport androidx.navigation.NavType\nimport androidx.navigation.compose.composable\nimport androidx.navigation.navArgument\nimport androidx.navigation.navigation\nimport com.example.cyclistance.core.utils.constants.MessagingConstants.CHAT_ID\nimport com.example.cyclistance.core.utils.constants.MessagingConstants.CHAT_NAME\nimport com.example.cyclistance.core.utils.constants.MessagingConstants.CHAT_PHOTO_URL\nimport com.example.cyclistance.feature_messaging.presentation.chats.MessagingScreen\nimport com.example.cyclistance.feature_messaging.presentation.conversation.ConversationScreen\nimport com.example.cyclistance.navigation.Screens\n\nfun NavGraphBuilder.messagingGraph(\n    navController: NavController,\n    paddingValues: PaddingValues) {\n    navigation(\n        startDestination = Screens.Messaging.MessagingScreen.screenRoute,\n        route = Screens.Messaging.ROUTE\n    ) {\n        composable(Screens.Messaging.MessagingScreen.screenRoute) {\n            MessagingScreen(\n                navController = navController,\n                paddingValues = paddingValues\n            )\n        }\n\n        composable(route = Screens.Messaging.ConversationScreen.screenRoute + \"/{$CHAT_ID}/{${CHAT_PHOTO_URL}}/{$CHAT_NAME}\",\n            arguments =\n            listOf(\n                navArgument(CHAT_ID) { type = NavType.StringType },\n                navArgument(CHAT_PHOTO_URL) { type = NavType.StringType },\n                navArgument(CHAT_NAME) { type = NavType.StringType }\n            )\n        ) {\n            ConversationScreen(\n                navController = navController,\n                paddingValues = paddingValues\n            )\n        }\n    }\n}\n\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/navigation/nav_graph/MessagingGraph.kt b/app/src/main/java/com/example/cyclistance/navigation/nav_graph/MessagingGraph.kt
---- a/app/src/main/java/com/example/cyclistance/navigation/nav_graph/MessagingGraph.kt	(revision 962f6630a279d1fc4b1d1b7e109041d80a3349c0)
-+++ b/app/src/main/java/com/example/cyclistance/navigation/nav_graph/MessagingGraph.kt	(date 1690273748504)
-@@ -10,7 +10,8 @@
- import com.example.cyclistance.core.utils.constants.MessagingConstants.CHAT_ID
- import com.example.cyclistance.core.utils.constants.MessagingConstants.CHAT_NAME
- import com.example.cyclistance.core.utils.constants.MessagingConstants.CHAT_PHOTO_URL
--import com.example.cyclistance.feature_messaging.presentation.chats.MessagingScreen
-+import com.example.cyclistance.feature_messaging.presentation.chat.chats.ChatsScreen
-+import com.example.cyclistance.feature_messaging.presentation.chat.new_message.NewMessageScreen
- import com.example.cyclistance.feature_messaging.presentation.conversation.ConversationScreen
- import com.example.cyclistance.navigation.Screens
- 
-@@ -18,17 +19,31 @@
-     navController: NavController,
-     paddingValues: PaddingValues) {
-     navigation(
--        startDestination = Screens.Messaging.MessagingScreen.screenRoute,
--        route = Screens.Messaging.ROUTE
--    ) {
--        composable(Screens.Messaging.MessagingScreen.screenRoute) {
--            MessagingScreen(
--                navController = navController,
--                paddingValues = paddingValues
--            )
--        }
-+        startDestination = Screens.MessagingNavigation.ChatNavigation.ROUTE,
-+        route = Screens.MessagingNavigation.ROUTE
-+    ) {
-+
-+        navigation(
-+            startDestination = Screens.MessagingNavigation.ChatNavigation.ChatScreen.screenRoute,
-+            route = Screens.MessagingNavigation.ChatNavigation.ROUTE) {
-+            composable(route = Screens.MessagingNavigation.ChatNavigation.ChatScreen.screenRoute) {
-+                ChatsScreen(
-+                    navController = navController,
-+                    paddingValues = paddingValues
-+                )
-+            }
- 
--        composable(route = Screens.Messaging.ConversationScreen.screenRoute + "/{$CHAT_ID}/{${CHAT_PHOTO_URL}}/{$CHAT_NAME}",
-+            composable(route = Screens.MessagingNavigation.ChatNavigation.NewMessage.screenRoute) {
-+                NewMessageScreen(
-+                    navController = navController,
-+                    paddingValues = paddingValues
-+                )
-+            }
-+
-+
-+        }
-+
-+        composable(route = Screens.MessagingNavigation.ConversationScreen.screenRoute + "/{$CHAT_ID}/{${CHAT_PHOTO_URL}}/{$CHAT_NAME}",
-             arguments =
-             listOf(
-                 navArgument(CHAT_ID) { type = NavType.StringType },
-Index: app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chat/new_message/event/NewMessageUiEvent.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chat/new_message/event/NewMessageUiEvent.kt b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chat/new_message/event/NewMessageUiEvent.kt
-new file mode 100644
---- /dev/null	(date 1690273748330)
-+++ b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chat/new_message/event/NewMessageUiEvent.kt	(date 1690273748330)
-@@ -0,0 +1,3 @@
-+package com.example.cyclistance.feature_messaging.presentation.chat.new_message.event
-+
-+sealed class NewMessageUiEvent
-Index: app/src/main/java/com/example/cyclistance/navigation/Screens.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.cyclistance.navigation\n\nsealed class Screens {\n\n\n    open class Authentication(val screenRoute: String = \"\") : Screens() {\n        companion object {\n            const val ROUTE = \"authentication\"\n        }\n\n        object SignInScreen : Authentication(screenRoute = \"sign_in_screen\")\n        object SignUpScreen : Authentication(screenRoute = \"sign_up_screen\")\n        object EmailAuthScreen : Authentication(screenRoute = \"email_auth_screen\")\n    }\n\n    open class EmergencyCall(val screenRoute: String = \"\") : Screens() {\n        companion object {\n            const val ROUTE = \"emergency_call\"\n        }\n\n        object EmergencyCallScreen : EmergencyCall(screenRoute = \"emergency_call_screen\")\n    }\n\n    open class Messaging(val screenRoute: String = \"\") : Screens() {\n        companion object {\n            const val ROUTE = \"messaging\"\n        }\n\n        object MessagingScreen : Messaging(screenRoute = \"messaging_screen\")\n        object ConversationScreen : Messaging(screenRoute = \"conversation_screen\")\n    }\n\n    open class OnBoarding(val screenRoute: String = \"\") : Screens() {\n        companion object {\n            const val ROUTE = \"on_boarding\"\n        }\n\n        object IntroSliderScreen : OnBoarding(screenRoute = \"intro_slider_screen\")\n    }\n\n    open class Mapping(val screenRoute: String = \"\") : Screens() {\n        companion object {\n            const val ROUTE = \"mapping\"\n        }\n\n        object MappingScreen : Mapping(screenRoute = \"mapping_screen\")\n        object CancellationScreen : Mapping(screenRoute = \"cancellation_screen\")\n        object ConfirmDetailsScreen : Mapping(screenRoute = \"confirm_details_screen\")\n    }\n\n    open class Settings(val screenRoute: String = \"\") : Screens() {\n\n        companion object {\n            const val ROUTE = \"settings\"\n        }\n\n        object ChangePasswordScreen : Settings(screenRoute = \"change_password_screen\")\n        object EditProfileScreen : Settings(screenRoute = \"edit_profile_screen\")\n        object SettingScreen : Settings(screenRoute = \"setting_screen\")\n    }\n\n\n    open class RideHistory(val screenRoute: String = \"\") : Screens() {\n        companion object {\n            const val ROUTE = \"ride_history\"\n        }\n\n        object RideHistoryScreen : RideHistory(screenRoute = \"ride_history_screen\")\n        object RideHistoryDetailsScreen : RideHistory(screenRoute = \"ride_history_details_screen\")\n    }\n\n}\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/navigation/Screens.kt b/app/src/main/java/com/example/cyclistance/navigation/Screens.kt
---- a/app/src/main/java/com/example/cyclistance/navigation/Screens.kt	(revision 962f6630a279d1fc4b1d1b7e109041d80a3349c0)
-+++ b/app/src/main/java/com/example/cyclistance/navigation/Screens.kt	(date 1690273748510)
-@@ -3,70 +3,87 @@
- sealed class Screens {
- 
- 
--    open class Authentication(val screenRoute: String = "") : Screens() {
-+    open class AuthenticationNavigation(val screenRoute: String = "") : Screens() {
-         companion object {
--            const val ROUTE = "authentication"
-+            const val ROUTE = "authentication_navigation"
-         }
- 
--        object SignInScreen : Authentication(screenRoute = "sign_in_screen")
--        object SignUpScreen : Authentication(screenRoute = "sign_up_screen")
--        object EmailAuthScreen : Authentication(screenRoute = "email_auth_screen")
-+        object SignInScreen : AuthenticationNavigation(screenRoute = "sign_in_screen")
-+        object SignUpScreen : AuthenticationNavigation(screenRoute = "sign_up_screen")
-+        object EmailAuthScreen : AuthenticationNavigation(screenRoute = "email_auth_screen")
-     }
- 
--    open class EmergencyCall(val screenRoute: String = "") : Screens() {
-+
-+    open class EmergencyCallNavigation(val screenRoute: String = "") : Screens() {
-         companion object {
--            const val ROUTE = "emergency_call"
-+            const val ROUTE = "emergency_call_navigation"
-         }
- 
--        object EmergencyCallScreen : EmergencyCall(screenRoute = "emergency_call_screen")
-+        object EmergencyCallScreen : EmergencyCallNavigation(screenRoute = "emergency_call_screen")
-     }
- 
--    open class Messaging(val screenRoute: String = "") : Screens() {
-+
-+    open class MessagingNavigation(open val screenRoute: String = "") : Screens() {
-+
-         companion object {
--            const val ROUTE = "messaging"
-+            const val ROUTE = "messaging_navigation"
-         }
--
--        object MessagingScreen : Messaging(screenRoute = "messaging_screen")
--        object ConversationScreen : Messaging(screenRoute = "conversation_screen")
--    }
- 
--    open class OnBoarding(val screenRoute: String = "") : Screens() {
--        companion object {
--            const val ROUTE = "on_boarding"
-+        sealed class ChatNavigation(override val screenRoute: String = "") : MessagingNavigation() {
-+            companion object {
-+                const val ROUTE = "chat_navigation"
-+            }
-+
-+            object ChatScreen : ChatNavigation(screenRoute = "chat_screen")
-+            object NewMessage : ChatNavigation(screenRoute = "new_message_screen")
-         }
- 
--        object IntroSliderScreen : OnBoarding(screenRoute = "intro_slider_screen")
-+
-+        object ConversationScreen : MessagingNavigation(screenRoute = "conversation_screen")
-     }
- 
--    open class Mapping(val screenRoute: String = "") : Screens() {
-+
-+    open class OnBoardingNavigation(val screenRoute: String = "") : Screens() {
-         companion object {
--            const val ROUTE = "mapping"
-+            const val ROUTE = "on_boarding_navigation"
-         }
- 
--        object MappingScreen : Mapping(screenRoute = "mapping_screen")
--        object CancellationScreen : Mapping(screenRoute = "cancellation_screen")
--        object ConfirmDetailsScreen : Mapping(screenRoute = "confirm_details_screen")
-+        object IntroSliderScreen : OnBoardingNavigation(screenRoute = "intro_slider_screen")
-     }
- 
--    open class Settings(val screenRoute: String = "") : Screens() {
- 
-+    open class MappingNavigation(val screenRoute: String = "") : Screens() {
-         companion object {
--            const val ROUTE = "settings"
-+            const val ROUTE = "mapping_navigation"
-         }
- 
--        object ChangePasswordScreen : Settings(screenRoute = "change_password_screen")
--        object EditProfileScreen : Settings(screenRoute = "edit_profile_screen")
--        object SettingScreen : Settings(screenRoute = "setting_screen")
-+        object MappingScreen : MappingNavigation(screenRoute = "mapping_screen")
-+        object CancellationScreen : MappingNavigation(screenRoute = "cancellation_screen")
-+        object ConfirmDetailsScreen : MappingNavigation(screenRoute = "confirm_details_screen")
-     }
- 
- 
--    open class RideHistory(val screenRoute: String = "") : Screens() {
-+    open class SettingsNavigation(val screenRoute: String = "") : Screens() {
-+
-         companion object {
--            const val ROUTE = "ride_history"
-+            const val ROUTE = "settings_navigation"
-+        }
-+
-+        object ChangePasswordScreen : SettingsNavigation(screenRoute = "change_password_screen")
-+        object EditProfileScreen : SettingsNavigation(screenRoute = "edit_profile_screen")
-+        object SettingScreen : SettingsNavigation(screenRoute = "setting_screen")
-+    }
-+
-+
-+    open class RideHistoryNavigation(val screenRoute: String = "") : Screens() {
-+        companion object {
-+            const val ROUTE = "ride_history_navigation"
-         }
- 
--        object RideHistoryScreen : RideHistory(screenRoute = "ride_history_screen")
--        object RideHistoryDetailsScreen : RideHistory(screenRoute = "ride_history_details_screen")
-+        object RideHistoryScreen : RideHistoryNavigation(screenRoute = "ride_history_screen")
-+        object RideHistoryDetailsScreen :
-+            RideHistoryNavigation(screenRoute = "ride_history_details_screen")
-     }
-+
- 
- }
-Index: app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chat/new_message/state/NewMessageState.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chat/new_message/state/NewMessageState.kt b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chat/new_message/state/NewMessageState.kt
-new file mode 100644
---- /dev/null	(date 1690268434475)
-+++ b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chat/new_message/state/NewMessageState.kt	(date 1690268434475)
-@@ -0,0 +1,12 @@
-+package com.example.cyclistance.feature_messaging.presentation.chat.new_message.state
-+
-+import android.os.Parcelable
-+import com.example.cyclistance.core.utils.annotations.StableState
-+import com.example.cyclistance.feature_messaging.domain.model.ui.chats.MessagingUserModel
-+import kotlinx.parcelize.Parcelize
-+
-+@Parcelize
-+@StableState
-+data class NewMessageState(
-+    val messageUsers: MessagingUserModel = MessagingUserModel()
-+) : Parcelable
-Index: app/src/main/java/com/example/cyclistance/core/utils/constants/MessagingConstants.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.cyclistance.core.utils.constants\n\nimport androidx.datastore.preferences.core.stringPreferencesKey\n\nobject MessagingConstants {\n    const val MESSAGING_VM_STATE_KEY = \"messaging_vm_state_key\"\n    const val CONVERSATION_VM_STATE_KEY = \"conversation_vm_state_key\"\n    const val KEY_FCM_TOKEN = \"fcmToken\"\n    const val KEY_EMAIL = \"email\"\n    const val KEY_PHOTO = \"photo\"\n    const val KEY_NAME = \"name\"\n    const val KEY_UID = \"key_uid\"\n    const val KEY_CHAT_COLLECTION = \"chat\"\n    const val KEY_SENDER_ID = \"senderId\"\n    const val KEY_RECEIVER_ID = \"receiverId\"\n    const val KEY_MESSAGE = \"message\"\n    const val KEY_TIMESTAMP = \"timestamp\"\n    val SAVED_TOKEN = stringPreferencesKey(\"saved_token\")\n\n    const val CHAT_ID = \"chatId\"\n    const val CHAT_PHOTO_URL = \"chatPhotoUrl\"\n    const val CHAT_NAME = \"chatName\"\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/core/utils/constants/MessagingConstants.kt b/app/src/main/java/com/example/cyclistance/core/utils/constants/MessagingConstants.kt
---- a/app/src/main/java/com/example/cyclistance/core/utils/constants/MessagingConstants.kt	(revision 962f6630a279d1fc4b1d1b7e109041d80a3349c0)
-+++ b/app/src/main/java/com/example/cyclistance/core/utils/constants/MessagingConstants.kt	(date 1690273723114)
-@@ -5,6 +5,7 @@
- object MessagingConstants {
-     const val MESSAGING_VM_STATE_KEY = "messaging_vm_state_key"
-     const val CONVERSATION_VM_STATE_KEY = "conversation_vm_state_key"
-+    const val NEW_MESSAGE_VM_STATE_KEY = "new_message_vm_state_key"
-     const val KEY_FCM_TOKEN = "fcmToken"
-     const val KEY_EMAIL = "email"
-     const val KEY_PHOTO = "photo"
-Index: app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chat/new_message/components/NewMessageUserItem.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chat/new_message/components/NewMessageUserItem.kt b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chat/new_message/components/NewMessageUserItem.kt
-new file mode 100644
---- /dev/null	(date 1690273748527)
-+++ b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chat/new_message/components/NewMessageUserItem.kt	(date 1690273748527)
-@@ -0,0 +1,92 @@
-+package com.example.cyclistance.feature_messaging.presentation.chat.new_message.components
-+
-+import androidx.compose.foundation.background
-+import androidx.compose.foundation.layout.Box
-+import androidx.compose.foundation.layout.Row
-+import androidx.compose.foundation.layout.fillMaxSize
-+import androidx.compose.foundation.layout.fillMaxWidth
-+import androidx.compose.foundation.layout.padding
-+import androidx.compose.foundation.layout.size
-+import androidx.compose.foundation.shape.CircleShape
-+import androidx.compose.foundation.shape.RoundedCornerShape
-+import androidx.compose.material.ExperimentalMaterialApi
-+import androidx.compose.material.MaterialTheme
-+import androidx.compose.material.Surface
-+import androidx.compose.material.Text
-+import androidx.compose.runtime.Composable
-+import androidx.compose.ui.Alignment
-+import androidx.compose.ui.Modifier
-+import androidx.compose.ui.draw.clip
-+import androidx.compose.ui.layout.ContentScale
-+import androidx.compose.ui.platform.LocalContext
-+import androidx.compose.ui.res.painterResource
-+import androidx.compose.ui.text.font.FontWeight
-+import androidx.compose.ui.text.style.TextOverflow
-+import androidx.compose.ui.tooling.preview.Preview
-+import androidx.compose.ui.unit.dp
-+import coil.compose.AsyncImage
-+import coil.request.CachePolicy
-+import coil.request.ImageRequest
-+import com.example.cyclistance.R
-+import com.example.cyclistance.theme.CyclistanceTheme
-+
-+@OptIn(ExperimentalMaterialApi::class)
-+@Composable
-+fun NewMessageUserItem(modifier: Modifier = Modifier, photoUrl: String, name: String) {
-+
-+    Surface(
-+        onClick = { },
-+        modifier = modifier.fillMaxWidth(),
-+        color = MaterialTheme.colors.background, shape = RoundedCornerShape(4.dp)) {
-+
-+        Row(
-+            modifier = Modifier
-+                .fillMaxWidth()
-+                .padding(horizontal = 16.dp, vertical = 4.dp)) {
-+
-+            AsyncImage(
-+                model = ImageRequest.Builder(LocalContext.current)
-+                    .data(photoUrl)
-+                    .crossfade(true)
-+                    .networkCachePolicy(CachePolicy.ENABLED)
-+                    .diskCachePolicy(CachePolicy.ENABLED)
-+                    .memoryCachePolicy(CachePolicy.ENABLED)
-+                    .build(),
-+                alignment = Alignment.Center,
-+                contentDescription = "User Profile Image",
-+                modifier = Modifier
-+                    .clip(CircleShape)
-+                    .size(54.dp),
-+                contentScale = ContentScale.Crop,
-+                placeholder = painterResource(id = R.drawable.ic_empty_profile_placeholder_large),
-+                error = painterResource(id = R.drawable.ic_empty_profile_placeholder_large),
-+                fallback = painterResource(id = R.drawable.ic_empty_profile_placeholder_large))
-+
-+            Text(
-+                text = name,
-+                color = MaterialTheme.colors.onBackground,
-+                maxLines = 1,
-+                overflow = TextOverflow.Ellipsis,
-+                style = MaterialTheme.typography.body1.copy(
-+                    fontWeight = FontWeight.SemiBold,
-+                ),
-+                modifier = Modifier.padding(top = 4.dp).padding(horizontal = 12.dp)
-+            )
-+        }
-+    }
-+}
-+
-+
-+@Preview
-+@Composable
-+private fun PreviewNewMessageUserItem() {
-+    CyclistanceTheme(darkTheme = true) {
-+        Box(modifier = Modifier.fillMaxSize().background(MaterialTheme.colors.background)) {
-+            NewMessageUserItem(
-+                modifier = Modifier,
-+                photoUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcREz8aDOvFn1m2fCQ020dcrr-RCxey0NyF_XG6JOG1HzYoQRdBwB8U3fQJKEwG7t6Yr72Q",
-+                name = "John Doe"
-+            )
-+        }
-+    }
-+}
-\ No newline at end of file
-Index: app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chat/new_message/NewMessageViewModel.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chat/new_message/NewMessageViewModel.kt b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chat/new_message/NewMessageViewModel.kt
-new file mode 100644
---- /dev/null	(date 1690273748497)
-+++ b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chat/new_message/NewMessageViewModel.kt	(date 1690273748497)
-@@ -0,0 +1,53 @@
-+package com.example.cyclistance.feature_messaging.presentation.chat.new_message
-+
-+import androidx.lifecycle.SavedStateHandle
-+import androidx.lifecycle.ViewModel
-+import androidx.lifecycle.viewModelScope
-+import com.example.cyclistance.core.utils.constants.MessagingConstants.NEW_MESSAGE_VM_STATE_KEY
-+import com.example.cyclistance.feature_messaging.domain.use_case.MessagingUseCase
-+import com.example.cyclistance.feature_messaging.presentation.chat.new_message.event.NewMessageUiEvent
-+import com.example.cyclistance.feature_messaging.presentation.chat.new_message.state.NewMessageState
-+import dagger.hilt.android.lifecycle.HiltViewModel
-+import kotlinx.coroutines.flow.MutableSharedFlow
-+import kotlinx.coroutines.flow.MutableStateFlow
-+import kotlinx.coroutines.flow.asSharedFlow
-+import kotlinx.coroutines.flow.asStateFlow
-+import kotlinx.coroutines.flow.update
-+import kotlinx.coroutines.launch
-+import javax.inject.Inject
-+
-+@HiltViewModel
-+class NewMessageViewModel @Inject constructor(
-+    private val savedStateHandle: SavedStateHandle,
-+    private val messagingUseCase: MessagingUseCase
-+) : ViewModel() {
-+
-+
-+    private val _state =
-+        MutableStateFlow(savedStateHandle[NEW_MESSAGE_VM_STATE_KEY] ?: NewMessageState())
-+    val state = _state.asStateFlow()
-+
-+    private val _event = MutableSharedFlow<NewMessageUiEvent>()
-+    val event = _event.asSharedFlow()
-+
-+    init {
-+        getUsers()
-+    }
-+
-+    private fun getUsers() {
-+        viewModelScope.launch {
-+            runCatching {
-+                messagingUseCase.getUsersUseCase()
-+            }.onSuccess { model ->
-+                _state.update {
-+                    it.copy(
-+                        messageUsers = model
-+                    )
-+                }
-+            }.onFailure {
-+
-+            }
-+        }
-+
-+    }
-+}
-\ No newline at end of file
-Index: app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chat/new_message/NewMessageScreen.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chat/new_message/NewMessageScreen.kt b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chat/new_message/NewMessageScreen.kt
-new file mode 100644
---- /dev/null	(date 1690273748520)
-+++ b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/chat/new_message/NewMessageScreen.kt	(date 1690273748520)
-@@ -0,0 +1,71 @@
-+package com.example.cyclistance.feature_messaging.presentation.chat.new_message
-+
-+import androidx.compose.foundation.layout.PaddingValues
-+import androidx.compose.foundation.layout.padding
-+import androidx.compose.runtime.Composable
-+import androidx.compose.runtime.getValue
-+import androidx.compose.runtime.mutableStateOf
-+import androidx.compose.runtime.remember
-+import androidx.compose.runtime.saveable.rememberSaveable
-+import androidx.compose.runtime.setValue
-+import androidx.compose.ui.Modifier
-+import androidx.compose.ui.focus.FocusRequester
-+import androidx.compose.ui.text.input.TextFieldValue
-+import androidx.hilt.navigation.compose.hiltViewModel
-+import androidx.lifecycle.compose.collectAsStateWithLifecycle
-+import androidx.navigation.NavController
-+import com.example.cyclistance.feature_messaging.presentation.chat.event.MessagingUiEvent
-+import com.example.cyclistance.feature_messaging.presentation.chat.new_message.components.NewMessageContent
-+import com.example.cyclistance.feature_messaging.presentation.chat.state.MessagingUiState
-+
-+@Composable
-+fun NewMessageScreen(
-+    viewModel: NewMessageViewModel = hiltViewModel(),
-+    navController: NavController,
-+    paddingValues: PaddingValues) {
-+
-+    val state by viewModel.state.collectAsStateWithLifecycle()
-+    var uiState by rememberSaveable { mutableStateOf(MessagingUiState()) }
-+    var searchQuery by rememberSaveable(stateSaver = TextFieldValue.Saver) {
-+        mutableStateOf(TextFieldValue())
-+    }
-+    val focusRequester = remember { FocusRequester() }
-+    val onClickSearch = remember {
-+        {
-+            uiState = uiState.copy(
-+                isSearching = true
-+            )
-+        }
-+    }
-+
-+    val onSearchQueryChanged = remember {
-+        { _searchQuery: TextFieldValue ->
-+            searchQuery = _searchQuery
-+        }
-+    }
-+
-+    val onClearSearchQuery = remember {
-+        {
-+            searchQuery = TextFieldValue()
-+        }
-+    }
-+    NewMessageContent(
-+        modifier = Modifier.padding(paddingValues),
-+        focusRequester = focusRequester,
-+        searchQuery = searchQuery,
-+        state = state,
-+        uiState = uiState,
-+        event = { event ->
-+            when (event) {
-+                MessagingUiEvent.ClearSearchQuery -> onClearSearchQuery()
-+                MessagingUiEvent.CloseScreen -> TODO()
-+                MessagingUiEvent.OnClickSearch -> onClickSearch()
-+                is MessagingUiEvent.OnSearchQueryChanged -> onSearchQueryChanged(event.searchQuery)
-+                is MessagingUiEvent.OnSelectConversation -> TODO()
-+            }
-+        }
-+
-+
-+    )
-+
-+}
-\ No newline at end of file
Index: .idea/shelf/Continue_analytics.xml
===================================================================
diff --git a/.idea/shelf/Continue_analytics.xml b/.idea/shelf/Continue_analytics.xml
deleted file mode 100644
--- a/.idea/shelf/Continue_analytics.xml	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
+++ /dev/null	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
@@ -1,4 +0,0 @@
-<changelist name="Continue_analytics" date="1693842994827" recycled="false" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Continue_analytics/shelved.patch" />
-  <option name="DESCRIPTION" value="Continue analytics" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Experiment_removing_fullscreen_dialog.xml
===================================================================
diff --git a/.idea/shelf/Experiment_removing_fullscreen_dialog.xml b/.idea/shelf/Experiment_removing_fullscreen_dialog.xml
deleted file mode 100644
--- a/.idea/shelf/Experiment_removing_fullscreen_dialog.xml	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
+++ /dev/null	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
@@ -1,4 +0,0 @@
-<changelist name="Experiment_removing_fullscreen_dialog" date="1690187314803" recycled="false">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Experiment_removing_fullscreen_dialog/shelved.patch" />
-  <option name="DESCRIPTION" value="Experiment removing fullscreen dialog" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Manage_Focus_Requester.xml
===================================================================
diff --git a/.idea/shelf/Manage_Focus_Requester.xml b/.idea/shelf/Manage_Focus_Requester.xml
deleted file mode 100644
--- a/.idea/shelf/Manage_Focus_Requester.xml	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
+++ /dev/null	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
@@ -1,4 +0,0 @@
-<changelist name="Manage_Focus_Requester" date="1693842976774" recycled="false" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Manage_Focus_Requester/shelved.patch" />
-  <option name="DESCRIPTION" value="Manage Focus Requester" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Mapping_bugs.xml
===================================================================
diff --git a/.idea/shelf/Mapping_bugs.xml b/.idea/shelf/Mapping_bugs.xml
deleted file mode 100644
--- a/.idea/shelf/Mapping_bugs.xml	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
+++ /dev/null	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
@@ -1,4 +0,0 @@
-<changelist name="Mapping_bugs" date="1692076327082" recycled="false">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Mapping_bugs/shelved.patch" />
-  <option name="DESCRIPTION" value="Mapping bugs" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/NearbyCylistState.xml
===================================================================
diff --git a/.idea/shelf/NearbyCylistState.xml b/.idea/shelf/NearbyCylistState.xml
deleted file mode 100644
--- a/.idea/shelf/NearbyCylistState.xml	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
+++ /dev/null	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
@@ -1,4 +0,0 @@
-<changelist name="NearbyCylistState" date="1692093312325" recycled="false">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/NearbyCylistState/shelved.patch" />
-  <option name="DESCRIPTION" value="NearbyCylistState" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Reset_password.xml
===================================================================
diff --git a/.idea/shelf/Reset_password.xml b/.idea/shelf/Reset_password.xml
deleted file mode 100644
--- a/.idea/shelf/Reset_password.xml	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
+++ /dev/null	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
@@ -1,4 +0,0 @@
-<changelist name="Reset_password" date="1691636513640" recycled="false">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Reset_password/shelved.patch" />
-  <option name="DESCRIPTION" value="Reset password" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Soon__New_Message_feature.xml
===================================================================
diff --git a/.idea/shelf/Soon__New_Message_feature.xml b/.idea/shelf/Soon__New_Message_feature.xml
deleted file mode 100644
--- a/.idea/shelf/Soon__New_Message_feature.xml	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
+++ /dev/null	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
@@ -1,4 +0,0 @@
-<changelist name="Soon__New_Message_feature" date="1690273748592" recycled="false">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Soon__New_Message_feature/shelved.patch" />
-  <option name="DESCRIPTION" value="Soon: New Message feature" />
-</changelist>
\ No newline at end of file
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
deleted file mode 100644
--- a/.idea/compiler.xml	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
+++ /dev/null	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="CompilerConfiguration">
-    <bytecodeTargetLevel target="17" />
-  </component>
-</project>
\ No newline at end of file
Index: .idea/deploymentTargetDropDown.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/deploymentTargetDropDown.xml b/.idea/deploymentTargetDropDown.xml
deleted file mode 100644
--- a/.idea/deploymentTargetDropDown.xml	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
+++ /dev/null	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
@@ -1,36 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="deploymentTargetDropDown">
-    <runningDeviceTargetsSelectedWithDialog>
-      <Target>
-        <type value="RUNNING_DEVICE_TARGET" />
-        <deviceKey>
-          <Key>
-            <type value="VIRTUAL_DEVICE_PATH" />
-            <value value="$PROJECT_DIR$/../../.android/avd/Pixel_5_API_27.avd" />
-          </Key>
-        </deviceKey>
-      </Target>
-      <Target>
-        <type value="RUNNING_DEVICE_TARGET" />
-        <deviceKey>
-          <Key>
-            <type value="SERIAL_NUMBER" />
-            <value value="194a89050404" />
-          </Key>
-        </deviceKey>
-      </Target>
-    </runningDeviceTargetsSelectedWithDialog>
-    <targetsSelectedWithDialog>
-      <Target>
-        <type value="QUICK_BOOT_TARGET" />
-        <deviceKey>
-          <Key>
-            <type value="VIRTUAL_DEVICE_PATH" />
-            <value value="$PROJECT_DIR$/../../.android/avd/Pixel_5_API_27.avd" />
-          </Key>
-        </deviceKey>
-      </Target>
-    </targetsSelectedWithDialog>
-  </component>
-</project>
\ No newline at end of file
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/gradle.xml b/.idea/gradle.xml
deleted file mode 100644
--- a/.idea/gradle.xml	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
+++ /dev/null	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
@@ -1,21 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="GradleMigrationSettings" migrationVersion="1" />
-  <component name="GradleSettings">
-    <option name="linkedExternalProjectsSettings">
-      <GradleProjectSettings>
-        <option name="testRunner" value="GRADLE" />
-        <option name="distributionType" value="DEFAULT_WRAPPED" />
-        <option name="externalProjectPath" value="$PROJECT_DIR$" />
-        <option name="gradleJvm" value="jbr-17" />
-        <option name="modules">
-          <set>
-            <option value="$PROJECT_DIR$" />
-            <option value="$PROJECT_DIR$/app" />
-          </set>
-        </option>
-      </GradleProjectSettings>
-    </option>
-    <option name="offlineMode" value="true" />
-  </component>
-</project>
\ No newline at end of file
Index: .idea/kotlinc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/kotlinc.xml b/.idea/kotlinc.xml
deleted file mode 100644
--- a/.idea/kotlinc.xml	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
+++ /dev/null	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="KotlinJpsPluginSettings">
-    <option name="version" value="1.8.21" />
-  </component>
-</project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
deleted file mode 100644
--- a/.idea/misc.xml	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
+++ /dev/null	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
@@ -1,6 +0,0 @@
-<project version="4">
-  <component name="ExternalStorageConfigurationManager" enabled="true" />
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="jbr-17" project-jdk-type="JavaSDK">
-    <output url="file://$PROJECT_DIR$/build/classes" />
-  </component>
-</project>
\ No newline at end of file
Index: .idea/other.xml
===================================================================
diff --git a/.idea/other.xml b/.idea/other.xml
deleted file mode 100644
--- a/.idea/other.xml	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
+++ /dev/null	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="ScreenshotViewer">
-    <option name="frameScreenshot" value="true" />
-  </component>
-</project>
\ No newline at end of file
Index: .idea/templateLanguages.xml
===================================================================
diff --git a/.idea/templateLanguages.xml b/.idea/templateLanguages.xml
deleted file mode 100644
--- a/.idea/templateLanguages.xml	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
+++ /dev/null	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="TemplateDataLanguageMappings">
-    <file url="PROJECT" dialect="kotlin" />
-  </component>
-</project>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
deleted file mode 100644
--- a/.idea/vcs.xml	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
+++ /dev/null	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="VcsDirectoryMappings">
-    <mapping directory="$PROJECT_DIR$" vcs="Git" />
-  </component>
-</project>
\ No newline at end of file
Index: app/proguard-rules.pro
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Add project specific ProGuard rules here.\n# You can control the set of applied configuration files using the\n# proguardFiles setting in build.gradle.\n#\n# For more details, see\n#   http://developer.android.com/guide/developing/tools/proguard.html\n\n# If your project uses WebView with JS, uncomment the following\n# and specify the fully qualified class name to the JavaScript interface\n# class:\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n#   public *;\n#}\n\n# Uncomment this to preserve the line number information for\n# debugging stack traces.\n-keepattributes SourceFile,LineNumberTable\n\n# If you keep the line number information, uncomment this to\n# hide the original source file name.\n#-renamesourcefileattribute SourceFile\n\n\n-keep class com.example.cyclistance.feature_mapping.data.data_source.network.dto.rescue_transaction.* { *; }\n-keep class com.example.cyclistance.feature_mapping.data.data_source.network.dto.user_dto.* { *; }\n\n-dontnote okhttp3.**, okio.**, retrofit2.**\n-dontwarn retrofit2.**\n-keep class retrofit2.** { *; }
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/proguard-rules.pro b/app/proguard-rules.pro
--- a/app/proguard-rules.pro	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
+++ b/app/proguard-rules.pro	(date 1694005066951)
@@ -1,6 +1,6 @@
 # Add project specific ProGuard rules here.
 # You can control the set of applied configuration files using the
-# proguardFiles setting in build.gradle.
+# proguardFiles setting in build.gradle.kts.
 #
 # For more details, see
 #   http://developer.android.com/guide/developing/tools/proguard.html
Index: firestore-debug.log
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>Sep 06, 2023 11:36:02 AM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketServer start\nINFO: Started WebSocket server on ws://0.0.0.0:33613\nAPI endpoint: http://0.0.0.0:9299\nIf you are using a library that supports the FIRESTORE_EMULATOR_HOST environment variable, run:\n\n   export FIRESTORE_EMULATOR_HOST=0.0.0.0:9299\n\nDev App Server is now running.\n\nSep 06, 2023 11:37:39 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nSep 06, 2023 11:37:57 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nSep 06, 2023 12:07:57 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nSep 06, 2023 12:14:47 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nSep 06, 2023 12:19:56 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nSep 06, 2023 12:21:26 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nSep 06, 2023 12:22:48 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nSep 06, 2023 12:24:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nSep 06, 2023 12:27:21 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nSep 06, 2023 12:28:34 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nSep 06, 2023 12:33:16 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nSep 06, 2023 12:34:23 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nSep 06, 2023 12:41:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nSep 06, 2023 12:43:02 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nSep 06, 2023 12:47:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nSep 06, 2023 12:53:34 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nSep 06, 2023 12:56:18 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nSep 06, 2023 12:57:36 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nSep 06, 2023 12:59:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nSep 06, 2023 1:02:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nSep 06, 2023 1:12:50 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nSep 06, 2023 1:31:47 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/firestore-debug.log b/firestore-debug.log
--- a/firestore-debug.log	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
+++ b/firestore-debug.log	(date 1694013787047)
@@ -1,5 +1,5 @@
-Sep 06, 2023 11:36:02 AM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketServer start
-INFO: Started WebSocket server on ws://0.0.0.0:33613
+Sep 06, 2023 8:18:40 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketServer start
+INFO: Started WebSocket server on ws://0.0.0.0:38967
 API endpoint: http://0.0.0.0:9299
 If you are using a library that supports the FIRESTORE_EMULATOR_HOST environment variable, run:
 
@@ -7,47 +7,61 @@
 
 Dev App Server is now running.
 
-Sep 06, 2023 11:37:39 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
-INFO: Detected HTTP/2 connection.
-Sep 06, 2023 11:37:57 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
-INFO: Detected HTTP/2 connection.
-Sep 06, 2023 12:07:57 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
-INFO: Detected HTTP/2 connection.
-Sep 06, 2023 12:14:47 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
-INFO: Detected HTTP/2 connection.
-Sep 06, 2023 12:19:56 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
-INFO: Detected HTTP/2 connection.
-Sep 06, 2023 12:21:26 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
-INFO: Detected HTTP/2 connection.
-Sep 06, 2023 12:22:48 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
-INFO: Detected HTTP/2 connection.
-Sep 06, 2023 12:24:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
-INFO: Detected HTTP/2 connection.
-Sep 06, 2023 12:27:21 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
-INFO: Detected HTTP/2 connection.
-Sep 06, 2023 12:28:34 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
-INFO: Detected HTTP/2 connection.
-Sep 06, 2023 12:33:16 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
-INFO: Detected HTTP/2 connection.
-Sep 06, 2023 12:34:23 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
-INFO: Detected HTTP/2 connection.
-Sep 06, 2023 12:41:45 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
-INFO: Detected HTTP/2 connection.
-Sep 06, 2023 12:43:02 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
-INFO: Detected HTTP/2 connection.
-Sep 06, 2023 12:47:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
-INFO: Detected HTTP/2 connection.
-Sep 06, 2023 12:53:34 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
-INFO: Detected HTTP/2 connection.
-Sep 06, 2023 12:56:18 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
+Sep 06, 2023 8:34:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
+INFO: Detected non-HTTP/2 connection.
+Sep 06, 2023 8:34:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
+INFO: Detected non-HTTP/2 connection.
+Sep 06, 2023 8:34:55 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketChannelHandler initChannel
+INFO: Connected to new websocket client
+Sep 06, 2023 8:34:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
+INFO: Detected non-HTTP/2 connection.
+Sep 06, 2023 8:34:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
+INFO: Detected non-HTTP/2 connection.
+Sep 06, 2023 8:35:29 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
+INFO: Detected non-HTTP/2 connection.
+Sep 06, 2023 8:59:53 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
+INFO: Detected non-HTTP/2 connection.
+Sep 06, 2023 8:59:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
+INFO: Detected non-HTTP/2 connection.
+Sep 06, 2023 8:59:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
+INFO: Detected non-HTTP/2 connection.
+Sep 06, 2023 8:59:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
+INFO: Detected non-HTTP/2 connection.
+Sep 06, 2023 8:59:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
+INFO: Detected non-HTTP/2 connection.
+Sep 06, 2023 8:59:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
 INFO: Detected HTTP/2 connection.
-Sep 06, 2023 12:57:36 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
-INFO: Detected HTTP/2 connection.
-Sep 06, 2023 12:59:25 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
-INFO: Detected HTTP/2 connection.
-Sep 06, 2023 1:02:51 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
-INFO: Detected HTTP/2 connection.
-Sep 06, 2023 1:12:50 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
-INFO: Detected HTTP/2 connection.
-Sep 06, 2023 1:31:47 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
+Sep 06, 2023 8:59:57 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
+INFO: Detected non-HTTP/2 connection.
+Sep 06, 2023 8:59:57 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
+INFO: Detected non-HTTP/2 connection.
+Sep 06, 2023 8:59:57 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
+INFO: Detected non-HTTP/2 connection.
+Sep 06, 2023 8:59:57 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
+INFO: Detected non-HTTP/2 connection.
+Sep 06, 2023 8:59:57 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
+INFO: Detected non-HTTP/2 connection.
+Sep 06, 2023 8:59:57 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
+INFO: Detected non-HTTP/2 connection.
+Sep 06, 2023 8:59:59 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
+INFO: Detected non-HTTP/2 connection.
+Sep 06, 2023 9:00:01 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
+INFO: Detected non-HTTP/2 connection.
+Sep 06, 2023 9:00:02 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
+INFO: Detected non-HTTP/2 connection.
+Sep 06, 2023 9:00:02 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
+INFO: Detected non-HTTP/2 connection.
+Sep 06, 2023 9:00:06 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
+INFO: Detected non-HTTP/2 connection.
+Sep 06, 2023 9:00:57 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
+INFO: Detected non-HTTP/2 connection.
+Sep 06, 2023 9:02:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
+INFO: Detected non-HTTP/2 connection.
+Sep 06, 2023 9:02:40 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
+INFO: Detected non-HTTP/2 connection.
+Sep 06, 2023 9:02:42 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
+INFO: Detected non-HTTP/2 connection.
+Sep 06, 2023 9:02:43 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketChannelHandler channelClosed
+INFO: Websocket client disconnected
+Sep 06, 2023 11:23:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
 INFO: Detected HTTP/2 connection.
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build.gradle b/build.gradle.kts
rename from build.gradle
rename to build.gradle.kts
--- a/build.gradle	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
+++ b/build.gradle.kts	(date 1694024293748)
@@ -1,27 +1,26 @@
 buildscript {
 
-    ext {
-        compose_version = '1.3.1'
-        kotlin_version = '1.7.10'
-    }
 
     dependencies {
-        classpath("com.google.dagger:hilt-android-gradle-plugin:2.45")
-        classpath 'com.android.tools.build:gradle:8.0.2'
-        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.8.21'
-        classpath 'com.google.gms:google-services:4.3.15'
-        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.9.6'
+        classpath("com.google.dagger:hilt-android-gradle-plugin:2.48")
+        classpath ("com.android.tools.build:gradle:8.0.2")
+        classpath ("org.jetbrains.kotlin:kotlin-gradle-plugin:1.8.21")
+        classpath ("com.google.gms:google-services:4.3.15")
+        classpath ("com.google.firebase:firebase-crashlytics-gradle:2.9.9")
     }
 
 }
 
 plugins {
-    id 'com.android.application' version '8.0.2' apply false
-    id 'com.android.library' version '8.0.2' apply false
-    id 'org.jetbrains.kotlin.android' version '1.8.0' apply false // change to 1.8.0
-    id 'com.google.dagger.hilt.android' version '2.41' apply false
+    id ("com.android.application") version "8.0.2" apply false
+    id ("com.android.library") version "8.0.2" apply false
+    id ("org.jetbrains.kotlin.android") version "1.9.10" apply false // change to 1.8.0
+    id ("com.google.dagger.hilt.android") version "2.48" apply false
+    id("com.google.devtools.ksp") version "1.9.0-1.0.13" apply false
+//    id("org.jetbrains.kotlin.multiplatform.pm20") version "1.9.10"
+}
+
+tasks.register("clean",Delete::class){
+    delete(rootProject.buildDir)
 }
 
-task clean(type: Delete) {
-    delete rootProject.buildDir
-}
\ No newline at end of file
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\">\n\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\n    <uses-permission android:name=\"android.permission.INTERNET\" />\n    <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\n    <uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" />\n    <uses-permission android:name=\"android.permission.ACCESS_BACKGROUND_LOCATION\" />\n    <uses-permission android:name=\"android.permission.FOREGROUND_SERVICE\" />\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\n    <uses-permission android:name=\"android.permission.CAMERA\" />\n    <uses-feature android:name=\"android.hardware.camera.any\" />\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\n    <uses-permission android:name=\"android.permission.ACCESS_WIFI_STATE\" />\n    <uses-permission android:name=\"android.permission.CALL_PHONE\" />\n    <uses-permission android:name=\"android.permission.POST_NOTIFICATIONS\"/>\n\n    <uses-feature android:glEsVersion=\"0x00030001\" android:required=\"true\" />\n    <uses-feature\n        android:name=\"android.hardware.camera\"\n        android:required=\"false\" />\n    <uses-feature\n        android:name=\"android.hardware.telephony\"\n        android:required=\"false\" />\n\n    <application\n        android:name=\".BaseApplication\"\n        android:allowBackup=\"true\"\n        android:hardwareAccelerated=\"true\"\n        android:icon=\"@mipmap/ic_launcher\"\n        android:label=\"@string/app_name\"\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\n        android:supportsRtl=\"true\"\n        android:theme=\"@style/Theme.Cyclistance\"\n        android:usesCleartextTraffic=\"true\">\n\n\n\n        <service\n            android:name=\".service.LocationService\"\n            android:foregroundServiceType=\"location\" />\n\n\n        <activity\n            android:name=\".MainActivity\"\n            android:configChanges=\"keyboard|keyboardHidden|orientation|screenSize\"\n            android:exported=\"true\"\n            android:windowSoftInputMode=\"adjustResize\"\n            android:hardwareAccelerated=\"true\"\n            android:theme=\"@style/Theme.Cyclistance\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.MAIN\" />\n                <category android:name=\"android.intent.category.LAUNCHER\" />\n            </intent-filter>\n        </activity>\n\n        <provider\n            android:name=\"androidx.core.content.FileProvider\"\n            android:authorities=\"${applicationId}.provider\"\n            android:exported=\"false\"\n            android:grantUriPermissions=\"true\">\n            <meta-data\n                android:name=\"android.support.FILE_PROVIDER_PATHS\"\n                android:resource=\"@xml/provider_paths\" />\n\n        </provider>\n\n        <meta-data\n            android:name=\"com.facebook.sdk.ApplicationId\"\n            android:value=\"@string/FacebookAppID\" />\n        <meta-data\n            android:name=\"com.facebook.sdk.ClientToken\"\n            android:value=\"@string/FacebookClientToken\" />\n\n        <activity\n            android:name=\"com.facebook.FacebookActivity\"\n            android:configChanges=\"keyboard|keyboardHidden|screenLayout|screenSize|orientation\" />\n        <activity\n            android:name=\"com.facebook.CustomTabActivity\"\n            android:exported=\"true\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.VIEW\" />\n\n                <category android:name=\"android.intent.category.DEFAULT\" />\n                <category android:name=\"android.intent.category.BROWSABLE\" />\n\n                <data android:scheme=\"@string/FacebookLoginProtocolScheme\" />\n            </intent-filter>\n        </activity>\n\n        <service\n            android:name=\"com.example.cyclistance.service.MessagingService\"\n            android:exported=\"false\">\n            <intent-filter>\n                <action android:name=\"com.google.firebase.MESSAGING_EVENT\" />\n            </intent-filter>\n        </service>\n\n    </application>\n\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
+++ b/app/src/main/AndroidManifest.xml	(date 1694016364860)
@@ -24,7 +24,7 @@
         android:required="false" />
 
     <application
-        android:name=".BaseApplication"
+        android:name="com.example.cyclistance.BaseApplication"
         android:allowBackup="true"
         android:hardwareAccelerated="true"
         android:icon="@mipmap/ic_launcher"
@@ -42,7 +42,7 @@
 
 
         <activity
-            android:name=".MainActivity"
+            android:name="com.example.cyclistance.MainActivity"
             android:configChanges="keyboard|keyboardHidden|orientation|screenSize"
             android:exported="true"
             android:windowSoftInputMode="adjustResize"
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle.kts
rename from app/build.gradle
rename to app/build.gradle.kts
--- a/app/build.gradle	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
+++ b/app/build.gradle.kts	(date 1694027489515)
@@ -1,289 +1,321 @@
+
 import org.jetbrains.kotlin.gradle.tasks.KotlinCompile
+import java.io.FileInputStream
+import java.util.Properties
 
+val compose_version = "1.3.1"
+val kotlin_version = "1.9.10"
 plugins {
-    id 'com.android.application'
-    id 'org.jetbrains.kotlin.android'
-    id 'kotlin-android'
-    id 'kotlin-kapt'
-    id 'dagger.hilt.android.plugin'
-    id 'com.google.gms.google-services'
-    id "kotlin-parcelize"
-    id 'com.google.dagger.hilt.android'
+    id("com.android.application")
+    kotlin("android")
+    id("dagger.hilt.android.plugin")
+    id("com.google.gms.google-services")
+    id("kotlin-parcelize")
+    id("com.google.dagger.hilt.android")
+    id("com.google.firebase.crashlytics")
+    id("com.google.devtools.ksp")
 }
-apply plugin: 'kotlin-kapt'
-apply plugin: 'com.android.application'
-apply plugin: 'dagger.hilt.android.plugin'
-apply plugin: 'com.google.firebase.crashlytics'
-apply plugin: "kotlin-parcelize"
+apply(plugin = "com.android.application")
+apply(plugin = "dagger.hilt.android.plugin")
+apply(plugin = "com.google.firebase.crashlytics")
+apply(plugin = "kotlin-parcelize")
 android {
-    compileSdk 34
+    compileSdk = 34
 
     defaultConfig {
-        applicationId "com.example.cyclistance"
-        //minSdk 24
+        applicationId = "com.example.cyclistance"
+        minSdk = 21
+        targetSdk = 33
 
-        minSdkVersion 21
-        targetSdk 33
-        versionCode 1
-        versionName "1.0"
+        versionCode = 1
+        versionName = "1.0"
         multiDexEnabled = true
+        namespace = "com.example.cyclistance"
 
-        testInstrumentationRunner "com.example.cyclistance.HiltTestRunner"
+        testInstrumentationRunner = "com.example.cyclistance.HiltTestRunner"
         vectorDrawables {
-            useSupportLibrary true
+            useSupportLibrary = true
         }
     }
     buildTypes {
-        def localProperties = new Properties()
-        localProperties.load(new FileInputStream(rootProject.file("local.properties")))
+        val localProperties = Properties()
+        localProperties.load(FileInputStream(rootProject.file("local.properties")))
 
-        debug {
-            crunchPngs true
-            manifestPlaceholders.cleartextTrafficPermitted ="true"
-            resValue("string", "MapsDownloadToken", localProperties.getProperty("MAPBOX_DOWNLOADS_TOKEN"))
+        getByName("debug") {
+            isCrunchPngs = true
+            manifestPlaceholders["cleartextTrafficPermitted"] = "true"
+            resValue(
+                "string",
+                "MapsDownloadToken",
+                localProperties.getProperty("MAPBOX_DOWNLOADS_TOKEN"))
             resValue("string", "FacebookAppID", localProperties.getProperty("FACEBOOK_APP_ID"))
-            resValue("string", "FacebookLoginProtocolScheme", localProperties.getProperty("FACEBOOK_LOGIN_PROTOCOL_SCHEME"))
-            resValue("string", "FacebookClientToken", localProperties.getProperty("FACEBOOK_CLIENT_TOKEN"))
-            resValue("string", "DefaultWebClientId", localProperties.getProperty("DEFAULT_WEB_CLIENT_ID"))
-            resValue("string", "CyclistanceApiBaseUrl", localProperties.getProperty("CYCLISTANCE_API_BASE_URL_LOCAL"))
+            resValue(
+                "string",
+                "FacebookLoginProtocolScheme",
+                localProperties.getProperty("FACEBOOK_LOGIN_PROTOCOL_SCHEME"))
+            resValue(
+                "string",
+                "FacebookClientToken",
+                localProperties.getProperty("FACEBOOK_CLIENT_TOKEN"))
+            resValue(
+                "string",
+                "DefaultWebClientId",
+                localProperties.getProperty("DEFAULT_WEB_CLIENT_ID"))
+            resValue(
+                "string",
+                "CyclistanceApiBaseUrl",
+                localProperties.getProperty("CYCLISTANCE_API_BASE_URL_LOCAL"))
             resValue("string", "FcmServerKey", localProperties.getProperty("FCM_SERVER_KEY"))
             resValue("string", "FcmBaseUrl", localProperties.getProperty("FCM_BASE_URL"))
-//            resValue("string", "CyclistanceApiBaseUrlLocal", localProperties.getProperty("CYCLISTANCE_API_BASE_URL_LOCAL"))
         }
-        release {
-            minifyEnabled true
-            shrinkResources true
-            crunchPngs true
-            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
-
-            resValue("string", "MapsDownloadToken", localProperties.getProperty("MAPBOX_DOWNLOADS_TOKEN"))
+        getByName("release") {
+            isMinifyEnabled = true
+            isShrinkResources = true
+            isCrunchPngs = true
+            proguardFiles(
+                getDefaultProguardFile("proguard-android-optimize.txt"),
+                "proguard-rules.pro"
+            )
+            resValue(
+                "string",
+                "MapsDownloadToken",
+                localProperties.getProperty("MAPBOX_DOWNLOADS_TOKEN"))
             resValue("string", "FacebookAppID", localProperties.getProperty("FACEBOOK_APP_ID"))
-            resValue("string", "FacebookLoginProtocolScheme", localProperties.getProperty("FACEBOOK_LOGIN_PROTOCOL_SCHEME"))
-            resValue("string", "FacebookClientToken", localProperties.getProperty("FACEBOOK_CLIENT_TOKEN"))
-            resValue("string", "DefaultWebClientId", localProperties.getProperty("DEFAULT_WEB_CLIENT_ID"))
-            resValue("string", "CyclistanceApiBaseUrl", localProperties.getProperty("CYCLISTANCE_API_BASE_URL"))
+            resValue(
+                "string",
+                "FacebookLoginProtocolScheme",
+                localProperties.getProperty("FACEBOOK_LOGIN_PROTOCOL_SCHEME"))
+            resValue(
+                "string",
+                "FacebookClientToken",
+                localProperties.getProperty("FACEBOOK_CLIENT_TOKEN"))
+            resValue(
+                "string",
+                "DefaultWebClientId",
+                localProperties.getProperty("DEFAULT_WEB_CLIENT_ID"))
+            resValue(
+                "string",
+                "CyclistanceApiBaseUrl",
+                localProperties.getProperty("CYCLISTANCE_API_BASE_URL"))
             resValue("string", "FcmServerKey", localProperties.getProperty("FCM_SERVER_KEY"))
             resValue("string", "FcmBaseUrl", localProperties.getProperty("FCM_BASE_URL"))
-//            resValue("string", "CyclistanceApiBaseUrlLocal", localProperties.getProperty("CYCLISTANCE_API_BASE_URL_LOCAL"))
         }
     }
 
     compileOptions {
-        sourceCompatibility JavaVersion.VERSION_17
-        targetCompatibility JavaVersion.VERSION_17
+        sourceCompatibility = JavaVersion.VERSION_17
+        targetCompatibility = JavaVersion.VERSION_17
     }
     kotlinOptions {
-        jvmTarget = '17'
+        jvmTarget = "17"
     }
+
     buildFeatures {
-        compose true
+        compose = true
         viewBinding = true
     }
+
     composeOptions {
-        kotlinCompilerExtensionVersion '1.4.7'
-        kotlinCompilerVersion kotlin_version
+        kotlinCompilerExtensionVersion = "1.5.3"
+        kotlinCompilerVersion = kotlin_version
+
     }
+
     packagingOptions {
         resources {
-            excludes += '/META-INF/{AL2.0,LGPL2.1}'
+            excludes += "/META-INF/{AL2.0,LGPL2.1}"
         }
     }
-
 
 
     subprojects {
-        tasks.withType(KotlinCompile).configureEach {
+        tasks.withType<KotlinCompile>().configureEach {
             kotlinOptions {
                 if (project.findProperty("myapp.enableComposeCompilerReports") == "true") {
-                    freeCompilerArgs += [
-                            "-P",
-                            "plugin:androidx.compose.compiler.plugins.kotlin:reportsDestination=" +
-                                    project.buildDir.absolutePath + "/compose_metrics"
-                    ]
-                    freeCompilerArgs += [
-                            "-P",
-                            "plugin:androidx.compose.compiler.plugins.kotlin:metricsDestination=" +
-                                    project.buildDir.absolutePath + "/compose_metrics"
-                    ]
+                    val compilerArgs = mutableListOf<String>()
+                    compilerArgs.add(
+                        "-P"
+                    )
+                    compilerArgs.add(
+                        "plugin:androidx.compose.compiler.plugins.kotlin:reportsDestination=" +
+                        project.buildDir.absolutePath + "/compose_metrics"
+                    )
+                    compilerArgs.add(
+                        "-P"
+                    )
+                    compilerArgs.add(
+                        "plugin:androidx.compose.compiler.plugins.kotlin:metricsDestination=" +
+                        project.buildDir.absolutePath + "/compose_metrics"
+                    )
+
+                    freeCompilerArgs = compilerArgs
                 }
             }
         }
     }
-    namespace 'com.example.cyclistance'
+
+
+
+
 }
 
 dependencies {
-    implementation "androidx.lifecycle:lifecycle-runtime-compose:2.6.1"
-    implementation 'androidx.core:core-ktx:1.10.1'
-    implementation "androidx.compose.ui:ui:1.6.0-alpha01"
-    implementation "androidx.compose.material:material:1.6.0-alpha01"
-    implementation "androidx.compose.ui:ui-tooling-preview:1.5.0"
-    implementation "androidx.navigation:navigation-compose:2.7.0"
-    implementation "androidx.compose.material:material-icons-extended:1.5.0"
-    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
-    implementation 'androidx.activity:activity-compose:1.7.2'
-    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
-    implementation 'com.google.android.material:material:1.9.0'
-    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
-    implementation 'com.google.android.gms:play-services-auth:20.6.0'
-    implementation 'com.google.android.gms:play-services-maps:18.1.0'
+    implementation("androidx.lifecycle:lifecycle-runtime-compose:2.6.1")
+    implementation("androidx.core:core-ktx:1.10.1")
+    implementation("androidx.compose.ui:ui:1.6.0-alpha01")
+    implementation("androidx.compose.material:material:1.6.0-alpha01")
+    implementation("androidx.compose.ui:ui-tooling-preview:1.5.0")
+    implementation("androidx.navigation:navigation-compose:2.7.0")
+    implementation("androidx.compose.material:material-icons-extended:1.5.0")
+    implementation("androidx.lifecycle:lifecycle-runtime-ktx:2.6.1")
+    implementation("androidx.activity:activity-compose:1.7.2")
+    implementation("androidx.legacy:legacy-support-v4:1.0.0")
+    implementation("com.google.android.material:material:1.9.0")
+    implementation("androidx.constraintlayout:constraintlayout:2.1.4")
+    implementation("com.google.android.gms:play-services-auth:20.6.0")
+    implementation("com.google.android.gms:play-services-maps:18.1.0")
     implementation("androidx.compose.material:material:1.5.0")
-    implementation "androidx.compose.material3:material3:1.1.1"
-    implementation 'androidx.test.ext:junit-ktx:1.1.5'
-    implementation 'androidx.core:core-ktx:1.10.1'
-    implementation 'androidx.compose.foundation:foundation:1.4.3'
-    debugImplementation "androidx.compose.ui:ui-tooling:1.5.0"
-    implementation "androidx.compose.compiler:compiler:1.5.1"
-    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"
-
+    implementation("androidx.compose.material3:material3:1.1.1")
+    implementation("androidx.test.ext:junit-ktx:1.1.5")
+    implementation("androidx.core:core-ktx:1.10.1")
+    implementation("androidx.compose.foundation:foundation:1.4.3")
+    debugImplementation("androidx.compose.ui:ui-tooling:1.5.0")
+    implementation("androidx.compose.compiler:compiler:1.5.1")
+    implementation("androidx.constraintlayout:constraintlayout-compose:1.0.1")
 
     //unit test
-    testImplementation 'junit:junit:4.13.2'
-    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4'
-    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.41'
-    kaptAndroidTest 'com.google.dagger:hilt-android-compiler:2.44'
-    androidTestImplementation "androidx.arch.core:core-testing:2.2.0"
-
+    testImplementation("junit:junit:4.13.2")
+    testImplementation("org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4")
+    androidTestImplementation("com.google.dagger:hilt-android-testing:2.48")
+    kspAndroidTest("com.google.dagger:hilt-android-compiler:2.48")
+    androidTestImplementation("androidx.arch.core:core-testing:2.2.0")
 
     //integration test
-    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
-    androidTestImplementation "androidx.compose.ui:ui-test-junit4:1.4.3"
-    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
+    androidTestImplementation("androidx.test.ext:junit:1.1.5")
+    androidTestImplementation("androidx.compose.ui:ui-test-junit4:1.4.3")
+    androidTestImplementation("androidx.test.espresso:espresso-core:3.5.1")
 
 
-    implementation("com.google.dagger:hilt-android:2.44")
-    kapt("com.google.dagger:hilt-android-compiler:2.44")
-    kapt "androidx.hilt:hilt-compiler:1.0.0"
-    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'
+    implementation("com.google.dagger:hilt-android:2.48")
+    ksp("com.google.dagger:hilt-android-compiler:2.48")
+    ksp("androidx.hilt:hilt-compiler:1.0.0")
+    implementation("androidx.hilt:hilt-navigation-compose:1.0.0")
 
 
-
-    def retrofit_version = "2.9.0"
-    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
-    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
-    implementation "com.squareup.retrofit2:converter-scalars:$retrofit_version"
+    val retrofit_version = "2.9.0"
+    implementation("com.squareup.retrofit2:retrofit:$retrofit_version")
+    implementation("com.squareup.retrofit2:converter-gson:$retrofit_version")
+    implementation("com.squareup.retrofit2:converter-scalars:$retrofit_version")
 
     // Coroutines
-    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
-    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'
+    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4")
+    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4")
 
     // Coroutine Lifecycle Scopes
-    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1"
-    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.6.1"
+    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1")
+    implementation("androidx.lifecycle:lifecycle-viewmodel-compose:2.6.1")
 
-    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.6.1"
+    implementation("androidx.lifecycle:lifecycle-runtime-ktx:2.6.1")
 
     //leakCanary
-    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.8.1'
+    debugImplementation("com.squareup.leakcanary:leakcanary-android:2.8.1")
 
     // Compose dependencies
 
-    implementation "com.google.accompanist:accompanist-flowlayout:0.17.0"
+    implementation("com.google.accompanist:accompanist-flowlayout:0.17.0")
 
-    implementation "com.google.accompanist:accompanist-swiperefresh:0.31.5-beta"
+    implementation("com.google.accompanist:accompanist-swiperefresh:0.31.5-beta")
     //Timber
-    implementation 'com.jakewharton.timber:timber:5.0.1'
+    implementation("com.jakewharton.timber:timber:5.0.1")
 
 //    Coil
-    implementation "io.coil-kt:coil-compose:2.3.0"
+    implementation("io.coil-kt:coil-compose:2.3.0")
     implementation("io.coil-kt:coil-gif:2.2.2")
 
 
-
     //for notification color
-    implementation "com.google.accompanist:accompanist-systemuicontroller:0.26.1-alpha"
+    implementation("com.google.accompanist:accompanist-systemuicontroller:0.26.1-alpha")
 
     //paging
-    implementation "com.google.accompanist:accompanist-pager:0.26.4-beta"
+    implementation("com.google.accompanist:accompanist-pager:0.26.4-beta")
 
     //paging indicator
-    implementation "com.google.accompanist:accompanist-pager-indicators:0.26.4-beta"
+    implementation("com.google.accompanist:accompanist-pager-indicators:0.26.4-beta")
 
     //datastore
     implementation("androidx.datastore:datastore-preferences:1.0.0")
 
 
     //permissions
-    implementation "com.google.accompanist:accompanist-permissions:0.31.3-beta"
+    implementation("com.google.accompanist:accompanist-permissions:0.31.3-beta")
 
     //animatedNavHost
-    implementation "com.google.accompanist:accompanist-navigation-animation:0.31.4-beta"
+    implementation("com.google.accompanist:accompanist-navigation-animation:0.31.4-beta")
 
     //mapbox
 
-//    implementation 'com.mapbox.maps:android:10.8.1'
-//    implementation 'com.mapbox.mapboxsdk:mapbox-android-sdk:9.7.2'
-    implementation 'com.mapbox.mapboxsdk:mapbox-android-plugin-annotation-v9:0.9.0'
+    implementation("com.mapbox.mapboxsdk:mapbox-android-plugin-annotation-v9:0.9.0")
 
     //location provider
-    //updating this dependency causing issues
     implementation("com.google.android.gms:play-services-location:20.0.0")
 
 
     // Make sure the version of appcompat is 1.3.0+
-    implementation 'androidx.appcompat:appcompat:1.6.1'
-
-
-
-
+    implementation("androidx.appcompat:appcompat:1.6.1")
 
 
     //lottie animation
-    implementation "com.airbnb.android:lottie-compose:5.2.0"
+    implementation("com.airbnb.android:lottie-compose:5.2.0")
 
     //Facebook Login
-    implementation 'com.facebook.android:facebook-android-sdk:latest.release'
+    implementation("com.facebook.android:facebook-android-sdk:latest.release")
 
 
-    implementation "com.google.maps.android:maps-compose:2.0.0"
+    implementation("com.google.maps.android:maps-compose:2.0.0")
 
 
     //Firebase
-    implementation platform('com.google.firebase:firebase-bom:32.2.0')
-    implementation 'com.google.firebase:firebase-auth'
-    implementation 'com.google.gms:google-services:4.3.15'
-    implementation 'com.google.firebase:firebase-crashlytics'
-    implementation 'com.google.firebase:firebase-analytics'
-    implementation 'com.google.firebase:firebase-auth-ktx'
-    implementation 'com.google.firebase:firebase-firestore-ktx'
-    implementation 'com.google.firebase:firebase-storage-ktx'
-    implementation 'com.google.firebase:firebase-common-ktx'
-    implementation 'com.google.firebase:firebase-messaging-ktx'
-
-
+    implementation(platform("com.google.firebase:firebase-bom:32.2.0"))
+    implementation("com.google.firebase:firebase-auth")
+    implementation("com.google.gms:google-services:4.3.15")
+    implementation("com.google.firebase:firebase-crashlytics")
+    implementation("com.google.firebase:firebase-analytics")
+    implementation("com.google.firebase:firebase-auth-ktx")
+    implementation("com.google.firebase:firebase-firestore-ktx")
+    implementation("com.google.firebase:firebase-storage-ktx")
+    implementation("com.google.firebase:firebase-common-ktx")
+    implementation("com.google.firebase:firebase-messaging-ktx")
 
 
     //IOSocket Websocket
-    implementation('io.socket:socket.io-client:2.1.0') {
-        exclude group: 'org.json', module: 'json'
+    implementation("io.socket:socket.io-client:2.1.0") {
+        exclude(group = "org.json", module = "json")
     }
 
 
     //mapbox navigation sdk
-    //implementation "com.mapbox.navigation:android:2.7.0"
-    implementation "androidx.compose.ui:ui-viewbinding:1.4.3"
+    implementation("androidx.compose.ui:ui-viewbinding:1.4.3")
 
     //mapbox directions
-    implementation 'com.mapbox.mapboxsdk:mapbox-sdk-services:6.9.0'
-    testImplementation "androidx.arch.core:core-testing:2.2.0"
-    testImplementation 'app.cash.turbine:turbine:0.12.1'
-    implementation 'javax.annotation:javax.annotation-api:1.3.2'
-    implementation 'com.github.a914-gowtham:compose-ratingbar:1.3.4'
+    implementation("com.mapbox.mapboxsdk:mapbox-sdk-services:6.9.0")
+    testImplementation("androidx.arch.core:core-testing:2.2.0")
+    testImplementation("app.cash.turbine:turbine:0.12.1")
+    implementation("javax.annotation:javax.annotation-api:1.3.2")
+    implementation("com.github.a914-gowtham:compose-ratingbar:1.3.4")
 
 
-    def room_version = "2.5.2"
+    val room_version = "2.5.2"
 
-    implementation "androidx.room:room-runtime:$room_version"
-    implementation "androidx.room:room-ktx:$room_version"
-    kapt "androidx.room:room-compiler:$room_version"
+    implementation("androidx.room:room-runtime:$room_version")
+    implementation("androidx.room:room-ktx:$room_version")
+    ksp("androidx.room:room-compiler:$room_version")
 
-    def multidex_version = "2.0.1"
+    val multidex_version = "2.0.1"
     implementation("androidx.multidex:multidex:$multidex_version")
 
-    implementation 'com.github.ahmmedrejowan.CuteToast:CuteToast:1.2'
-    implementation 'com.google.code.gson:gson:2.10.1'
-    implementation 'com.google.maps.android:android-maps-utils:0.5'
+    implementation("com.github.ahmmedrejowan.CuteToast:CuteToast:1.2")
+    implementation("com.google.code.gson:gson:2.10.1")
+    implementation("com.google.maps.android:android-maps-utils:0.5")
 }
 
-apply plugin: 'com.google.gms.google-services'
-apply plugin:  'kotlin-kapt'
\ No newline at end of file
+apply(plugin = "com.google.gms.google-services")
Index: Cyclistance_Emulator_Suite_Data/auth_export/accounts.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\"kind\":\"identitytoolkit#DownloadAccountResponse\",\"users\":[{\"localId\":\"1og9Atpiu8ZmZ63XL5dd1ttHIZRz\",\"createdAt\":\"1691503980261\",\"lastLoginAt\":\"1691503980261\",\"passwordHash\":\"fakeHash:salt=fakeSaltrR2r5S1O0VCsNL85k4gd:password=12341234\",\"salt\":\"fakeSaltrR2r5S1O0VCsNL85k4gd\",\"passwordUpdatedAt\":1693575804334,\"providerUserInfo\":[{\"providerId\":\"password\",\"email\":\"new_user@gmail.com\",\"federatedId\":\"new_user@gmail.com\",\"rawId\":\"new_user@gmail.com\"}],\"validSince\":\"1693575804\",\"email\":\"new_user@gmail.com\",\"emailVerified\":true,\"disabled\":false},{\"localId\":\"GEOsuB7lbZUmHKaSgahGAyN60zRg\",\"createdAt\":\"1693574892490\",\"lastLoginAt\":\"1693574892490\",\"passwordHash\":\"fakeHash:salt=fakeSalt9yqDAA6Azf3sHPpug1Sl:password=12341234\",\"salt\":\"fakeSalt9yqDAA6Azf3sHPpug1Sl\",\"passwordUpdatedAt\":1693575804335,\"providerUserInfo\":[{\"providerId\":\"password\",\"email\":\"123ib23@gmail.com\",\"federatedId\":\"123ib23@gmail.com\",\"rawId\":\"123ib23@gmail.com\"}],\"validSince\":\"1693575804\",\"email\":\"123ib23@gmail.com\",\"emailVerified\":true,\"disabled\":false,\"lastRefreshAt\":\"2023-09-01T15:21:39.814Z\"},{\"localId\":\"LtjcNtGJouKU9CdKuaXF76TLvyN0\",\"createdAt\":\"1693570770546\",\"lastLoginAt\":\"1693570770546\",\"passwordHash\":\"fakeHash:salt=fakeSaltJglvG5ZFrTmUEO1Pg61v:password=12121212\",\"salt\":\"fakeSaltJglvG5ZFrTmUEO1Pg61v\",\"passwordUpdatedAt\":1693575804335,\"providerUserInfo\":[{\"providerId\":\"password\",\"email\":\"mikoj@gmail.com\",\"federatedId\":\"mikoj@gmail.com\",\"rawId\":\"mikoj@gmail.com\"}],\"validSince\":\"1693575804\",\"email\":\"mikoj@gmail.com\",\"emailVerified\":true,\"disabled\":false},{\"localId\":\"fhFKqCMDrYqdyA1dNofDkRMD6YTD\",\"createdAt\":\"1691132594011\",\"lastLoginAt\":\"1692691930587\",\"passwordHash\":\"fakeHash:salt=fakeSalti19gqGLLR0Ya1RzpBiGx:password=12341234\",\"salt\":\"fakeSalti19gqGLLR0Ya1RzpBiGx\",\"passwordUpdatedAt\":1693575804335,\"providerUserInfo\":[{\"providerId\":\"password\",\"email\":\"emulator@gmail.com\",\"federatedId\":\"emulator@gmail.com\",\"rawId\":\"emulator@gmail.com\"}],\"validSince\":\"1693575804\",\"email\":\"emulator@gmail.com\",\"emailVerified\":true,\"disabled\":false},{\"localId\":\"jHtex5ISWCzehUWbSqFDOvi6MSHr\",\"createdAt\":\"1693574631132\",\"lastLoginAt\":\"1693574631132\",\"passwordHash\":\"fakeHash:salt=fakeSaltoXNsrYMQ594NRJH9oC4G:password=11223344\",\"salt\":\"fakeSaltoXNsrYMQ594NRJH9oC4G\",\"passwordUpdatedAt\":1693575804335,\"providerUserInfo\":[{\"providerId\":\"password\",\"email\":\"poofie@gmail.com\",\"federatedId\":\"poofie@gmail.com\",\"rawId\":\"poofie@gmail.com\"}],\"validSince\":\"1693575804\",\"email\":\"poofie@gmail.com\",\"emailVerified\":false,\"disabled\":false},{\"localId\":\"liHdUoIxsYgAgHNk6Hbhq3mdSLCQ\",\"createdAt\":\"1691133042592\",\"lastLoginAt\":\"1692027094100\",\"passwordHash\":\"fakeHash:salt=fakeSaltGF0GyLNMfvP5ymAZ8CC5:password=12341234\",\"salt\":\"fakeSaltGF0GyLNMfvP5ymAZ8CC5\",\"passwordUpdatedAt\":1693575804335,\"providerUserInfo\":[{\"providerId\":\"password\",\"email\":\"cont@gmail.com\",\"federatedId\":\"cont@gmail.com\",\"rawId\":\"cont@gmail.com\"}],\"validSince\":\"1693575804\",\"email\":\"cont@gmail.com\",\"emailVerified\":true,\"disabled\":false}]}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Cyclistance_Emulator_Suite_Data/auth_export/accounts.json b/Cyclistance_Emulator_Suite_Data/auth_export/accounts.json
--- a/Cyclistance_Emulator_Suite_Data/auth_export/accounts.json	(revision 96945ac103cb79446c5964935955cd29eb4d689c)
+++ b/Cyclistance_Emulator_Suite_Data/auth_export/accounts.json	(date 1693981071545)
@@ -1,1 +1,1 @@
-{"kind":"identitytoolkit#DownloadAccountResponse","users":[{"localId":"1og9Atpiu8ZmZ63XL5dd1ttHIZRz","createdAt":"1691503980261","lastLoginAt":"1691503980261","passwordHash":"fakeHash:salt=fakeSaltrR2r5S1O0VCsNL85k4gd:password=12341234","salt":"fakeSaltrR2r5S1O0VCsNL85k4gd","passwordUpdatedAt":1693575804334,"providerUserInfo":[{"providerId":"password","email":"new_user@gmail.com","federatedId":"new_user@gmail.com","rawId":"new_user@gmail.com"}],"validSince":"1693575804","email":"new_user@gmail.com","emailVerified":true,"disabled":false},{"localId":"GEOsuB7lbZUmHKaSgahGAyN60zRg","createdAt":"1693574892490","lastLoginAt":"1693574892490","passwordHash":"fakeHash:salt=fakeSalt9yqDAA6Azf3sHPpug1Sl:password=12341234","salt":"fakeSalt9yqDAA6Azf3sHPpug1Sl","passwordUpdatedAt":1693575804335,"providerUserInfo":[{"providerId":"password","email":"123ib23@gmail.com","federatedId":"123ib23@gmail.com","rawId":"123ib23@gmail.com"}],"validSince":"1693575804","email":"123ib23@gmail.com","emailVerified":true,"disabled":false,"lastRefreshAt":"2023-09-01T15:21:39.814Z"},{"localId":"LtjcNtGJouKU9CdKuaXF76TLvyN0","createdAt":"1693570770546","lastLoginAt":"1693570770546","passwordHash":"fakeHash:salt=fakeSaltJglvG5ZFrTmUEO1Pg61v:password=12121212","salt":"fakeSaltJglvG5ZFrTmUEO1Pg61v","passwordUpdatedAt":1693575804335,"providerUserInfo":[{"providerId":"password","email":"mikoj@gmail.com","federatedId":"mikoj@gmail.com","rawId":"mikoj@gmail.com"}],"validSince":"1693575804","email":"mikoj@gmail.com","emailVerified":true,"disabled":false},{"localId":"fhFKqCMDrYqdyA1dNofDkRMD6YTD","createdAt":"1691132594011","lastLoginAt":"1692691930587","passwordHash":"fakeHash:salt=fakeSalti19gqGLLR0Ya1RzpBiGx:password=12341234","salt":"fakeSalti19gqGLLR0Ya1RzpBiGx","passwordUpdatedAt":1693575804335,"providerUserInfo":[{"providerId":"password","email":"emulator@gmail.com","federatedId":"emulator@gmail.com","rawId":"emulator@gmail.com"}],"validSince":"1693575804","email":"emulator@gmail.com","emailVerified":true,"disabled":false},{"localId":"jHtex5ISWCzehUWbSqFDOvi6MSHr","createdAt":"1693574631132","lastLoginAt":"1693574631132","passwordHash":"fakeHash:salt=fakeSaltoXNsrYMQ594NRJH9oC4G:password=11223344","salt":"fakeSaltoXNsrYMQ594NRJH9oC4G","passwordUpdatedAt":1693575804335,"providerUserInfo":[{"providerId":"password","email":"poofie@gmail.com","federatedId":"poofie@gmail.com","rawId":"poofie@gmail.com"}],"validSince":"1693575804","email":"poofie@gmail.com","emailVerified":false,"disabled":false},{"localId":"liHdUoIxsYgAgHNk6Hbhq3mdSLCQ","createdAt":"1691133042592","lastLoginAt":"1692027094100","passwordHash":"fakeHash:salt=fakeSaltGF0GyLNMfvP5ymAZ8CC5:password=12341234","salt":"fakeSaltGF0GyLNMfvP5ymAZ8CC5","passwordUpdatedAt":1693575804335,"providerUserInfo":[{"providerId":"password","email":"cont@gmail.com","federatedId":"cont@gmail.com","rawId":"cont@gmail.com"}],"validSince":"1693575804","email":"cont@gmail.com","emailVerified":true,"disabled":false}]}
\ No newline at end of file
+{"kind":"identitytoolkit#DownloadAccountResponse","users":[{"localId":"1og9Atpiu8ZmZ63XL5dd1ttHIZRz","createdAt":"1691503980261","lastLoginAt":"1691503980261","passwordHash":"fakeHash:salt=fakeSaltrR2r5S1O0VCsNL85k4gd:password=12341234","salt":"fakeSaltrR2r5S1O0VCsNL85k4gd","passwordUpdatedAt":1693971369274,"providerUserInfo":[{"providerId":"password","email":"new_user@gmail.com","federatedId":"new_user@gmail.com","rawId":"new_user@gmail.com"}],"validSince":"1693971369","email":"new_user@gmail.com","emailVerified":true,"disabled":false},{"localId":"GEOsuB7lbZUmHKaSgahGAyN60zRg","createdAt":"1693574892490","lastLoginAt":"1693574892490","passwordHash":"fakeHash:salt=fakeSalt9yqDAA6Azf3sHPpug1Sl:password=12341234","salt":"fakeSalt9yqDAA6Azf3sHPpug1Sl","passwordUpdatedAt":1693971369275,"providerUserInfo":[{"providerId":"password","email":"123ib23@gmail.com","federatedId":"123ib23@gmail.com","rawId":"123ib23@gmail.com"}],"validSince":"1693971369","email":"123ib23@gmail.com","emailVerified":true,"disabled":false},{"localId":"LtjcNtGJouKU9CdKuaXF76TLvyN0","createdAt":"1693570770546","lastLoginAt":"1693570770546","passwordHash":"fakeHash:salt=fakeSaltJglvG5ZFrTmUEO1Pg61v:password=12121212","salt":"fakeSaltJglvG5ZFrTmUEO1Pg61v","passwordUpdatedAt":1693971369275,"providerUserInfo":[{"providerId":"password","email":"mikoj@gmail.com","federatedId":"mikoj@gmail.com","rawId":"mikoj@gmail.com"}],"validSince":"1693971369","email":"mikoj@gmail.com","emailVerified":true,"disabled":false},{"localId":"fhFKqCMDrYqdyA1dNofDkRMD6YTD","createdAt":"1691132594011","lastLoginAt":"1692691930587","passwordHash":"fakeHash:salt=fakeSalti19gqGLLR0Ya1RzpBiGx:password=12341234","salt":"fakeSalti19gqGLLR0Ya1RzpBiGx","passwordUpdatedAt":1693971369275,"providerUserInfo":[{"providerId":"password","email":"emulator@gmail.com","federatedId":"emulator@gmail.com","rawId":"emulator@gmail.com"}],"validSince":"1693971369","email":"emulator@gmail.com","emailVerified":true,"disabled":false},{"localId":"jHtex5ISWCzehUWbSqFDOvi6MSHr","createdAt":"1693574631132","lastLoginAt":"1693574631132","passwordHash":"fakeHash:salt=fakeSaltoXNsrYMQ594NRJH9oC4G:password=11223344","salt":"fakeSaltoXNsrYMQ594NRJH9oC4G","passwordUpdatedAt":1693971369275,"providerUserInfo":[{"providerId":"password","email":"poofie@gmail.com","federatedId":"poofie@gmail.com","rawId":"poofie@gmail.com"}],"validSince":"1693971369","email":"poofie@gmail.com","emailVerified":false,"disabled":false},{"localId":"liHdUoIxsYgAgHNk6Hbhq3mdSLCQ","createdAt":"1691133042592","lastLoginAt":"1692027094100","passwordHash":"fakeHash:salt=fakeSaltGF0GyLNMfvP5ymAZ8CC5:password=12341234","salt":"fakeSaltGF0GyLNMfvP5ymAZ8CC5","passwordUpdatedAt":1693971369275,"providerUserInfo":[{"providerId":"password","email":"cont@gmail.com","federatedId":"cont@gmail.com","rawId":"cont@gmail.com"}],"validSince":"1693971369","email":"cont@gmail.com","emailVerified":true,"disabled":false}]}
\ No newline at end of file
