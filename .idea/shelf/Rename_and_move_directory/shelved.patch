Index: app/src/main/java/com/example/cyclistance/feature_mapping/data/data_source/network/websockets/UserWSClient.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/data/data_source/network/websockets/UserWSClient.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/data/data_source/network/websockets/UserClient.kt
rename from app/src/main/java/com/example/cyclistance/feature_mapping/data/data_source/network/websockets/UserWSClient.kt
rename to app/src/main/java/com/example/cyclistance/feature_mapping/data/data_source/network/websockets/UserClient.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/data/data_source/network/websockets/UserWSClient.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/data/data_source/network/websockets/UserClient.kt	(date 1692347138904)
@@ -3,9 +3,8 @@
 import com.example.cyclistance.core.utils.constants.MappingConstants.BROADCAST_USERS
 import com.example.cyclistance.feature_mapping.data.data_source.network.dto.user_dto.UserDto
 import com.example.cyclistance.feature_mapping.data.mapper.UserMapper.toUser
-import com.example.cyclistance.feature_mapping.domain.model.api.user.NearbyCyclist
-import com.example.cyclistance.feature_mapping.domain.model.location.LiveLocationWSModel
-import com.example.cyclistance.feature_mapping.domain.sockets.WebSocketClient
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.live_location.LiveLocationSocketModel
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.user.NearbyCyclist
 import com.google.gson.Gson
 import io.socket.client.Socket
 import io.socket.emitter.Emitter
Index: app/src/main/java/com/example/cyclistance/feature_mapping/data/data_source/network/websockets/TransactionLiveLocationWSClient.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/data/data_source/network/websockets/TransactionLiveLocationWSClient.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/data/data_source/network/websockets/TransactionLiveLocationClient.kt
rename from app/src/main/java/com/example/cyclistance/feature_mapping/data/data_source/network/websockets/TransactionLiveLocationWSClient.kt
rename to app/src/main/java/com/example/cyclistance/feature_mapping/data/data_source/network/websockets/TransactionLiveLocationClient.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/data/data_source/network/websockets/TransactionLiveLocationWSClient.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/data/data_source/network/websockets/TransactionLiveLocationClient.kt	(date 1692347138874)
@@ -2,8 +2,7 @@
 
 import com.example.cyclistance.core.utils.constants.MappingConstants.BROADCAST_LOCATION
 import com.example.cyclistance.core.utils.constants.MappingConstants.JOIN_LIVE_LOCATION_UPDATES
-import com.example.cyclistance.feature_mapping.domain.model.location.LiveLocationWSModel
-import com.example.cyclistance.feature_mapping.domain.sockets.WebSocketClient
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.live_location.LiveLocationSocketModel
 import com.google.gson.Gson
 import io.socket.client.Socket
 import io.socket.emitter.Emitter
Index: app/src/main/java/com/example/cyclistance/feature_mapping/data/data_source/network/websockets/RescueTransactionWSClient.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/data/data_source/network/websockets/RescueTransactionWSClient.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/data/data_source/network/websockets/RescueTransactionClient.kt
rename from app/src/main/java/com/example/cyclistance/feature_mapping/data/data_source/network/websockets/RescueTransactionWSClient.kt
rename to app/src/main/java/com/example/cyclistance/feature_mapping/data/data_source/network/websockets/RescueTransactionClient.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/data/data_source/network/websockets/RescueTransactionWSClient.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/data/data_source/network/websockets/RescueTransactionClient.kt	(date 1692347157540)
@@ -3,9 +3,8 @@
 import com.example.cyclistance.core.utils.constants.MappingConstants.BROADCAST_RESCUE_TRANSACTION
 import com.example.cyclistance.feature_mapping.data.data_source.network.dto.rescue_transaction.RescueTransactionDto
 import com.example.cyclistance.feature_mapping.data.mapper.RescueTransactionMapper.toRescueTransaction
-import com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RescueTransaction
-import com.example.cyclistance.feature_mapping.domain.model.location.LiveLocationWSModel
-import com.example.cyclistance.feature_mapping.domain.sockets.WebSocketClient
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.live_location.LiveLocationSocketModel
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.rescue_transaction.RescueTransaction
 import com.google.gson.Gson
 import io.socket.client.Socket
 import io.socket.emitter.Emitter
@@ -16,7 +15,7 @@
 
 class RescueTransactionWSClient(
     private val socket: Socket
-): WebSocketClient<RescueTransaction, LiveLocationWSModel> {
+):, WebSocketClient<RescueTransaction, LiveLocationSocketModel> {
 
 
     override suspend fun broadcastEvent(t: LiveLocationWSModel?) {
Index: app/src/main/java/com/example/cyclistance/di/MappingModule.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.di\n\nimport android.content.Context\nimport android.location.Geocoder\nimport androidx.annotation.Keep\nimport com.example.cyclistance.R\nimport com.example.cyclistance.core.utils.connection.ConnectionStatus.hasInternetConnection\nimport com.example.cyclistance.core.utils.constants.MappingConstants.HEADER_CACHE_CONTROL\nimport com.example.cyclistance.core.utils.constants.MappingConstants.HEADER_PRAGMA\nimport com.example.cyclistance.feature_mapping.data.CyclistanceApi\nimport com.example.cyclistance.feature_mapping.data.data_source.network.websockets.RescueTransactionWSClient\nimport com.example.cyclistance.feature_mapping.data.data_source.network.websockets.TransactionLiveLocationWSClient\nimport com.example.cyclistance.feature_mapping.data.data_source.network.websockets.UserWSClient\nimport com.example.cyclistance.feature_mapping.data.repository.MappingRepositoryImpl\nimport com.example.cyclistance.feature_mapping.data.repository.MappingSocketRepositoryImpl\nimport com.example.cyclistance.feature_mapping.data.repository.MappingUiStoreRepositoryImpl\nimport com.example.cyclistance.feature_mapping.domain.repository.MappingRepository\nimport com.example.cyclistance.feature_mapping.domain.repository.MappingSocketRepository\nimport com.example.cyclistance.feature_mapping.domain.repository.MappingUiStoreRepository\nimport com.example.cyclistance.feature_mapping.domain.use_case.MappingUseCase\nimport com.example.cyclistance.feature_mapping.domain.use_case.address.GetAddressUseCase\nimport com.example.cyclistance.feature_mapping.domain.use_case.address.SetAddressUseCase\nimport com.example.cyclistance.feature_mapping.domain.use_case.bike_type.GetBikeTypeUseCase\nimport com.example.cyclistance.feature_mapping.domain.use_case.bike_type.SetBikeTypeUseCase\nimport com.example.cyclistance.feature_mapping.domain.use_case.bottom_sheet_type.GetBottomSheetTypeUseCase\nimport com.example.cyclistance.feature_mapping.domain.use_case.bottom_sheet_type.SetBottomSheetTypeUseCase\nimport com.example.cyclistance.feature_mapping.domain.use_case.location.GetCalculatedDistanceUseCase\nimport com.example.cyclistance.feature_mapping.domain.use_case.location.GetFullAddressUseCase\nimport com.example.cyclistance.feature_mapping.domain.use_case.location.GetUserLocationUseCase\nimport com.example.cyclistance.feature_mapping.domain.use_case.rescue_transaction.AcceptRescueRequestUseCase\nimport com.example.cyclistance.feature_mapping.domain.use_case.rescue_transaction.ConfirmCancellationUseCase\nimport com.example.cyclistance.feature_mapping.domain.use_case.rescue_transaction.DeleteRescueTransactionUseCase\nimport com.example.cyclistance.feature_mapping.domain.use_case.rescue_transaction.GetRescueTransactionByIdUseCase\nimport com.example.cyclistance.feature_mapping.domain.use_case.routes.GetRouteDirectionsUseCase\nimport com.example.cyclistance.feature_mapping.domain.use_case.user.*\nimport com.example.cyclistance.feature_mapping.domain.use_case.websockets.live_location.BroadcastTransactionLocationUseCase\nimport com.example.cyclistance.feature_mapping.domain.use_case.websockets.live_location.GetTransactionLocationUpdatesUseCase\nimport com.example.cyclistance.feature_mapping.domain.use_case.websockets.rescue_transactions.BroadcastRescueTransactionUseCase\nimport com.example.cyclistance.feature_mapping.domain.use_case.websockets.rescue_transactions.GetRescueTransactionUpdatesUseCase\nimport com.example.cyclistance.feature_mapping.domain.use_case.websockets.users.BroadcastToNearbyCyclists\nimport com.example.cyclistance.feature_mapping.domain.use_case.websockets.users.GetUserUpdatesUseCase\nimport com.google.gson.GsonBuilder\nimport com.mapbox.api.optimization.v1.MapboxOptimization\nimport dagger.Module\nimport dagger.Provides\nimport dagger.hilt.InstallIn\nimport dagger.hilt.android.qualifiers.ApplicationContext\nimport dagger.hilt.components.SingletonComponent\nimport io.socket.client.IO\nimport okhttp3.Cache\nimport okhttp3.CacheControl\nimport okhttp3.Interceptor\nimport okhttp3.OkHttpClient\nimport retrofit2.Retrofit\nimport retrofit2.converter.gson.GsonConverterFactory\nimport java.io.File\nimport java.util.concurrent.TimeUnit\nimport javax.inject.Singleton\n\n\n@Keep\n@Module\n@InstallIn(SingletonComponent::class)\nobject MappingModule {\n\n\n    @Provides\n    @Singleton\n    fun provideCyclistanceApi(@ApplicationContext context: Context): CyclistanceApi {\n        val okHttpClient = providesOkhttpClient(context)\n        val gson = GsonBuilder().serializeNulls().create()\n\n        return lazy {\n            Retrofit.Builder()\n                .baseUrl(context.getString(R.string.CyclistanceApiBaseUrl))\n                .addConverterFactory(GsonConverterFactory.create(gson))\n                .client(okHttpClient)\n                .build()\n                .create(CyclistanceApi::class.java)\n        }.value\n\n    }\n\n\n    @Singleton\n    @Provides\n    fun providesMapOptimizationDirections(@ApplicationContext context: Context): MapboxOptimization.Builder {\n        return lazy {\n            MapboxOptimization.builder()\n                .accessToken(context.getString(R.string.MapsDownloadToken))\n        }.value\n    }\n\n\n    @Provides\n    @Singleton\n    fun provideMappingRepository(\n        @ApplicationContext context: Context,\n        api: CyclistanceApi,\n        mapboxDirections: MapboxOptimization.Builder): MappingRepository {\n\n\n        val geocoder = Geocoder(context)\n\n        return MappingRepositoryImpl(\n            api = api,\n            context = context,\n\n            mapboxDirections = mapboxDirections,\n            geocoder = geocoder\n        )\n    }\n\n    @Provides\n    @Singleton\n    fun provideMappingSocketRepository(@ApplicationContext context: Context): MappingSocketRepository {\n        val socket = IO.socket(context.getString(R.string.CyclistanceApiBaseUrl))\n        val userWSClient = UserWSClient(socket)\n        val rescueTransactionWSClient = RescueTransactionWSClient(socket)\n        val liveLocation = TransactionLiveLocationWSClient(socket)\n        return MappingSocketRepositoryImpl(\n            context = context,\n            rescueTransactionClient = rescueTransactionWSClient,\n            nearbyCyclistClient = userWSClient,\n            liveLocation = liveLocation,\n        )\n    }\n\n    @Provides\n    @Singleton\n    fun provideMappingUiStoreRepository(@ApplicationContext context: Context): MappingUiStoreRepository {\n        return MappingUiStoreRepositoryImpl(context)\n    }\n\n\n    @Provides\n    @Singleton\n    fun provideMappingUseCase(\n        mappingRepository: MappingRepository,\n        mappingUiStoreRepository: MappingUiStoreRepository,\n        mappingSocketRepository: MappingSocketRepository): MappingUseCase {\n        return MappingUseCase(\n\n            getUsersUseCase = GetUsersUseCase(mappingRepository),\n            getUserByIdUseCase = GetUserByIdUseCase(mappingRepository),\n            createUserUseCase = CreateUserUseCase(mappingRepository),\n            deleteUserUseCase = DeleteUserUseCase(mappingRepository),\n\n            getRescueTransactionByIdUseCase = GetRescueTransactionByIdUseCase(mappingRepository),\n            acceptRescueRequestUseCase = AcceptRescueRequestUseCase(mappingRepository),\n            deleteRescueTransactionUseCase = DeleteRescueTransactionUseCase(mappingRepository),\n\n\n            getUserLocationUseCase = GetUserLocationUseCase(mappingRepository),\n            getFullAddressUseCase = GetFullAddressUseCase(mappingRepository),\n\n            getBikeTypeUseCase = GetBikeTypeUseCase(mappingUiStoreRepository),\n            setBikeTypeUseCase = SetBikeTypeUseCase(mappingUiStoreRepository),\n            getAddressUseCase = GetAddressUseCase(mappingUiStoreRepository),\n            setAddressUseCase = SetAddressUseCase(mappingUiStoreRepository),\n            broadcastRescueTransactionUseCase = BroadcastRescueTransactionUseCase(\n                mappingSocketRepository),\n            broadcastToNearbyCyclists = BroadcastToNearbyCyclists(mappingSocketRepository),\n            getRescueTransactionUpdatesUseCase = GetRescueTransactionUpdatesUseCase(\n                mappingSocketRepository),\n            getUserUpdatesUseCase = GetUserUpdatesUseCase(mappingSocketRepository),\n            broadcastRescueTransactionToRespondent = BroadcastTransactionLocationUseCase(\n                mappingSocketRepository),\n            getTransactionLocationUpdatesUseCase = GetTransactionLocationUpdatesUseCase(\n                mappingSocketRepository),\n            deleteRescueRespondentUseCase = DeleteRescueRespondentUseCase(mappingRepository),\n            addRescueRespondentUseCase = AddRescueRespondentUseCase(mappingRepository),\n            deleteAllRespondentsUseCase = DeleteAllRespondentsUseCase(mappingRepository),\n            confirmDetailsUseCase = ConfirmDetailsUseCase(mappingRepository),\n            confirmCancellationUseCase = ConfirmCancellationUseCase(mappingRepository),\n            getRouteDirectionsUseCase = GetRouteDirectionsUseCase(mappingRepository),\n            getCalculatedDistanceUseCase = GetCalculatedDistanceUseCase(mappingRepository),\n            getBottomSheetTypeUseCase = GetBottomSheetTypeUseCase(mappingUiStoreRepository),\n            setBottomSheetTypeUseCase = SetBottomSheetTypeUseCase(mappingUiStoreRepository)\n        )\n    }\n\n\n    @Provides\n    @Singleton\n    fun providesOkhttpClient(@ApplicationContext context: Context): OkHttpClient {\n        val interceptor = Interceptor { chain ->\n            var request = chain.request()\n            if (!context.hasInternetConnection()) {\n                val cacheControl = CacheControl.Builder()\n                    .maxStale(1, TimeUnit.DAYS)\n                    .build()\n\n                request = request.newBuilder()\n                    .removeHeader(HEADER_PRAGMA)\n                    .removeHeader(HEADER_CACHE_CONTROL)\n                    .cacheControl(cacheControl)\n                    .build()\n            }\n            chain.proceed(request)\n        }\n        val httpCacheDirectory = File(context.cacheDir, \"offlineCache\")\n        val cacheSize = 50 * 1024 * 1024\n        val cache = Cache(httpCacheDirectory, cacheSize.toLong())\n\n        return lazy {\n            OkHttpClient.Builder()\n                .cache(cache)\n                .addInterceptor(interceptor)\n                .build()\n        }.value\n    }\n\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/di/MappingModule.kt b/app/src/main/java/com/example/cyclistance/di/MappingModule.kt
--- a/app/src/main/java/com/example/cyclistance/di/MappingModule.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/di/MappingModule.kt	(date 1692346677179)
@@ -8,9 +8,11 @@
 import com.example.cyclistance.core.utils.constants.MappingConstants.HEADER_CACHE_CONTROL
 import com.example.cyclistance.core.utils.constants.MappingConstants.HEADER_PRAGMA
 import com.example.cyclistance.feature_mapping.data.CyclistanceApi
-import com.example.cyclistance.feature_mapping.data.data_source.network.websockets.RescueTransactionWSClient
-import com.example.cyclistance.feature_mapping.data.data_source.network.websockets.TransactionLiveLocationWSClient
-import com.example.cyclistance.feature_mapping.data.data_source.network.websockets.UserWSClient
+import com.example.cyclistance.feature_mapping.data.data_source.network.websockets.AddHazardousLaneClient
+import com.example.cyclistance.feature_mapping.data.data_source.network.websockets.DeleteHazardousLane
+import com.example.cyclistance.feature_mapping.data.data_source.network.websockets.RescueTransactionClient
+import com.example.cyclistance.feature_mapping.data.data_source.network.websockets.TransactionLiveLocationClient
+import com.example.cyclistance.feature_mapping.data.data_source.network.websockets.UserClient
 import com.example.cyclistance.feature_mapping.data.repository.MappingRepositoryImpl
 import com.example.cyclistance.feature_mapping.data.repository.MappingSocketRepositoryImpl
 import com.example.cyclistance.feature_mapping.data.repository.MappingUiStoreRepositoryImpl
@@ -115,14 +117,20 @@
     @Singleton
     fun provideMappingSocketRepository(@ApplicationContext context: Context): MappingSocketRepository {
         val socket = IO.socket(context.getString(R.string.CyclistanceApiBaseUrl))
-        val userWSClient = UserWSClient(socket)
-        val rescueTransactionWSClient = RescueTransactionWSClient(socket)
-        val liveLocation = TransactionLiveLocationWSClient(socket)
+        val nearbyCyclistClient = UserClient(socket)
+        val rescueTransactionClient = RescueTransactionClient(socket)
+        val liveLocation = TransactionLiveLocationClient(socket)
+        val addHazardousLaneClient = AddHazardousLaneClient(socket)
+        val deleteHazardousLane = DeleteHazardousLane(socket)
         return MappingSocketRepositoryImpl(
             context = context,
-            rescueTransactionClient = rescueTransactionWSClient,
-            nearbyCyclistClient = userWSClient,
+            nearbyCyclistClient = nearbyCyclistClient,
+            rescueTransactionClient = rescueTransactionClient,
             liveLocation = liveLocation,
+            addHazardousLaneClient = addHazardousLaneClient,
+            deleteHazardousLane = deleteHazardousLane
+
+
         )
     }
 
Index: app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/websockets/users/BroadcastToNearbyCyclists.kt
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/websockets/users/BroadcastToNearbyCyclists.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/websockets/users/BroadcastToNearbyCyclists.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/websockets/users/BroadcastToNearbyCyclists.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ /dev/null	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
@@ -1,10 +0,0 @@
-package com.example.cyclistance.feature_mapping.domain.use_case.websockets.users
-
-import com.example.cyclistance.feature_mapping.domain.model.location.LiveLocationWSModel
-import com.example.cyclistance.feature_mapping.domain.repository.MappingSocketRepository
-
-class BroadcastToNearbyCyclists(private val repository: MappingSocketRepository) {
-    suspend operator fun invoke(locationModel: LiveLocationWSModel) {
-        repository.broadcastToNearbyCyclists(locationModel)
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/example/cyclistance/feature_mapping/data/mapper/RescueTransactionMapper.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_mapping.data.mapper\n\nimport com.example.cyclistance.feature_mapping.data.data_source.network.dto.rescue_transaction.CancellationDto\nimport com.example.cyclistance.feature_mapping.data.data_source.network.dto.rescue_transaction.CancellationReasonDto\nimport com.example.cyclistance.feature_mapping.data.data_source.network.dto.rescue_transaction.RescueTransactionDto\nimport com.example.cyclistance.feature_mapping.data.data_source.network.dto.rescue_transaction.RescueTransactionItemDto\nimport com.example.cyclistance.feature_mapping.data.data_source.network.dto.rescue_transaction.RouteDto\nimport com.example.cyclistance.feature_mapping.data.data_source.network.dto.rescue_transaction.StatusDto\nimport com.example.cyclistance.feature_mapping.data.data_source.network.dto.user_dto.LocationDto\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.CancellationModel\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.CancellationReasonModel\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RescueTransaction\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RescueTransactionItem\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RouteModel\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.StatusModel\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.LocationModel\n\nobject RescueTransactionMapper {\n    fun RescueTransactionItemDto.toRescueTransaction(): RescueTransactionItem {\n        return RescueTransactionItem(\n            id = this.id,\n            cancellation = this.cancellation?.toCancellationModel(),\n            rescueeId = this.rescueeId,\n            rescuerId = this.rescuerId,\n            status = this.status?.toStatusModel(),\n            route = this.route?.toRouteModel()\n        )\n    }\n\n    private fun CancellationDto.toCancellationModel(): CancellationModel {\n        return CancellationModel(\n            cancellationReason = this.cancellationReason.toCancellationReasonModel()\n        )\n    }\n\n    private fun CancellationReasonDto.toCancellationReasonModel(): CancellationReasonModel {\n        return CancellationReasonModel(\n            message = this.message,\n            reason = this.reason\n        )\n    }\n\n    private fun StatusDto.toStatusModel(): StatusModel{\n        return StatusModel(\n            finished = this.finished,\n            onGoing = this.ongoing,\n            started = this.started\n        )\n    }\n\n    private fun RouteDto.toRouteModel():RouteModel{\n        return RouteModel(\n            startingLocation = this.startingLocation.toLocationModel(),\n            destinationLocation = this.destinationLocation.toLocationModel(),\n        )\n    }\n\n     fun LocationDto.toLocationModel(): LocationModel{\n        return LocationModel(\n            latitude = this.latitude,\n            longitude = this.longitude\n        )\n    }\n\n    fun LocationModel.toLocationDto(): LocationDto {\n        return LocationDto(\n            latitude = this.latitude,\n            longitude = this.longitude\n        )\n    }\n\n    fun RescueTransactionItem.toRescueTransactionDto(): RescueTransactionItemDto {\n        return RescueTransactionItemDto(\n            id = this.id,\n            cancellation = this.cancellation?.toCancellationDto(),\n            rescueeId = this.rescueeId,\n            rescuerId = this.rescuerId,\n            status = this.status?.toStatusDto(),\n            route = this.route?.toRouteDto()\n        )\n    }\n\n    private fun RouteModel.toRouteDto(): RouteDto {\n        return RouteDto(\n            startingLocation = this.startingLocation.toLocationDto(),\n            destinationLocation = this.destinationLocation.toLocationDto()\n        )\n    }\n\n    private fun CancellationModel.toCancellationDto(): CancellationDto {\n        return CancellationDto(\n            cancellationReason = this.cancellationReason.toCancellationReasonDto(),\n            idCancelledBy = this.idCancelledBy,\n            nameCancelledBy = this.nameCancelledBy,\n            rescueCancelled = this.rescueCancelled\n        )\n    }\n\n    private fun CancellationReasonModel.toCancellationReasonDto(): CancellationReasonDto {\n        return CancellationReasonDto(\n            message = this.message,\n            reason = this.reason\n        )\n    }\n\n    private fun StatusModel.toStatusDto(): StatusDto {\n        return StatusDto(\n            finished = this.finished,\n            ongoing = this.onGoing,\n            started = this.started\n        )\n    }\n\n\n    fun RescueTransactionDto.toRescueTransaction(): RescueTransaction {\n        return RescueTransaction(\n            transactions = this.map { it.toRescueTransaction() }\n        )\n    }\n\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/data/mapper/RescueTransactionMapper.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/data/mapper/RescueTransactionMapper.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/data/mapper/RescueTransactionMapper.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/data/mapper/RescueTransactionMapper.kt	(date 1692288836976)
@@ -7,13 +7,13 @@
 import com.example.cyclistance.feature_mapping.data.data_source.network.dto.rescue_transaction.RouteDto
 import com.example.cyclistance.feature_mapping.data.data_source.network.dto.rescue_transaction.StatusDto
 import com.example.cyclistance.feature_mapping.data.data_source.network.dto.user_dto.LocationDto
-import com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.CancellationModel
-import com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.CancellationReasonModel
-import com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RescueTransaction
-import com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RescueTransactionItem
-import com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RouteModel
-import com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.StatusModel
-import com.example.cyclistance.feature_mapping.domain.model.api.user.LocationModel
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.rescue_transaction.CancellationModel
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.rescue_transaction.CancellationReasonModel
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.rescue_transaction.RescueTransaction
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.rescue_transaction.RescueTransactionItem
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.rescue_transaction.RouteModel
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.rescue_transaction.StatusModel
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.user.LocationModel
 
 object RescueTransactionMapper {
     fun RescueTransactionItemDto.toRescueTransaction(): RescueTransactionItem {
Index: app/src/main/java/com/example/cyclistance/feature_mapping/data/mapper/RouteDirectionMapper.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_mapping.data.mapper\n\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RouteDirection\nimport com.mapbox.api.directions.v5.models.DirectionsRoute\n\nobject RouteDirectionMapper {\n    fun DirectionsRoute.toRouteDirection() = RouteDirection(\n        geometry = this.geometry() ?: \"\",\n    )\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/data/mapper/RouteDirectionMapper.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/data/mapper/RouteDirectionMapper.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/data/mapper/RouteDirectionMapper.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/data/mapper/RouteDirectionMapper.kt	(date 1692288837313)
@@ -1,6 +1,6 @@
 package com.example.cyclistance.feature_mapping.data.mapper
 
-import com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RouteDirection
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.rescue_transaction.RouteDirection
 import com.mapbox.api.directions.v5.models.DirectionsRoute
 
 object RouteDirectionMapper {
Index: app/src/main/java/com/example/cyclistance/feature_mapping/data/mapper/UserMapper.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_mapping.data.mapper\n\nimport com.example.cyclistance.feature_mapping.data.data_source.network.dto.user_dto.ConfirmationDetailDto\nimport com.example.cyclistance.feature_mapping.data.data_source.network.dto.user_dto.RescueRequestDto\nimport com.example.cyclistance.feature_mapping.data.data_source.network.dto.user_dto.RespondentDto\nimport com.example.cyclistance.feature_mapping.data.data_source.network.dto.user_dto.TransactionDto\nimport com.example.cyclistance.feature_mapping.data.data_source.network.dto.user_dto.UserAssistanceDto\nimport com.example.cyclistance.feature_mapping.data.data_source.network.dto.user_dto.UserDto\nimport com.example.cyclistance.feature_mapping.data.data_source.network.dto.user_dto.UserItemDto\nimport com.example.cyclistance.feature_mapping.data.mapper.RescueTransactionMapper.toLocationDto\nimport com.example.cyclistance.feature_mapping.data.mapper.RescueTransactionMapper.toLocationModel\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue.RescueRequestItemModel\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.ConfirmationDetailModel\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.NearbyCyclist\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.RescueRequest\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.RespondentModel\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.TransactionModel\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.UserAssistanceModel\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.UserItem\n\nobject UserMapper {\n\n    fun UserItemDto.toUserItem(): UserItem {\n        return UserItem(\n            address = this.address,\n            contactNumber = this.contactNumber,\n            id = this.id,\n            location = this.location?.toLocationModel(),\n            name = this.name,\n            profilePictureUrl = this.profilePictureUrl,\n            userAssistance = this.userAssistance?.toUserAssistanceModel(),\n            rescueRequest = this.rescueRequest?.toRescueRequestModel(),\n            transaction = this.transaction?.toTransactionModel()\n            )\n    }\n\n\n    private fun RescueRequestDto.toRescueRequestModel(): RescueRequest {\n        return RescueRequest(\n            respondents = this.respondents.map { it.toRespondentModel() },\n        )\n    }\n\n    fun UserItem.toUserItemDto(): UserItemDto {\n        return UserItemDto(\n            address = this.address,\n            contactNumber = this.contactNumber,\n            id = this.id,\n            location = this.location?.toLocationDto(),\n            name = this.name,\n            profilePictureUrl = this.profilePictureUrl,\n            userAssistance = this.userAssistance?.toUserAssistanceDto(),\n            rescueRequest = this.rescueRequest?.toRescueRequestDto(),\n            transaction = this.transaction?.toTransactionDto()\n        )\n    }\n\n\n    private fun TransactionDto.toTransactionModel():TransactionModel{\n        return TransactionModel(\n            role = this.role,\n            transactionId = this.transactionId\n        )\n    }\n\n    private fun TransactionModel.toTransactionDto(): TransactionDto {\n        return TransactionDto(\n            role = this.role,\n            transactionId = this.transactionId\n        )\n    }\n\n    private fun RescueRequest.toRescueRequestDto(): RescueRequestDto {\n        return RescueRequestDto(\n            respondents = this.respondents.map { it.toRespondentDto() },\n        )\n    }\n\n    private fun RespondentDto.toRespondentModel():RespondentModel{\n        return RespondentModel(\n            clientId = this.clientId\n        )\n    }\n\n    private fun RespondentModel.toRespondentDto(): RespondentDto {\n        return RespondentDto(\n            clientId = this.clientId\n        )\n    }\n\n    private fun ConfirmationDetailDto.toConfirmationModel(): ConfirmationDetailModel {\n        return ConfirmationDetailModel(\n            bikeType = this.bikeType,\n            description = this.description,\n            message = this.message\n        )\n    }\n\n    private fun ConfirmationDetailModel.toConfirmationDetailDto(): ConfirmationDetailDto {\n        return ConfirmationDetailDto(\n            bikeType = this.bikeType,\n            description = this.description,\n            message = this.message\n        )\n    }\n\n    private fun UserAssistanceDto.toUserAssistanceModel(): UserAssistanceModel{\n        return UserAssistanceModel(\n            confirmationDetail = this.confirmationDetail.toConfirmationModel(),\n            needHelp = this.needHelp,\n        )\n    }\n\n    private fun UserAssistanceModel.toUserAssistanceDto(): UserAssistanceDto {\n        return UserAssistanceDto(\n            confirmationDetail = this.confirmationDetail.toConfirmationDetailDto(),\n            needHelp = this.needHelp,\n        )\n    }\n\n\n\n\n    fun UserDto.toUser(): NearbyCyclist {\n        return NearbyCyclist(\n            users = this.map { it.toUserItem() }\n        )\n    }\n\n    fun UserItem.toRescueRequest(distance: String = \"---\", eta: String = \"---\"): RescueRequestItemModel {\n        return RescueRequestItemModel(\n            id = this.id,\n            name = this.name,\n            profileImageUrl = this.profilePictureUrl,\n            distance = distance,\n            estimatedTimeTravel = eta,\n            address = this.address\n        )\n    }\n\n\n\n\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/data/mapper/UserMapper.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/data/mapper/UserMapper.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/data/mapper/UserMapper.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/data/mapper/UserMapper.kt	(date 1692288837283)
@@ -9,14 +9,14 @@
 import com.example.cyclistance.feature_mapping.data.data_source.network.dto.user_dto.UserItemDto
 import com.example.cyclistance.feature_mapping.data.mapper.RescueTransactionMapper.toLocationDto
 import com.example.cyclistance.feature_mapping.data.mapper.RescueTransactionMapper.toLocationModel
-import com.example.cyclistance.feature_mapping.domain.model.api.rescue.RescueRequestItemModel
-import com.example.cyclistance.feature_mapping.domain.model.api.user.ConfirmationDetailModel
-import com.example.cyclistance.feature_mapping.domain.model.api.user.NearbyCyclist
-import com.example.cyclistance.feature_mapping.domain.model.api.user.RescueRequest
-import com.example.cyclistance.feature_mapping.domain.model.api.user.RespondentModel
-import com.example.cyclistance.feature_mapping.domain.model.api.user.TransactionModel
-import com.example.cyclistance.feature_mapping.domain.model.api.user.UserAssistanceModel
-import com.example.cyclistance.feature_mapping.domain.model.api.user.UserItem
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.rescue.RescueRequestItemModel
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.user.ConfirmationDetailModel
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.user.NearbyCyclist
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.user.RescueRequest
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.user.RespondentModel
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.user.TransactionModel
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.user.UserAssistanceModel
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.user.UserItem
 
 object UserMapper {
 
Index: app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/utils/MockUsers.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.utils\n\nimport com.example.cyclistance.core.utils.constants.MappingConstants\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.ConfirmationDetailModel\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.LocationModel\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.RescueRequest\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.RespondentModel\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.TransactionModel\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.UserAssistanceModel\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.UserItem\nimport com.example.cyclistance.feature_mapping.domain.use_case.MappingUseCase\nimport com.example.cyclistance.feature_mapping.presentation.mapping_confirm_details.components.BikeType\n\n\nval userItems = listOf(\n    UserItem(\n        address = \"1234 Main Street, New York, NY 10001\",\n        contactNumber = \"1234567890\",\n        id = \"V45BYRCwjSzb9nljb6aZ2W82VKi5\",\n        location = LocationModel(latitude = 14.0874, longitude = 121.1517),\n        name = \"John Mark\",\n        profilePictureUrl = \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQK9gqFKRn28xKHD1CAbEevdzsLmsv5yQkGnQ&usqp=CAU\",\n        rescueRequest = RescueRequest(\n            listOf(\n                RespondentModel(clientId = \"2326236\"),\n                RespondentModel(clientId = \"32362323\"),\n                RespondentModel(clientId = \"423623\")\n            )\n        )),\n\n    UserItem(\n        address = \"1234 Main Street, New York, NY 10001\",\n        contactNumber = \"92398512908\",\n        id = \"2326236\",\n        location = LocationModel(latitude = 14.079426870239514, longitude = 121.15672703265659),\n        name = \"Jane Dominic\",\n        profilePictureUrl = \"https://images.pexels.com/photos/220453/pexels-photo-220453.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\",\n        rescueRequest = RescueRequest(),\n        userAssistance = UserAssistanceModel(\n            needHelp = true,\n            confirmationDetail = ConfirmationDetailModel(\n                bikeType = BikeType.RoadBike.type,\n                description = MappingConstants.BROKEN_CHAIN_TEXT,\n                message = \"I need help with my flat tire\",\n            ),\n        ), transaction = TransactionModel(role = \"rescuer\", transactionId = \"oinun98naksxnaiu2\")),\n\n\n    UserItem(\n        address = \"1234 Main Street, New York, NY 10001\",\n        contactNumber = \"2845182739\",\n        id = \"32362323\",\n        location = LocationModel(latitude = 14.090421127354372, longitude = 121.14870941179073),\n        name = \"John Terminator\",\n        rescueRequest = RescueRequest(),\n        userAssistance = UserAssistanceModel(\n            needHelp = true,\n            confirmationDetail = ConfirmationDetailModel(\n                bikeType = \"Road Bike\",\n                description = MappingConstants.FAULTY_BRAKES_TEXT,\n                message = \"I need help with my flat tire\",\n            ),\n        ),\n        profilePictureUrl = \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSv9zzOmzF32TNcQ2O93T21Serg2aJj5O-1hrQdZiE6ITGiKLsW4rjgVpX-asQYXa4iVeA&usqp=CAU\",\n    ),\n    UserItem(\n        address = \"1234 Main Street, New York, NY 10001\",\n        contactNumber = \"2367238327\",\n        id = \"423623\",\n        location = LocationModel(latitude = 14.08894440102451, longitude = 121.14033042983098),\n        name = \"Boomie\",\n        rescueRequest = RescueRequest(),\n        userAssistance = UserAssistanceModel(\n            needHelp = true,\n            confirmationDetail = ConfirmationDetailModel(\n                bikeType = \"Road Bike\",\n                description = MappingConstants.INJURY_TEXT,\n                message = \"I need help with my flat tire\",\n            ),\n        ),\n        profilePictureUrl = \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT8E4cPH6JfDvMMFNuu_M3LC2gXHX-pE0ieN3yt4TF8qDsdVZrXU0wa18WgljS9cvMXAzk&usqp=CAU\",\n    ),\n\n    UserItem(\n        address = \"1234 Main Street, New York, NY 10001\",\n        contactNumber = \"1234567890\",\n        id = \"5\",\n        location = LocationModel(latitude = 14.044194, longitude = 121.747392),\n        name = \"John Doe\",\n        rescueRequest = RescueRequest(),\n        profilePictureUrl = \"https://www.erlanger.org/find-a-doctor/media/PhysicianPhotos/Carbone_1436.jpg\",\n        userAssistance = UserAssistanceModel(\n            needHelp = true,\n            confirmationDetail = ConfirmationDetailModel(\n                bikeType = \"Road Bike\",\n                description = MappingConstants.BROKEN_FRAME_TEXT,\n                message = \"I need help with my flat tire\",\n            ),\n        ),\n    ),\n\n    UserItem(\n        address = \"1234 Main Street, New York, NY 10001\",\n        contactNumber = \"1234567890\",\n        id = \"6\",\n        rescueRequest = RescueRequest(),\n        location = LocationModel(latitude = 6.523497, longitude = 125.037057),\n        name = \"Jeniffer\",\n        profilePictureUrl = \"https://www.harleytherapy.co.uk/counselling/wp-content/uploads/16297800391_5c6e812832.jpg\",\n    ),\n\n    UserItem(\n        address = \"1234 Main Street, New York, NY 10001\",\n        contactNumber = \"1234567890\",\n        id = \"7\",\n        rescueRequest = RescueRequest(),\n        location = LocationModel(latitude = 6.531999, longitude = 125.043330),\n        name = \"Mark\",\n        profilePictureUrl = \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQDwnb8KCy8eejkddV5FaKsBcm1uDznQhInOQ&usqp=CAU\",\n    ),\n\n    UserItem(\n        address = \"1234 Main Street, New York, NY 10001\",\n        contactNumber = \"1234567890\",\n        id = \"8\",\n        location = LocationModel(latitude = 6.887962, longitude = 125.224905),\n        userAssistance = UserAssistanceModel(\n            needHelp = true,\n            confirmationDetail = ConfirmationDetailModel(\n                bikeType = \"Road Bike\",\n                description = MappingConstants.BROKEN_CHAIN_TEXT,\n                message = \"I need help with my flat tire\",\n            ),\n        ),\n        name = \"Alex\",\n        profilePictureUrl = \"https://thumbs.dreamstime.com/b/young-indian-man-having-fun-doing-video-call-outdoor-home-garden-mobile-phone-happy-person-using-technology-trends-tech-181375754.jpg\",\n    ),\n\n    UserItem(\n        address = \"1234 Main Street, New York, NY 10001\",\n        contactNumber = \"1234567890\",\n        id = \"9\",\n        location = LocationModel(latitude = 7.118415, longitude = 125.283468),\n        name = \"John Dominic\",\n        profilePictureUrl = \"https://www.commonwealthfund.org/sites/default/files/images/___media_upload_young_adults_individual_mandate_exemption_could_lead_to_more_uninsurance.jpg\",\n    ),\n\n    )\n\nsuspend fun MappingUseCase.createMockUsers() {\n    userItems.forEach {\n        createUserUseCase(it)\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/utils/MockUsers.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/utils/MockUsers.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/utils/MockUsers.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/utils/MockUsers.kt	(date 1692288837459)
@@ -1,13 +1,13 @@
 package com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.utils
 
 import com.example.cyclistance.core.utils.constants.MappingConstants
-import com.example.cyclistance.feature_mapping.domain.model.api.user.ConfirmationDetailModel
-import com.example.cyclistance.feature_mapping.domain.model.api.user.LocationModel
-import com.example.cyclistance.feature_mapping.domain.model.api.user.RescueRequest
-import com.example.cyclistance.feature_mapping.domain.model.api.user.RespondentModel
-import com.example.cyclistance.feature_mapping.domain.model.api.user.TransactionModel
-import com.example.cyclistance.feature_mapping.domain.model.api.user.UserAssistanceModel
-import com.example.cyclistance.feature_mapping.domain.model.api.user.UserItem
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.user.ConfirmationDetailModel
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.user.LocationModel
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.user.RescueRequest
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.user.RespondentModel
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.user.TransactionModel
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.user.UserAssistanceModel
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.user.UserItem
 import com.example.cyclistance.feature_mapping.domain.use_case.MappingUseCase
 import com.example.cyclistance.feature_mapping.presentation.mapping_confirm_details.components.BikeType
 
Index: app/src/main/java/com/example/cyclistance/feature_mapping/data/repository/MappingRepositoryImpl.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_mapping.data.repository\n\nimport android.content.Context\nimport android.location.Address\nimport android.location.Geocoder\nimport android.os.Build\nimport androidx.annotation.WorkerThread\nimport com.example.cyclistance.core.utils.connection.ConnectionStatus.hasInternetConnection\nimport com.example.cyclistance.core.utils.constants.MappingConstants.API_CALL_RETRY_COUNT\nimport com.example.cyclistance.feature_mapping.data.CyclistanceApi\nimport com.example.cyclistance.feature_mapping.data.mapper.RescueTransactionMapper.toRescueTransaction\nimport com.example.cyclistance.feature_mapping.data.mapper.RescueTransactionMapper.toRescueTransactionDto\nimport com.example.cyclistance.feature_mapping.data.mapper.RouteDirectionMapper.toRouteDirection\nimport com.example.cyclistance.feature_mapping.data.mapper.UserMapper.toUser\nimport com.example.cyclistance.feature_mapping.data.mapper.UserMapper.toUserItem\nimport com.example.cyclistance.feature_mapping.data.mapper.UserMapper.toUserItemDto\nimport com.example.cyclistance.feature_mapping.domain.exceptions.MappingExceptions\nimport com.example.cyclistance.feature_mapping.domain.model.*\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RescueTransactionItem\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RouteDirection\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.LocationModel\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.NearbyCyclist\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.UserItem\nimport com.example.cyclistance.feature_mapping.domain.repository.MappingRepository\nimport com.example.cyclistance.service.LocationService\nimport com.mapbox.api.directions.v5.DirectionsCriteria\nimport com.mapbox.api.directions.v5.models.DirectionsRoute\nimport com.mapbox.api.optimization.v1.MapboxOptimization\nimport com.mapbox.api.optimization.v1.models.OptimizationResponse\nimport com.mapbox.geojson.Point\nimport im.delight.android.location.SimpleLocation\nimport kotlinx.coroutines.Dispatchers\nimport kotlinx.coroutines.flow.Flow\nimport kotlinx.coroutines.flow.catch\nimport kotlinx.coroutines.flow.flow\nimport kotlinx.coroutines.flow.map\nimport kotlinx.coroutines.flow.retry\nimport kotlinx.coroutines.withContext\nimport retrofit2.Call\nimport retrofit2.Callback\nimport retrofit2.HttpException\nimport retrofit2.Response\nimport timber.log.Timber\nimport java.io.IOException\nimport kotlin.coroutines.CoroutineContext\nimport kotlin.coroutines.resume\nimport kotlin.coroutines.resumeWithException\nimport kotlin.coroutines.suspendCoroutine\n\n\nclass MappingRepositoryImpl(\n\n    private val api: CyclistanceApi,\n    private val mapboxDirections: MapboxOptimization.Builder,\n    private val context: Context,\n    private val geocoder: Geocoder,\n) : MappingRepository {\n\n    private val scope: CoroutineContext = Dispatchers.IO\n\n\n    override suspend fun getFullAddress(latitude: Double, longitude: Double): String {\n        return withContext(scope) {\n            suspendCoroutine { continuation ->\n                geocoder.getAddress(latitude = latitude, longitude = longitude) { address ->\n                    if (address != null) {\n                        continuation.resume(address.getFullAddress())\n                        return@getAddress\n                    }\n                    continuation.resumeWithException(MappingExceptions.AddressException(\"Searching for GPS\"))\n                }\n            }\n        }\n    }\n\n    @Suppress(\"DEPRECATION\")\n    @WorkerThread\n    private inline fun Geocoder.getAddress(\n        latitude: Double,\n        longitude: Double,\n        crossinline onCallbackAddress: (Address?) -> Unit) {\n\n        try {\n\n            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.TIRAMISU) {\n                getFromLocation(\n                    latitude, longitude, 1,\n                ) { addresses ->\n                    onCallbackAddress(addresses.lastOrNull())\n                }\n            } else {\n                onCallbackAddress(getFromLocation(latitude, longitude, 1)?.lastOrNull())\n            }\n\n        } catch (e: IOException) {\n            Timber.e(\"GET ADDRESS: ${e.message}\")\n        }\n    }\n\n    override fun getCalculateDistance(\n        startingLocation: LocationModel,\n        destinationLocation: LocationModel,\n    ): Double {\n\n        startingLocation.latitude ?: throw MappingExceptions.LocationException()\n        startingLocation.longitude ?: throw MappingExceptions.LocationException()\n        destinationLocation.latitude ?: throw MappingExceptions.LocationException()\n        destinationLocation.longitude ?: throw MappingExceptions.LocationException()\n\n        return SimpleLocation.calculateDistance(\n            startingLocation.latitude,\n            startingLocation.longitude,\n            destinationLocation.latitude,\n            destinationLocation.longitude)\n    }\n\n    private fun Address.getFullAddress(): String {\n        val subThoroughfare = if (subThoroughfare != \"null\" && subThoroughfare != null) \"$subThoroughfare \" else \"\"\n        val thoroughfare = if (thoroughfare != \"null\" && thoroughfare != null) \"$thoroughfare., \" else \"\"\n        val subAdminArea = if (subAdminArea != \"null\" && subAdminArea != null) subAdminArea else \"\"\n\n        val locality = if (locality != \"null\" && locality != null) \"$locality, \" else \"\"\n        val formattedLocality = if(subAdminArea.isNotEmpty()) locality else locality.replace(\n            oldChar = ',',\n            newChar = ' ',\n            ignoreCase = true\n        )\n\n        return \"$subThoroughfare$thoroughfare$formattedLocality$subAdminArea\"\n    }\n\n\n\n\n\n    override suspend fun getUserById(userId: String): Flow<UserItem> =\n        flow {\n            val user = api.getUserById(userId)\n            emit(user)\n        }.retry(API_CALL_RETRY_COUNT) { cause ->\n            return@retry cause is IOException || cause is HttpException\n        }.catch { cause ->\n            if (cause is IOException || cause is HttpException) {\n                throw MappingExceptions.NetworkException()\n            }\n        }.map { it.toUserItem() }\n\n\n    override suspend fun getUserLocation(): Flow<LocationModel> {\n        return withContext(scope) { LocationService.address }\n    }\n\n    override suspend fun getUsers(latitude: Double, longitude: Double): Flow<NearbyCyclist> =\n        flow {\n            val users = api.getUsers(latitude = latitude, longitude = longitude)\n            emit(users)\n        }.retry(API_CALL_RETRY_COUNT) { cause ->\n            return@retry cause is IOException || cause is HttpException\n        }.catch { cause ->\n            if (cause is IOException || cause is HttpException) {\n                throw MappingExceptions.NetworkException()\n            }\n        }.map {\n            it.toUser()\n        }\n\n\n    override suspend fun createUser(userItem: UserItem) =\n        withContext(scope) {\n            handleException {\n                api.createUser(userItemDto = userItem.toUserItemDto())\n            }\n        }\n\n    override suspend fun deleteUser(id: String) =\n        withContext(scope) {\n            handleException {\n                api.deleteUser(id)\n            }\n        }\n\n    override suspend fun getRescueTransactionById(transactionId: String): Flow<RescueTransactionItem> =\n\n        flow {\n            val transaction = api.getRescueTransactionById(transactionId)\n            emit(transaction)\n        }.retry(API_CALL_RETRY_COUNT) { cause ->\n            return@retry cause is IOException || cause is HttpException\n        }.catch {\n            if (it is IOException || it is HttpException) {\n                throw MappingExceptions.NetworkException()\n            }\n        }.map { it.toRescueTransaction() }\n\n\n    override suspend fun createRescueTransaction(rescueTransaction: RescueTransactionItem) =\n        withContext(scope) {\n            handleException {\n                api.createRescueTransaction(rescueTransaction.toRescueTransactionDto())\n            }\n        }\n\n\n    override suspend fun deleteRescueTransaction(transactionId: String) {\n        withContext(scope) {\n            handleException {\n                api.deleteRescueTransaction(transactionId)\n            }\n        }\n    }\n\n\n\n\n    override suspend fun deleteRescueRespondent(userId: String, respondentId: String) {\n        withContext(scope) {\n            handleException {\n                api.deleteRescueRespondent(userId, respondentId)\n            }\n        }\n    }\n\n    override suspend fun addRescueRespondent(userId: String, respondentId: String) {\n        withContext(scope) {\n            handleException {\n                api.addRescueRespondent(userId, respondentId)\n            }\n        }\n    }\n\n    override suspend fun deleteAllRespondents(userId: String) {\n        withContext(scope) {\n            handleException {\n                api.deleteAllRespondents(userId)\n            }\n        }\n    }\n\n    override suspend fun getRouteDirections(origin: Point, destination: Point): RouteDirection {\n\n        if (context.hasInternetConnection().not()) {\n            throw MappingExceptions.NetworkException()\n        }\n\n        val client = mapboxDirections.coordinates(listOf(origin, destination))\n            .profile(DirectionsCriteria.PROFILE_CYCLING)\n            .overview(DirectionsCriteria.OVERVIEW_FULL)\n            .build()\n\n        return withContext(scope) {\n            suspendCoroutine { continuation ->\n                client.enqueueCall(object : Callback<OptimizationResponse> {\n                    override fun onResponse(\n                        call: Call<OptimizationResponse>,\n                        response: Response<OptimizationResponse>) {\n                        val routesAvailable = response.routesAvailable()\n\n                        if (!routesAvailable) {\n                            continuation.resumeWithException(Exception(\"No routes found\"))\n                            return\n                        }\n\n                        val currentRoute = response.getRoute()\n                        continuation.resume(currentRoute.toRouteDirection())\n                    }\n\n                    override fun onFailure(call: Call<OptimizationResponse>, throwable: Throwable) {\n                        Timber.e(\"Error: %s\", throwable.message)\n                        continuation.resumeWithException(throwable)\n                    }\n                })\n            }\n        }\n    }\n}\n\nprivate fun Response<OptimizationResponse>.getRoute(): DirectionsRoute {\n    return body()!!.trips()!!.first()\n}\n\n\nprivate fun Response<OptimizationResponse>.routesAvailable(): Boolean {\n\n    val body = this.body()\n    val hasBody = body != null\n    val hasTrips = body?.trips()?.isNotEmpty() == true\n    return (hasBody && hasTrips)\n}\n\n\nprivate inline fun <T> handleException(action: () -> T): T {\n    return try {\n        action()\n    } catch (e: HttpException) {\n        throw MappingExceptions.UnexpectedErrorException(message = e.message ?: \"Unexpected Error\")\n    } catch (e: IOException) {\n        Timber.e(\"Exception is ${e.message}\")\n        throw MappingExceptions.NetworkException()\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/data/repository/MappingRepositoryImpl.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/data/repository/MappingRepositoryImpl.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/data/repository/MappingRepositoryImpl.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/data/repository/MappingRepositoryImpl.kt	(date 1692288837303)
@@ -16,11 +16,11 @@
 import com.example.cyclistance.feature_mapping.data.mapper.UserMapper.toUserItemDto
 import com.example.cyclistance.feature_mapping.domain.exceptions.MappingExceptions
 import com.example.cyclistance.feature_mapping.domain.model.*
-import com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RescueTransactionItem
-import com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RouteDirection
-import com.example.cyclistance.feature_mapping.domain.model.api.user.LocationModel
-import com.example.cyclistance.feature_mapping.domain.model.api.user.NearbyCyclist
-import com.example.cyclistance.feature_mapping.domain.model.api.user.UserItem
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.rescue_transaction.RescueTransactionItem
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.rescue_transaction.RouteDirection
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.user.LocationModel
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.user.NearbyCyclist
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.user.UserItem
 import com.example.cyclistance.feature_mapping.domain.repository.MappingRepository
 import com.example.cyclistance.service.LocationService
 import com.mapbox.api.directions.v5.DirectionsCriteria
Index: app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/websockets/users/NearbyCyclistsUseCase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/websockets/users/NearbyCyclistsUseCase.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/websockets/users/NearbyCyclistsUseCase.kt
new file mode 100644
--- /dev/null	(date 1692332021324)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/websockets/users/NearbyCyclistsUseCase.kt	(date 1692332021324)
@@ -0,0 +1,15 @@
+package com.example.cyclistance.feature_mapping.domain.use_case.websockets.users
+
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.live_location.LiveLocationSocketModel
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.user.NearbyCyclist
+import com.example.cyclistance.feature_mapping.domain.repository.MappingSocketRepository
+import kotlinx.coroutines.flow.Flow
+
+class NearbyCyclistsUseCase(private val repository: MappingSocketRepository) {
+    suspend operator fun invoke(locationModel: LiveLocationSocketModel) {
+        repository.broadcastToNearbyCyclists(locationModel)
+    }
+    suspend operator fun invoke(): Flow<NearbyCyclist> {
+        return repository.getUserUpdates()
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/websockets/live_location/BroadcastTransactionLocationUseCase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/websockets/live_location/BroadcastTransactionLocationUseCase.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/websockets/live_location/TransactionLocationUseCase.kt
rename from app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/websockets/live_location/BroadcastTransactionLocationUseCase.kt
rename to app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/websockets/live_location/TransactionLocationUseCase.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/websockets/live_location/BroadcastTransactionLocationUseCase.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/websockets/live_location/TransactionLocationUseCase.kt	(date 1692332021357)
@@ -1,14 +1,15 @@
 package com.example.cyclistance.feature_mapping.domain.use_case.websockets.live_location
 
-import com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RescueTransactionItem
-import com.example.cyclistance.feature_mapping.domain.model.api.user.UserItem
-import com.example.cyclistance.feature_mapping.domain.model.location.LiveLocationWSModel
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.live_location.LiveLocationSocketModel
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.rescue_transaction.RescueTransactionItem
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.user.UserItem
 import com.example.cyclistance.feature_mapping.domain.repository.MappingSocketRepository
+import kotlinx.coroutines.flow.Flow
 
-class BroadcastTransactionLocationUseCase(
+class TransactionLocationUseCase(
     private val repository: MappingSocketRepository) {
     suspend operator fun invoke(
-        locationModel: LiveLocationWSModel,
+        locationModel: LiveLocationSocketModel,
         user: UserItem,
         rescueTransactionItem: RescueTransactionItem) {
 
@@ -26,4 +27,7 @@
 
         repository.broadcastTransactionLocation(locationModel)
     }
+    suspend operator fun invoke(): Flow<LiveLocationSocketModel> {
+        return repository.getTransactionLocationUpdates()
+    }
 }
\ No newline at end of file
Index: app/src/test/java/com/example/cyclistance/di/TestMappingModule.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.di\n\nimport com.example.cyclistance.feature_mapping.data.repositories.FakeMappingRepository\nimport com.example.cyclistance.feature_mapping.domain.use_case.MappingUseCase\nimport com.example.cyclistance.feature_mapping.domain.use_case.address.GetAddressUseCase\nimport com.example.cyclistance.feature_mapping.domain.use_case.address.SetAddressUseCase\nimport com.example.cyclistance.feature_mapping.domain.use_case.bike_type.GetBikeTypeUseCase\nimport com.example.cyclistance.feature_mapping.domain.use_case.bike_type.SetBikeTypeUseCase\nimport com.example.cyclistance.feature_mapping.domain.use_case.location.GetCalculatedDistanceUseCase\nimport com.example.cyclistance.feature_mapping.domain.use_case.location.GetFullAddressUseCase\nimport com.example.cyclistance.feature_mapping.domain.use_case.location.GetUserLocationUseCase\nimport com.example.cyclistance.feature_mapping.domain.use_case.rescue_transaction.AcceptRescueRequestUseCase\nimport com.example.cyclistance.feature_mapping.domain.use_case.rescue_transaction.ConfirmCancellationUseCase\nimport com.example.cyclistance.feature_mapping.domain.use_case.rescue_transaction.DeleteRescueTransactionUseCase\nimport com.example.cyclistance.feature_mapping.domain.use_case.rescue_transaction.GetRescueTransactionByIdUseCase\nimport com.example.cyclistance.feature_mapping.domain.use_case.routes.GetRouteDirectionsUseCase\nimport com.example.cyclistance.feature_mapping.domain.use_case.user.AddRescueRespondentUseCase\nimport com.example.cyclistance.feature_mapping.domain.use_case.user.ConfirmDetailsUseCase\nimport com.example.cyclistance.feature_mapping.domain.use_case.user.CreateUserUseCase\nimport com.example.cyclistance.feature_mapping.domain.use_case.user.DeleteAllRespondentsUseCase\nimport com.example.cyclistance.feature_mapping.domain.use_case.user.DeleteRescueRespondentUseCase\nimport com.example.cyclistance.feature_mapping.domain.use_case.user.DeleteUserUseCase\nimport com.example.cyclistance.feature_mapping.domain.use_case.user.GetUserByIdUseCase\nimport com.example.cyclistance.feature_mapping.domain.use_case.user.GetUsersUseCase\nimport com.example.cyclistance.feature_mapping.domain.use_case.websockets.live_location.BroadcastTransactionLocationUseCase\nimport com.example.cyclistance.feature_mapping.domain.use_case.websockets.live_location.GetTransactionLocationUpdatesUseCase\nimport com.example.cyclistance.feature_mapping.domain.use_case.websockets.rescue_transactions.BroadcastRescueTransactionUseCase\nimport com.example.cyclistance.feature_mapping.domain.use_case.websockets.rescue_transactions.GetRescueTransactionUpdatesUseCase\nimport com.example.cyclistance.feature_mapping.domain.use_case.websockets.users.BroadcastToNearbyCyclists\nimport com.example.cyclistance.feature_mapping.domain.use_case.websockets.users.GetUserUpdatesUseCase\n\nobject TestMappingModule {\n    private val fakeMappingRepository: FakeMappingRepository = FakeMappingRepository()\n\n    operator fun invoke() = FakeMappingRepository.Companion\n    fun provideTestMappingUseCase(): MappingUseCase {\n        val repository = fakeMappingRepository\n        return MappingUseCase(\n            getUsersUseCase = GetUsersUseCase(repository),\n            getUserByIdUseCase = GetUserByIdUseCase(repository),\n            createUserUseCase = CreateUserUseCase(repository),\n            deleteUserUseCase = DeleteUserUseCase(repository),\n\n            getRescueTransactionByIdUseCase = GetRescueTransactionByIdUseCase(repository),\n            acceptRescueRequestUseCase = AcceptRescueRequestUseCase(repository),\n            deleteRescueTransactionUseCase = DeleteRescueTransactionUseCase(repository),\n\n\n            getUserLocationUseCase = GetUserLocationUseCase(repository),\n            getFullAddressUseCase = GetFullAddressUseCase(repository),\n            getBikeTypeUseCase = GetBikeTypeUseCase(repository),\n            setBikeTypeUseCase = SetBikeTypeUseCase(repository),\n            getAddressUseCase = GetAddressUseCase(repository),\n            setAddressUseCase = SetAddressUseCase(repository),\n            broadcastRescueTransactionUseCase = BroadcastRescueTransactionUseCase(repository),\n            broadcastToNearbyCyclists = BroadcastToNearbyCyclists(repository),\n            getRescueTransactionUpdatesUseCase = GetRescueTransactionUpdatesUseCase(repository),\n            getUserUpdatesUseCase = GetUserUpdatesUseCase(repository),\n            broadcastRescueTransactionToRespondent = BroadcastTransactionLocationUseCase(repository),\n            getTransactionLocationUpdatesUseCase = GetTransactionLocationUpdatesUseCase(repository),\n            deleteRescueRespondentUseCase = DeleteRescueRespondentUseCase(repository),\n            addRescueRespondentUseCase = AddRescueRespondentUseCase(repository),\n            deleteAllRespondentsUseCase = DeleteAllRespondentsUseCase(repository),\n            confirmDetailsUseCase = ConfirmDetailsUseCase(repository),\n            confirmCancellationUseCase = ConfirmCancellationUseCase(repository),\n            getRouteDirectionsUseCase = GetRouteDirectionsUseCase(repository),\n            getCalculatedDistanceUseCase = GetCalculatedDistanceUseCase(repository),\n        )\n    }\n\n\n\n\n\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/test/java/com/example/cyclistance/di/TestMappingModule.kt b/app/src/test/java/com/example/cyclistance/di/TestMappingModule.kt
--- a/app/src/test/java/com/example/cyclistance/di/TestMappingModule.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/test/java/com/example/cyclistance/di/TestMappingModule.kt	(date 1692332385730)
@@ -22,12 +22,10 @@
 import com.example.cyclistance.feature_mapping.domain.use_case.user.DeleteUserUseCase
 import com.example.cyclistance.feature_mapping.domain.use_case.user.GetUserByIdUseCase
 import com.example.cyclistance.feature_mapping.domain.use_case.user.GetUsersUseCase
-import com.example.cyclistance.feature_mapping.domain.use_case.websockets.live_location.BroadcastTransactionLocationUseCase
-import com.example.cyclistance.feature_mapping.domain.use_case.websockets.live_location.GetTransactionLocationUpdatesUseCase
+import com.example.cyclistance.feature_mapping.domain.use_case.websockets.live_location.TransactionLocationUseCase
 import com.example.cyclistance.feature_mapping.domain.use_case.websockets.rescue_transactions.BroadcastRescueTransactionUseCase
 import com.example.cyclistance.feature_mapping.domain.use_case.websockets.rescue_transactions.GetRescueTransactionUpdatesUseCase
-import com.example.cyclistance.feature_mapping.domain.use_case.websockets.users.BroadcastToNearbyCyclists
-import com.example.cyclistance.feature_mapping.domain.use_case.websockets.users.GetUserUpdatesUseCase
+import com.example.cyclistance.feature_mapping.domain.use_case.websockets.users.NearbyCyclistsUseCase
 
 object TestMappingModule {
     private val fakeMappingRepository: FakeMappingRepository = FakeMappingRepository()
@@ -53,10 +51,10 @@
             getAddressUseCase = GetAddressUseCase(repository),
             setAddressUseCase = SetAddressUseCase(repository),
             broadcastRescueTransactionUseCase = BroadcastRescueTransactionUseCase(repository),
-            broadcastToNearbyCyclists = BroadcastToNearbyCyclists(repository),
+            nearbyCyclistsUseCase = NearbyCyclistsUseCase(repository),
             getRescueTransactionUpdatesUseCase = GetRescueTransactionUpdatesUseCase(repository),
             getUserUpdatesUseCase = GetUserUpdatesUseCase(repository),
-            broadcastRescueTransactionToRespondent = BroadcastTransactionLocationUseCase(repository),
+            transactionLocationUseCase = TransactionLocationUseCase(repository),
             getTransactionLocationUpdatesUseCase = GetTransactionLocationUpdatesUseCase(repository),
             deleteRescueRespondentUseCase = DeleteRescueRespondentUseCase(repository),
             addRescueRespondentUseCase = AddRescueRespondentUseCase(repository),
Index: app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/websockets/rescue_transactions/GetRescueTransactionUpdatesUseCase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_mapping.domain.use_case.websockets.rescue_transactions\n\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RescueTransaction\nimport com.example.cyclistance.feature_mapping.domain.repository.MappingSocketRepository\nimport kotlinx.coroutines.flow.Flow\n\nclass GetRescueTransactionUpdatesUseCase(private val repository: MappingSocketRepository) {\n    suspend operator fun invoke(): Flow<RescueTransaction> {\n\n        return repository.getRescueTransactionUpdates()\n    }\n\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/websockets/rescue_transactions/GetRescueTransactionUpdatesUseCase.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/websockets/rescue_transactions/GetRescueTransactionUpdatesUseCase.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/websockets/rescue_transactions/GetRescueTransactionUpdatesUseCase.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/websockets/rescue_transactions/GetRescueTransactionUpdatesUseCase.kt	(date 1692332021387)
@@ -1,6 +1,6 @@
 package com.example.cyclistance.feature_mapping.domain.use_case.websockets.rescue_transactions
 
-import com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RescueTransaction
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.rescue_transaction.RescueTransaction
 import com.example.cyclistance.feature_mapping.domain.repository.MappingSocketRepository
 import kotlinx.coroutines.flow.Flow
 
@@ -9,6 +9,4 @@
 
         return repository.getRescueTransactionUpdates()
     }
-
-
 }
\ No newline at end of file
Index: app/src/main/java/com/example/cyclistance/feature_mapping/domain/repository/MappingRepository.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_mapping.domain.repository\n\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RescueTransactionItem\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RouteDirection\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.LocationModel\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.NearbyCyclist\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.UserItem\nimport com.mapbox.geojson.Point\nimport kotlinx.coroutines.flow.Flow\n\ninterface MappingRepository {\n    suspend fun getUserById(userId: String): Flow<UserItem>\n    suspend fun getUsers(latitude: Double, longitude: Double): Flow<NearbyCyclist>\n    suspend fun createUser(userItem: UserItem)\n    suspend fun deleteUser(id: String)\n\n\n    suspend fun deleteRescueRespondent(userId: String, respondentId: String)\n    suspend fun addRescueRespondent(userId: String, respondentId: String)\n    suspend fun deleteAllRespondents(userId: String)\n\n\n    suspend fun getFullAddress(latitude: Double, longitude: Double): String\n    suspend fun getRescueTransactionById(transactionId: String): Flow<RescueTransactionItem>\n    suspend fun createRescueTransaction(rescueTransaction: RescueTransactionItem)\n    suspend fun deleteRescueTransaction(transactionId: String)\n\n\n\n\n    suspend fun getUserLocation(): Flow<LocationModel>\n\n\n\n\n\n\n    suspend fun getRouteDirections(origin: Point, destination: Point): RouteDirection\n    fun getCalculateDistance(startingLocation: LocationModel, destinationLocation: LocationModel):Double\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/repository/MappingRepository.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/repository/MappingRepository.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/repository/MappingRepository.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/repository/MappingRepository.kt	(date 1692288836963)
@@ -1,10 +1,10 @@
 package com.example.cyclistance.feature_mapping.domain.repository
 
-import com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RescueTransactionItem
-import com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RouteDirection
-import com.example.cyclistance.feature_mapping.domain.model.api.user.LocationModel
-import com.example.cyclistance.feature_mapping.domain.model.api.user.NearbyCyclist
-import com.example.cyclistance.feature_mapping.domain.model.api.user.UserItem
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.rescue_transaction.RescueTransactionItem
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.rescue_transaction.RouteDirection
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.user.LocationModel
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.user.NearbyCyclist
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.user.UserItem
 import com.mapbox.geojson.Point
 import kotlinx.coroutines.flow.Flow
 
Index: app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/event/MappingEvent.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.event\n\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RouteDirection\nimport com.example.cyclistance.feature_mapping.domain.model.ui.rescue.MapSelectedRescuee\n\n\nsealed class MappingEvent{\n    object RequestHelpSuccess: MappingEvent()\n    object InsufficientUserCredential: MappingEvent()\n    object AcceptRescueRequestSuccess: MappingEvent()\n    //\n    data class LocationNotAvailable(val reason:String = \"Tracking your Location\"): MappingEvent()\n    data class RescuerLocationNotAvailable(val reason:String = \"Can't reach Rescuer\"): MappingEvent()\n    data class UnexpectedError(val reason:String? = \"An unexpected error occurred.\"): MappingEvent()\n    data class UserFailed(val reason: String? = \"User not found\"): MappingEvent()\n\n    data class RespondToHelpSuccess(val reason:String = \"Rescue request sent\"): MappingEvent()\n    data class AddressFailed(val reason: String? = \"Rescue transaction not found\"): MappingEvent()\n    object NoInternetConnection: MappingEvent()\n\n\n    data class NewSelectedRescuee(val selectedRescuee: MapSelectedRescuee): MappingEvent()\n    data class NewBottomSheetType(val bottomSheetType: String): MappingEvent()\n\n\n\n    data class NewRouteDirection(val routeDirection: RouteDirection): MappingEvent()\n    object RemoveAssignedTransactionSuccess: MappingEvent()\n    object RescueRequestAccepted: MappingEvent()\n    object CancelHelpRequestSuccess: MappingEvent()\n\n    object RescueHasTransaction: MappingEvent()\n    object UserHasCurrentTransaction: MappingEvent()\n\n    object DestinationReached: MappingEvent()\n    object FailedToCalculateDistance: MappingEvent()\n    data class RemoveRespondentFailed(val reason: String = \"Failed to remove respondent\"): MappingEvent()\n\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/event/MappingEvent.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/event/MappingEvent.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/event/MappingEvent.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/event/MappingEvent.kt	(date 1692288837106)
@@ -1,6 +1,6 @@
 package com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.event
 
-import com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RouteDirection
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.rescue_transaction.RouteDirection
 import com.example.cyclistance.feature_mapping.domain.model.ui.rescue.MapSelectedRescuee
 
 
Index: app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_confirm_details/ConfirmDetailsViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_mapping.presentation.mapping_confirm_details\n\nimport androidx.lifecycle.SavedStateHandle\nimport androidx.lifecycle.ViewModel\nimport androidx.lifecycle.viewModelScope\nimport com.example.cyclistance.core.utils.constants.MappingConstants.CONFIRM_DETAILS_VM_STATE_KEY\nimport com.example.cyclistance.feature_authentication.domain.exceptions.AuthExceptions\nimport com.example.cyclistance.feature_authentication.domain.use_case.AuthenticationUseCase\nimport com.example.cyclistance.feature_mapping.domain.exceptions.MappingExceptions\nimport com.example.cyclistance.feature_mapping.domain.model.ConfirmationDetails\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.ConfirmationDetailModel\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.UserAssistanceModel\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.UserItem\nimport com.example.cyclistance.feature_mapping.domain.model.location.LiveLocationWSModel\nimport com.example.cyclistance.feature_mapping.domain.use_case.MappingUseCase\nimport com.example.cyclistance.feature_mapping.presentation.mapping_confirm_details.event.ConfirmDetailsEvent\nimport com.example.cyclistance.feature_mapping.presentation.mapping_confirm_details.event.ConfirmDetailsVmEvent\nimport com.example.cyclistance.feature_mapping.presentation.mapping_confirm_details.state.ConfirmDetailsState\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.utils.BottomSheetType\nimport dagger.hilt.android.lifecycle.HiltViewModel\nimport kotlinx.coroutines.Dispatchers\nimport kotlinx.coroutines.flow.MutableSharedFlow\nimport kotlinx.coroutines.flow.MutableStateFlow\nimport kotlinx.coroutines.flow.asSharedFlow\nimport kotlinx.coroutines.flow.asStateFlow\nimport kotlinx.coroutines.flow.first\nimport kotlinx.coroutines.flow.update\nimport kotlinx.coroutines.launch\nimport timber.log.Timber\nimport javax.inject.Inject\n\n\n@HiltViewModel\nclass ConfirmDetailsViewModel @Inject constructor(\n    private val savedStateHandle: SavedStateHandle,\n    private val authUseCase: AuthenticationUseCase,\n    private val mappingUseCase: MappingUseCase) : ViewModel() {\n\n    private val _latitude: Float? = savedStateHandle[\"latitude\"]\n    private val _longitude: Float? = savedStateHandle[\"longitude\"]\n    private val _state: MutableStateFlow<ConfirmDetailsState> =\n        MutableStateFlow(savedStateHandle[CONFIRM_DETAILS_VM_STATE_KEY] ?: ConfirmDetailsState())\n    val state = _state.asStateFlow()\n\n    private val _eventFlow: MutableSharedFlow<ConfirmDetailsEvent> = MutableSharedFlow()\n    val eventFlow = _eventFlow.asSharedFlow()\n\n\n    init {\n\n        getAddress()\n        getBikeType()\n    }\n\n\n    private fun getBikeType() {\n        viewModelScope.launch {\n            runCatching {\n                mappingUseCase.getBikeTypeUseCase().first()\n            }.onSuccess { bikeType ->\n                _eventFlow.emit(value = ConfirmDetailsEvent.GetSavedBikeType(bikeType))\n                savedStateHandle[CONFIRM_DETAILS_VM_STATE_KEY] = state.value\n            }.onFailure { exception ->\n                Timber.e(exception.message)\n            }\n        }\n    }\n\n    private fun getAddress() {\n        viewModelScope.launch {\n            runCatching {\n                mappingUseCase.getAddressUseCase().first()\n            }.onSuccess { address ->\n                _eventFlow.emit(value = ConfirmDetailsEvent.GetSavedAddress(address))\n                savedStateHandle[CONFIRM_DETAILS_VM_STATE_KEY] = state.value\n            }.onFailure { exception ->\n                Timber.e(exception.message)\n            }\n        }\n    }\n\n    fun onEvent(event: ConfirmDetailsVmEvent) {\n        when (event) {\n            is ConfirmDetailsVmEvent.ConfirmDetails -> {\n                confirmDetails(confirmationDetail = event.confirmDetailsModel)\n            }\n        }\n        savedStateHandle[CONFIRM_DETAILS_VM_STATE_KEY] = state.value\n    }\n\n\n    private fun confirmDetails(confirmationDetail: ConfirmationDetails) {\n\n        viewModelScope.launch(Dispatchers.IO) {\n            runCatching {\n\n                val confirmedDetails = ConfirmationDetailModel(\n                    bikeType = confirmationDetail.bikeType,\n                    description = confirmationDetail.description,\n                    message = confirmationDetail.message\n                )\n                _state.update { it.copy(isLoading = true) }\n\n                    mappingUseCase.setAddressUseCase(address = confirmationDetail.address)\n                    mappingUseCase.setBikeTypeUseCase(bikeType = confirmationDetail.bikeType)\n                    mappingUseCase.setBottomSheetTypeUseCase(bottomSheet = BottomSheetType.SearchAssistance.type)\n\n                    mappingUseCase.confirmDetailsUseCase(\n                        user = UserItem(\n                            id = getId(),\n                            address = confirmationDetail.address.trim(),\n                            userAssistance = UserAssistanceModel(\n                                confirmationDetail = confirmedDetails,\n                                needHelp = true\n                            )))\n\n\n            }.onSuccess {\n                broadcastUser()\n                broadcastRescueTransaction()\n                _state.update { it.copy(isLoading = false) }\n                _eventFlow.emit(value = ConfirmDetailsEvent.ConfirmDetailsSuccess)\n\n\n            }.onFailure { exception ->\n                _state.update { it.copy(isLoading = false) }\n                exception.handleException()\n            }.also {\n                savedStateHandle[CONFIRM_DETAILS_VM_STATE_KEY] = state.value\n            }\n        }\n    }\n\n    private suspend fun broadcastUser() {\n        _latitude ?: return\n        _longitude ?: return\n\n        val latitude = _latitude.toDouble()\n        val longitude = _longitude.toDouble()\n\n        runCatching {\n            mappingUseCase.broadcastToNearbyCyclists(\n                locationModel = LiveLocationWSModel(\n                    latitude = latitude,\n                    longitude = longitude\n                ))\n        }.onSuccess {\n            Timber.v(\"BROADCASTING CONFIRMATION DETAILS: broadcastUser\")\n        }.onFailure {\n            it.handleException()\n        }\n    }\n\n    private suspend fun broadcastRescueTransaction() {\n        runCatching {\n            mappingUseCase.broadcastRescueTransactionUseCase()\n        }.onSuccess {\n            Timber.v(\"BROADCASTING CONFIRMATION DETAILS: broadcastRescueTransaction\")\n        }.onFailure {\n            it.handleException()\n        }\n    }\n\n    private suspend fun Throwable.handleException() {\n        when (this) {\n            is MappingExceptions.UnexpectedErrorException -> {\n                _eventFlow.emit(value = ConfirmDetailsEvent.UnexpectedError(this.message!!))\n            }\n\n            is AuthExceptions.UserException -> {\n                _eventFlow.emit(value = ConfirmDetailsEvent.UserError(this.message!!))\n            }\n\n            is MappingExceptions.NetworkException -> {\n                _eventFlow.emit(value = ConfirmDetailsEvent.NoInternetConnection)\n            }\n\n            is MappingExceptions.BikeTypeException -> {\n                _eventFlow.emit(value = ConfirmDetailsEvent.InvalidBikeType(this.message!!))\n            }\n\n            is MappingExceptions.DescriptionException -> {\n                _eventFlow.emit(value = ConfirmDetailsEvent.InvalidDescription(this.message!!))\n            }\n\n            is MappingExceptions.AddressException -> {\n                _eventFlow.emit(value = ConfirmDetailsEvent.InvalidAddress(this.message!!))\n            }\n        }\n        savedStateHandle[CONFIRM_DETAILS_VM_STATE_KEY] = state.value\n    }\n\n    private fun getId(): String = authUseCase.getIdUseCase()\n\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_confirm_details/ConfirmDetailsViewModel.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_confirm_details/ConfirmDetailsViewModel.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_confirm_details/ConfirmDetailsViewModel.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_confirm_details/ConfirmDetailsViewModel.kt	(date 1692337778173)
@@ -8,10 +8,10 @@
 import com.example.cyclistance.feature_authentication.domain.use_case.AuthenticationUseCase
 import com.example.cyclistance.feature_mapping.domain.exceptions.MappingExceptions
 import com.example.cyclistance.feature_mapping.domain.model.ConfirmationDetails
-import com.example.cyclistance.feature_mapping.domain.model.api.user.ConfirmationDetailModel
-import com.example.cyclistance.feature_mapping.domain.model.api.user.UserAssistanceModel
-import com.example.cyclistance.feature_mapping.domain.model.api.user.UserItem
-import com.example.cyclistance.feature_mapping.domain.model.location.LiveLocationWSModel
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.live_location.LiveLocationSocketModel
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.user.ConfirmationDetailModel
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.user.UserAssistanceModel
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.user.UserItem
 import com.example.cyclistance.feature_mapping.domain.use_case.MappingUseCase
 import com.example.cyclistance.feature_mapping.presentation.mapping_confirm_details.event.ConfirmDetailsEvent
 import com.example.cyclistance.feature_mapping.presentation.mapping_confirm_details.event.ConfirmDetailsVmEvent
@@ -139,8 +139,8 @@
         val longitude = _longitude.toDouble()
 
         runCatching {
-            mappingUseCase.broadcastToNearbyCyclists(
-                locationModel = LiveLocationWSModel(
+            mappingUseCase.nearbyCyclistsUseCase(
+                locationModel = LiveLocationSocketModel(
                     latitude = latitude,
                     longitude = longitude
                 ))
Index: app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/user/GetUsersUseCase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_mapping.domain.use_case.user\n\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.NearbyCyclist\nimport com.example.cyclistance.feature_mapping.domain.repository.MappingRepository\nimport kotlinx.coroutines.flow.Flow\n\nclass GetUsersUseCase(private val repository: MappingRepository) {\n    suspend operator fun invoke(latitude: Double, longitude: Double): Flow<NearbyCyclist> =\n        repository.getUsers(latitude = latitude, longitude = longitude)\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/user/GetUsersUseCase.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/user/GetUsersUseCase.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/user/GetUsersUseCase.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/user/GetUsersUseCase.kt	(date 1692288837319)
@@ -1,6 +1,6 @@
 package com.example.cyclistance.feature_mapping.domain.use_case.user
 
-import com.example.cyclistance.feature_mapping.domain.model.api.user.NearbyCyclist
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.user.NearbyCyclist
 import com.example.cyclistance.feature_mapping.domain.repository.MappingRepository
 import kotlinx.coroutines.flow.Flow
 
Index: app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/user/LocationModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/user/LocationModel.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/user/LocationModel.kt
rename from app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/user/LocationModel.kt
rename to app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/user/LocationModel.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/user/LocationModel.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/user/LocationModel.kt	(date 1692288837423)
@@ -1,4 +1,4 @@
-package com.example.cyclistance.feature_mapping.domain.model.api.user
+package com.example.cyclistance.feature_mapping.domain.model.remote_models.user
 
 import android.os.Parcelable
 import kotlinx.parcelize.Parcelize
Index: app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/components/MappingMapsScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.components\n\nimport android.annotation.SuppressLint\nimport android.graphics.Color\nimport android.os.Bundle\nimport androidx.compose.foundation.layout.Column\nimport androidx.compose.foundation.layout.fillMaxHeight\nimport androidx.compose.foundation.layout.fillMaxWidth\nimport androidx.compose.runtime.*\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.platform.LocalContext\nimport androidx.compose.ui.platform.LocalLifecycleOwner\nimport androidx.compose.ui.viewinterop.AndroidView\nimport androidx.core.content.ContextCompat\nimport androidx.core.graphics.drawable.toBitmap\nimport androidx.lifecycle.*\nimport com.example.cyclistance.R\nimport com.example.cyclistance.core.utils.constants.MappingConstants.ICON_LAYER_ID\nimport com.example.cyclistance.core.utils.constants.MappingConstants.ICON_SOURCE_ID\nimport com.example.cyclistance.core.utils.constants.MappingConstants.ROUTE_LAYER_ID\nimport com.example.cyclistance.core.utils.constants.MappingConstants.ROUTE_SOURCE_ID\nimport com.example.cyclistance.core.utils.constants.MappingConstants.TRANSACTION_ICON_ID\nimport com.example.cyclistance.core.utils.validation.FormatterUtils.getMapIconImageDescription\nimport com.example.cyclistance.feature_mapping.domain.model.Role\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RouteDirection\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.LocationModel\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.UserItem\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.event.MappingUiEvent\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.state.MappingState\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.state.MappingUiState\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.utils.*\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.utils.MappingUtils.setDefaultSettings\nimport com.example.cyclistance.navigation.IsDarkTheme\nimport com.mapbox.geojson.Feature\nimport com.mapbox.geojson.FeatureCollection\nimport com.mapbox.geojson.Point\nimport com.mapbox.mapboxsdk.annotations.IconFactory\nimport com.mapbox.mapboxsdk.annotations.MarkerOptions\nimport com.mapbox.mapboxsdk.geometry.LatLng\nimport com.mapbox.mapboxsdk.maps.MapView\nimport com.mapbox.mapboxsdk.maps.MapboxMap\nimport com.mapbox.mapboxsdk.maps.Style\nimport com.mapbox.mapboxsdk.style.expressions.Expression.*\nimport com.mapbox.mapboxsdk.style.layers.LineLayer\nimport com.mapbox.mapboxsdk.style.layers.Property\nimport com.mapbox.mapboxsdk.style.layers.PropertyFactory.*\nimport com.mapbox.mapboxsdk.style.layers.SymbolLayer\nimport com.mapbox.mapboxsdk.style.sources.GeoJsonSource\nimport kotlinx.coroutines.CoroutineScope\nimport kotlinx.coroutines.Dispatchers\nimport kotlinx.coroutines.launch\nimport timber.log.Timber\n\n\n@SuppressLint(\"MissingPermission\")\n@Suppress(\"Deprecation\")\n@Composable\nfun MappingMapsScreen(\n    modifier: Modifier,\n    state: MappingState,\n    uiState: MappingUiState,\n    mapboxMap: MapboxMap?,\n    hasTransaction: Boolean,\n    isNavigating: Boolean,\n    routeDirection: RouteDirection?,\n    isRescueCancelled: Boolean,\n    nearbyCyclist: List<UserItem>,\n    event: (MappingUiEvent) -> Unit\n//    requestNavigationCameraToOverview: () -> Unit, //todo use this one\n) {\n\n\n    val context = LocalContext.current\n\n\n\n    val dismissNearbyCyclistsIcon = remember(mapboxMap) {\n        {\n            mapboxMap?.removeAnnotations()\n        }\n    }\n\n    val showNearbyCyclistsIcon = remember(nearbyCyclist.size, mapboxMap) {\n        {\n            Timber.v(\"Nearby Cyclist Size: ${nearbyCyclist.size}\")\n            dismissNearbyCyclistsIcon()\n\n            nearbyCyclist.distinctBy {\n                it.id\n            }.filter{\n                it.id != state.user.id\n            }.filter {\n                it.isUserNeedHelp() == true\n            }.forEach { cyclist ->\n                Timber.v(\"Cyclist Name: ${cyclist.name}\")\n                val location = cyclist.location\n                val latitude = location?.latitude ?: return@forEach\n                val longitude = location.longitude ?: return@forEach\n                val description = cyclist.getDescription()\n                val iconImage = description?.getMapIconImageDescription(context)\n                    ?.toBitmap(width = 120, height = 120)\n                iconImage?.let { bitmap ->\n                    mapboxMap ?: return@let\n                    val icon = IconFactory.getInstance(context).fromBitmap(bitmap)\n                    MarkerOptions().apply {\n                        setIcon(icon)\n                        position(LatLng(latitude, longitude))\n                        title = cyclist.id\n                    }.also(mapboxMap::addMarker)\n                }\n            }\n        }\n    }\n\n\n    val hasActiveTransaction = remember(hasTransaction, isRescueCancelled) {\n        hasTransaction || isRescueCancelled\n    }\n\n    val isUserNavigating = remember(key1 = isNavigating, key2 = routeDirection?.geometry) {\n        val geometry = routeDirection?.geometry\n        isNavigating || geometry?.isNotEmpty() == true\n    }\n\n    val shouldDismissNearbyIcons = remember(nearbyCyclist, isUserNavigating, hasActiveTransaction) {\n        isUserNavigating || hasActiveTransaction\n    }\n    LaunchedEffect(key1 = shouldDismissNearbyIcons, key2 = mapboxMap, key3= nearbyCyclist.size) {\n\n        if (shouldDismissNearbyIcons) {\n            dismissNearbyCyclistsIcon()\n            return@LaunchedEffect\n        }\n\n        showNearbyCyclistsIcon()\n    }\n\n\n    LaunchedEffect(key1 = mapboxMap, uiState.isFabExpanded) {\n\n        mapboxMap?.setOnMarkerClickListener {\n            event(MappingUiEvent.RescueeMapIconSelected(it.title))\n            true\n        }\n\n        mapboxMap?.addOnMapClickListener {\n            event(MappingUiEvent.OnMapClick)\n            true\n        }\n\n        mapboxMap?.addOnCameraMoveListener {\n            if (uiState.isFabExpanded) {\n                event(MappingUiEvent.OnCollapseExpandableFAB)\n            }\n        }\n\n        mapboxMap?.addOnMapLongClickListener {\n            event(MappingUiEvent.OnMapLongClick)\n            true\n        }\n\n    }\n\n\n    val clientLocation =\n        remember(state.transactionLocation, state.rescuer?.location, state.rescuee?.location) {\n            with(state) {\n                transactionLocation ?: rescuer?.location ?: rescuee?.location\n            }\n        }\n\n    val hasTransactionLocationChanges = remember(clientLocation) {\n        clientLocation != null\n    }\n\n    val dismissTransactionLocationIcon = remember(mapboxMap) {\n        {\n            mapboxMap?.getStyle { style ->\n                if (style.isFullyLoaded) {\n                    style.removeImage(TRANSACTION_ICON_ID)\n                    val geoJsonSource = style.getSourceAs<GeoJsonSource>(ICON_SOURCE_ID)\n                    geoJsonSource?.setGeoJson(FeatureCollection.fromFeatures(arrayOf()))\n                }\n            }\n        }\n    }\n\n    val showTransactionLocationIcon = remember(mapboxMap, state.user) {\n        { location: LocationModel ->\n            dismissTransactionLocationIcon()\n            val role = state.user.transaction?.role\n            val mapIcon = if (role == Role.RESCUEE.name.lowercase()) {\n                R.drawable.ic_map_rescuer\n            } else {\n                R.drawable.ic_map_rescuee\n            }\n            mapboxMap?.getStyle { style ->\n                if (style.isFullyLoaded) {\n                    val longitude = location.longitude ?: return@getStyle\n                    val latitude = location.latitude ?: return@getStyle\n                    style.removeImage(TRANSACTION_ICON_ID)\n                    ContextCompat.getDrawable(context, mapIcon)?.toBitmap(width = 100, height = 100)\n                        ?.let { iconBitmap ->\n                            style.addImage(TRANSACTION_ICON_ID, iconBitmap)\n                            val geoJsonSource = style.getSourceAs<GeoJsonSource>(ICON_SOURCE_ID)\n                            val feature =\n                                Feature.fromGeometry(Point.fromLngLat(longitude, latitude))\n                            geoJsonSource?.setGeoJson(feature)\n                        }\n                }\n            }\n        }\n    }\n\n    LaunchedEffect(\n        key1 = hasActiveTransaction,\n        key2 = hasTransactionLocationChanges,\n        key3 = clientLocation) {\n\n        if (hasTransactionLocationChanges.not() || hasActiveTransaction.not()) {\n            dismissTransactionLocationIcon()\n            return@LaunchedEffect\n        }\n\n        clientLocation?.latitude ?: return@LaunchedEffect\n        showTransactionLocationIcon(clientLocation)\n    }\n\n    Map(\n        modifier = modifier,\n        event = event)\n\n}\n\n\n@Composable\nprivate fun Map(\n    modifier: Modifier,\n    event: (MappingUiEvent) -> Unit) {\n\n\n    val isDarkTheme = IsDarkTheme.current\n    val mapView = rememberMapViewWithLifecycle()\n    var isInitialized by remember {\n        mutableStateOf(false)\n    }\n\n\n    Column(\n        modifier = modifier\n            .fillMaxHeight()\n            .fillMaxWidth()\n\n    ) {\n\n\n        AndroidView(factory = {mapView}){\n            if(isInitialized){\n                return@AndroidView\n            }\n            CoroutineScope(Dispatchers.Main).launch {\n                Timber.v(\"Successfully recomposed in Map\")\n\n\n\n                val initSource = { loadedMapStyle: Style ->\n                    loadedMapStyle.addSource(GeoJsonSource(ICON_SOURCE_ID))\n                    loadedMapStyle.addSource(GeoJsonSource(ROUTE_SOURCE_ID))\n                }\n\n                val initLayers = { loadedMapStyle: Style ->\n\n\n                    val drawableIcon =\n                        ContextCompat.getDrawable(it.context, R.drawable.ic_map_rescuer)\n                    val bitmapIcon = drawableIcon?.toBitmap(width = 100, height = 100)\n                    bitmapIcon?.let { loadedMapStyle.addImage(TRANSACTION_ICON_ID, it) }\n\n                    loadedMapStyle.addLayer(\n                        SymbolLayer(ICON_LAYER_ID, ICON_SOURCE_ID).apply {\n                            setProperties(\n                                iconImage(TRANSACTION_ICON_ID),\n                                iconAllowOverlap(true),\n                                iconIgnorePlacement(true)\n                            )\n                        }\n                    )\n\n\n                    loadedMapStyle.addLayerBelow(\n                        LineLayer(ROUTE_LAYER_ID, ROUTE_SOURCE_ID).apply {\n                            setProperties(\n                                lineCap(Property.LINE_CAP_ROUND),\n                                lineJoin(Property.LINE_JOIN_ROUND),\n                                lineWidth(5f),\n                                lineColor(Color.parseColor(\"#006eff\"))\n                            )\n                        }, ICON_LAYER_ID)\n\n\n                }\n                mapView.getMapAsync{\n                    it.setStyle(if (isDarkTheme) Style.DARK else Style.LIGHT) { loadedStyle ->\n\n                        if (loadedStyle.isFullyLoaded) {\n                            event(MappingUiEvent.OnInitializeMap(it))\n                            initSource(loadedStyle)\n                            initLayers(loadedStyle)\n                        }\n                    }\n                    it.setDefaultSettings()\n                }\n                isInitialized = true\n\n            }\n        }\n\n    }\n}\n\n@Composable\nfun rememberMapViewWithLifecycle(): MapView {\n    val context = LocalContext.current\n    val mapView = remember {\n        MapView(context).apply {\n            id = R.id.mapView\n        }\n    }\n\n    // Makes MapView follow the lifecycle of this composable\n    val lifecycleObserver = rememberMapLifecycleObserver(mapView)\n    val lifecycle = LocalLifecycleOwner.current.lifecycle\n    DisposableEffect(lifecycle) {\n        lifecycle.addObserver(lifecycleObserver)\n        onDispose {\n            lifecycle.removeObserver(lifecycleObserver)\n        }\n    }\n\n    return mapView\n}\n\n@Composable\nfun rememberMapLifecycleObserver(mapView: MapView): LifecycleEventObserver =\n    remember(mapView) {\n        LifecycleEventObserver { _, event ->\n            when (event) {\n                Lifecycle.Event.ON_CREATE -> mapView.onCreate(Bundle())\n                Lifecycle.Event.ON_START -> mapView.onStart()\n                Lifecycle.Event.ON_RESUME -> mapView.onResume()\n                Lifecycle.Event.ON_PAUSE -> mapView.onPause()\n                Lifecycle.Event.ON_STOP -> mapView.onStop()\n                Lifecycle.Event.ON_DESTROY -> mapView.onDestroy()\n                else -> throw IllegalStateException()\n            }\n        }\n    }
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/components/MappingMapsScreen.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/components/MappingMapsScreen.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/components/MappingMapsScreen.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/components/MappingMapsScreen.kt	(date 1692288837353)
@@ -22,9 +22,9 @@
 import com.example.cyclistance.core.utils.constants.MappingConstants.TRANSACTION_ICON_ID
 import com.example.cyclistance.core.utils.validation.FormatterUtils.getMapIconImageDescription
 import com.example.cyclistance.feature_mapping.domain.model.Role
-import com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RouteDirection
-import com.example.cyclistance.feature_mapping.domain.model.api.user.LocationModel
-import com.example.cyclistance.feature_mapping.domain.model.api.user.UserItem
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.rescue_transaction.RouteDirection
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.user.LocationModel
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.user.UserItem
 import com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.event.MappingUiEvent
 import com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.state.MappingState
 import com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.state.MappingUiState
Index: app/src/main/java/com/example/cyclistance/core/utils/validation/FormatterUtils.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.core.utils.validation\n\nimport android.content.Context\nimport android.graphics.drawable.Drawable\nimport androidx.appcompat.content.res.AppCompatResources\nimport com.example.cyclistance.R\nimport com.example.cyclistance.core.utils.constants.MappingConstants\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.LocationModel\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.UserItem\nimport java.text.SimpleDateFormat\nimport java.util.Date\nimport java.util.Locale\n\nobject FormatterUtils {\n    private const val METER_TO_KILOMETER = 1000\n\n    fun Double.formatToDistanceKm(): String {\n\n        return if (this <= 0.0) {\n            \"0 m\"\n        } else if (this < 1000) {\n            \"%.2f m\".format(this)\n        } else {\n            \"%.2f km\".format((this / METER_TO_KILOMETER))\n        }\n    }\n\n    fun List<UserItem>.findUser(id: String): UserItem {\n        return find { it.id == id } ?: UserItem()\n    }\n\n\n    // TODO: test this code\n    fun LocationModel?.isLocationAvailable() = (this?.latitude != null).and(this?.longitude != null)\n\n    fun getCalculatedETA(\n        distanceMeters: Double,\n        averageSpeedKm: Double = MappingConstants.DEFAULT_BIKE_AVERAGE_SPEED_KM): String {\n        val distanceToKm = distanceMeters / 1000\n        if (distanceToKm <= 0.0) {\n            return \"0 min\"\n        }\n        val eta = distanceToKm / averageSpeedKm\n        val hours = eta.toInt()\n        val minutes = (eta - hours) * 60\n        val minutesInt = minutes.toInt()\n        val minsFormat = if (minutesInt <= 1) \"$minutesInt min\" else \"$minutesInt mins\"\n        val hourFormat = if (hours >= 1) \"$hours hrs \" else \"\"\n        return \"$hourFormat$minsFormat\"\n    }\n\n    // TODO: test this code\n    fun String.getMapIconImageDescription(context: Context): Drawable? {\n        this.getMapIconImage().let { image ->\n            return AppCompatResources.getDrawable(context, image)\n        }\n        return null\n    }\n\n    fun String.bikeDescriptionToIcon(): Int {\n        return when (this) {\n            MappingConstants.INJURY_TEXT -> {\n                R.drawable.ic_injury\n            }\n\n            MappingConstants.BROKEN_FRAME_TEXT -> {\n                R.drawable.ic_broken_frame\n            }\n\n            MappingConstants.INCIDENT_TEXT -> {\n                R.drawable.ic_injury\n            }\n\n            MappingConstants.BROKEN_CHAIN_TEXT -> {\n                R.drawable.ic_broken_chain\n            }\n\n            MappingConstants.FLAT_TIRES_TEXT -> {\n                R.drawable.ic_flat_tire\n            }\n\n            MappingConstants.FAULTY_BRAKES_TEXT -> {\n                R.drawable.ic_faulty_brakes\n            }\n\n            else -> throw RuntimeException(\"No icon found for $this\")\n        }\n    }\n\n    fun String.getMapIconImage(): Int {\n        return when (this) {\n            MappingConstants.INJURY_TEXT -> {\n                R.drawable.ic_injury_em\n            }\n\n            MappingConstants.BROKEN_FRAME_TEXT -> {\n                R.drawable.ic_broken_frame_em\n            }\n\n            MappingConstants.INCIDENT_TEXT -> {\n                R.drawable.ic_incident_em\n            }\n\n            MappingConstants.BROKEN_CHAIN_TEXT -> {\n                R.drawable.ic_broken_chain_em\n            }\n\n            MappingConstants.FLAT_TIRES_TEXT -> {\n                R.drawable.ic_flat_tire_em\n            }\n\n            MappingConstants.FAULTY_BRAKES_TEXT -> {\n                R.drawable.ic_faulty_brakes_em\n            }\n\n            else -> throw RuntimeException(\"No icon found for $this\")\n        }\n    }\n\n\n    fun Date.toReadableDateTime(pattern: String = \"dd/MM/yyyy HH:mm\"): String {\n        return SimpleDateFormat(pattern, Locale.getDefault()).format(this)\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/core/utils/validation/FormatterUtils.kt b/app/src/main/java/com/example/cyclistance/core/utils/validation/FormatterUtils.kt
--- a/app/src/main/java/com/example/cyclistance/core/utils/validation/FormatterUtils.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/core/utils/validation/FormatterUtils.kt	(date 1692288837393)
@@ -5,8 +5,8 @@
 import androidx.appcompat.content.res.AppCompatResources
 import com.example.cyclistance.R
 import com.example.cyclistance.core.utils.constants.MappingConstants
-import com.example.cyclistance.feature_mapping.domain.model.api.user.LocationModel
-import com.example.cyclistance.feature_mapping.domain.model.api.user.UserItem
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.user.LocationModel
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.user.UserItem
 import java.text.SimpleDateFormat
 import java.util.Date
 import java.util.Locale
Index: app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/components/MappingScreenContent.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.components\n\nimport androidx.compose.animation.AnimatedVisibility\nimport androidx.compose.animation.core.tween\nimport androidx.compose.animation.expandVertically\nimport androidx.compose.animation.fadeIn\nimport androidx.compose.animation.fadeOut\nimport androidx.compose.animation.shrinkVertically\nimport androidx.compose.foundation.layout.Box\nimport androidx.compose.foundation.layout.fillMaxSize\nimport androidx.compose.foundation.layout.fillMaxWidth\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.material.BottomSheetScaffoldState\nimport androidx.compose.material.CircularProgressIndicator\nimport androidx.compose.material.ExperimentalMaterialApi\nimport androidx.compose.material.MaterialTheme\nimport androidx.compose.material.Surface\nimport androidx.compose.runtime.Composable\nimport androidx.compose.runtime.derivedStateOf\nimport androidx.compose.runtime.getValue\nimport androidx.compose.runtime.remember\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.platform.LocalConfiguration\nimport androidx.compose.ui.unit.dp\nimport androidx.constraintlayout.compose.ConstraintLayout\nimport androidx.constraintlayout.compose.Dimension\nimport com.example.cyclistance.core.presentation.dialogs.no_internet_dialog.NoInternetDialog\nimport com.example.cyclistance.core.presentation.dialogs.permissions_dialog.DialogForegroundLocationPermission\nimport com.example.cyclistance.core.presentation.dialogs.permissions_dialog.DialogPhonePermission\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.components.emergency_call.EmergencyCallDialog\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.state.EmergencyCallState\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.UserItem\nimport com.example.cyclistance.feature_mapping.domain.model.ui.rescue.CancelledRescueModel\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.components.banner.MappingExpandableBanner\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.components.bottomSheet.MappingBottomSheet\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.components.buttons.RequestHelpButton\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.components.buttons.RespondToHelpButton\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.components.fabs.ExpandableFABSection\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.components.fabs.FloatingButtonSection\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.components.request.MappingRequestAccepted\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.components.request.MappingRequestCancelled\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.components.rescue_request.RescueRequestDialog\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.components.rescue_results.RescueResultsDialog\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.components.sino_track.SinoTrackWebView\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.event.MappingUiEvent\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.state.MappingState\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.state.MappingUiState\nimport com.google.accompanist.permissions.ExperimentalPermissionsApi\nimport com.google.accompanist.permissions.MultiplePermissionsState\nimport com.google.accompanist.permissions.rememberMultiplePermissionsState\nimport com.mapbox.mapboxsdk.maps.MapboxMap\n\n\n@OptIn(ExperimentalPermissionsApi::class, ExperimentalMaterialApi::class)\n@Composable\nfun MappingScreenContent(\n    modifier: Modifier,\n    bottomSheetScaffoldState: BottomSheetScaffoldState,\n    state: MappingState,\n    emergencyState: EmergencyCallState,\n    mapboxMap: MapboxMap?,\n    hasTransaction: Boolean = false,\n    isRescueCancelled: Boolean = false,\n    isNavigating: Boolean,\n    uiState: MappingUiState,\n    nearbyCyclist: List<UserItem>,\n    locationPermissionState: MultiplePermissionsState = rememberMultiplePermissionsState(permissions = emptyList()),\n    event: (MappingUiEvent) -> Unit = {},\n) {\n\n    val respondentCount by remember(state.newRescueRequest?.request?.size) {\n        derivedStateOf { (state.newRescueRequest?.request)?.size ?: 0 }\n    }\n\n\n    val configuration = LocalConfiguration.current\n\n    Surface(\n        modifier = modifier\n            .fillMaxSize(),\n        color = MaterialTheme.colors.background) {\n\n\n        Box {\n\n            if (uiState.isRescueRequestDialogVisible) {\n                RescueRequestDialog(\n                    modifier = Modifier\n                        .fillMaxSize(),\n                    mappingState = state,\n                    uiState = uiState,\n                    event = event\n                )\n            }\n\n\n            if(uiState.isRescueResultsDialogVisible){\n\n                RescueResultsDialog(\n                    modifier = Modifier.fillMaxSize(),\n                    mappingState = state,\n                    uiState = uiState,\n                    event = event\n                )\n\n            }\n\n\n            MappingBottomSheet(\n                state = state,\n                onClickRescueArrivedButton = { event(MappingUiEvent.RescueArrivedConfirmed) },\n                onClickReachedDestinationButton = { event(MappingUiEvent.DestinationReachedConfirmed) },\n                onClickCancelSearchButton = { event(MappingUiEvent.CancelSearchConfirmed) },\n                onClickCallRescueTransactionButton = { event(MappingUiEvent.CallRescueTransaction) },\n                onClickChatRescueTransactionButton = { event(MappingUiEvent.ChatRescueTransaction) },\n                onClickCancelRescueTransactionButton = { event(MappingUiEvent.CancelRescueTransaction) },\n                bottomSheetScaffoldState = bottomSheetScaffoldState,\n                bottomSheetType = uiState.bottomSheetType,\n                modifier = Modifier\n                    .fillMaxWidth()\n                    .padding(horizontal = 12.dp),\n                onClickReportIncident = { event(MappingUiEvent.OnReportIncident(it)) }) {\n\n\n                ConstraintLayout(modifier = Modifier.fillMaxSize()) {\n\n                    val (mapScreen, requestHelpButton, circularProgressbar, dialog, respondToHelpButton, fabSection, expandableFabSection) = createRefs()\n\n\n                    MappingMapsScreen(\n                        state = state,\n                        modifier = Modifier.constrainAs(mapScreen) {\n                            top.linkTo(parent.top)\n                            end.linkTo(parent.end)\n                            start.linkTo(parent.start)\n                            bottom.linkTo(parent.bottom)\n                        },\n                        hasTransaction = hasTransaction,\n                        isRescueCancelled = isRescueCancelled,\n                        mapboxMap = mapboxMap,\n                        routeDirection = uiState.routeDirection,\n                        isNavigating = isNavigating,\n                        event = event,\n                        uiState = uiState,\n                        nearbyCyclist = nearbyCyclist,\n                    )\n\n\n\n\n                    AnimatedVisibility(\n                        visible = uiState.mapSelectedRescuee != null,\n                        enter = expandVertically(expandFrom = Alignment.Top) { 20 },\n                        exit = shrinkVertically(animationSpec = tween()) { fullHeight ->\n                            fullHeight / 2\n                        },\n                    ) {\n                        if (uiState.mapSelectedRescuee != null) {\n                            MappingExpandableBanner(\n                                modifier = Modifier\n                                    .padding(all = 6.dp)\n                                    .fillMaxWidth(), banner = uiState.mapSelectedRescuee,\n                                onClickDismissButton = { event(MappingUiEvent.DismissBanner) })\n                        }\n                    }\n\n                    FloatingButtonSection(\n                        modifier = Modifier\n                            .constrainAs(fabSection) {\n                                end.linkTo(parent.end, margin = 8.dp)\n                                bottom.linkTo(\n                                    parent.bottom,\n                                    margin = (configuration.screenHeightDp / 2.5).dp)\n                            },\n                        locationPermissionGranted = locationPermissionState.allPermissionsGranted,\n                        onClickLocateUserButton = { event(MappingUiEvent.LocateUser) },\n                        onClickRouteOverviewButton = { event(MappingUiEvent.RouteOverview) },\n                        onClickRecenterButton = { event(MappingUiEvent.RecenterRoute) },\n                        onClickOpenNavigationButton = { event(MappingUiEvent.OpenNavigation) },\n                        isNavigating = isNavigating,\n                        uiState = uiState\n                    )\n\n\n\n\n                    AnimatedVisibility(\n                        visible = bottomSheetScaffoldState.bottomSheetState.isCollapsed,\n                        enter = fadeIn(),\n                        exit = fadeOut(), modifier = Modifier.constrainAs(expandableFabSection) {\n                            end.linkTo(parent.end, margin = 8.dp)\n                            bottom.linkTo(parent.bottom, margin = 15.dp)\n                        }) {\n\n                        ExpandableFABSection(\n                            onClickEmergencyCall = { event(MappingUiEvent.ShowEmergencyCallDialog) },\n                            onClickFamilyTracker = { event(MappingUiEvent.OpenFamilyTracker) },\n                            onClickRescueRequest = { event(MappingUiEvent.ShowRescueRequestDialog) },\n                            onClickFab = { event(MappingUiEvent.OnToggleExpandableFAB) },\n                            onClickBikeTracker = { event(MappingUiEvent.ShowSinoTrackWebView) },\n                            isFabExpanded = uiState.isFabExpanded,\n                            badgeCount = respondentCount\n                        )\n                    }\n\n\n                    val buttonVisible =\n                        isNavigating.not() && uiState.isFabExpanded.not() && bottomSheetScaffoldState.bottomSheetState.isCollapsed\n                    val requestHelpVisible = uiState.requestHelpButtonVisible && buttonVisible\n                    val respondToHelpVisible =\n                        uiState.requestHelpButtonVisible.not() && buttonVisible\n\n                    RequestHelpButton(\n                        modifier = Modifier.constrainAs(requestHelpButton) {\n                            bottom.linkTo(parent.bottom, margin = 15.dp)\n                            end.linkTo(parent.end)\n                            start.linkTo(parent.start)\n                        }, onClickRequestHelpButton = { event(MappingUiEvent.RequestHelp) },\n                        state = state,\n                        visible = requestHelpVisible\n\n                    )\n\n                    RespondToHelpButton(\n                        modifier = Modifier.constrainAs(respondToHelpButton) {\n                            bottom.linkTo(parent.bottom, margin = 15.dp)\n                            end.linkTo(parent.end)\n                            start.linkTo(parent.start)\n                        },\n                        onClickRespondButton = { event(MappingUiEvent.RespondToHelp) },\n                        state = state,\n                        visible = respondToHelpVisible\n                    )\n\n                    if (state.isLoading) {\n                        CircularProgressIndicator(\n                            modifier = Modifier.constrainAs(\n                                circularProgressbar) {\n                                top.linkTo(parent.top)\n                                end.linkTo(parent.end)\n                                start.linkTo(parent.start)\n                                bottom.linkTo(parent.bottom)\n                                this.centerTo(parent)\n                            })\n                    }\n\n\n                    if (uiState.isEmergencyCallDialogVisible) {\n                        EmergencyCallDialog(\n                            modifier = Modifier.constrainAs(dialog) {\n                                end.linkTo(parent.end)\n                                start.linkTo(parent.start)\n                                bottom.linkTo(parent.bottom)\n                                width = Dimension.matchParent\n                                height = Dimension.wrapContent\n                            },\n                            onDismiss = { event(MappingUiEvent.DismissEmergencyCallDialog) },\n                            emergencyCallModel = emergencyState.emergencyCallModel,\n                            onClick = {\n                                event(\n                                    MappingUiEvent.OnEmergencyCall(\n                                        it.phoneNumber\n                                    )\n                                )\n                            }, onAddContact = {\n                                event(MappingUiEvent.OnAddEmergencyContact)\n                                event(MappingUiEvent.DismissEmergencyCallDialog)\n                            }\n\n                        )\n                    }\n\n                    if (uiState.isNoInternetVisible) {\n                        NoInternetDialog(\n                            onDismiss = { event(MappingUiEvent.DismissNoInternetDialog) },\n                            modifier = Modifier.constrainAs(dialog) {\n                                end.linkTo(parent.end)\n                                start.linkTo(parent.start)\n                                bottom.linkTo(parent.bottom)\n                                width = Dimension.matchParent\n                                height = Dimension.wrapContent\n                            })\n                    }\n\n                    if (uiState.locationPermissionDialogVisible) {\n                        DialogForegroundLocationPermission(\n                            modifier = Modifier.constrainAs(\n                                dialog) {\n                                end.linkTo(parent.end)\n                                start.linkTo(parent.start)\n                                bottom.linkTo(parent.bottom)\n                                height = Dimension.wrapContent\n                                centerTo(parent)\n                            }, onDismiss = { event(MappingUiEvent.DismissLocationPermission) }\n                        )\n                    }\n\n                    if (uiState.phonePermissionDialogVisible) {\n                        DialogPhonePermission(modifier = Modifier.constrainAs(dialog) {\n                            end.linkTo(parent.end)\n                            start.linkTo(parent.start)\n                            bottom.linkTo(parent.bottom)\n                            height = Dimension.wrapContent\n                            centerTo(parent)\n                        }, onDismiss = { event(MappingUiEvent.DismissPhonePermission) })\n                    }\n\n                    AnimatedVisibility(\n                        visible = isRescueCancelled && uiState.rescueRequestAccepted.not(),\n                        enter = fadeIn(),\n                        exit = fadeOut(animationSpec = tween(durationMillis = 220))) {\n\n                        val rescueTransaction = state.rescueTransaction ?: return@AnimatedVisibility\n\n                        MappingRequestCancelled(\n                            modifier = Modifier.fillMaxSize(),\n                            onClickOkButton = { event(MappingUiEvent.CancelledRescueConfirmed) },\n                            cancelledRescueModel = CancelledRescueModel(\n                                transactionID = rescueTransaction.id,\n                                rescueCancelledBy = rescueTransaction.getCancellationName(),\n                                reason = rescueTransaction.getCancellationReason(),\n                                message = rescueTransaction.getCancellationMessage()\n                            ))\n                    }\n\n                    AnimatedVisibility(\n                        visible = uiState.rescueRequestAccepted && isRescueCancelled.not(),\n                        enter = fadeIn(),\n                        exit = fadeOut(animationSpec = tween(durationMillis = 220))) {\n                        MappingRequestAccepted(\n                            modifier = Modifier.fillMaxSize(),\n                            onClickOkButton = { event(MappingUiEvent.RescueRequestAccepted) },\n                            acceptedName = state.rescuee?.name ?: \"Name placeholder\",\n                        )\n                    }\n                }\n            }\n\n\n            if (uiState.isSinoTrackWebViewVisible) {\n                SinoTrackWebView(onDismiss = { event(MappingUiEvent.DismissSinoTrackWebView) })\n            }\n\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/components/MappingScreenContent.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/components/MappingScreenContent.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/components/MappingScreenContent.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/components/MappingScreenContent.kt	(date 1692288837183)
@@ -30,7 +30,7 @@
 import com.example.cyclistance.core.presentation.dialogs.permissions_dialog.DialogPhonePermission
 import com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.components.emergency_call.EmergencyCallDialog
 import com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.state.EmergencyCallState
-import com.example.cyclistance.feature_mapping.domain.model.api.user.UserItem
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.user.UserItem
 import com.example.cyclistance.feature_mapping.domain.model.ui.rescue.CancelledRescueModel
 import com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.components.banner.MappingExpandableBanner
 import com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.components.bottomSheet.MappingBottomSheet
Index: app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/components/rescue_request/components/RequestItem.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.components.rescue_request.components\n\nimport androidx.compose.foundation.layout.Arrangement\nimport androidx.compose.foundation.layout.Box\nimport androidx.compose.foundation.layout.Column\nimport androidx.compose.foundation.layout.Row\nimport androidx.compose.foundation.layout.Spacer\nimport androidx.compose.foundation.layout.fillMaxSize\nimport androidx.compose.foundation.layout.fillMaxWidth\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.foundation.layout.size\nimport androidx.compose.foundation.layout.wrapContentHeight\nimport androidx.compose.foundation.shape.CircleShape\nimport androidx.compose.foundation.shape.RoundedCornerShape\nimport androidx.compose.material.Card\nimport androidx.compose.material.Divider\nimport androidx.compose.material.Icon\nimport androidx.compose.material.MaterialTheme\nimport androidx.compose.material.Surface\nimport androidx.compose.material.Text\nimport androidx.compose.runtime.Composable\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.draw.clip\nimport androidx.compose.ui.graphics.Color\nimport androidx.compose.ui.layout.ContentScale\nimport androidx.compose.ui.platform.LocalContext\nimport androidx.compose.ui.res.painterResource\nimport androidx.compose.ui.text.SpanStyle\nimport androidx.compose.ui.text.buildAnnotatedString\nimport androidx.compose.ui.text.font.FontWeight\nimport androidx.compose.ui.text.style.TextAlign\nimport androidx.compose.ui.text.withStyle\nimport androidx.compose.ui.tooling.preview.Preview\nimport androidx.compose.ui.unit.dp\nimport androidx.compose.ui.unit.sp\nimport coil.compose.AsyncImage\nimport coil.request.CachePolicy\nimport coil.request.ImageRequest\nimport com.example.cyclistance.R\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue.RescueRequestItemModel\nimport com.example.cyclistance.feature_mapping.presentation.common.ButtonNavigation\nimport com.example.cyclistance.theme.Black450\nimport com.example.cyclistance.theme.CyclistanceTheme\n\n\n@Composable\nfun RequestItem(\n    modifier: Modifier,\n    cardState: RescueRequestItemModel,\n    onClickCancelButton: () -> Unit = {},\n    onClickConfirmButton: () -> Unit = {}) {\n\n    Card(\n        modifier = modifier,\n        elevation = 7.dp,\n        shape = RoundedCornerShape(15.dp),\n        backgroundColor = MaterialTheme.colors.surface) {\n        Column(\n            modifier = Modifier.padding(top = 12.dp, bottom = 5.dp)) {\n\n            Row(\n                modifier = Modifier.padding(start = 15.dp),\n                verticalAlignment = Alignment.CenterVertically,\n                horizontalArrangement = Arrangement.spacedBy(15.dp)) {\n\n                AsyncImage(\n                    model = ImageRequest.Builder(LocalContext.current)\n                        .data(cardState.profileImageUrl)\n                        .crossfade(true)\n                        .networkCachePolicy(CachePolicy.ENABLED)\n                        .diskCachePolicy(CachePolicy.ENABLED)\n                        .memoryCachePolicy(CachePolicy.ENABLED)\n                        .build(),\n                    contentDescription = \"User Picture\",\n                    contentScale = ContentScale.Crop,\n                    modifier = Modifier\n                        .size(60.dp)\n                        .clip(CircleShape))\n\n\n\n\n\n                Text(textAlign = TextAlign.Start,\n                    text = buildAnnotatedString {\n\n                        withStyle(\n                            style = SpanStyle(\n                                color = MaterialTheme.colors.onSurface,\n                                fontSize = 16.sp,\n                                fontWeight = FontWeight.SemiBold)) {\n                            append(\"${cardState.name}\\n\")\n                        }\n\n                        withStyle(\n                            style = SpanStyle(\n                                color = Black450,\n                                fontSize = 14.sp,\n                                fontWeight = FontWeight.Medium)) {\n                            append(cardState.distance ?: \"----\")\n                        }\n                    })\n                Spacer(modifier = Modifier.weight(weight = 0.3f))\n\n                Text(textAlign = TextAlign.End,\n                    modifier = Modifier.padding(end = 15.dp),\n                    text = buildAnnotatedString {\n                        withStyle(\n                            style = SpanStyle(\n                                color = MaterialTheme.colors.onSurface,\n                                fontSize = 16.sp,\n                                fontWeight = FontWeight.SemiBold)) {\n                            append(\"ETA\\n\")\n                        }\n\n                        withStyle(\n                            style = SpanStyle(\n                                color = Black450,\n                                fontSize = 14.sp,\n                                fontWeight = FontWeight.Medium)) {\n                            append(cardState.estimatedTimeTravel ?: \"----\")\n                        }\n\n                    })\n\n            }\n\n\n\n            Divider(\n                color = Black450,\n                modifier = Modifier\n                    .fillMaxWidth(fraction = 0.92f)\n                    .padding(top = 12.dp)\n                    .align(alignment = Alignment.CenterHorizontally),\n                thickness = (1.5).dp)\n\n\n            Row(\n                modifier = Modifier.padding(start = 15.dp, top = 12.dp),\n                verticalAlignment = Alignment.CenterVertically,\n                horizontalArrangement = Arrangement.spacedBy(12.dp)) {\n\n                Icon(\n                    painter = painterResource(id = R.drawable.ic_location),\n                    contentDescription = \"Address Icon\",\n                    tint = Color.Unspecified,\n                )\n                Text(text = cardState.address ?: \"----\", color = MaterialTheme.colors.onSurface)\n            }\n\n            ButtonNavigation(\n                modifier = Modifier\n                    .fillMaxWidth(0.9f)\n                    .padding(top = 7.dp)\n                    .align(alignment = Alignment.CenterHorizontally),\n                negativeButtonText = \"Decline\",\n                positiveButtonText = \"Accept\",\n                onClickNegativeButton = onClickCancelButton,\n                onClickPositiveButton = onClickConfirmButton)\n\n        }\n    }\n\n}\n\n@Preview(device = \"id:Galaxy Nexus\")\n@Composable\nfun RequestItemPreviewDark() {\n\n    CyclistanceTheme(true) {\n\n        Surface(modifier = Modifier.fillMaxSize(), color = MaterialTheme.colors.background) {\n            Box(modifier = Modifier.fillMaxSize(), contentAlignment = Alignment.TopCenter) {\n                RequestItem(\n                    modifier = Modifier\n                        .fillMaxWidth(fraction = 0.9f)\n                        .wrapContentHeight(),\n                    cardState = RescueRequestItemModel(\n                        profileImageUrl = \"https://i.imgur.com/7bMqysJ.jpg\",\n                        name = \"John Doe\",\n                        distance = \"1.2 km\",\n                        estimatedTimeTravel = \"5 min\",\n                        address = \"1234, Street Name, City Name, Country Name\"),\n                )\n            }\n        }\n    }\n}\n\n@Preview(device = \"id:Galaxy Nexus\")\n@Composable\nfun RequestItemPreviewLight() {\n    CyclistanceTheme(false) {\n\n        Surface(modifier = Modifier.fillMaxSize(), color = MaterialTheme.colors.background) {\n\n            Box(modifier = Modifier.fillMaxSize(), contentAlignment = Alignment.TopCenter) {\n                RequestItem(\n                    modifier = Modifier\n                        .fillMaxWidth(fraction = 0.9f)\n                        .wrapContentHeight(),\n                    cardState = RescueRequestItemModel(\n                        profileImageUrl = \"https://i.imgur.com/7bMqysJ.jpg\",\n                        name = \"John Doe\",\n                        distance = \"1.2 km\",\n                        estimatedTimeTravel = \"5 min\",\n                        address = \"1234, Street Name, City Name, Country Name\"),\n                )\n            }\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/components/rescue_request/components/RequestItem.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/components/rescue_request/components/RequestItem.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/components/rescue_request/components/RequestItem.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/components/rescue_request/components/RequestItem.kt	(date 1692288837359)
@@ -38,7 +38,7 @@
 import coil.request.CachePolicy
 import coil.request.ImageRequest
 import com.example.cyclistance.R
-import com.example.cyclistance.feature_mapping.domain.model.api.rescue.RescueRequestItemModel
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.rescue.RescueRequestItemModel
 import com.example.cyclistance.feature_mapping.presentation.common.ButtonNavigation
 import com.example.cyclistance.theme.Black450
 import com.example.cyclistance.theme.CyclistanceTheme
Index: app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/components/rescue_request/components/RescueRequestScreenContent.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.components.rescue_request.components\n\nimport androidx.compose.foundation.layout.Box\nimport androidx.compose.foundation.layout.Column\nimport androidx.compose.foundation.layout.PaddingValues\nimport androidx.compose.foundation.layout.Spacer\nimport androidx.compose.foundation.layout.fillMaxSize\nimport androidx.compose.foundation.layout.fillMaxWidth\nimport androidx.compose.foundation.layout.height\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.foundation.layout.wrapContentHeight\nimport androidx.compose.foundation.lazy.LazyColumn\nimport androidx.compose.foundation.lazy.items\nimport androidx.compose.material.CircularProgressIndicator\nimport androidx.compose.material.MaterialTheme\nimport androidx.compose.material.Scaffold\nimport androidx.compose.material.Surface\nimport androidx.compose.material.icons.Icons\nimport androidx.compose.material.icons.filled.Close\nimport androidx.compose.runtime.Composable\nimport androidx.compose.runtime.remember\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.tooling.preview.Preview\nimport androidx.compose.ui.unit.dp\nimport com.example.cyclistance.R\nimport com.example.cyclistance.core.domain.model.AlertDialogState\nimport com.example.cyclistance.core.presentation.dialogs.alert_dialog.AlertDialog\nimport com.example.cyclistance.core.presentation.dialogs.no_internet_dialog.NoInternetDialog\nimport com.example.cyclistance.feature_authentication.presentation.common.visible\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue.RescueRequestItemModel\nimport com.example.cyclistance.feature_mapping.domain.model.ui.rescue.NewRescueRequestsModel\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.event.MappingUiEvent\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.state.MappingState\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.state.MappingUiState\nimport com.example.cyclistance.theme.CyclistanceTheme\nimport com.example.cyclistance.top_bars.TitleTopAppBar\nimport com.example.cyclistance.top_bars.TopAppBarCreator\n\n@Composable\nfun RescueRequestScreenContent(\n    modifier: Modifier = Modifier,\n    mappingState: MappingState = MappingState(),\n    uiState: MappingUiState = MappingUiState(),\n    event: (MappingUiEvent) -> Unit\n) {\n\n    val respondents = remember(mappingState.newRescueRequest?.request?.size) {\n        mappingState.newRescueRequest?.request ?: emptyList()\n    }\n\n    Scaffold(modifier = modifier, topBar = {\n        TopAppBarCreator(\n            icon = Icons.Default.Close,\n            onClickIcon = { event(MappingUiEvent.DismissRescueRequestDialog) },\n            topAppBarTitle = {\n                TitleTopAppBar(title = \"Rescue Request\")\n            })\n\n    }) { paddingValues ->\n\n\n        Surface(\n            modifier = Modifier\n                .padding(paddingValues)\n                .fillMaxSize(),\n            color = MaterialTheme.colors.background) {\n\n            Box(contentAlignment = Alignment.Center, modifier = Modifier.fillMaxSize()) {\n\n                if (uiState.alertDialogState.visible()) {\n                    AlertDialog(\n                        alertDialog = uiState.alertDialogState,\n                        onDismissRequest = { event(MappingUiEvent.DismissAlertDialog) })\n                }\n\n\n                Column(\n                    modifier = Modifier.fillMaxSize(),\n                    horizontalAlignment = Alignment.CenterHorizontally) {\n\n                    Box(\n                        modifier = Modifier\n                            .weight(0.85f)\n                            .fillMaxSize(), contentAlignment = Alignment.Center) {\n\n                        if (respondents.isEmpty()) {\n                            EmptyListPlaceholder()\n                        } else {\n                            LazyColumn(\n                                modifier = Modifier\n                                    .padding(bottom = 4.dp)\n                                    .fillMaxSize(),\n                                horizontalAlignment = Alignment.CenterHorizontally) {\n\n                                items(\n                                    items = respondents,\n                                    key = { it.id ?: \"-1\" }) { respondent ->\n                                    RequestItem(\n                                        modifier = Modifier\n                                            .padding(\n                                                start = 4.dp,\n                                                end = 4.dp,\n                                                top = 6.dp,\n                                                bottom = 6.dp)\n                                            .fillMaxWidth(fraction = 0.95f)\n                                            .wrapContentHeight(), cardState = respondent,\n                                        onClickCancelButton = {\n                                            event(\n                                                MappingUiEvent.CancelRequestHelp(\n                                                    respondent.id ?: \"\"))\n                                        },\n                                        onClickConfirmButton = {\n                                            event(\n                                                MappingUiEvent.ConfirmRequestHelp(\n                                                    respondent.id ?: \"\"))\n                                        }\n                                    )\n                                }\n\n                                item {\n                                    Spacer(modifier = Modifier.height(12.dp))\n                                }\n\n                            }\n                        }\n\n                    }\n                }\n\n                if (mappingState.isLoading) {\n                    CircularProgressIndicator()\n                }\n\n                if (uiState.isNoInternetVisible) {\n                    NoInternetDialog(onDismiss = { event(MappingUiEvent.DismissNoInternetDialog) })\n                }\n\n            }\n        }\n    }\n\n}\n\n\nprivate val rescueRequests = listOf(\n    RescueRequestItemModel(\n        id = \"2\",\n        name = \"Jane Doe\",\n        profileImageUrl = \"https://images.pexels.com/photos/220453/pexels-photo-220453.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\",\n        estimatedTimeTravel = \"5 mins\",\n        distance = \"500m\",\n        address = \"1234, 5th Street, New York, NY 10001\",\n    ),\n    RescueRequestItemModel(\n        id = \"3\",\n        name = \"Jane Doe\",\n        profileImageUrl = \"https://images.pexels.com/photos/220453/pexels-photo-220453.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\",\n        estimatedTimeTravel = \"5 mins\",\n        distance = \"500m\",\n        address = \"1234, 5th Street, New York, NY 10001\",\n    ),\n    RescueRequestItemModel(\n        id = \"4\",\n        name = \"Jane Doe\",\n        profileImageUrl = \"https://images.pexels.com/photos/220453/pexels-photo-220453.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\",\n        estimatedTimeTravel = \"5 mins\",\n        distance = \"500m\",\n        address = \"1234, 5th Street, New York, NY 10001\",\n    ),\n    RescueRequestItemModel(\n        id = \"5\",\n        name = \"Jane Doe\",\n        profileImageUrl = \"https://images.pexels.com/photos/220453/pexels-photo-220453.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\",\n        estimatedTimeTravel = \"5 mins\",\n        distance = \"500m\",\n        address = \"1234, 5th Street, New York, NY 10001\",\n    ),\n)\n\n\n@Preview(device = \"id:pixel_3\")\n@Composable\nfun PreviewRescueRequestDark() {\n    CyclistanceTheme(true) {\n        RescueRequestScreenContent(\n            modifier = Modifier\n                .fillMaxSize()\n                .padding(PaddingValues(all = 0.dp)),\n            mappingState = MappingState(\n                isLoading = true,\n                newRescueRequest = NewRescueRequestsModel(request = rescueRequests),\n            ),\n            uiState = MappingUiState(\n                alertDialogState = AlertDialogState(\n                    title = \"Sample Title\",\n                    description = \"Sample Description Sample Description Sample Description Sample DescriptionSample Description Sample Description\",\n                    icon = R.raw.success\n                )\n            ),\n            event = {}\n        )\n    }\n}\n\n@Preview(device = \"id:pixel_3\")\n@Composable\nfun PreviewRescueRequestLight() {\n    CyclistanceTheme(false) {\n        RescueRequestScreenContent(\n            modifier = Modifier\n                .fillMaxSize()\n                .padding(PaddingValues(all = 0.dp)),\n            mappingState = MappingState(\n                isLoading = true,\n                newRescueRequest = NewRescueRequestsModel(request = rescueRequests)\n            ),\n            event = {}\n        )\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/components/rescue_request/components/RescueRequestScreenContent.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/components/rescue_request/components/RescueRequestScreenContent.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/components/rescue_request/components/RescueRequestScreenContent.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/components/rescue_request/components/RescueRequestScreenContent.kt	(date 1692288836983)
@@ -28,7 +28,7 @@
 import com.example.cyclistance.core.presentation.dialogs.alert_dialog.AlertDialog
 import com.example.cyclistance.core.presentation.dialogs.no_internet_dialog.NoInternetDialog
 import com.example.cyclistance.feature_authentication.presentation.common.visible
-import com.example.cyclistance.feature_mapping.domain.model.api.rescue.RescueRequestItemModel
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.rescue.RescueRequestItemModel
 import com.example.cyclistance.feature_mapping.domain.model.ui.rescue.NewRescueRequestsModel
 import com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.event.MappingUiEvent
 import com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.state.MappingState
Index: app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/ui/rescue/NewRescueRequestsModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_mapping.domain.model.ui.rescue\n\nimport android.os.Parcelable\nimport com.example.cyclistance.core.utils.annotations.StableState\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue.RescueRequestItemModel\nimport kotlinx.parcelize.Parcelize\n\n@Parcelize\n@StableState\ndata class NewRescueRequestsModel(\n    val request: List<RescueRequestItemModel> = emptyList(),\n) : Parcelable\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/ui/rescue/NewRescueRequestsModel.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/ui/rescue/NewRescueRequestsModel.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/ui/rescue/NewRescueRequestsModel.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/ui/rescue/NewRescueRequestsModel.kt	(date 1692288836989)
@@ -2,7 +2,7 @@
 
 import android.os.Parcelable
 import com.example.cyclistance.core.utils.annotations.StableState
-import com.example.cyclistance.feature_mapping.domain.model.api.rescue.RescueRequestItemModel
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.rescue.RescueRequestItemModel
 import kotlinx.parcelize.Parcelize
 
 @Parcelize
Index: app/src/main/java/com/example/cyclistance/service/LocationService.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.service\n\nimport android.app.NotificationChannel\nimport android.app.NotificationManager\nimport android.app.Service\nimport android.content.Context\nimport android.content.Intent\nimport android.os.Build\nimport androidx.core.app.NotificationCompat\nimport com.example.cyclistance.core.utils.constants.MappingConstants\nimport com.example.cyclistance.core.utils.constants.MappingConstants.ACTION_START\nimport com.example.cyclistance.core.utils.constants.MappingConstants.ACTION_STOP\nimport com.example.cyclistance.core.utils.constants.MappingConstants.LOCATION_SERVICE_CHANNEL_ID\nimport com.example.cyclistance.feature_mapping.domain.location.LocationClient\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.LocationModel\nimport dagger.hilt.android.AndroidEntryPoint\nimport kotlinx.coroutines.CoroutineScope\nimport kotlinx.coroutines.Dispatchers\nimport kotlinx.coroutines.SupervisorJob\nimport kotlinx.coroutines.cancel\nimport kotlinx.coroutines.flow.MutableStateFlow\nimport kotlinx.coroutines.flow.catch\nimport kotlinx.coroutines.flow.distinctUntilChanged\nimport kotlinx.coroutines.flow.launchIn\nimport kotlinx.coroutines.flow.onEach\nimport timber.log.Timber\nimport javax.inject.Inject\n\n@AndroidEntryPoint\nclass LocationService(\n): Service() {\n\n    @Inject lateinit var locationClient: LocationClient\n    @Inject lateinit var notification: NotificationCompat.Builder\n\n    private lateinit var notificationManager: NotificationManager\n    private var isServiceRunning: Boolean = false\n    private val serviceScope = CoroutineScope(SupervisorJob() + Dispatchers.IO)\n\n    companion object {\n        val address: MutableStateFlow<LocationModel> = MutableStateFlow(LocationModel())\n    }\n\n    override fun onCreate() {\n        super.onCreate()\n        notificationManager = getSystemService(Context.NOTIFICATION_SERVICE) as NotificationManager\n\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\n            val channel = NotificationChannel(\n                LOCATION_SERVICE_CHANNEL_ID,\n                MappingConstants.LOCATION_NAME,\n                NotificationManager.IMPORTANCE_LOW)\n            val notificationManager =\n                getSystemService(Context.NOTIFICATION_SERVICE) as NotificationManager\n            notificationManager.createNotificationChannel(channel)\n\n\n        }\n    }\n\n    override fun onStartCommand(intent: Intent?, flags: Int, startId: Int): Int {\n        when (intent?.action) {\n            ACTION_START -> {\n                if(!isServiceRunning){\n                    startService()\n                    isServiceRunning = true\n                }\n            }\n            ACTION_STOP -> {\n                stopService()\n                isServiceRunning = false\n            }\n        }\n        return super.onStartCommand(intent, flags, startId)\n    }\n\n\n    private fun startService() {\n        locationClient.getLocationUpdates()\n            .distinctUntilChanged()\n            .catch {\n                Timber.e(\"Start Service: ${it.message}\")\n            }.onEach { location ->\n                val speed = location.speed * 3600 / 1000\n                address.emit(LocationModel(latitude = location.latitude, longitude = location.longitude, speed = speed.toDouble()))\n            }.launchIn(serviceScope)\n    }\n\n    private fun stopService() {\n        stopForeground(true)\n        stopSelf()\n    }\n\n    override fun onDestroy() {\n        super.onDestroy()\n        serviceScope.cancel()\n    }\n\n    override fun onBind(intent: Intent?): android.os.IBinder? {\n        return null\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/service/LocationService.kt b/app/src/main/java/com/example/cyclistance/service/LocationService.kt
--- a/app/src/main/java/com/example/cyclistance/service/LocationService.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/service/LocationService.kt	(date 1692288837376)
@@ -12,7 +12,7 @@
 import com.example.cyclistance.core.utils.constants.MappingConstants.ACTION_STOP
 import com.example.cyclistance.core.utils.constants.MappingConstants.LOCATION_SERVICE_CHANNEL_ID
 import com.example.cyclistance.feature_mapping.domain.location.LocationClient
-import com.example.cyclistance.feature_mapping.domain.model.api.user.LocationModel
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.user.LocationModel
 import dagger.hilt.android.AndroidEntryPoint
 import kotlinx.coroutines.CoroutineScope
 import kotlinx.coroutines.Dispatchers
Index: app/src/main/java/com/example/cyclistance/feature_mapping/domain/helper/TrackingStateHandler.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_mapping.domain.helper\n\nimport com.example.cyclistance.core.utils.constants.MappingConstants\nimport com.example.cyclistance.core.utils.validation.FormatterUtils.findUser\nimport com.example.cyclistance.core.utils.validation.FormatterUtils.formatToDistanceKm\nimport com.example.cyclistance.core.utils.validation.FormatterUtils.isLocationAvailable\nimport com.example.cyclistance.feature_authentication.domain.exceptions.AuthExceptions\nimport com.example.cyclistance.feature_mapping.domain.exceptions.MappingExceptions\nimport com.example.cyclistance.feature_mapping.domain.model.Role\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RescueTransaction\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RescueTransactionItem\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RouteModel\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.StatusModel\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.LocationModel\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.TransactionModel\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.UserItem\nimport com.example.cyclistance.feature_mapping.domain.model.location.LiveLocationWSModel\nimport com.example.cyclistance.feature_mapping.domain.model.ui.rescue.MapSelectedRescuee\nimport com.example.cyclistance.feature_mapping.domain.model.ui.rescue.NewRescueRequestsModel\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.event.MappingEvent\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.state.MappingState\nimport com.example.cyclistance.feature_settings.domain.exceptions.SettingExceptions\nimport kotlinx.coroutines.coroutineScope\nimport kotlinx.coroutines.flow.MutableSharedFlow\nimport kotlinx.coroutines.flow.MutableStateFlow\nimport kotlinx.coroutines.flow.update\nimport timber.log.Timber\n\nclass TrackingStateHandler(\n    val nearbyCyclist: MutableList<UserItem>,\n    val state: MutableStateFlow<MappingState>,\n    val eventFlow: MutableSharedFlow<MappingEvent>) {\n\n\n    suspend fun updateClient() {\n\n        coroutineScope {\n            val rescueTransaction = state.value.rescueTransaction\n            val cyclists = nearbyCyclist\n            val userRole = state.value.user.getRole()\n\n            if (userRole == Role.RESCUEE.name.lowercase()) {\n                rescueTransaction?.rescuerId?.let { id ->\n                    state.update { it.copy(rescuer = cyclists.findUser(id), rescuee = null) }\n                }\n                return@coroutineScope\n            }\n\n            rescueTransaction?.rescueeId?.let { rescueeId ->\n                state.update { it.copy(rescuee = cyclists.findUser(rescueeId), rescuer = null) }\n            }\n\n        }\n    }\n\n    fun getUserRescueTransaction(rescueTransaction: RescueTransaction): RescueTransactionItem? {\n\n        val transactionId = state.value.user.transaction?.transactionId\n        return transactionId?.let { rescueTransaction.findTransaction(it) }\n\n    }\n\n    fun clearTransactionRoles() {\n        state.update {\n            it.copy(\n                respondedToHelp = true,\n                rescueTransaction = RescueTransactionItem(),\n                rescuee = null,\n                rescuer = null,\n                newRescueRequest = NewRescueRequestsModel(),\n                user = it.user.copy(transaction = TransactionModel())\n            )\n        }\n    }\n\n    suspend fun showSelectedRescuee(\n        selectedRescuee: UserItem,\n        distance: Double,\n        timeRemaining: String\n    ) {\n\n        eventFlow.emit(\n            value = MappingEvent.NewSelectedRescuee(\n                selectedRescuee = MapSelectedRescuee(\n                    userId = selectedRescuee.id!!,\n                    userProfileImage = selectedRescuee.profilePictureUrl\n                                       ?: MappingConstants.IMAGE_PLACEHOLDER_URL,\n                    name = selectedRescuee.name ?: \"name unavailable\",\n                    issue = selectedRescuee.getDescription() ?: \"\",\n                    bikeType = selectedRescuee.getBikeType() ?: \"\",\n                    address = selectedRescuee.address ?: \"\",\n                    message = selectedRescuee.getMessage() ?: \"\",\n                    distanceRemaining = distance.formatToDistanceKm(),\n                    timeRemaining = timeRemaining\n                )\n            )\n        )\n    }\n\n    fun updateLocation(location: LocationModel) {\n        val latitude = location.latitude ?: return\n        val longitude = location.longitude ?: return\n        state.update {\n            it.copy(\n                userLocation = LocationModel(\n                    latitude = latitude,\n                    longitude = longitude\n                )\n            )\n        }\n\n\n    }\n\n    fun updateTransactionLocation(location: LiveLocationWSModel) {\n        val longitude = location.longitude ?: return\n        val latitude = location.latitude ?: return\n        state.update {\n            it.copy(\n                transactionLocation = LocationModel(\n                    latitude = latitude,\n                    longitude = longitude\n                )\n            )\n        }\n    }\n\n    suspend inline fun checkCurrentTransactions(\n        user: UserItem,\n        rescuer: UserItem,\n        crossinline noCurrentTransaction: suspend () -> Unit\n    ) {\n\n        val userHasCurrentTransaction =\n            (user.transaction ?: TransactionModel()).transactionId.isNotEmpty()\n\n        val rescuerHasCurrentTransaction =\n            (rescuer.transaction ?: TransactionModel()).transactionId.isNotEmpty()\n\n        val rescuerLocationAvailable = rescuer.location.isLocationAvailable()\n        val userLocationAvailable = user.location.isLocationAvailable()\n\n        if (!rescuerLocationAvailable) {\n            eventFlow.emit(value = MappingEvent.RescuerLocationNotAvailable())\n            return\n        }\n\n        if (!userLocationAvailable) {\n            eventFlow.emit(value = MappingEvent.LocationNotAvailable(\"Location not found\"))\n            return\n        }\n\n        if (rescuerHasCurrentTransaction) {\n            eventFlow.emit(value = MappingEvent.RescueHasTransaction)\n            return\n        }\n\n        if (userHasCurrentTransaction) {\n            eventFlow.emit(value = MappingEvent.UserHasCurrentTransaction)\n            return\n        }\n\n\n        noCurrentTransaction()\n    }\n\n\n    fun getAcceptedRescueRequestItem(\n        transactionId: String,\n        rescuer: UserItem,\n\n    ): RescueTransactionItem {\n        val user = state.value.user\n        return RescueTransactionItem(\n            id = transactionId,\n            rescuerId = rescuer.id,\n            rescueeId = user.id,\n            status = StatusModel(started = true, onGoing = true),\n            route = RouteModel(\n                startingLocation = LocationModel(\n                    latitude = rescuer.location!!.latitude,\n                    longitude = rescuer.location.longitude\n                ),\n                destinationLocation = LocationModel(\n                    latitude = user.location!!.latitude,\n                    longitude = user.location.longitude\n                )\n            )\n        )\n    }\n\n    fun getTransactionId(rescuer: UserItem): String {\n        val user = state.value.user\n        return user.id?.take(3) + rescuer.id?.take(3) + System.currentTimeMillis().toString()\n            .takeLast(6)\n    }\n\n    suspend fun checkRescueRequestAccepted(rescueTransaction: RescueTransaction, id: String) {\n        val respondedToHelp = state.value.respondedToHelp\n        val user = state.value.user\n\n        val userId = state.value.user.id ?: id\n\n        if (respondedToHelp.not()) {\n            return\n        }\n\n\n\n        getUserRescueTransaction(rescueTransaction = rescueTransaction)\n            ?.let { transaction ->\n\n                if (transaction.isRescueCancelled()) {\n                    return@let\n                }\n\n                if (transaction.rescuerId != userId) {\n                    return@let\n                }\n\n                if (user.isRescuee()) {\n                    return@let\n                }\n\n                if (transaction.rescueeId.isNullOrEmpty()) {\n                    return@let\n                }\n\n                eventFlow.emit(value = MappingEvent.RescueRequestAccepted)\n            }\n\n\n    }\n\n    suspend fun handleException(exception: Throwable) {\n        when (exception) {\n\n            is MappingExceptions.NetworkException -> {\n                eventFlow.emit(value = MappingEvent.NoInternetConnection)\n            }\n\n            is MappingExceptions.UnexpectedErrorException -> {\n                eventFlow.emit(\n                    MappingEvent.UnexpectedError(\n                        reason = exception.message\n                    )\n                )\n            }\n\n            is AuthExceptions.UserException -> {\n                eventFlow.emit(\n                    MappingEvent.UserFailed(\n                        reason = exception.message\n                    )\n                )\n            }\n\n            is MappingExceptions.AddressException -> {\n                eventFlow.emit(\n                    MappingEvent.AddressFailed(\n                        reason = exception.message ?: \"Searching for GPS\"\n                    )\n                )\n            }\n\n            is SettingExceptions.PhoneNumberException, is MappingExceptions.NameException -> {\n                eventFlow.emit(MappingEvent.InsufficientUserCredential)\n            }\n\n            else -> {\n                Timber.e(\"Error HandleException: ${exception.message}\")\n            }\n\n        }\n    }\n\n\n    fun getTopSpeed(currentSpeed: Double) {\n        val topSpeed = state.value.getTopSpeed()\n        if (currentSpeed > topSpeed) {\n            state.update { it.copy(speedometerState = it.speedometerState.copy(topSpeed = currentSpeed)) }\n        }\n    }\n\n    fun setSpeed(currentSpeedKph: Double){\n        state.update { it.copy(speedometerState = it.speedometerState.copy(currentSpeedKph = currentSpeedKph)) }\n    }\n\n    fun setTravelledDistance(distance: String){\n\n        state.update { it.copy(speedometerState = it.speedometerState.copy(travelledDistance = distance)) }\n    }\n}\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/helper/TrackingStateHandler.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/helper/TrackingStateHandler.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/helper/TrackingStateHandler.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/helper/TrackingStateHandler.kt	(date 1692337778160)
@@ -7,14 +7,14 @@
 import com.example.cyclistance.feature_authentication.domain.exceptions.AuthExceptions
 import com.example.cyclistance.feature_mapping.domain.exceptions.MappingExceptions
 import com.example.cyclistance.feature_mapping.domain.model.Role
-import com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RescueTransaction
-import com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RescueTransactionItem
-import com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RouteModel
-import com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.StatusModel
-import com.example.cyclistance.feature_mapping.domain.model.api.user.LocationModel
-import com.example.cyclistance.feature_mapping.domain.model.api.user.TransactionModel
-import com.example.cyclistance.feature_mapping.domain.model.api.user.UserItem
-import com.example.cyclistance.feature_mapping.domain.model.location.LiveLocationWSModel
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.live_location.LiveLocationSocketModel
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.rescue_transaction.RescueTransaction
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.rescue_transaction.RescueTransactionItem
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.rescue_transaction.RouteModel
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.rescue_transaction.StatusModel
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.user.LocationModel
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.user.TransactionModel
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.user.UserItem
 import com.example.cyclistance.feature_mapping.domain.model.ui.rescue.MapSelectedRescuee
 import com.example.cyclistance.feature_mapping.domain.model.ui.rescue.NewRescueRequestsModel
 import com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.event.MappingEvent
@@ -112,7 +112,7 @@
 
     }
 
-    fun updateTransactionLocation(location: LiveLocationWSModel) {
+    fun updateTransactionLocation(location: LiveLocationSocketModel) {
         val longitude = location.longitude ?: return
         val latitude = location.latitude ?: return
         state.update {
Index: app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/state/MappingState.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.state\n\nimport android.os.Parcelable\nimport com.example.cyclistance.core.utils.annotations.StableState\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RescueTransactionItem\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.LocationModel\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.UserItem\nimport com.example.cyclistance.feature_mapping.domain.model.ui.rescue.NewRescueRequestsModel\nimport kotlinx.parcelize.Parcelize\n\n@Parcelize\n@StableState\ndata class MappingState(\n    val isLoading: Boolean = false,\n    val userLocation: LocationModel? = null,\n    val rescueTransaction: RescueTransactionItem? = null,\n    val user: UserItem = UserItem(),\n    val rescueRequestAcceptedUser: UserItem? = null,\n    val rescuer: UserItem? = null,\n    val rescuee: UserItem? = null,\n    val profileUploaded: Boolean = false,\n    val respondedToHelp: Boolean = false,\n    val transactionLocation: LocationModel? = null,\n    val rescuerETA: String = \"\",\n    val rescuerDistance: String = \"\",\n    val newRescueRequest: NewRescueRequestsModel? = null,\n    val speedometerState: SpeedometerState = SpeedometerState(),\n) : Parcelable{\n\n\n    fun getTravelledDistance() = speedometerState.travelledDistance\n    fun getTopSpeed() = speedometerState.topSpeed\n    fun getCurrentSpeedKph() = speedometerState.currentSpeedKph\n\n\n    fun getCurrentLocation() = user.location ?: userLocation\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/state/MappingState.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/state/MappingState.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/state/MappingState.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/state/MappingState.kt	(date 1692288837449)
@@ -2,9 +2,9 @@
 
 import android.os.Parcelable
 import com.example.cyclistance.core.utils.annotations.StableState
-import com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RescueTransactionItem
-import com.example.cyclistance.feature_mapping.domain.model.api.user.LocationModel
-import com.example.cyclistance.feature_mapping.domain.model.api.user.UserItem
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.rescue_transaction.RescueTransactionItem
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.user.LocationModel
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.user.UserItem
 import com.example.cyclistance.feature_mapping.domain.model.ui.rescue.NewRescueRequestsModel
 import kotlinx.parcelize.Parcelize
 
Index: app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/user/NearbyCyclist.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/user/NearbyCyclist.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/user/NearbyCyclist.kt
rename from app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/user/NearbyCyclist.kt
rename to app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/user/NearbyCyclist.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/user/NearbyCyclist.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/user/NearbyCyclist.kt	(date 1692288837343)
@@ -1,4 +1,4 @@
-package com.example.cyclistance.feature_mapping.domain.model.api.user
+package com.example.cyclistance.feature_mapping.domain.model.remote_models.user
 
 import android.os.Parcelable
 import com.example.cyclistance.core.utils.annotations.StableState
Index: app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/user/RescueRequest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/user/RescueRequest.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/user/RescueRequest.kt
rename from app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/user/RescueRequest.kt
rename to app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/user/RescueRequest.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/user/RescueRequest.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/user/RescueRequest.kt	(date 1692288837276)
@@ -1,4 +1,4 @@
-package com.example.cyclistance.feature_mapping.domain.model.api.user
+package com.example.cyclistance.feature_mapping.domain.model.remote_models.user
 
 import android.os.Parcelable
 import com.example.cyclistance.core.utils.annotations.StableState
Index: app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/user/TransactionModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/user/TransactionModel.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/user/TransactionModel.kt
rename from app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/user/TransactionModel.kt
rename to app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/user/TransactionModel.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/user/TransactionModel.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/user/TransactionModel.kt	(date 1692288837053)
@@ -1,4 +1,4 @@
-package com.example.cyclistance.feature_mapping.domain.model.api.user
+package com.example.cyclistance.feature_mapping.domain.model.remote_models.user
 
 import android.os.Parcelable
 import com.example.cyclistance.core.utils.annotations.StableState
Index: app/src/test/java/com/example/cyclistance/feature_mapping/presentation/MappingViewModelTest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_mapping.presentation\n\nimport androidx.arch.core.executor.testing.InstantTaskExecutorRule\nimport androidx.lifecycle.SavedStateHandle\nimport com.example.cyclistance.di.TestAuthModule\nimport com.example.cyclistance.di.TestMappingModule\nimport com.example.cyclistance.feature_mapping.data.remote.dto.rescue_transaction.Route\nimport com.example.cyclistance.feature_mapping.data.remote.dto.user_dto.*\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.NearbyCyclist\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RescueTransaction\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RescueTransactionItem\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.UserItem\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.MappingViewModel\nimport com.example.cyclistance.test_rule.MainDispatcherRule\nimport kotlinx.coroutines.ExperimentalCoroutinesApi\nimport kotlinx.coroutines.test.StandardTestDispatcher\nimport kotlinx.coroutines.test.UnconfinedTestDispatcher\nimport kotlinx.coroutines.test.runTest\nimport org.junit.*\nimport org.junit.runners.MethodSorters\n\n@OptIn(ExperimentalCoroutinesApi::class)\n@FixMethodOrder(MethodSorters.NAME_ASCENDING)\nclass MappingViewModelTest {\n\n\n    private lateinit var mappingViewModel: MappingViewModel\n    private var testMappingModule = TestMappingModule\n    private var testAuthModule = TestAuthModule\n\n    @ExperimentalCoroutinesApi\n    @get:Rule\n    val mainDispatcherRule = MainDispatcherRule()\n\n\n    @get:Rule\n    val instantTaskExecutorRule = InstantTaskExecutorRule()\n\n    @Before\n    fun setup() {\n        mappingViewModel = MappingViewModel(\n            savedStateHandle = SavedStateHandle(),\n            authUseCase = testAuthModule.provideTestAuthUseCase(),\n            mappingUseCase = testMappingModule.provideTestMappingUseCase(),\n            defaultDispatcher = StandardTestDispatcher()\n        )\n    }\n\n    @Test\n    fun `01_nearby cyclists available`() = runTest {\n        testMappingModule().shouldReturnNetworkError = false\n        testMappingModule().nearbyCyclist.value = NearbyCyclist(\n            listOf(\n                UserItem(\n                    address = \"Manila, Quiapo\",\n                    contactNumber = \"09123456789\",\n                    id = \"rwLt7Y9Me7JCNJ3Fhh1SP4PaizqN\",\n                    location = Location(\n                        latitude = 14.084499224680876,\n                        longitude = 121.15170397731512\n                    ),\n                    name = \"Andres\",\n                    profilePictureUrl = \"https://i.imgur.com/1ZQ3Y7r.jpg\",\n                    rescueRequest = RescueRequest(\n                        respondents = listOf(\n                            Respondent(clientId = \"2\"),\n                            Respondent(clientId = \"3\")\n                        )\n                    ),\n                    transaction = Transaction(role = \"rescuee\", transactionId = \"12345\"),\n                    userAssistance = UserAssistance(\n                        confirmationDetail = ConfirmationDetail(\n                            bikeType = \"road-bike\",\n                            description = \"Sample description\",\n                            message = \"I need help\",\n                        ),\n                        needHelp = true,\n                    ),\n\n                    ),\n                UserItem(\n                    address = \"Manila, Quiapo\",\n                    contactNumber = \"09123456789\",\n                    id = \"2\",\n                    location = Location(\n                        latitude = 14.083527714609879,\n                        longitude = 121.15211095078145\n                    ),\n                    name = \"Andres\",\n                    profilePictureUrl = \"https://i.imgur.com/1ZQ3Y7r.jpg\",\n                    rescueRequest = RescueRequest(\n                    ),\n                    transaction = Transaction(role = \"rescuee\", transactionId = \"12345\"),\n                    userAssistance = UserAssistance(\n                        confirmationDetail = ConfirmationDetail(\n                            bikeType = \"road-bike\",\n                            description = \"Sample description\",\n                            message = \"I need help\",\n                        ),\n                        needHelp = true,\n                    ),\n                )\n            )\n        )\n        assertThat(mappingViewModel).nearbyCyclistsAvailable()\n\n    }\n\n    @Test\n    fun `02_nearby cyclists unavailable`() = runTest() {\n        testMappingModule().shouldReturnNetworkError = true\n        testMappingModule().users.clear()\n        assertThat(mappingViewModel).nearbyCyclistsNotAvailable()\n        testMappingModule().shouldReturnNetworkError = false\n        assertThat(mappingViewModel).nearbyCyclistsNotAvailable()\n\n    }\n\n    @Test\n    fun `03_RequestHelp event, toast message 'Searching for Gps' is shown`() = runTest {\n        testMappingModule().location = Location()\n        assertThat(mappingViewModel)\n            .requestHelp_ToastMessageSearchingGps_IsShown()\n    }\n\n    @Test\n    fun `04_RequestHelp Event then confirm details screen is shown, after hitting request help event again the profile uploaded state should be true`() =\n        runTest {\n            testMappingModule().location = Location(latitude = 14.0835, longitude = 121.1476)\n            testMappingModule().shouldReturnNetworkError = false\n            testMappingModule().users.clear()\n            testMappingModule().address.value = \"Manila, Quiapo\"\n\n            assertThat(mappingViewModel)\n                .requestHelp_ConfirmDetailScreen_IsShown()\n                .requestHelp_profileUploadedState_returnsTrue()\n\n        }\n\n    @Test\n    fun `05_AcceptRescueRequest Event a toast message 'Can't reach Rescuer' is shown`() =\n        runTest(UnconfinedTestDispatcher()) {\n            testMappingModule().location =\n                Location(latitude = 14.084499224680876, longitude = 121.15170397731512)\n            testMappingModule().users.clear()\n            testMappingModule().nearbyCyclist.value = NearbyCyclist(\n                listOf(\n                    UserItem(\n                        address = \"Manila, Quiapo\",\n                        contactNumber = \"09123456789\",\n                        id = \"rwLt7Y9Me7JCNJ3Fhh1SP4PaizqN\",\n                        location = Location(\n                            latitude = 14.084499224680876,\n                            longitude = 121.15170397731512\n                        ),\n                        name = \"Andres\",\n                        profilePictureUrl = \"https://i.imgur.com/1ZQ3Y7r.jpg\",\n                        rescueRequest = RescueRequest(\n                            respondents = listOf(\n                                Respondent(clientId = \"2\"),\n                                Respondent(clientId = \"3\")\n                            )\n                        ),\n                        transaction = Transaction(role = \"rescuee\", transactionId = \"12345\"),\n                        userAssistance = UserAssistance(\n                            confirmationDetail = ConfirmationDetail(\n                                bikeType = \"road-bike\",\n                                description = \"Sample description\",\n                                message = \"I need help\",\n                            ),\n                            needHelp = true,\n                        ),\n\n                        ),\n                    UserItem(\n                        address = \"Manila, Quiapo\",\n                        contactNumber = \"09123456789\",\n                        id = \"2\",\n                        location = Location(),\n                        name = \"Andres\",\n                        profilePictureUrl = \"https://i.imgur.com/1ZQ3Y7r.jpg\",\n                        rescueRequest = RescueRequest(),\n                        transaction = Transaction(role = \"rescuer\", transactionId = \"12345\"),\n                        userAssistance = UserAssistance(\n                            confirmationDetail = ConfirmationDetail(\n                                bikeType = \"road-bike\",\n                                description = \"Sample description\",\n                                message = \"I need help\",\n                            ),\n                            needHelp = true,\n                        ),\n                    )\n                )\n            )\n\n            assertThat(mappingViewModel).acceptRescueRequest_CantReachRescuer_ToastMessage_IsShown()\n\n        }\n\n    @Test\n    fun `06_AcceptRescueRequest Event, toast message 'Location not Found' is shown`() =\n        runTest(UnconfinedTestDispatcher()) {\n            testMappingModule().location = Location()\n            testMappingModule().users.clear()\n            testMappingModule().nearbyCyclist.value = NearbyCyclist(\n                listOf(\n                    UserItem(\n                        address = \"Manila, Quiapo\",\n                        contactNumber = \"09123456789\",\n                        id = \"rwLt7Y9Me7JCNJ3Fhh1SP4PaizqN\",\n                        name = \"Andres\",\n                        profilePictureUrl = \"https://i.imgur.com/1ZQ3Y7r.jpg\",\n                        rescueRequest = RescueRequest(\n                            respondents = listOf(\n                                Respondent(clientId = \"2\"),\n                                Respondent(clientId = \"3\")\n                            )\n                        ),\n                        transaction = Transaction(role = \"rescuee\", transactionId = \"12345\"),\n                        userAssistance = UserAssistance(\n                            confirmationDetail = ConfirmationDetail(\n                                bikeType = \"road-bike\",\n                                description = \"Sample description\",\n                                message = \"I need help\",\n                            ),\n                            needHelp = true,\n                        ),\n\n                        ),\n                    UserItem(\n                        address = \"Manila, Quiapo\",\n                        contactNumber = \"09123456789\",\n                        id = \"2\",\n                        location = Location(\n                            latitude = 14.084499224680876,\n                            longitude = 121.15170397731512\n                        ),\n                        name = \"Andres\",\n                        profilePictureUrl = \"https://i.imgur.com/1ZQ3Y7r.jpg\",\n                        rescueRequest = RescueRequest(),\n                        transaction = Transaction(role = \"rescuer\", transactionId = \"12345\"),\n                        userAssistance = UserAssistance(\n                            confirmationDetail = ConfirmationDetail(\n                                bikeType = \"road-bike\",\n                                description = \"Sample description\",\n                                message = \"I need help\",\n                            ),\n                            needHelp = true,\n                        ),\n                    )\n                )\n            )\n\n            assertThat(mappingViewModel).acceptRescueRequest_LocationNotFound_ToastMessage_IsShown()\n        }\n\n    @Test\n    fun `07_AcceptRescueRequest Event, user should have transaction`() =\n        runTest(UnconfinedTestDispatcher()) {\n            testMappingModule().location =\n                Location(latitude = 14.084499224680876, longitude = 121.15170397731512)\n            testMappingModule().users.clear()\n            testMappingModule().nearbyCyclist.value = NearbyCyclist(\n                listOf(\n                    UserItem(\n                        address = \"Manila, Quiapo\",\n                        contactNumber = \"09123456789\",\n                        id = \"rwLt7Y9Me7JCNJ3Fhh1SP4PaizqN\",\n                        location = Location(\n                            latitude = 14.084499224680876,\n                            longitude = 121.15170397731512\n                        ),\n                        name = \"Andres\",\n                        profilePictureUrl = \"https://i.imgur.com/1ZQ3Y7r.jpg\",\n                        rescueRequest = RescueRequest(\n                            respondents = listOf(\n                                Respondent(clientId = \"2\"),\n                                Respondent(clientId = \"3\")\n                            )\n                        ),\n                        transaction = Transaction(role = \"rescuee\", transactionId = \"12345\"),\n                        userAssistance = UserAssistance(\n                            confirmationDetail = ConfirmationDetail(\n                                bikeType = \"road-bike\",\n                                description = \"Sample description\",\n                                message = \"I need help\",\n                            ),\n                            needHelp = true,\n                        ),\n\n                        ),\n                    UserItem(\n                        address = \"Manila, Quiapo\",\n                        contactNumber = \"09123456789\",\n                        id = \"2\",\n                        location = Location(\n                            latitude = 14.084499224680876,\n                            longitude = 121.15170397731512\n                        ),\n                        name = \"Andres\",\n                        profilePictureUrl = \"https://i.imgur.com/1ZQ3Y7r.jpg\",\n                        rescueRequest = RescueRequest(),\n                        transaction = Transaction(role = \"rescuer\", transactionId = \"12345\"),\n                        userAssistance = UserAssistance(\n                            confirmationDetail = ConfirmationDetail(\n                                bikeType = \"road-bike\",\n                                description = \"Sample description\",\n                                message = \"I need help\",\n                            ),\n                            needHelp = true,\n                        ),\n                    )\n                )\n            )\n\n            assertThat(mappingViewModel).acceptRescueRequest_userHasCurrentTransaction_returnsTrue()\n\n        }\n\n    @Test\n    fun `08_AcceptRescueRequest Event, rescuer should have transaction`() =\n        runTest(UnconfinedTestDispatcher()) {\n            testMappingModule().location =\n                Location(latitude = 14.084499224680876, longitude = 121.15170397731512)\n            testMappingModule().users.clear()\n            testMappingModule().nearbyCyclist.value = NearbyCyclist(\n                listOf(\n                    UserItem(\n                        address = \"Manila, Quiapo\",\n                        contactNumber = \"09123456789\",\n                        id = \"rwLt7Y9Me7JCNJ3Fhh1SP4PaizqN\",\n                        location = Location(\n                            latitude = 14.084499224680876,\n                            longitude = 121.15170397731512\n                        ),\n                        name = \"Andres\",\n                        profilePictureUrl = \"https://i.imgur.com/1ZQ3Y7r.jpg\",\n                        rescueRequest = RescueRequest(\n                            respondents = listOf(\n                                Respondent(clientId = \"2\"),\n                                Respondent(clientId = \"3\")\n                            )\n                        ),\n                        transaction = Transaction(),\n                        userAssistance = UserAssistance(\n                            confirmationDetail = ConfirmationDetail(\n                                bikeType = \"road-bike\",\n                                description = \"Sample description\",\n                                message = \"I need help\",\n                            ),\n                            needHelp = true,\n                        ),\n\n                        ),\n                    UserItem(\n                        address = \"Manila, Quiapo\",\n                        contactNumber = \"09123456789\",\n                        id = \"2\",\n                        location = Location(\n                            latitude = 14.084499224680876,\n                            longitude = 121.15170397731512\n                        ),\n                        name = \"Andres\",\n                        profilePictureUrl = \"https://i.imgur.com/1ZQ3Y7r.jpg\",\n                        rescueRequest = RescueRequest(),\n                        transaction = Transaction(role = \"rescuer\", transactionId = \"12345\"),\n                        userAssistance = UserAssistance(\n                            confirmationDetail = ConfirmationDetail(\n                                bikeType = \"road-bike\",\n                                description = \"Sample description\",\n                                message = \"I need help\",\n                            ),\n                            needHelp = true,\n                        ),\n                    )\n                )\n            )\n\n            assertThat(mappingViewModel).acceptRescueRequest_rescuerHasCurrentTransaction_returnsTrue()\n\n        }\n\n    @Test\n    fun `09_AcceptRescueRequest event, mapping screen is shown`() =\n        runTest(UnconfinedTestDispatcher()) {\n            testMappingModule().location =\n                Location(latitude = 14.084499224680876, longitude = 121.15170397731512)\n            testMappingModule().users.clear()\n            testMappingModule().nearbyCyclist.value = NearbyCyclist(\n                listOf(\n                    UserItem(\n                        address = \"Manila, Quiapo\",\n                        contactNumber = \"09123456789\",\n                        id = \"rwLt7Y9Me7JCNJ3Fhh1SP4PaizqN\",\n                        location = Location(\n                            latitude = 14.084499224680876,\n                            longitude = 121.15170397731512\n                        ),\n                        name = \"Andres\",\n                        profilePictureUrl = \"https://i.imgur.com/1ZQ3Y7r.jpg\",\n                        rescueRequest = RescueRequest(\n                            respondents = listOf(\n                                Respondent(clientId = \"2\"),\n                                Respondent(clientId = \"3\")\n                            )\n                        ),\n                        transaction = Transaction(),\n                        userAssistance = UserAssistance(\n                            confirmationDetail = ConfirmationDetail(\n                                bikeType = \"road-bike\",\n                                description = \"Sample description\",\n                                message = \"I need help\",\n                            ),\n                            needHelp = true,\n                        ),\n\n                        ),\n                    UserItem(\n                        address = \"Manila, Quiapo\",\n                        contactNumber = \"09123456789\",\n                        id = \"2\",\n                        location = Location(\n                            latitude = 14.084499224680876,\n                            longitude = 121.15170397731512\n                        ),\n                        name = \"Andres\",\n                        profilePictureUrl = \"https://i.imgur.com/1ZQ3Y7r.jpg\",\n                        rescueRequest = RescueRequest(),\n                        userAssistance = UserAssistance(\n                            confirmationDetail = ConfirmationDetail(\n                                bikeType = \"road-bike\",\n                                description = \"Sample description\",\n                                message = \"I need help\",\n                            ),\n                            needHelp = true,\n                        ),\n                    )\n                )\n            )\n\n            assertThat(mappingViewModel).acceptRescueRequest_MappingScreen_IsShown()\n        }\n\n    @Test\n    fun `10_ChangeCamera Event, camera state should change`() = runTest {\n        assertThat(mappingViewModel).changeCameraState_cameraStateChanges_returnsTrue()\n    }\n\n    @Test\n    fun `11_SelectRescueMapIcon Event, toast message 'Tracking your location' is shown`() =\n        runTest(UnconfinedTestDispatcher()) {\n\n            testMappingModule().location = Location()\n            testMappingModule().users.clear()\n            testMappingModule().nearbyCyclist.value = NearbyCyclist(\n                listOf(\n                    UserItem(\n                        address = \"Manila, Quiapo\",\n                        contactNumber = \"09123456789\",\n                        id = \"rwLt7Y9Me7JCNJ3Fhh1SP4PaizqN\",\n                        name = \"Andres\",\n                        profilePictureUrl = \"https://i.imgur.com/1ZQ3Y7r.jpg\",\n                        location = Location(),\n                        rescueRequest = RescueRequest(\n                            respondents = listOf(\n                                Respondent(clientId = \"2\"),\n                                Respondent(clientId = \"3\")\n                            )\n                        ),\n                        transaction = Transaction(),\n                        userAssistance = UserAssistance(\n                            confirmationDetail = ConfirmationDetail(\n                                bikeType = \"road-bike\",\n                                description = \"Sample description\",\n                                message = \"I need help\",\n                            ),\n                            needHelp = true,\n                        ),\n\n                        ),\n                    UserItem(\n                        address = \"Manila, Quiapo\",\n                        contactNumber = \"09123456789\",\n                        id = \"2\",\n                        location = Location(\n                            latitude = 14.084499224680876,\n                            longitude = 121.15170397731512\n                        ),\n                        name = \"Andres\",\n                        profilePictureUrl = \"https://i.imgur.com/1ZQ3Y7r.jpg\",\n                        rescueRequest = RescueRequest(),\n                        userAssistance = UserAssistance(\n                            confirmationDetail = ConfirmationDetail(\n                                bikeType = \"road-bike\",\n                                description = \"Sample description\",\n                                message = \"I need help\",\n                            ),\n                            needHelp = true,\n                        ),\n                    ),\n\n                    UserItem(\n                        address = \"Tanauan Batangas\",\n                        contactNumber = \"09123456789\",\n                        id = \"3\",\n                        name = \"Juan\",\n                        profilePictureUrl = \"https://i.imgur.com/1ZQ3Y7r.jpg\",\n                        rescueRequest = RescueRequest(),\n                        userAssistance = UserAssistance(\n                            confirmationDetail = ConfirmationDetail(\n                                bikeType = \"mountain-bike\",\n                                description = \"Sample description\",\n                                message = \"I need help\",\n                            ),\n                            needHelp = true,\n                        ),\n\n                        )\n                )\n            )\n\n            assertThat(mappingViewModel).selectRescueeMapIcon_ToastMessageIsShown()\n        }\n\n    @Test\n    fun `12_SelectRescueMapIcon Event, toggle visibility of rescuee banner `() = runTest {\n\n        testMappingModule().users.clear()\n        testMappingModule().nearbyCyclist.value = NearbyCyclist(\n            listOf(\n                UserItem(\n                    address = \"Manila, Quiapo\",\n                    contactNumber = \"09123456789\",\n                    id = \"rwLt7Y9Me7JCNJ3Fhh1SP4PaizqN\",\n                    name = \"Andres\",\n                    profilePictureUrl = \"https://i.imgur.com/1ZQ3Y7r.jpg\",\n                    rescueRequest = RescueRequest(\n                        respondents = listOf(\n                            Respondent(clientId = \"2\"),\n                            Respondent(clientId = \"3\")\n                        )\n                    ),\n                    location = Location(\n                        latitude = 14.084499224680876,\n                        longitude = 121.15170397731512\n                    ),\n                    transaction = Transaction(),\n                    userAssistance = UserAssistance(\n                        confirmationDetail = ConfirmationDetail(\n                            bikeType = \"road-bike\",\n                            description = \"Sample description\",\n                            message = \"I need help\",\n                        ),\n                        needHelp = true,\n                    ),\n\n                    ),\n                UserItem(\n                    address = \"Manila, Quiapo\",\n                    contactNumber = \"09123456789\",\n                    id = \"2\",\n                    location = Location(\n                        latitude = 14.084499224680876,\n                        longitude = 121.15170397731512\n                    ),\n                    name = \"Andres\",\n                    profilePictureUrl = \"https://i.imgur.com/1ZQ3Y7r.jpg\",\n                    rescueRequest = RescueRequest(),\n                    userAssistance = UserAssistance(\n                        confirmationDetail = ConfirmationDetail(\n                            bikeType = \"road-bike\",\n                            description = \"Sample description\",\n                            message = \"I need help\",\n                        ),\n                        needHelp = true,\n                    ),\n                ),\n\n                UserItem(\n                    address = \"Tanauan Batangas\",\n                    contactNumber = \"09123456789\",\n                    id = \"3\",\n                    name = \"Juan\",\n                    profilePictureUrl = \"https://i.imgur.com/1ZQ3Y7r.jpg\",\n                    rescueRequest = RescueRequest(),\n                    userAssistance = UserAssistance(\n                        confirmationDetail = ConfirmationDetail(\n                            bikeType = \"mountain-bike\",\n                            description = \"Sample description\",\n                            message = \"I need help\",\n                        ),\n                        needHelp = true,\n                    ),\n                    location = Location(\n                        latitude = 14.084499224680876,\n                        longitude = 121.15170397731512\n                    ),\n                )\n            )\n        )\n        testMappingModule().calculatedDistanceInMeters = 1000.00\n\n        assertThat(mappingViewModel)\n            .selectRescueMapIcon_SelectedRescueeMapIconStateUpdated()\n            .dismissRescueeBanner_SelectedRescueeMapIconStateUpdated()\n\n    }\n\n    @Test\n    fun `13_Toggle Navigation, toggle navigation state is updated`() = runTest {\n        assertThat(mappingViewModel)\n            .startNavigation_isNavigationState_returnsTrue()\n            .stopNavigation_isNavigatingState_returnsFalse()\n    }\n\n    @Test\n    fun `14_ShowRouteDirections Event, hasInternet state is updated to false`() = runTest {\n        testMappingModule().shouldReturnNetworkError = true\n        assertThat(mappingViewModel)\n            .showRouteDirections_hasInternetState_isFalse()\n    }\n\n    @Test\n    fun `15_ShowRouteDirections Event, hasInternet state is updated to true`() = runTest {\n        testMappingModule().shouldReturnNetworkError = false\n        assertThat(mappingViewModel)\n            .showRouteDirections_hasInternetState_isTrue()\n    }\n\n    @Test\n    fun `16_ShowRouteDirections Event, routeDirection state is updated`() = runTest {\n        testMappingModule().shouldReturnNetworkError = false\n        testMappingModule().routeDirectionGeometry = \"sample-geometry\"\n        testMappingModule().routeDirectionDuration = 1000.0\n        assertThat(mappingViewModel)\n            .showRouteDirections_routeDirectionStateUpdated()\n    }\n\n    @Test\n    fun `17_SignOut Event, sign in screen is shown`() = runTest(UnconfinedTestDispatcher()) {\n        assertThat(mappingViewModel)\n            .signOutSignInScreen_IsShown()\n    }\n\n    @Test\n    fun `18_StartPinging Event, toggle searchingAssistance`() = runTest {\n        assertThat(mappingViewModel)\n            .startPinging_searchingAssistance_returnsTrue()\n            .stopPinging_searchingAssistance_returnsFalse()\n    }\n\n\n    @Test\n    fun `19_LoadUserProfile Event, user profile available returns true`() = runTest {\n        assertThat(mappingViewModel)\n            .loadUserProfile_userProfileAvailable_returnsTrue()\n    }\n\n    @Test\n    fun `20_LoadUserProfile Event, user profile available returns false`() = runTest {\n        testAuthModule().photoUrl = \"\"\n        testAuthModule().name = \"\"\n        assertThat(mappingViewModel)\n            .loadUserProfile_userProfileAvailable_returnsFalse()\n    }\n\n    @Test\n    fun `21_ChangeBottomSheet Event, bottomSheetType state equals to its Event`() = runTest {\n        assertThat(mappingViewModel)\n            .changeBottomSheet_stateReturnsOnGoingRescueType()\n            .changeBottomSheet_stateReturnsOnRescuerArrivedType()\n            .changeBottomSheet_stateReturnsDestinationReachedType()\n            .changeBottomSheet_stateReturnsSearchAssistanceType()\n    }\n\n    @Test\n    fun `22_Dismiss dialog state is dismissed`() = runTest {\n        assertThat(mappingViewModel)\n            .dismissAlertDialog_returnsTrue()\n            .dismissNoInternetDialog_returnsTrue()\n    }\n\n    @Test\n    fun `23_CancelRequestHelp Event, requestHelpButton is shown and rescueRequestAcceptedUser state is null`() =\n        runTest {\n            with(assertThat(mappingViewModel)) {\n                testMappingModule().shouldReturnNetworkError = false\n                cancelRequestHelp_requestHelpButtonIsShown_And_rescueRequestAcceptedIsNull()\n                testMappingModule().shouldReturnNetworkError = true\n                cancelRequestHelp_hasInternetState_isFalse()\n            }\n\n        }\n\n\n    @Test\n    fun `24_DeclineRescueRequest Event, decline rescue request respondent is removed`() = runTest {\n        testMappingModule().shouldReturnNetworkError = false\n        testMappingModule().users.clear()\n        testMappingModule().nearbyCyclist.value = NearbyCyclist(\n            users = listOf(\n                UserItem(\n                    id = \"rwLt7Y9Me7JCNJ3Fhh1SP4PaizqN\",\n                    name = \"John\",\n                    address = \"Tanauan\",\n                    contactNumber = \"09123456789\",\n                    location = Location(latitude = 14.251, longitude = 14.5238),\n                    profilePictureUrl = \"https//:sample.png\",\n                    rescueRequest = RescueRequest(\n                        respondents = listOf(\n                            Respondent(\n                                clientId = \"2\",\n                            ),\n                            Respondent(\n                                clientId = \"3\",\n                            ),\n                            Respondent(\n                                clientId = \"4\",\n                            ),\n                            Respondent(\n                                clientId = \"5\",\n                            ),\n                        )\n                    ),\n                    transaction = Transaction(role = \"rescuee\", transactionId = \"1234\"),\n                    userAssistance = UserAssistance(\n                        confirmationDetail = ConfirmationDetail(\n                            bikeType = \"mountain bike\",\n                            description = \"flat tire\",\n                        )\n                    ),\n                ),\n                UserItem(\n                    id = \"2\",\n                    name = \"Doe\",\n                    address = \"Tanauan Batangas\",\n                    contactNumber = \"09123456789\",\n                    location = Location(latitude = 14.251, longitude = 14.5238),\n                    profilePictureUrl = \"https//:sample.png\",\n                ),\n                UserItem(\n                    id = \"3\",\n                    name = \"DJay\",\n                    address = \"Tanauan\",\n                    contactNumber = \"09123456789\",\n                    location = Location(latitude = 14.251, longitude = 14.5238),\n                    profilePictureUrl = \"https//:sample.png\",\n                ),\n                UserItem(\n                    id = \"4\",\n                    name = \"John\",\n                    address = \"Tanauan\",\n                    contactNumber = \"09123456789\",\n                    location = Location(latitude = 14.251, longitude = 14.5238),\n                    profilePictureUrl = \"https//:sample.png\",\n                ),\n                UserItem(\n                    id = \"5\",\n                    name = \"John\",\n                    address = \"Tanauan\",\n                    contactNumber = \"09123456789\",\n                    location = Location(latitude = 14.251, longitude = 14.5238),\n                    profilePictureUrl = \"https//:sample.png\",\n                ),\n            )\n\n        )\n        assertThat(mappingViewModel)\n            .declineRescueRequest_rescueRespondentsRemoved_returnsTrue()\n    }\n\n    @Test\n    fun `25_DeclineRescueRequest Event, toast message 'Failed to Remove Respondent' is shown`() =\n        runTest(\n            UnconfinedTestDispatcher()\n        ) {\n            testMappingModule().shouldReturnNetworkError = false\n            testMappingModule().users.clear()\n            testMappingModule().nearbyCyclist.value = NearbyCyclist(\n                users = listOf(\n                    UserItem(\n                        id = \"rwLt7Y9Me7JCNJ3Fhh1SP4PaizqN\",\n                        name = \"John\",\n                        address = \"Tanauan\",\n                        contactNumber = \"09123456789\",\n                        location = Location(latitude = 14.251, longitude = 14.5238),\n                        profilePictureUrl = \"https//:sample.png\",\n                        rescueRequest = RescueRequest(\n                            respondents = listOf(\n                                Respondent(\n                                    clientId = \"2\",\n                                ),\n                                Respondent(\n                                    clientId = \"3\",\n                                ),\n                                Respondent(\n                                    clientId = \"4\",\n                                ),\n                                Respondent(\n                                    clientId = \"5\",\n                                ),\n                            )\n                        ),\n                        transaction = Transaction(role = \"rescuee\", transactionId = \"1234\"),\n                        userAssistance = UserAssistance(\n                            confirmationDetail = ConfirmationDetail(\n                                bikeType = \"mountain bike\",\n                                description = \"flat tire\",\n                            )\n                        ),\n                    ),\n                    UserItem(\n                        id = \"2\",\n                        name = \"Doe\",\n                        address = \"Tanauan Batangas\",\n                        contactNumber = \"09123456789\",\n                        location = Location(latitude = 14.251, longitude = 14.5238),\n                        profilePictureUrl = \"https//:sample.png\",\n                    ),\n                    UserItem(\n                        id = \"3\",\n                        name = \"DJay\",\n                        address = \"Tanauan\",\n                        contactNumber = \"09123456789\",\n                        location = Location(latitude = 14.251, longitude = 14.5238),\n                        profilePictureUrl = \"https//:sample.png\",\n                    ),\n                    UserItem(\n                        id = \"4\",\n                        name = \"John\",\n                        address = \"Tanauan\",\n                        contactNumber = \"09123456789\",\n                        location = Location(latitude = 14.251, longitude = 14.5238),\n                        profilePictureUrl = \"https//:sample.png\",\n                    ),\n                    UserItem(\n                        id = \"5\",\n                        name = \"John\",\n                        address = \"Tanauan\",\n                        contactNumber = \"09123456789\",\n                        location = Location(latitude = 14.251, longitude = 14.5238),\n                        profilePictureUrl = \"https//:sample.png\",\n                    ),\n                )\n            )\n\n            assertThat(mappingViewModel).declineRescueRequest_rescueRespondentsRemoved_returnsFalse()\n        }\n\n    @Test\n    fun `26_DeclineRescueRequest Event, no internet toast message is shown`() = runTest {\n        testMappingModule().shouldReturnNetworkError = true\n        assertThat(mappingViewModel).declineRescueRequest_NoInternet_ToastMessageIsShown()\n    }\n\n    @Test\n    fun `27_RemoveRouteDirections Event, routeDirection state is null`() = runTest {\n        testMappingModule().routeDirectionDuration = 1000.0\n        testMappingModule().routeDirectionGeometry = \"sample_geometry\"\n        assertThat(mappingViewModel)\n            .removeRouteDirection_routeDirectionStateIsNull()\n    }\n\n    @Test\n    fun `28_RespondToHelp Event, hasInternet state is false`() = runTest{\n        testMappingModule().location = Location(latitude = 14.25216, longitude = 14.6939)\n        testMappingModule().shouldReturnNetworkError = true\n        assertThat(mappingViewModel)\n            .respondToHelp_hasInternetState_returnsFalse()\n\n    }\n\n    @Test\n    fun `29_RespondToHelp Event, 'Rescue request sent' toast message is shown`() = runTest(\n        UnconfinedTestDispatcher()){\n        testMappingModule().location = Location(latitude = 14.25216, longitude = 14.6939)\n        testMappingModule().shouldReturnNetworkError = false\n        testAuthModule().name = \"Miko jasmin\"\n\n        testMappingModule().users.clear()\n        testMappingModule().nearbyCyclist.value = NearbyCyclist(\n            listOf(\n                UserItem(\n                    address = \"Manila, Quiapo\",\n                    contactNumber = \"09123456789\",\n                    id = \"rwLt7Y9Me7JCNJ3Fhh1SP4PaizqN\",\n                    name = \"Andres\",\n                    profilePictureUrl = \"https://i.imgur.com/1ZQ3Y7r.jpg\",\n                    rescueRequest = RescueRequest(\n                        respondents = listOf(\n                            Respondent(clientId = \"2\"),\n                            Respondent(clientId = \"3\")\n                        )\n                    ),\n                    location = Location(\n                        latitude = 14.084499224680876,\n                        longitude = 121.15170397731512\n                    ),\n                    transaction = Transaction(),\n                    userAssistance = UserAssistance(\n                        confirmationDetail = ConfirmationDetail(\n                            bikeType = \"road-bike\",\n                            description = \"Sample description\",\n                            message = \"I need help\",\n                        ),\n                        needHelp = true,\n                    ),\n\n                    ),\n                UserItem(\n                    address = \"Manila, Quiapo\",\n                    contactNumber = \"09123456789\",\n                    id = \"2\",\n                    location = Location(\n                        latitude = 14.084499224680876,\n                        longitude = 121.15170397731512\n                    ),\n                    name = \"Andres\",\n                    profilePictureUrl = \"https://i.imgur.com/1ZQ3Y7r.jpg\",\n                    rescueRequest = RescueRequest(),\n                    userAssistance = UserAssistance(\n                        confirmationDetail = ConfirmationDetail(\n                            bikeType = \"road-bike\",\n                            description = \"Sample description\",\n                            message = \"I need help\",\n                        ),\n                        needHelp = true,\n                    ),\n                ),\n\n                UserItem(\n                    address = \"Tanauan Batangas\",\n                    contactNumber = \"09123456789\",\n                    id = \"3\",\n                    name = \"Juan\",\n                    profilePictureUrl = \"https://i.imgur.com/1ZQ3Y7r.jpg\",\n                    rescueRequest = RescueRequest(),\n                    userAssistance = UserAssistance(\n                        confirmationDetail = ConfirmationDetail(\n                            bikeType = \"mountain-bike\",\n                            description = \"Sample description\",\n                            message = \"I need help\",\n                        ),\n                        needHelp = true,\n                    ),\n                    location = Location(\n                        latitude = 14.084499224680876,\n                        longitude = 121.15170397731512\n                    ),\n                )\n            )\n        )\n        testMappingModule().calculatedDistanceInMeters = 1000.00\n\n        assertThat(mappingViewModel)\n            .selectRescueMapIcon_SelectedRescueeMapIconStateUpdated()\n            .respondToHelp_RescueRequestSent_ToastMessageIsShown()\n    }\n\n\n    @Test\n    fun `30_CancelRescueTransaction Event then reset ui state`() = runTest(UnconfinedTestDispatcher()){\n        testMappingModule().location = Location(latitude = 14.25216, longitude = 14.6939)\n        testMappingModule().shouldReturnNetworkError = false\n        testAuthModule().name = \"Miko\"\n\n        testMappingModule().users.clear()\n        testMappingModule().nearbyCyclist.value = NearbyCyclist(\n            listOf(\n                UserItem(\n                    address = \"Manila, Quiapo\",\n                    contactNumber = \"09123456789\",\n                    id = \"rwLt7Y9Me7JCNJ3Fhh1SP4PaizqN\",\n                    name = \"Andres\",\n                    profilePictureUrl = \"https://i.imgur.com/1ZQ3Y7r.jpg\",\n                    location = Location(\n                        latitude = 14.084499224680876,\n                        longitude = 121.15170397731512\n                    ),\n                    transaction = Transaction(role = \"rescuer\", transactionId = \"1234\"),\n                    userAssistance = UserAssistance(\n                        confirmationDetail = ConfirmationDetail(\n                            bikeType = \"road-bike\",\n                            description = \"Sample description\",\n                            message = \"I need help\",\n                        ),\n                        needHelp = true,\n                    ),\n                    ),\n                UserItem(\n                    address = \"Manila, Quiapo\",\n                    contactNumber = \"09123456789\",\n                    id = \"2\",\n                    location = Location(\n                        latitude = 14.084499224680876,\n                        longitude = 121.15170397731512\n                    ),\n                    name = \"Andres\",\n                    profilePictureUrl = \"https://i.imgur.com/1ZQ3Y7r.jpg\",\n                    transaction = Transaction(role = \"rescuee\", transactionId = \"1234\"),\n                    rescueRequest = RescueRequest(),\n                    userAssistance = UserAssistance(\n                        confirmationDetail = ConfirmationDetail(\n                            bikeType = \"road-bike\",\n                            description = \"Sample description\",\n                            message = \"I need help\",\n                        ),\n                        needHelp = true,\n                    ),\n                ),\n            )\n        )\n        \n        testMappingModule().calculatedDistanceInMeters = 1000.00\n        testMappingModule().rescueTransaction.value = RescueTransaction(\n            transactions = listOf(\n                RescueTransactionItem(\n                    id = \"1234\",\n                    rescuerId = \"1\",\n                    rescueeId = \"2\",\n                    route = Route(\n                        startingLocation = Location(latitude = 14.25125, longitude = 14.12497),\n                        destinationLocation = Location(latitude = 14.25125, longitude = 14.12497),\n                    )\n                ),))\n\n        assertThat(mappingViewModel)\n            .cancelRescueTransaction_resetUiState()\n\n    }\n\n    @Test\n    fun `31_RespondToHelp Event, 'AddressNotFound' toast message is shown`() = runTest{\n        testMappingModule().location = Location(latitude = 14.25216, longitude = 14.6939)\n        testMappingModule().address.value = \"\"\n        assertThat(mappingViewModel)\n            .respondToHelp_AddressNotFound_ToastMessageIsShown()\n    }\n}\n\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/test/java/com/example/cyclistance/feature_mapping/presentation/MappingViewModelTest.kt b/app/src/test/java/com/example/cyclistance/feature_mapping/presentation/MappingViewModelTest.kt
--- a/app/src/test/java/com/example/cyclistance/feature_mapping/presentation/MappingViewModelTest.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/test/java/com/example/cyclistance/feature_mapping/presentation/MappingViewModelTest.kt	(date 1692337778133)
@@ -6,10 +6,10 @@
 import com.example.cyclistance.di.TestMappingModule
 import com.example.cyclistance.feature_mapping.data.remote.dto.rescue_transaction.Route
 import com.example.cyclistance.feature_mapping.data.remote.dto.user_dto.*
-import com.example.cyclistance.feature_mapping.domain.model.api.user.NearbyCyclist
-import com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RescueTransaction
-import com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RescueTransactionItem
-import com.example.cyclistance.feature_mapping.domain.model.api.user.UserItem
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.rescue_transaction.RescueTransaction
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.rescue_transaction.RescueTransactionItem
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.user.NearbyCyclist
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.user.UserItem
 import com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.MappingViewModel
 import com.example.cyclistance.test_rule.MainDispatcherRule
 import kotlinx.coroutines.ExperimentalCoroutinesApi
Index: app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/user/ConfirmationDetailModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/user/ConfirmationDetailModel.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/user/ConfirmationDetailModel.kt
rename from app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/user/ConfirmationDetailModel.kt
rename to app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/user/ConfirmationDetailModel.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/user/ConfirmationDetailModel.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/user/ConfirmationDetailModel.kt	(date 1692288837369)
@@ -1,4 +1,4 @@
-package com.example.cyclistance.feature_mapping.domain.model.api.user
+package com.example.cyclistance.feature_mapping.domain.model.remote_models.user
 
 import android.os.Parcelable
 import kotlinx.parcelize.Parcelize
Index: app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/user/UserItem.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/user/UserItem.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/user/UserItem.kt
rename from app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/user/UserItem.kt
rename to app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/user/UserItem.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/user/UserItem.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/user/UserItem.kt	(date 1692288837269)
@@ -1,4 +1,4 @@
-package com.example.cyclistance.feature_mapping.domain.model.api.user
+package com.example.cyclistance.feature_mapping.domain.model.remote_models.user
 
 import android.os.Parcelable
 import com.example.cyclistance.core.utils.annotations.StableState
Index: app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/user/UserAssistanceModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/user/UserAssistanceModel.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/user/UserAssistanceModel.kt
rename from app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/user/UserAssistanceModel.kt
rename to app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/user/UserAssistanceModel.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/user/UserAssistanceModel.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/user/UserAssistanceModel.kt	(date 1692288836943)
@@ -1,4 +1,4 @@
-package com.example.cyclistance.feature_mapping.domain.model.api.user
+package com.example.cyclistance.feature_mapping.domain.model.remote_models.user
 
 import android.os.Parcelable
 import com.example.cyclistance.core.utils.annotations.StableState
Index: app/src/test/java/com/example/cyclistance/feature_mapping/presentation/MappingViewModelStateVerifier.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_mapping.presentation\n\nimport app.cash.turbine.test\nimport com.example.cyclistance.core.utils.constants.MappingConstants.DEFAULT_LATITUDE\nimport com.example.cyclistance.core.utils.constants.MappingConstants.DEFAULT_LONGITUDE\nimport com.example.cyclistance.core.utils.constants.MappingConstants.DEFAULT_MAP_ZOOM_LEVEL\nimport com.example.cyclistance.feature_mapping.domain.model.ui.rescue.NewRescueRequestsModel\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RescueTransactionItem\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.event.MappingVmEvent\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.event.MappingEvent\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.MappingViewModel\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.utils.BottomSheetType\nimport com.mapbox.geojson.Point\nimport com.mapbox.mapboxsdk.geometry.LatLng\nimport kotlinx.coroutines.delay\nimport org.junit.Assert\nimport kotlin.time.Duration.Companion.minutes\n\nfun assertThat(someViewModel: MappingViewModel): MappingViewModelStateVerifier { // inspired by Hamcrest\n    return MappingViewModelStateVerifier(someViewModel)\n}\n\nclass MappingViewModelStateVerifier(private val mappingViewModel: MappingViewModel) {\n\n\n\n    private val state = mappingViewModel.state\n    private val event = mappingViewModel.eventFlow\n\n\n    suspend fun nearbyCyclistsAvailable(): MappingViewModelStateVerifier {\n        mappingViewModel.onEvent(MappingVmEvent.SubscribeToDataChanges)\n        mappingViewModel.onEvent(MappingVmEvent.LoadData)\n        delay(1000)\n        state.test {\n            val nearbyCyclists = awaitItem().nearbyCyclists?.users\n            Assert.assertNotNull(nearbyCyclists)\n            Assert.assertTrue(nearbyCyclists!!.isNotEmpty())\n        }\n        return this\n    }\n\n    suspend fun nearbyCyclistsNotAvailable(): MappingViewModelStateVerifier {\n        mappingViewModel.onEvent(MappingVmEvent.SubscribeToDataChanges)\n        mappingViewModel.onEvent(MappingVmEvent.LoadData)\n        state.test {\n            val nearbyCyclists = awaitItem().nearbyCyclists?.users\n            Assert.assertTrue(nearbyCyclists == null || nearbyCyclists.isEmpty())\n        }\n\n        return this\n    }\n\n    suspend fun requestHelp_ToastMessageSearchingGps_IsShown(): MappingViewModelStateVerifier {\n\n        mappingViewModel.onEvent(MappingVmEvent.SubscribeToDataChanges)\n        mappingViewModel.onEvent(MappingVmEvent.LoadData)\n        event.test(timeout = 1.5.minutes) {\n            mappingViewModel.onEvent(event = MappingVmEvent.RequestHelp)\n            Assert.assertEquals(MappingEvent.ShowToastMessage(\"Searching for GPS\"), awaitItem())\n        }\n\n        return this\n    }\n\n\n    suspend fun requestHelp_ConfirmDetailScreen_IsShown(): MappingViewModelStateVerifier {\n        mappingViewModel.onEvent(MappingVmEvent.SubscribeToDataChanges)\n        mappingViewModel.onEvent(MappingVmEvent.LoadData)\n\n        event.test(timeout = 1.5.minutes) {\n            mappingViewModel.onEvent(event = MappingVmEvent.RequestHelp)\n            val result = awaitItem()\n            Assert.assertEquals(MappingEvent.RequestHelpSuccess, result)\n            Assert.assertNotEquals(MappingEvent.ShowToastMessage(\"Searching for GPS\"), result)\n        }\n\n        return this\n    }\n\n    suspend fun requestHelp_profileUploadedState_returnsTrue(): MappingViewModelStateVerifier {\n        state.test(timeout = 1.5.minutes) {\n            mappingViewModel.onEvent(event = MappingVmEvent.RequestHelp)\n            delay(1000)\n            Assert.assertTrue(\"Profile Uploaded\", awaitItem().profileUploaded)\n        }\n        return this\n\n    }\n\n\n    suspend fun acceptRescueRequest_CantReachRescuer_ToastMessage_IsShown(): MappingViewModelStateVerifier {\n        mappingViewModel.onEvent(MappingVmEvent.SubscribeToDataChanges)\n        mappingViewModel.onEvent(MappingVmEvent.LoadData)\n        event.test(timeout = 1.minutes) {\n            mappingViewModel.onEvent(event = MappingVmEvent.AcceptRescueRequest(id = \"2\"))\n            Assert.assertEquals(MappingEvent.ShowToastMessage(\"Can't reach Rescuer\"), awaitItem())\n        }\n        return this\n    }\n\n\n    suspend fun acceptRescueRequest_LocationNotFound_ToastMessage_IsShown(): MappingViewModelStateVerifier {\n        mappingViewModel.onEvent(MappingVmEvent.SubscribeToDataChanges)\n        mappingViewModel.onEvent(MappingVmEvent.LoadData)\n        event.test(timeout = 1.minutes) {\n            mappingViewModel.onEvent(event = MappingVmEvent.AcceptRescueRequest(id = \"2\"))\n            Assert.assertEquals(MappingEvent.ShowToastMessage(\"Location not found\"), awaitItem())\n        }\n        return this\n    }\n\n    suspend fun acceptRescueRequest_userHasCurrentTransaction_returnsTrue() {\n        mappingViewModel.onEvent(MappingVmEvent.SubscribeToDataChanges)\n        mappingViewModel.onEvent(MappingVmEvent.LoadData)\n        delay(2000)\n        mappingViewModel.onEvent(event = MappingVmEvent.AcceptRescueRequest(id = \"2\"))\n        state.test {\n            val transaction = awaitItem().user.transaction\n            Assert.assertTrue(\n                \"User has current transaction\",\n                transaction?.transactionId!!.isNotEmpty()\n            )\n        }\n    }\n\n    suspend fun acceptRescueRequest_rescuerHasCurrentTransaction_returnsTrue() {\n        mappingViewModel.onEvent(MappingVmEvent.SubscribeToDataChanges)\n        mappingViewModel.onEvent(MappingVmEvent.LoadData)\n        delay(200)\n        mappingViewModel.onEvent(event = MappingVmEvent.AcceptRescueRequest(id = \"2\"))\n        delay(200)\n        state.test {\n            val transaction = awaitItem().rescueRequestAcceptedUser?.transaction\n            Assert.assertTrue(\n                \"User has current transaction\",\n                transaction?.transactionId!!.isNotEmpty()\n            )\n        }\n    }\n\n    suspend fun acceptRescueRequest_MappingScreen_IsShown(): MappingViewModelStateVerifier {\n        mappingViewModel.onEvent(MappingVmEvent.SubscribeToDataChanges)\n        mappingViewModel.onEvent(MappingVmEvent.LoadData)\n        delay(5000)\n        event.test(timeout = 1.5.minutes) {\n            mappingViewModel.onEvent(event = MappingVmEvent.AcceptRescueRequest(id = \"2\"))\n            Assert.assertEquals(MappingEvent.AcceptRescueRequestSuccess, awaitItem())\n        }\n        return this\n    }\n\n\n    suspend fun changeCameraState_cameraStateChanges_returnsTrue():MappingViewModelStateVerifier {\n        mappingViewModel.onEvent(\n            event = MappingVmEvent.ChangeCameraPosition(\n                cameraPosition = LatLng(14.000, 14.000,), cameraZoomLevel = 10.0\n            )\n        )\n        state.test {\n            val result = awaitItem().cameraState\n            Assert.assertTrue(result.cameraPosition.latitude != DEFAULT_LATITUDE)\n            Assert.assertTrue(result.cameraPosition.longitude != DEFAULT_LONGITUDE)\n            Assert.assertTrue(result.cameraZoom != DEFAULT_MAP_ZOOM_LEVEL)\n\n        }\n        return this\n    }\n\n\n    suspend fun selectRescueeMapIcon_ToastMessageIsShown():MappingViewModelStateVerifier{\n        mappingViewModel.onEvent(MappingVmEvent.SubscribeToDataChanges)\n        mappingViewModel.onEvent(MappingVmEvent.LoadData)\n        delay(2000)\n\n        event.test(timeout = 1.minutes) {\n            mappingViewModel.onEvent(event = MappingVmEvent.SelectRescueMapIcon(id = \"2\"))\n            delay(2000)\n            Assert.assertEquals(MappingEvent.ShowToastMessage(\"Tracking your Location\"), awaitItem())\n        }\n        return this\n\n    }\n\n    suspend fun selectRescueMapIcon_SelectedRescueeMapIconStateUpdated():MappingViewModelStateVerifier{\n\n        mappingViewModel.onEvent(MappingVmEvent.SubscribeToDataChanges)\n        mappingViewModel.onEvent(MappingVmEvent.LoadData)\n        delay(200)\n        mappingViewModel.onEvent(event = MappingVmEvent.SelectRescueMapIcon(id = \"2\"))\n        delay(300)\n        val result = state.value.selectedRescueeMapIcon\n        Assert.assertNotNull(result)\n        return this\n\n    }\n\n    suspend fun dismissRescueeBanner_SelectedRescueeMapIconStateUpdated():MappingViewModelStateVerifier{\n\n        mappingViewModel.onEvent(MappingVmEvent.SubscribeToDataChanges)\n        mappingViewModel.onEvent(MappingVmEvent.LoadData)\n        delay(200)\n        mappingViewModel.onEvent(event = MappingVmEvent.SelectRescueMapIcon(id = \"2\"))\n        delay(300)\n        mappingViewModel.onEvent(event = MappingVmEvent.DismissRescueeBanner)\n        delay(300)\n        val result = state.value.selectedRescueeMapIcon\n        Assert.assertNull(result)\n        return this\n\n    }\n\n    suspend fun startNavigation_isNavigationState_returnsTrue():MappingViewModelStateVerifier{\n        mappingViewModel.onEvent(event = MappingVmEvent.StartNavigation)\n        delay(300)\n        val result = state.value.isNavigating\n        Assert.assertTrue(result)\n        return this\n\n    }\n\n    suspend fun stopNavigation_isNavigatingState_returnsFalse():MappingViewModelStateVerifier{\n        mappingViewModel.onEvent(event = MappingVmEvent.StopNavigation)\n        delay(300)\n        val result = state.value.isNavigating\n        Assert.assertFalse(result)\n        return this\n\n    }\n\n    suspend fun showRouteDirections_hasInternetState_isFalse(): MappingViewModelStateVerifier{\n        mappingViewModel.onEvent(event = MappingVmEvent.GetRouteDirections(\n            origin = Point.fromLngLat(14.000, 14.000),\n            destination = Point.fromLngLat(14.000, 14.000)\n        ))\n        delay(500)\n        val result = state.value.hasInternet\n        Assert.assertFalse(result)\n        return this\n    }\n    suspend fun showRouteDirections_hasInternetState_isTrue(): MappingViewModelStateVerifier{\n        mappingViewModel.onEvent(event = MappingVmEvent.GetRouteDirections(\n            origin = Point.fromLngLat(14.000, 14.000),\n            destination = Point.fromLngLat(14.000, 14.000)\n        ))\n        delay(500)\n        val result = state.value.hasInternet\n        Assert.assertTrue(result)\n        return this\n    }\n\n    suspend fun showRouteDirections_routeDirectionStateUpdated(): MappingViewModelStateVerifier{\n        mappingViewModel.onEvent(event = MappingVmEvent.GetRouteDirections(\n            origin = Point.fromLngLat(14.000, 14.000),\n            destination = Point.fromLngLat(14.000, 14.000)\n        ))\n        delay(500)\n        val routeDirection = state.value.routeDirection\n        val hasInternet = state.value.hasInternet\n        Assert.assertTrue(hasInternet)\n        Assert.assertNotNull(routeDirection)\n        Assert.assertTrue(routeDirection!!.geometry.isNotEmpty())\n        Assert.assertTrue(routeDirection.duration != 0.00)\n        return this\n    }\n\n    suspend fun signOutSignInScreen_IsShown(): MappingViewModelStateVerifier {\n        event.test {\n            mappingViewModel.onEvent(event = MappingVmEvent.SignOut)\n            when (awaitItem()) {\n                is MappingEvent.SignOutSuccess -> {\n                    Assert.assertTrue(\"Showing sign in screen\", true)\n                }\n                else -> {\n                    throw Exception(\"Expected MappingUiEvent.ShowSignInScreen\")\n                }\n            }\n        }\n        return this\n    }\n\n\n    fun startPinging_searchingAssistance_returnsTrue(): MappingViewModelStateVerifier {\n        mappingViewModel.onEvent(event = MappingVmEvent.StartPinging)\n        Assert.assertTrue(\"Searching Assistance\", state.value.searchingAssistance)\n        return this\n    }\n\n    fun stopPinging_searchingAssistance_returnsFalse(): MappingViewModelStateVerifier {\n        mappingViewModel.onEvent(event = MappingVmEvent.StopPinging)\n        Assert.assertFalse(\"Searching Assistance\", state.value.searchingAssistance)\n        return this\n    }\n\n    suspend fun loadUserProfile_userProfileAvailable_returnsTrue(): MappingViewModelStateVerifier {\n        mappingViewModel.onEvent(event = MappingVmEvent.LoadUserProfile)\n        delay(1000)\n        val name = state.value.name\n        val photoUrl = state.value.photoUrl\n        Assert.assertTrue(\n            \"User Profile Available\",\n            name.isNotEmpty() && photoUrl.isNotEmpty()\n        )\n        return this\n    }\n\n    suspend fun loadUserProfile_userProfileAvailable_returnsFalse(): MappingViewModelStateVerifier {\n        mappingViewModel.onEvent(event = MappingVmEvent.LoadUserProfile)\n        delay(1000)\n        val name = state.value.name\n        val photoUrl = state.value.photoUrl\n        Assert.assertTrue(\n            \"User Profile Available\",\n            name.isEmpty() && photoUrl.isEmpty()\n        )\n        return this\n    }\n\n    suspend fun changeBottomSheet_stateReturnsOnGoingRescueType(): MappingViewModelStateVerifier {\n        mappingViewModel.onEvent(event = MappingVmEvent.ChangeBottomSheet(bottomSheetType = BottomSheetType.OnGoingRescue.type))\n        delay(1000)\n        Assert.assertEquals(BottomSheetType.OnGoingRescue.type, state.value.bottomSheetType)\n        return this\n    }\n\n    suspend fun changeBottomSheet_stateReturnsOnRescuerArrivedType(): MappingViewModelStateVerifier {\n        mappingViewModel.onEvent(event = MappingVmEvent.ChangeBottomSheet(bottomSheetType = BottomSheetType.RescuerArrived.type))\n        delay(1000)\n        Assert.assertEquals(BottomSheetType.RescuerArrived.type, state.value.bottomSheetType)\n        return this\n    }\n\n    suspend fun changeBottomSheet_stateReturnsDestinationReachedType(): MappingViewModelStateVerifier {\n        mappingViewModel.onEvent(event = MappingVmEvent.ChangeBottomSheet(bottomSheetType = BottomSheetType.DestinationReached.type))\n        delay(1000)\n        Assert.assertEquals(BottomSheetType.DestinationReached.type, state.value.bottomSheetType)\n        return this\n    }\n\n    suspend fun changeBottomSheet_stateReturnsSearchAssistanceType(): MappingViewModelStateVerifier {\n        mappingViewModel.onEvent(event = MappingVmEvent.ChangeBottomSheet(bottomSheetType = BottomSheetType.SearchAssistance.type))\n        delay(1000)\n        Assert.assertEquals(BottomSheetType.SearchAssistance.type, state.value.bottomSheetType)\n        return this\n    }\n\n\n\n    fun dismissAlertDialog_returnsTrue(): MappingViewModelStateVerifier {\n        mappingViewModel.onEvent(event = MappingVmEvent.DismissAlertDialog)\n        val dialogDismissed =  state.value.alertDialogModel.run {\n            this.title.isEmpty() && this.description.isEmpty()\n        }\n        Assert.assertTrue(\"Alert Dialog Dismissed\",dialogDismissed)\n        return this\n    }\n\n    fun dismissNoInternetDialog_returnsTrue(): MappingViewModelStateVerifier {\n        mappingViewModel.onEvent(event = MappingVmEvent.DismissNoInternetDialog)\n        Assert.assertTrue(state.value.hasInternet)\n        return this\n    }\n\n    suspend fun cancelRequestHelp_requestHelpButtonIsShown_And_rescueRequestAcceptedIsNull(): MappingViewModelStateVerifier {\n        mappingViewModel.onEvent(event = MappingVmEvent.CancelRequestHelp)\n\n        delay(1000)\n        Assert.assertTrue(state.value.requestHelpButtonVisible)\n        Assert.assertNull(state.value.rescueRequestAcceptedUser)\n        Assert.assertTrue(state.value.hasInternet)\n        return this\n    }\n\n    suspend fun cancelRequestHelp_hasInternetState_isFalse(): MappingViewModelStateVerifier {\n        mappingViewModel.onEvent(event = MappingVmEvent.CancelRequestHelp)\n        delay(1000)\n        Assert.assertFalse(state.value.hasInternet)\n        return this\n    }\n\n    suspend fun declineRescueRequest_rescueRespondentsRemoved_returnsTrue(): MappingViewModelStateVerifier {\n        mappingViewModel.onEvent(MappingVmEvent.LoadData)\n        mappingViewModel.onEvent(MappingVmEvent.SubscribeToDataChanges)\n        delay(2000)\n        val originalSize = state.value.userActiveRescueRequests.respondents.size\n        mappingViewModel.onEvent(event = MappingVmEvent.DeclineRescueRequest(id = \"3\"))\n        delay(2000)\n        val sizeAfterDeclineRequest = state.value.userActiveRescueRequests.respondents.size\n        Assert.assertTrue((originalSize - sizeAfterDeclineRequest) == 1)\n        return this\n    }\n\n    suspend fun declineRescueRequest_rescueRespondentsRemoved_returnsFalse(): MappingViewModelStateVerifier {\n        mappingViewModel.onEvent(MappingVmEvent.SubscribeToDataChanges)\n        mappingViewModel.onEvent(MappingVmEvent.LoadData)\n        delay(2500)\n        val originalSize = state.value.userActiveRescueRequests.respondents.size\n        mappingViewModel.onEvent(event = MappingVmEvent.DeclineRescueRequest(id = \"124 this id doesn't exist\"))\n        val sizeAfterDeclineRequest = state.value.userActiveRescueRequests.respondents.size\n        Assert.assertFalse((originalSize - sizeAfterDeclineRequest) == 1)\n        event.test(timeout = 1.5.minutes) {\n            val result = awaitItem()\n            Assert.assertEquals(MappingEvent.ShowToastMessage(message = \"Failed to Remove Respondent\"), result)\n        }\n        return this\n    }\n\n    suspend fun declineRescueRequest_NoInternet_ToastMessageIsShown(): MappingViewModelStateVerifier {\n\n        mappingViewModel.onEvent(MappingVmEvent.SubscribeToDataChanges)\n        mappingViewModel.onEvent(MappingVmEvent.LoadData)\n        delay(2500)\n        mappingViewModel.onEvent(event = MappingVmEvent.DeclineRescueRequest(id = \"1\"))\n        event.test(timeout = 1.5.minutes) {\n            when (val result = awaitItem()) {\n                is MappingEvent.ShowToastMessage -> {\n                    Assert.assertEquals(\"No Internet Connection\", result.message)\n                }\n                else -> {\n                    throw Exception(\"Expected MappingUiEvent.ShowToastMessage\")\n                }\n            }\n        }\n        return this\n    }\n\n    suspend fun removeRouteDirection_routeDirectionStateIsNull(){\n        mappingViewModel.onEvent(event = MappingVmEvent.RemoveRouteDirections)\n        delay(1000)\n        val routeDirection = state.value.routeDirection\n        Assert.assertNull(routeDirection)\n    }\n\n   suspend fun respondToHelp_hasInternetState_returnsFalse(){\n        mappingViewModel.onEvent(event = MappingVmEvent.RespondToHelp)\n        delay(1000)\n        Assert.assertFalse(state.value.hasInternet)\n\n    }\n\n    suspend fun respondToHelp_RescueRequestSent_ToastMessageIsShown(){\n        event.test(timeout = 1.5.minutes) {\n            mappingViewModel.onEvent(event = MappingVmEvent.RespondToHelp)\n            val result = awaitItem()\n            Assert.assertEquals(MappingEvent.ShowToastMessage(\"Rescue request sent\"), result)\n        }\n    }\n\n    suspend fun respondToHelp_AddressNotFound_ToastMessageIsShown(){\n        event.test(timeout = 1.5.minutes) {\n            mappingViewModel.onEvent(event = MappingVmEvent.RespondToHelp)\n            val result = awaitItem()\n            Assert.assertEquals(MappingEvent.ShowToastMessage(\"Address not found\"), result)\n        }\n    }\n\n    suspend fun cancelRescueTransaction_resetUiState(){\n        mappingViewModel.onEvent(event = MappingVmEvent.LoadData)\n        mappingViewModel.onEvent(event = MappingVmEvent.SubscribeToDataChanges)\n        delay(200)\n        mappingViewModel.onEvent(event = MappingVmEvent.CancelRescueTransaction)\n        delay(200)\n        val result = state.value\n        Assert.assertFalse(result.isRescueRequestAccepted)\n        Assert.assertTrue(result.respondedToHelp)\n        Assert.assertFalse(result.searchingAssistance)\n        Assert.assertTrue(result.bottomSheetType.isEmpty())\n        Assert.assertTrue(result.requestHelpButtonVisible)\n        Assert.assertFalse(result.isNavigating)\n        Assert.assertFalse(result.isRescueRequestAccepted)\n        Assert.assertEquals(NewRescueRequestsModel(), result.userActiveRescueRequests)\n        Assert.assertEquals(RescueTransactionItem(), result.rescueTransaction)\n        Assert.assertNull(result.rescuee)\n        Assert.assertNull(result.rescuer)\n\n\n    }\n\n\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/test/java/com/example/cyclistance/feature_mapping/presentation/MappingViewModelStateVerifier.kt b/app/src/test/java/com/example/cyclistance/feature_mapping/presentation/MappingViewModelStateVerifier.kt
--- a/app/src/test/java/com/example/cyclistance/feature_mapping/presentation/MappingViewModelStateVerifier.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/test/java/com/example/cyclistance/feature_mapping/presentation/MappingViewModelStateVerifier.kt	(date 1692337778150)
@@ -4,11 +4,11 @@
 import com.example.cyclistance.core.utils.constants.MappingConstants.DEFAULT_LATITUDE
 import com.example.cyclistance.core.utils.constants.MappingConstants.DEFAULT_LONGITUDE
 import com.example.cyclistance.core.utils.constants.MappingConstants.DEFAULT_MAP_ZOOM_LEVEL
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.rescue_transaction.RescueTransactionItem
 import com.example.cyclistance.feature_mapping.domain.model.ui.rescue.NewRescueRequestsModel
-import com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RescueTransactionItem
-import com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.event.MappingVmEvent
-import com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.event.MappingEvent
 import com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.MappingViewModel
+import com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.event.MappingEvent
+import com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.event.MappingVmEvent
 import com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.utils.BottomSheetType
 import com.mapbox.geojson.Point
 import com.mapbox.mapboxsdk.geometry.LatLng
Index: app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/user/RespondentModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/user/RespondentModel.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/user/RespondentModel.kt
rename from app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/user/RespondentModel.kt
rename to app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/user/RespondentModel.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/user/RespondentModel.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/user/RespondentModel.kt	(date 1692288837096)
@@ -1,4 +1,4 @@
-package com.example.cyclistance.feature_mapping.domain.model.api.user
+package com.example.cyclistance.feature_mapping.domain.model.remote_models.user
 
 import android.os.Parcelable
 import com.example.cyclistance.core.utils.annotations.StableState
Index: app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/rescue/RescueRequestItemModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/rescue/RescueRequestItemModel.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/rescue/RescueRequestItemModel.kt
rename from app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/rescue/RescueRequestItemModel.kt
rename to app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/rescue/RescueRequestItemModel.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/rescue/RescueRequestItemModel.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/rescue/RescueRequestItemModel.kt	(date 1692288836969)
@@ -1,4 +1,4 @@
-package com.example.cyclistance.feature_mapping.domain.model.api.rescue
+package com.example.cyclistance.feature_mapping.domain.model.remote_models.rescue
 
 import android.os.Parcelable
 import com.example.cyclistance.core.utils.annotations.StableState
Index: app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_cancellation_reason/CancellationReasonViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_mapping.presentation.mapping_cancellation_reason\n\nimport androidx.lifecycle.SavedStateHandle\nimport androidx.lifecycle.ViewModel\nimport androidx.lifecycle.viewModelScope\nimport com.example.cyclistance.core.utils.constants.MappingConstants.CANCELLATION_VM_STATE_KEY\nimport com.example.cyclistance.feature_authentication.domain.exceptions.AuthExceptions\nimport com.example.cyclistance.feature_authentication.domain.use_case.AuthenticationUseCase\n\nimport com.example.cyclistance.feature_mapping.domain.exceptions.MappingExceptions\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.CancellationModel\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.CancellationReasonModel\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RescueTransactionItem\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RouteModel\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.StatusModel\nimport com.example.cyclistance.feature_mapping.domain.use_case.MappingUseCase\nimport com.example.cyclistance.feature_mapping.presentation.mapping_cancellation_reason.event.CancellationReasonEvent\nimport com.example.cyclistance.feature_mapping.presentation.mapping_cancellation_reason.event.CancellationReasonVmEvent\nimport com.example.cyclistance.feature_mapping.presentation.mapping_cancellation_reason.state.CancellationReasonState\nimport com.example.cyclistance.feature_settings.domain.use_case.SettingUseCase\nimport dagger.hilt.android.lifecycle.HiltViewModel\nimport kotlinx.coroutines.Dispatchers\nimport kotlinx.coroutines.delay\nimport kotlinx.coroutines.flow.MutableSharedFlow\nimport kotlinx.coroutines.flow.MutableStateFlow\nimport kotlinx.coroutines.flow.asSharedFlow\nimport kotlinx.coroutines.flow.asStateFlow\nimport kotlinx.coroutines.flow.update\nimport kotlinx.coroutines.launch\nimport javax.inject.Inject\n\n@HiltViewModel\nclass CancellationReasonViewModel @Inject constructor(\n    private val savedStateHandle: SavedStateHandle,\n    private val mappingUseCase: MappingUseCase,\n    private val authUseCase: AuthenticationUseCase,\n    private val settingUseCase: SettingUseCase\n): ViewModel() {\n\n\n    private val _transactionId: String = savedStateHandle[\"transactionId\"] ?: \"\"\n\n    private val _state = MutableStateFlow(savedStateHandle[CANCELLATION_VM_STATE_KEY] ?: CancellationReasonState())\n    val state = _state.asStateFlow()\n    \n    private val _eventFlow: MutableSharedFlow<CancellationReasonEvent> = MutableSharedFlow()\n    val eventFlow = _eventFlow.asSharedFlow()\n\n\n    fun onEvent(event: CancellationReasonVmEvent) {\n        when (event) {\n\n            is CancellationReasonVmEvent.ConfirmCancellationReason -> {\n\n                confirmCancellationReason(\n                    reason = event.reason,\n                    message = event.message)\n\n            }\n\n        }\n        savedStateHandle[CANCELLATION_VM_STATE_KEY] = state.value\n    }\n\n    private fun confirmCancellationReason(reason: String, message: String) {\n        viewModelScope.launch(Dispatchers.IO) {\n            runCatching {\n                startLoading()\n                mappingUseCase.confirmCancellationUseCase(\n                    rescueTransaction = RescueTransactionItem(\n                        id = _transactionId,\n                        cancellation = CancellationModel(\n                            cancellationReason = CancellationReasonModel(\n                                reason = reason,\n                                message = message\n                            ),\n                            idCancelledBy = getId(),\n                            nameCancelledBy = getName(),\n                            rescueCancelled = true,\n                        ),\n                        status = StatusModel(),\n                        route = RouteModel()\n                    )\n                )\n\n            }.onSuccess {\n                broadcastRescueTransaction()\n                delay(500)\n                finishLoading()\n                _eventFlow.emit(value = CancellationReasonEvent.ConfirmCancellationReasonSuccess)\n            }.onFailure { exception ->\n                finishLoading()\n                exception.handleException()\n            }.also {\n                savedStateHandle[CANCELLATION_VM_STATE_KEY] = state.value\n            }\n        }\n    }\n\n    private fun startLoading() {\n        _state.update { it.copy(isLoading = true) }\n    }\n\n    private fun finishLoading() {\n        _state.update { it.copy(isLoading = false) }\n    }\n\n\n\n    private suspend fun broadcastRescueTransaction() {\n        runCatching {\n            mappingUseCase.broadcastRescueTransactionUseCase()\n        }.onFailure {\n            it.handleException()\n        }\n    }\n\n\n\n    private suspend fun Throwable.handleException() {\n        when (this) {\n\n            is MappingExceptions.UnexpectedErrorException -> {\n                _eventFlow.emit(value = CancellationReasonEvent.UnexpectedError(this.message!!))\n            }\n\n            is AuthExceptions.UserException -> {\n                _eventFlow.emit(value = CancellationReasonEvent.UserFailed(this.message!!))\n            }\n\n            is MappingExceptions.RescueTransactionNotFoundException -> {\n                _eventFlow.emit(value = CancellationReasonEvent.RescueTransactionFailed(this.message!!))\n            }\n\n            is MappingExceptions.NetworkException -> {\n                _eventFlow.emit(value = CancellationReasonEvent.NoInternetConnection)\n            }\n\n            is MappingExceptions.RescueTransactionReasonException -> {\n                _eventFlow.emit(value = CancellationReasonEvent.InvalidCancellationReason(this.message!!))\n            }\n\n        }\n        savedStateHandle[CANCELLATION_VM_STATE_KEY] = state.value\n    }\n    private fun getId() = authUseCase.getIdUseCase()\n    private suspend fun getName() = settingUseCase.getNameUseCase()\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_cancellation_reason/CancellationReasonViewModel.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_cancellation_reason/CancellationReasonViewModel.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_cancellation_reason/CancellationReasonViewModel.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_cancellation_reason/CancellationReasonViewModel.kt	(date 1692288837336)
@@ -8,11 +8,11 @@
 import com.example.cyclistance.feature_authentication.domain.use_case.AuthenticationUseCase
 
 import com.example.cyclistance.feature_mapping.domain.exceptions.MappingExceptions
-import com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.CancellationModel
-import com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.CancellationReasonModel
-import com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RescueTransactionItem
-import com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RouteModel
-import com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.StatusModel
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.rescue_transaction.CancellationModel
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.rescue_transaction.CancellationReasonModel
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.rescue_transaction.RescueTransactionItem
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.rescue_transaction.RouteModel
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.rescue_transaction.StatusModel
 import com.example.cyclistance.feature_mapping.domain.use_case.MappingUseCase
 import com.example.cyclistance.feature_mapping.presentation.mapping_cancellation_reason.event.CancellationReasonEvent
 import com.example.cyclistance.feature_mapping.presentation.mapping_cancellation_reason.event.CancellationReasonVmEvent
Index: app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/rescue_transaction/RouteDirection.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/rescue_transaction/RouteDirection.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/rescue_transaction/RouteDirection.kt
rename from app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/rescue_transaction/RouteDirection.kt
rename to app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/rescue_transaction/RouteDirection.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/rescue_transaction/RouteDirection.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/rescue_transaction/RouteDirection.kt	(date 1692288837473)
@@ -1,4 +1,4 @@
-package com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction
+package com.example.cyclistance.feature_mapping.domain.model.remote_models.rescue_transaction
 
 import android.os.Parcelable
 import com.example.cyclistance.core.utils.annotations.StableState
Index: app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/rescue_transaction/RescueTransactionItem.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/rescue_transaction/RescueTransactionItem.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/rescue_transaction/RescueTransactionItem.kt
rename from app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/rescue_transaction/RescueTransactionItem.kt
rename to app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/rescue_transaction/RescueTransactionItem.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/rescue_transaction/RescueTransactionItem.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/rescue_transaction/RescueTransactionItem.kt	(date 1692288837409)
@@ -1,8 +1,8 @@
-package com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction
+package com.example.cyclistance.feature_mapping.domain.model.remote_models.rescue_transaction
 
 import android.os.Parcelable
 import com.example.cyclistance.core.utils.annotations.StableState
-import com.example.cyclistance.feature_mapping.domain.model.api.user.LocationModel
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.user.LocationModel
 import kotlinx.parcelize.Parcelize
 
 @Parcelize
Index: app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/rescue_transaction/CancellationReasonModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/rescue_transaction/CancellationReasonModel.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/rescue_transaction/CancellationReasonModel.kt
rename from app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/rescue_transaction/CancellationReasonModel.kt
rename to app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/rescue_transaction/CancellationReasonModel.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/rescue_transaction/CancellationReasonModel.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/rescue_transaction/CancellationReasonModel.kt	(date 1692288837429)
@@ -1,4 +1,4 @@
-package com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction
+package com.example.cyclistance.feature_mapping.domain.model.remote_models.rescue_transaction
 
 import android.os.Parcelable
 import com.example.cyclistance.core.utils.annotations.StableState
Index: app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/rescue_transaction/RouteModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/rescue_transaction/RouteModel.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/rescue_transaction/RouteModel.kt
rename from app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/rescue_transaction/RouteModel.kt
rename to app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/rescue_transaction/RouteModel.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/rescue_transaction/RouteModel.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/rescue_transaction/RouteModel.kt	(date 1692288836923)
@@ -1,7 +1,7 @@
-package com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction
+package com.example.cyclistance.feature_mapping.domain.model.remote_models.rescue_transaction
 
 import android.os.Parcelable
-import com.example.cyclistance.feature_mapping.domain.model.api.user.LocationModel
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.user.LocationModel
 import kotlinx.parcelize.Parcelize
 
 @Parcelize
Index: app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/rescue_transaction/RescueTransaction.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/rescue_transaction/RescueTransaction.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/rescue_transaction/RescueTransaction.kt
rename from app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/rescue_transaction/RescueTransaction.kt
rename to app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/rescue_transaction/RescueTransaction.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/rescue_transaction/RescueTransaction.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/rescue_transaction/RescueTransaction.kt	(date 1692288837436)
@@ -1,4 +1,4 @@
-package com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction
+package com.example.cyclistance.feature_mapping.domain.model.remote_models.rescue_transaction
 
 import android.os.Parcelable
 import com.example.cyclistance.core.utils.annotations.StableState
Index: app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/rescue_transaction/StatusModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/rescue_transaction/StatusModel.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/rescue_transaction/StatusModel.kt
rename from app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/rescue_transaction/StatusModel.kt
rename to app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/rescue_transaction/StatusModel.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/rescue_transaction/StatusModel.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/rescue_transaction/StatusModel.kt	(date 1692288836936)
@@ -1,4 +1,4 @@
-package com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction
+package com.example.cyclistance.feature_mapping.domain.model.remote_models.rescue_transaction
 
 import android.os.Parcelable
 import kotlinx.parcelize.Parcelize
Index: app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/rescue_transaction/CancellationModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/rescue_transaction/CancellationModel.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/rescue_transaction/CancellationModel.kt
rename from app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/rescue_transaction/CancellationModel.kt
rename to app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/rescue_transaction/CancellationModel.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/api/rescue_transaction/CancellationModel.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/rescue_transaction/CancellationModel.kt	(date 1692288837486)
@@ -1,4 +1,4 @@
-package com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction
+package com.example.cyclistance.feature_mapping.domain.model.remote_models.rescue_transaction
 
 import android.os.Parcelable
 import com.example.cyclistance.core.utils.annotations.StableState
Index: app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/state/MappingUiState.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.state\n\nimport android.os.Parcelable\nimport com.example.cyclistance.core.domain.model.AlertDialogState\nimport com.example.cyclistance.core.utils.annotations.StableState\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RouteDirection\nimport com.example.cyclistance.feature_mapping.domain.model.ui.rescue.MapSelectedRescuee\nimport kotlinx.parcelize.Parcelize\n\n\n@Parcelize\n@StableState\ndata class MappingUiState(\n    val rescueRequestAccepted: Boolean = false,\n    val requestHelpButtonVisible: Boolean = true,\n    val searchingAssistance: Boolean = false,\n    val isNoInternetVisible: Boolean = false,\n    val mapSelectedRescuee: MapSelectedRescuee? = null,\n    val routeDirection: RouteDirection? = null,\n    val bottomSheetType: String? = null,\n    val locationPermissionDialogVisible: Boolean = false,\n    val phonePermissionDialogVisible: Boolean = false,\n    val isFabExpanded: Boolean = false,\n    val alertDialogState: AlertDialogState = AlertDialogState(),\n    val isRescueRequestDialogVisible: Boolean = false,\n    val isSinoTrackWebViewVisible: Boolean = false,\n    val isEmergencyCallDialogVisible: Boolean = false,\n    val isRescueResultsDialogVisible: Boolean = false,\n    val selectedPhoneNumber: String = \"\",\n\n\n    ) : Parcelable\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/state/MappingUiState.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/state/MappingUiState.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/state/MappingUiState.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/state/MappingUiState.kt	(date 1692288836956)
@@ -3,7 +3,7 @@
 import android.os.Parcelable
 import com.example.cyclistance.core.domain.model.AlertDialogState
 import com.example.cyclistance.core.utils.annotations.StableState
-import com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RouteDirection
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.rescue_transaction.RouteDirection
 import com.example.cyclistance.feature_mapping.domain.model.ui.rescue.MapSelectedRescuee
 import kotlinx.parcelize.Parcelize
 
Index: app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/location/LiveLocationWSModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/location/LiveLocationWSModel.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/live_location/LiveLocationSocketModel.kt
rename from app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/location/LiveLocationWSModel.kt
rename to app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/live_location/LiveLocationSocketModel.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/location/LiveLocationWSModel.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/model/remote_models/live_location/LiveLocationSocketModel.kt	(date 1692289062209)
@@ -1,4 +1,4 @@
-package com.example.cyclistance.feature_mapping.domain.model.location
+package com.example.cyclistance.feature_mapping.domain.model.remote_models.live_location
 
 import android.os.Parcelable
 import com.example.cyclistance.core.utils.annotations.StableState
@@ -6,7 +6,7 @@
 
 @Parcelize
 @StableState
-data class LiveLocationWSModel(
+data class LiveLocationSocketModel(
     val latitude: Double? = null,
     val longitude: Double? = null,
     val room: String? = null,
Index: app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/user/GetUserByIdUseCase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_mapping.domain.use_case.user\n\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.UserItem\nimport com.example.cyclistance.feature_mapping.domain.repository.MappingRepository\nimport kotlinx.coroutines.flow.Flow\n\nclass GetUserByIdUseCase(private val repository: MappingRepository) {\n    suspend operator fun invoke(id: String): Flow<UserItem> {\n        return repository.getUserById(id)\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/user/GetUserByIdUseCase.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/user/GetUserByIdUseCase.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/user/GetUserByIdUseCase.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/user/GetUserByIdUseCase.kt	(date 1692288837013)
@@ -1,6 +1,6 @@
 package com.example.cyclistance.feature_mapping.domain.use_case.user
 
-import com.example.cyclistance.feature_mapping.domain.model.api.user.UserItem
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.user.UserItem
 import com.example.cyclistance.feature_mapping.domain.repository.MappingRepository
 import kotlinx.coroutines.flow.Flow
 
Index: app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/user/CreateUserUseCase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_mapping.domain.use_case.user\n\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.UserItem\nimport com.example.cyclistance.feature_mapping.domain.repository.MappingRepository\n\nclass CreateUserUseCase(private val repository: MappingRepository) {\n    suspend operator fun invoke(user: UserItem){\n        repository.createUser(user)\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/user/CreateUserUseCase.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/user/CreateUserUseCase.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/user/CreateUserUseCase.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/user/CreateUserUseCase.kt	(date 1692288837126)
@@ -1,6 +1,6 @@
 package com.example.cyclistance.feature_mapping.domain.use_case.user
 
-import com.example.cyclistance.feature_mapping.domain.model.api.user.UserItem
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.user.UserItem
 import com.example.cyclistance.feature_mapping.domain.repository.MappingRepository
 
 class CreateUserUseCase(private val repository: MappingRepository) {
Index: app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/user/ConfirmDetailsUseCase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_mapping.domain.use_case.user\n\nimport com.example.cyclistance.feature_mapping.domain.exceptions.MappingExceptions\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.UserItem\nimport com.example.cyclistance.feature_mapping.domain.repository.MappingRepository\n\nclass ConfirmDetailsUseCase (private val repository: MappingRepository) {\n    suspend operator fun invoke(user: UserItem) {\n        val bikeType = user.getBikeType()\n        val description = user.getDescription()\n\n        if (bikeType.isNullOrEmpty()) {\n            throw MappingExceptions.BikeTypeException()\n        }\n        if (description.isNullOrEmpty()) {\n            throw MappingExceptions.DescriptionException()\n        }\n        repository.createUser(user)\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/user/ConfirmDetailsUseCase.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/user/ConfirmDetailsUseCase.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/user/ConfirmDetailsUseCase.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/user/ConfirmDetailsUseCase.kt	(date 1692288837466)
@@ -1,7 +1,7 @@
 package com.example.cyclistance.feature_mapping.domain.use_case.user
 
 import com.example.cyclistance.feature_mapping.domain.exceptions.MappingExceptions
-import com.example.cyclistance.feature_mapping.domain.model.api.user.UserItem
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.user.UserItem
 import com.example.cyclistance.feature_mapping.domain.repository.MappingRepository
 
 class ConfirmDetailsUseCase (private val repository: MappingRepository) {
Index: app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/routes/GetRouteDirectionsUseCase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_mapping.domain.use_case.routes\n\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RouteDirection\nimport com.example.cyclistance.feature_mapping.domain.repository.MappingRepository\nimport com.mapbox.geojson.Point\n\nclass GetRouteDirectionsUseCase(private val mappingRepository: MappingRepository) {\n    suspend operator fun invoke(origin: Point, destination: Point): RouteDirection {\n        return mappingRepository.getRouteDirections(origin, destination)\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/routes/GetRouteDirectionsUseCase.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/routes/GetRouteDirectionsUseCase.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/routes/GetRouteDirectionsUseCase.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/routes/GetRouteDirectionsUseCase.kt	(date 1692288837246)
@@ -1,6 +1,6 @@
 package com.example.cyclistance.feature_mapping.domain.use_case.routes
 
-import com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RouteDirection
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.rescue_transaction.RouteDirection
 import com.example.cyclistance.feature_mapping.domain.repository.MappingRepository
 import com.mapbox.geojson.Point
 
Index: app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/location/GetUserLocationUseCase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_mapping.domain.use_case.location\n\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.LocationModel\nimport com.example.cyclistance.feature_mapping.domain.repository.MappingRepository\nimport kotlinx.coroutines.flow.Flow\n\nclass GetUserLocationUseCase(private val repository: MappingRepository) {\n    suspend operator fun invoke(): Flow<LocationModel> {\n        return repository.getUserLocation()\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/location/GetUserLocationUseCase.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/location/GetUserLocationUseCase.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/location/GetUserLocationUseCase.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/location/GetUserLocationUseCase.kt	(date 1692288836929)
@@ -1,6 +1,6 @@
 package com.example.cyclistance.feature_mapping.domain.use_case.location
 
-import com.example.cyclistance.feature_mapping.domain.model.api.user.LocationModel
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.user.LocationModel
 import com.example.cyclistance.feature_mapping.domain.repository.MappingRepository
 import kotlinx.coroutines.flow.Flow
 
Index: app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/location/GetCalculatedDistanceUseCase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_mapping.domain.use_case.location\n\nimport com.example.cyclistance.feature_mapping.domain.model.api.user.LocationModel\nimport com.example.cyclistance.feature_mapping.domain.repository.MappingRepository\n\nclass GetCalculatedDistanceUseCase(private val repository: MappingRepository){\n\n    operator fun invoke(\n        startingLocation: LocationModel, destinationLocation: LocationModel\n    ):Double{\n        return repository.getCalculateDistance(\n            startingLocation = startingLocation,\n            destinationLocation = destinationLocation\n        )\n\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/location/GetCalculatedDistanceUseCase.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/location/GetCalculatedDistanceUseCase.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/location/GetCalculatedDistanceUseCase.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/location/GetCalculatedDistanceUseCase.kt	(date 1692288837039)
@@ -1,6 +1,6 @@
 package com.example.cyclistance.feature_mapping.domain.use_case.location
 
-import com.example.cyclistance.feature_mapping.domain.model.api.user.LocationModel
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.user.LocationModel
 import com.example.cyclistance.feature_mapping.domain.repository.MappingRepository
 
 class GetCalculatedDistanceUseCase(private val repository: MappingRepository){
Index: app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/rescue_transaction/ConfirmCancellationUseCase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_mapping.domain.use_case.rescue_transaction\n\nimport com.example.cyclistance.feature_mapping.domain.exceptions.MappingExceptions\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RescueTransactionItem\nimport com.example.cyclistance.feature_mapping.domain.repository.MappingRepository\n\nclass ConfirmCancellationUseCase(private val repository : MappingRepository) {\n    suspend operator fun invoke(rescueTransaction : RescueTransactionItem) {\n        val cancellationReason = rescueTransaction.getCancellationReason()\n\n        if(rescueTransaction.id.isNullOrEmpty()){\n            throw MappingExceptions.RescueTransactionNotFoundException()\n        }\n        if (cancellationReason.isNullOrEmpty()){\n            throw MappingExceptions.RescueTransactionReasonException()\n        }\n        repository.createRescueTransaction(rescueTransaction)\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/rescue_transaction/ConfirmCancellationUseCase.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/rescue_transaction/ConfirmCancellationUseCase.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/rescue_transaction/ConfirmCancellationUseCase.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/rescue_transaction/ConfirmCancellationUseCase.kt	(date 1692288837479)
@@ -1,7 +1,7 @@
 package com.example.cyclistance.feature_mapping.domain.use_case.rescue_transaction
 
 import com.example.cyclistance.feature_mapping.domain.exceptions.MappingExceptions
-import com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RescueTransactionItem
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.rescue_transaction.RescueTransactionItem
 import com.example.cyclistance.feature_mapping.domain.repository.MappingRepository
 
 class ConfirmCancellationUseCase(private val repository : MappingRepository) {
Index: app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/rescue_transaction/AcceptRescueRequestUseCase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_mapping.domain.use_case.rescue_transaction\n\nimport com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RescueTransactionItem\nimport com.example.cyclistance.feature_mapping.domain.repository.MappingRepository\n\nclass AcceptRescueRequestUseCase(private val repository : MappingRepository) {\n    suspend operator fun invoke(rescueTransaction : RescueTransactionItem) {\n        repository.createRescueTransaction(rescueTransaction)\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/rescue_transaction/AcceptRescueRequestUseCase.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/rescue_transaction/AcceptRescueRequestUseCase.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/rescue_transaction/AcceptRescueRequestUseCase.kt	(revision 867a76e43d39ff1da3fa26227daa21415ec0b769)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/rescue_transaction/AcceptRescueRequestUseCase.kt	(date 1692288837253)
@@ -1,6 +1,6 @@
 package com.example.cyclistance.feature_mapping.domain.use_case.rescue_transaction
 
-import com.example.cyclistance.feature_mapping.domain.model.api.rescue_transaction.RescueTransactionItem
+import com.example.cyclistance.feature_mapping.domain.model.remote_models.rescue_transaction.RescueTransactionItem
 import com.example.cyclistance.feature_mapping.domain.repository.MappingRepository
 
 class AcceptRescueRequestUseCase(private val repository : MappingRepository) {
