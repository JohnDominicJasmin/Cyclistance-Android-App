Index: app/src/main/res/drawable/ic_add_new_contact_dark.xml
===================================================================
diff --git a/app/src/main/res/drawable/ic_add_new_contact_dark.xml b/app/src/main/res/drawable/ic_add_new_contact_dark.xml
deleted file mode 100644
--- a/app/src/main/res/drawable/ic_add_new_contact_dark.xml	(revision 4f4d466c53fba2c9815aa7cdf2a4fac47e4c6b45)
+++ /dev/null	(revision 4f4d466c53fba2c9815aa7cdf2a4fac47e4c6b45)
@@ -1,12 +0,0 @@
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:width="107dp"
-    android:height="107dp"
-    android:viewportWidth="107"
-    android:viewportHeight="107">
-    <path
-        android:fillColor="#EBAD52"
-        android:pathData="M53.5,53.5m-53.5,0a53.5,53.5 0,1 1,107 0a53.5,53.5 0,1 1,-107 0" />
-    <path
-        android:fillColor="#303234"
-        android:pathData="M75.84,26.05H72.73V19.83H66.5V26.05H41.61V19.83H35.39V26.05H32.28C30.63,26.05 29.04,26.71 27.88,27.88C26.71,29.04 26.05,30.63 26.05,32.28V75.84C26.05,77.49 26.71,79.07 27.88,80.24C29.04,81.41 30.63,82.06 32.28,82.06H75.84C79.26,82.06 82.06,79.26 82.06,75.84V32.28C82.06,28.85 79.26,26.05 75.84,26.05ZM54.06,35.39C59.22,35.39 63.39,39.56 63.39,44.72C63.39,49.89 59.22,54.06 54.06,54.06C48.89,54.06 44.72,49.89 44.72,44.72C44.72,39.56 48.89,35.39 54.06,35.39ZM72.73,72.73H35.39V69.61C35.39,63.39 47.83,59.97 54.06,59.97C60.28,59.97 72.73,63.39 72.73,69.61V72.73Z" />
-</vector>
Index: app/src/main/res/drawable/ic_add_new_contact_light.xml
===================================================================
diff --git a/app/src/main/res/drawable/ic_add_new_contact_light.xml b/app/src/main/res/drawable/ic_add_new_contact_light.xml
deleted file mode 100644
--- a/app/src/main/res/drawable/ic_add_new_contact_light.xml	(revision 4f4d466c53fba2c9815aa7cdf2a4fac47e4c6b45)
+++ /dev/null	(revision 4f4d466c53fba2c9815aa7cdf2a4fac47e4c6b45)
@@ -1,12 +0,0 @@
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:width="107dp"
-    android:height="107dp"
-    android:viewportWidth="107"
-    android:viewportHeight="107">
-    <path
-        android:fillColor="#EBAD52"
-        android:pathData="M53.5,53.5m-53.5,0a53.5,53.5 0,1 1,107 0a53.5,53.5 0,1 1,-107 0" />
-    <path
-        android:fillColor="#FDFDFD"
-        android:pathData="M75.84,26.05H72.73V19.83H66.5V26.05H41.61V19.83H35.39V26.05H32.28C30.63,26.05 29.04,26.71 27.88,27.88C26.71,29.04 26.05,30.63 26.05,32.28V75.84C26.05,77.49 26.71,79.07 27.88,80.24C29.04,81.41 30.63,82.06 32.28,82.06H75.84C79.26,82.06 82.06,79.26 82.06,75.84V32.28C82.06,28.85 79.26,26.05 75.84,26.05ZM54.06,35.39C59.22,35.39 63.39,39.56 63.39,44.72C63.39,49.89 59.22,54.06 54.06,54.06C48.89,54.06 44.72,49.89 44.72,44.72C44.72,39.56 48.89,35.39 54.06,35.39ZM72.73,72.73H35.39V69.61C35.39,63.39 47.83,59.97 54.06,59.97C60.28,59.97 72.73,63.39 72.73,69.61V72.73Z" />
-</vector>
Index: app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/emergency_call/ButtonAddContact.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.components.emergency_call\n\nimport androidx.compose.foundation.layout.Arrangement\nimport androidx.compose.foundation.layout.Column\nimport androidx.compose.foundation.layout.Row\nimport androidx.compose.foundation.layout.fillMaxWidth\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.foundation.layout.size\nimport androidx.compose.foundation.shape.RoundedCornerShape\nimport androidx.compose.material.ExperimentalMaterialApi\nimport androidx.compose.material.Icon\nimport androidx.compose.material.MaterialTheme\nimport androidx.compose.material.Surface\nimport androidx.compose.material.Text\nimport androidx.compose.runtime.Composable\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.graphics.Color\nimport androidx.compose.ui.res.painterResource\nimport androidx.compose.ui.unit.dp\nimport com.example.cyclistance.R\nimport com.example.cyclistance.theme.Black500\n\n@OptIn(ExperimentalMaterialApi::class)\n@Composable\nfun ButtonAddContact(\n    modifier: Modifier = Modifier,\n    onClick: () -> Unit,\n) {\n    Surface(\n        onClick = onClick,\n        color = Color.Transparent,\n        modifier = Modifier.fillMaxWidth(), shape = RoundedCornerShape(8.dp)) {\n\n\n        Row(\n            modifier = modifier.padding(vertical = 8.dp),\n            verticalAlignment = Alignment.CenterVertically,\n            horizontalArrangement = Arrangement.spacedBy(12.dp, alignment = Alignment.Start)) {\n\n            Icon(\n                painter = painterResource(id = R.drawable.ic_add_to_contact),\n                contentDescription = \"Add to contact\",\n                tint = MaterialTheme.colors.primary,\n                modifier = Modifier.size(54.dp)\n            )\n            Column {\n                Text(\n                    text = \"Add new\",\n                    style = MaterialTheme.typography.body1,\n                    color = MaterialTheme.colors.onBackground\n                )\n                Text(\n                    text = \"Max 7 contacts\",\n                    style = MaterialTheme.typography.caption,\n                    color = Black500\n                )\n            }\n\n\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/emergency_call/ButtonAddContact.kt b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/emergency_call/ButtonAddContact.kt
--- a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/emergency_call/ButtonAddContact.kt	(revision 4f4d466c53fba2c9815aa7cdf2a4fac47e4c6b45)
+++ b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/emergency_call/ButtonAddContact.kt	(date 1695481242819)
@@ -17,9 +17,11 @@
 import androidx.compose.ui.Modifier
 import androidx.compose.ui.graphics.Color
 import androidx.compose.ui.res.painterResource
+import androidx.compose.ui.tooling.preview.Preview
 import androidx.compose.ui.unit.dp
 import com.example.cyclistance.R
 import com.example.cyclistance.theme.Black500
+import com.example.cyclistance.theme.CyclistanceTheme
 
 @OptIn(ExperimentalMaterialApi::class)
 @Composable
@@ -61,3 +63,12 @@
         }
     }
 }
+
+
+@Preview
+@Composable
+fun PreviewButtonAddContact() {
+    CyclistanceTheme(darkTheme = true) {
+        ButtonAddContact(onClick = {})
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/example/cyclistance/feature_user_profile/presentation/edit_profile/event/EditProfileUiEvent.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_user_profile.presentation.edit_profile.event\n\nimport androidx.compose.ui.text.input.TextFieldValue\n\nsealed class EditProfileUiEvent {\n    object SelectImageFromGallery : EditProfileUiEvent()\n    object OpenCamera : EditProfileUiEvent()\n    data class OnChangeName(val name: TextFieldValue) : EditProfileUiEvent()\n    data class OnChangeCyclingGroup(val cyclingGroup: TextFieldValue) : EditProfileUiEvent()\n    data class OnChangeAddress(val address: TextFieldValue) : EditProfileUiEvent()\n    object CancelEditProfile : EditProfileUiEvent()\n    object ConfirmEditProfile : EditProfileUiEvent()\n    object DismissNoInternetDialog : EditProfileUiEvent()\n    object ToggleBottomSheet : EditProfileUiEvent()\n    object DismissFilesAndMediaDialog : EditProfileUiEvent()\n    object DismissCameraDialog : EditProfileUiEvent()\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_user_profile/presentation/edit_profile/event/EditProfileUiEvent.kt b/app/src/main/java/com/example/cyclistance/feature_user_profile/presentation/edit_profile/event/EditProfileUiEvent.kt
--- a/app/src/main/java/com/example/cyclistance/feature_user_profile/presentation/edit_profile/event/EditProfileUiEvent.kt	(revision 4f4d466c53fba2c9815aa7cdf2a4fac47e4c6b45)
+++ b/app/src/main/java/com/example/cyclistance/feature_user_profile/presentation/edit_profile/event/EditProfileUiEvent.kt	(date 1695480378628)
@@ -3,17 +3,17 @@
 import androidx.compose.ui.text.input.TextFieldValue
 
 sealed class EditProfileUiEvent {
-    object SelectImageFromGallery : EditProfileUiEvent()
-    object OpenCamera : EditProfileUiEvent()
+    data object SelectImageFromGallery : EditProfileUiEvent()
+    data object OpenCamera : EditProfileUiEvent()
     data class OnChangeName(val name: TextFieldValue) : EditProfileUiEvent()
     data class OnChangeCyclingGroup(val cyclingGroup: TextFieldValue) : EditProfileUiEvent()
     data class OnChangeAddress(val address: TextFieldValue) : EditProfileUiEvent()
-    object CancelEditProfile : EditProfileUiEvent()
-    object ConfirmEditProfile : EditProfileUiEvent()
-    object DismissNoInternetDialog : EditProfileUiEvent()
-    object ToggleBottomSheet : EditProfileUiEvent()
-    object DismissFilesAndMediaDialog : EditProfileUiEvent()
-    object DismissCameraDialog : EditProfileUiEvent()
+    data object CancelEditProfile : EditProfileUiEvent()
+    data object ConfirmEditProfile : EditProfileUiEvent()
+    data object DismissNoInternetDialog : EditProfileUiEvent()
+    data object ToggleBottomSheet : EditProfileUiEvent()
+    data object DismissFilesAndMediaDialog : EditProfileUiEvent()
+    data object DismissCameraDialog : EditProfileUiEvent()
 
 
 }
Index: app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/emergency_call/EmergencyCallScreenContent.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.components.emergency_call\n\nimport androidx.compose.foundation.layout.Box\nimport androidx.compose.foundation.layout.fillMaxSize\nimport androidx.compose.foundation.layout.fillMaxWidth\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.foundation.lazy.LazyColumn\nimport androidx.compose.foundation.lazy.items\nimport androidx.compose.foundation.text.KeyboardActions\nimport androidx.compose.material.ExperimentalMaterialApi\nimport androidx.compose.material.MaterialTheme\nimport androidx.compose.material.Surface\nimport androidx.compose.material.Text\nimport androidx.compose.runtime.Composable\nimport androidx.compose.runtime.getValue\nimport androidx.compose.runtime.mutableStateOf\nimport androidx.compose.runtime.remember\nimport androidx.compose.runtime.saveable.rememberSaveable\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.text.input.TextFieldValue\nimport androidx.compose.ui.tooling.preview.Preview\nimport androidx.compose.ui.unit.dp\nimport com.example.cyclistance.R\nimport com.example.cyclistance.core.domain.model.AlertDialogState\nimport com.example.cyclistance.core.presentation.dialogs.alert_dialog.AlertDialog\nimport com.example.cyclistance.core.utils.constants.EmergencyCallConstants\nimport com.example.cyclistance.core.utils.constants.EmergencyCallConstants.PHILIPPINE_RED_CROSS_PHOTO\nimport com.example.cyclistance.feature_emergency_call.domain.model.EmergencyCallModel\nimport com.example.cyclistance.feature_emergency_call.domain.model.EmergencyContactModel\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.components.add_edit_contact.AddEditContactContent\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.event.EmergencyCallUiEvent\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.state.EmergencyCallState\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.state.EmergencyCallUIState\nimport com.example.cyclistance.theme.Black500\nimport com.example.cyclistance.theme.CyclistanceTheme\n\n@Composable\nfun EmergencyCallScreenContent(\n    modifier: Modifier = Modifier,\n    keyboardActions: KeyboardActions = KeyboardActions { },\n    uiState: EmergencyCallUIState,\n    state: EmergencyCallState,\n    name: TextFieldValue,\n    phoneNumber: TextFieldValue,\n    event: (EmergencyCallUiEvent) -> Unit) {\n\n    val contactsAvailable =\n        remember(state.emergencyCallModel) { state.emergencyCallModel.contacts.isNotEmpty() }\n    val shouldShowAddEditContactDialog =\n        remember(uiState.contactCurrentlyEditing) { uiState.contactCurrentlyEditing != null }\n\n    Surface(modifier = modifier.fillMaxSize(), color = MaterialTheme.colors.background) {\n\n        Box {\n\n            if (uiState.maximumContactDialogVisible) {\n                AlertDialog(\n                    alertDialog = AlertDialogState(\n                        title = \"Maximum number of contacts reached\",\n                        description = \"You can only add ${EmergencyCallConstants.MAX_CONTACTS} contacts\",\n                        icon = R.raw.info),\n                    onDismissRequest = { event(EmergencyCallUiEvent.DismissMaximumContactDialog) })\n            }\n\n            if (uiState.deleteDialogVisible) {\n                DeleteContactDialog(\n                    onDismissRequest = { event(EmergencyCallUiEvent.DismissDeleteContactDialog) },\n                    onClickConfirmButton = {\n                        event(EmergencyCallUiEvent.DeleteContact(uiState.contactToDelete))\n                        event(EmergencyCallUiEvent.DismissDeleteContactDialog)\n                    },\n                    nameToDelete = uiState.contactToDelete.name\n                )\n            }\n\n            if (shouldShowAddEditContactDialog) {\n                AddEditContactContent(\n                    keyboardActions = keyboardActions,\n                    event = event,\n                    state = state,\n                    uiState = uiState,\n                    name = name,\n                    phoneNumber = phoneNumber\n                )\n            }\n\n\n\n            LazyColumn(\n                modifier = Modifier\n                    .fillMaxWidth(),\n                horizontalAlignment = Alignment.CenterHorizontally) {\n\n                item {\n                    ButtonAddContact(\n                        onClick = { event(EmergencyCallUiEvent.OnClickAddContact) },\n                        modifier = Modifier\n                            .fillMaxWidth()\n                            .padding(all = 16.dp))\n                }\n                items(items = state.emergencyCallModel.contacts, key = { it.id }) { item ->\n                    if (contactsAvailable) {\n                        ContactItem(\n                            onClick = { event(EmergencyCallUiEvent.OnClickContact(item.phoneNumber)) },\n                            emergencyContact = item,\n                            modifier = Modifier\n                                .fillMaxWidth()\n                                .padding(vertical = 1.dp),\n                            onClickEdit = {\n                                event(\n                                    EmergencyCallUiEvent.OnClickEditContact(\n                                        item))\n                            },\n                            onClickDelete = {\n                                event(EmergencyCallUiEvent.OnClickDeleteContact(item))\n                            })\n                    }\n                }\n\n            }\n\n\n            if (!contactsAvailable) {\n                Box(\n                    modifier = Modifier\n                        .fillMaxSize(), contentAlignment = Alignment.Center) {\n                    Text(\n                        text = \"No contacts added\",\n                        style = MaterialTheme.typography.h6,\n                        color = Black500\n                    )\n                }\n            }\n\n        }\n\n    }\n}\n\n\nprivate val fakeContacts = EmergencyCallModel(\n    contacts = listOf(\n        EmergencyContactModel(\n            id = 1,\n            name = EmergencyCallConstants.PHILIPPINE_RED_CROSS,\n            photo = PHILIPPINE_RED_CROSS_PHOTO,\n            phoneNumber = \"123456789\"\n        ),\n        EmergencyContactModel(\n            id = 12323,\n            name = EmergencyCallConstants.NATIONAL_EMERGENCY,\n            photo = EmergencyCallConstants.NATIONAL_EMERGENCY_PHOTO,\n            phoneNumber = \"123456789\"\n        ),\n        EmergencyContactModel(\n            id = 2,\n            name = \"John Doe\",\n            photo = \"\",\n            phoneNumber = \"123456789\"\n        ),\n        EmergencyContactModel(\n            id = 3,\n            name = \"John Doe\",\n            photo = \"\",\n            phoneNumber = \"123456789\"\n        ),\n        EmergencyContactModel(\n            id = 4,\n            name = \"John Doe\",\n            photo = \"\",\n            phoneNumber = \"123456789\"\n        ),\n        EmergencyContactModel(\n            id = 5,\n            name = \"John Doe\",\n            photo = \"\",\n            phoneNumber = \"123456789\"\n        ),\n        EmergencyContactModel(\n            id = 52,\n            name = \"John Doe\",\n            photo = \"\",\n            phoneNumber = \"123456789\"\n        ),\n\n        ))\n\n@OptIn(ExperimentalMaterialApi::class)\n@Preview\n@Composable\nfun PreviewEmergencyCallScreenContentDark() {\n\n\n    val uiState by rememberSaveable {\n        mutableStateOf(EmergencyCallUIState())\n    }\n    CyclistanceTheme(darkTheme = true) {\n        EmergencyCallScreenContent(\n            uiState = uiState.copy(\n                contactCurrentlyEditing =\n                EmergencyContactModel(\n                    id = 1,\n                    name = \"John Doe\",\n                    photo = PHILIPPINE_RED_CROSS_PHOTO,\n                    phoneNumber = \"123456789\")),\n            state = EmergencyCallState(\n                emergencyCallModel = EmergencyCallModel()\n            ),\n            event = {}, name = TextFieldValue(\"\"), phoneNumber = TextFieldValue(\"\"))\n    }\n}\n\n@OptIn(ExperimentalMaterialApi::class)\n@Preview\n@Composable\nfun PreviewEmergencyCallScreenContentLight() {\n\n    val uiState by rememberSaveable {\n        mutableStateOf(EmergencyCallUIState())\n    }\n\n    CyclistanceTheme(darkTheme = false) {\n        EmergencyCallScreenContent(\n            uiState = uiState.copy(\n                contactCurrentlyEditing = EmergencyContactModel(\n                    id = 1,\n                    name = \"John Doe\",\n                    photo = PHILIPPINE_RED_CROSS_PHOTO,\n                    phoneNumber = \"123456789\"\n                )),\n            state = EmergencyCallState(\n                emergencyCallModel = fakeContacts\n            ),\n            event = {},\n            name = TextFieldValue(\"\"),\n            phoneNumber = TextFieldValue(\"\"))\n    }\n}\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/emergency_call/EmergencyCallScreenContent.kt b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/emergency_call/EmergencyCallScreenContent.kt
--- a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/emergency_call/EmergencyCallScreenContent.kt	(revision 4f4d466c53fba2c9815aa7cdf2a4fac47e4c6b45)
+++ b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/emergency_call/EmergencyCallScreenContent.kt	(date 1695481445199)
@@ -9,8 +9,11 @@
 import androidx.compose.foundation.text.KeyboardActions
 import androidx.compose.material.ExperimentalMaterialApi
 import androidx.compose.material.MaterialTheme
+import androidx.compose.material.ModalBottomSheetState
+import androidx.compose.material.ModalBottomSheetValue
 import androidx.compose.material.Surface
 import androidx.compose.material.Text
+import androidx.compose.material.rememberModalBottomSheetState
 import androidx.compose.runtime.Composable
 import androidx.compose.runtime.getValue
 import androidx.compose.runtime.mutableStateOf
@@ -24,6 +27,8 @@
 import com.example.cyclistance.R
 import com.example.cyclistance.core.domain.model.AlertDialogState
 import com.example.cyclistance.core.presentation.dialogs.alert_dialog.AlertDialog
+import com.example.cyclistance.core.presentation.dialogs.permissions_dialog.DialogCameraPermission
+import com.example.cyclistance.core.presentation.dialogs.permissions_dialog.DialogFilesAndMediaPermission
 import com.example.cyclistance.core.utils.constants.EmergencyCallConstants
 import com.example.cyclistance.core.utils.constants.EmergencyCallConstants.PHILIPPINE_RED_CROSS_PHOTO
 import com.example.cyclistance.feature_emergency_call.domain.model.EmergencyCallModel
@@ -35,9 +40,11 @@
 import com.example.cyclistance.theme.Black500
 import com.example.cyclistance.theme.CyclistanceTheme
 
+@OptIn(ExperimentalMaterialApi::class)
 @Composable
 fun EmergencyCallScreenContent(
     modifier: Modifier = Modifier,
+    bottomSheetScaffoldState: ModalBottomSheetState,
     keyboardActions: KeyboardActions = KeyboardActions { },
     uiState: EmergencyCallUIState,
     state: EmergencyCallState,
@@ -76,6 +83,7 @@
 
             if (shouldShowAddEditContactDialog) {
                 AddEditContactContent(
+                    bottomSheetScaffoldState = bottomSheetScaffoldState,
                     keyboardActions = keyboardActions,
                     event = event,
                     state = state,
@@ -85,6 +93,17 @@
                 )
             }
 
+            if (uiState.cameraPermissionDialogVisible) {
+                DialogCameraPermission(onDismiss = {
+                    event(EmergencyCallUiEvent.DismissCameraDialog)
+                })
+            }
+
+            if (uiState.filesAndMediaDialogVisible) {
+                DialogFilesAndMediaPermission(onDismiss = {
+                    event(EmergencyCallUiEvent.DismissFilesAndMediaDialog)
+                })
+            }
 
 
             LazyColumn(
@@ -97,7 +116,7 @@
                         onClick = { event(EmergencyCallUiEvent.OnClickAddContact) },
                         modifier = Modifier
                             .fillMaxWidth()
-                            .padding(all = 16.dp))
+                            .padding(horizontal = 16.dp, vertical = 4.dp))
                 }
                 items(items = state.emergencyCallModel.contacts, key = { it.id }) { item ->
                     if (contactsAvailable) {
@@ -187,9 +206,9 @@
         ))
 
 @OptIn(ExperimentalMaterialApi::class)
-@Preview
+@Preview(name = "Currently editing dark theme")
 @Composable
-fun PreviewEmergencyCallScreenContentDark() {
+fun PreviewEmergencyCallScreenContent1() {
 
 
     val uiState by rememberSaveable {
@@ -207,14 +226,16 @@
             state = EmergencyCallState(
                 emergencyCallModel = EmergencyCallModel()
             ),
+            bottomSheetScaffoldState = rememberModalBottomSheetState(
+                ModalBottomSheetValue.Expanded),
             event = {}, name = TextFieldValue(""), phoneNumber = TextFieldValue(""))
     }
 }
 
 @OptIn(ExperimentalMaterialApi::class)
-@Preview
+@Preview(name = "Currently editing light theme")
 @Composable
-fun PreviewEmergencyCallScreenContentLight() {
+fun PreviewEmergencyCallScreenContent2() {
 
     val uiState by rememberSaveable {
         mutableStateOf(EmergencyCallUIState())
@@ -228,10 +249,12 @@
                     name = "John Doe",
                     photo = PHILIPPINE_RED_CROSS_PHOTO,
                     phoneNumber = "123456789"
-                )),
+                ),cameraPermissionDialogVisible = true),
             state = EmergencyCallState(
-                emergencyCallModel = fakeContacts
+                emergencyCallModel = fakeContacts,
             ),
+            bottomSheetScaffoldState = rememberModalBottomSheetState(
+                ModalBottomSheetValue.Expanded),
             event = {},
             name = TextFieldValue(""),
             phoneNumber = TextFieldValue(""))
@@ -239,3 +262,23 @@
 }
 
 
+@OptIn(ExperimentalMaterialApi::class)
+@Preview(name = "Not editing dark theme")
+@Composable
+fun PreviewEmergencyCallScreenContent3() {
+
+
+    val uiState by rememberSaveable {
+        mutableStateOf(EmergencyCallUIState())
+    }
+    CyclistanceTheme(darkTheme = true) {
+        EmergencyCallScreenContent(
+            uiState = uiState.copy(),
+            state = EmergencyCallState(
+                emergencyCallModel = EmergencyCallModel()
+            ),
+            bottomSheetScaffoldState = rememberModalBottomSheetState(
+                ModalBottomSheetValue.Expanded),
+            event = {}, name = TextFieldValue(""), phoneNumber = TextFieldValue(""))
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/EmergencyCallScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen\n\nimport android.Manifest\nimport android.widget.Toast\nimport androidx.compose.foundation.layout.PaddingValues\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.foundation.text.KeyboardActions\nimport androidx.compose.material.ExperimentalMaterialApi\nimport androidx.compose.runtime.Composable\nimport androidx.compose.runtime.LaunchedEffect\nimport androidx.compose.runtime.derivedStateOf\nimport androidx.compose.runtime.getValue\nimport androidx.compose.runtime.mutableStateOf\nimport androidx.compose.runtime.remember\nimport androidx.compose.runtime.saveable.rememberSaveable\nimport androidx.compose.runtime.setValue\nimport androidx.compose.ui.ExperimentalComposeUiApi\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.platform.LocalContext\nimport androidx.compose.ui.text.input.TextFieldValue\nimport androidx.hilt.navigation.compose.hiltViewModel\nimport androidx.lifecycle.compose.collectAsStateWithLifecycle\nimport androidx.navigation.NavController\nimport com.example.cyclistance.core.utils.constants.EmergencyCallConstants.MAX_CONTACTS\nimport com.example.cyclistance.core.utils.contexts.callPhoneNumber\nimport com.example.cyclistance.feature_emergency_call.domain.model.EmergencyContactModel\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.components.emergency_call.EmergencyCallScreenContent\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.event.EmergencyCallEvent\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.event.EmergencyCallUiEvent\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.event.EmergencyCallVmEvent\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.state.EmergencyCallUIState\nimport com.google.accompanist.permissions.ExperimentalPermissionsApi\nimport com.google.accompanist.permissions.isGranted\nimport com.google.accompanist.permissions.rememberPermissionState\nimport kotlinx.coroutines.flow.collectLatest\n\n@OptIn(\n    ExperimentalPermissionsApi::class, ExperimentalMaterialApi::class,\n    ExperimentalComposeUiApi::class)\n@Composable\nfun EmergencyCallScreen(\n    viewModel: EmergencyCallViewModel = hiltViewModel(),\n    navController: NavController,\n    paddingValues: PaddingValues,\n    shouldOpenAddNewContact: Boolean) {\n\n    val context = LocalContext.current\n    val state by viewModel.state.collectAsStateWithLifecycle()\n    var name by rememberSaveable(stateSaver = TextFieldValue.Saver) {\n        mutableStateOf(TextFieldValue())\n    }\n    var phoneNumber by rememberSaveable(stateSaver = TextFieldValue.Saver) {\n        mutableStateOf(TextFieldValue())\n    }\n\n\n    var uiState by rememberSaveable {\n        mutableStateOf(EmergencyCallUIState())\n    }\n\n    val showDeleteDialog = remember {\n        { emergencyContact: EmergencyContactModel ->\n            uiState = uiState.copy(deleteDialogVisible = true, contactToDelete = emergencyContact)\n        }\n    }\n\n    val dismissDeleteDialog = remember {\n        {\n            uiState =\n                uiState.copy(deleteDialogVisible = false, contactToDelete = EmergencyContactModel())\n        }\n    }\n\n    val maximumContactReached by remember(state.emergencyCallModel) {\n        derivedStateOf {\n            state.emergencyCallModel.contacts.size >= MAX_CONTACTS\n        }\n    }\n\n\n    val onCloseEditContactScreen = remember(shouldOpenAddNewContact) {\n        {\n            if (shouldOpenAddNewContact) {\n                navController.popBackStack()\n            } else {\n                uiState = uiState.copy(contactCurrentlyEditing = null)\n            }\n        }\n    }\n\n    val onClickAddContact = remember {\n        {\n\n            if (!maximumContactReached) {\n                uiState = uiState.copy(\n                    contactCurrentlyEditing = EmergencyContactModel(),\n                    nameErrorMessage = \"\",\n                    phoneNumberErrorMessage = \"\"\n                )\n                name = name.copy(text = \"\")\n                phoneNumber = phoneNumber.copy(text = \"\")\n            }\n\n            viewModel.onEvent(event = EmergencyCallVmEvent.ResetSnapshot)\n            uiState = uiState.copy(maximumContactDialogVisible = maximumContactReached)\n\n        }\n    }\n\n    val onClickEditContact = remember {\n        { model: EmergencyContactModel ->\n            viewModel.onEvent(event = EmergencyCallVmEvent.GetContact(model.id))\n        }\n    }\n\n    val deleteContact = remember {\n        { emergencyContact: EmergencyContactModel ->\n            viewModel.onEvent(event = EmergencyCallVmEvent.DeleteContact(emergencyContact))\n        }\n    }\n\n    val callPhoneNumber = remember {\n        { phoneNumber: String ->\n            context.callPhoneNumber(phoneNumber)\n        }\n    }\n\n    val openPhoneCallPermissionState =\n        rememberPermissionState(permission = Manifest.permission.CALL_PHONE) { permissionGranted ->\n            if (permissionGranted) {\n                uiState.selectedPhoneNumber.takeIf { it.isNotEmpty() }\n                    ?.let { callPhoneNumber(it) }\n            }\n        }\n\n\n    val onClickContact = remember {\n        { phoneNumber: String ->\n            if (!openPhoneCallPermissionState.status.isGranted) {\n                uiState = uiState.copy(selectedPhoneNumber = phoneNumber)\n                openPhoneCallPermissionState.launchPermissionRequest()\n            } else {\n                callPhoneNumber(phoneNumber)\n            }\n\n        }\n    }\n\n    val dismissMaximumDialog = remember {\n        {\n            uiState = uiState.copy(maximumContactDialogVisible = false)\n        }\n    }\n\n\n\n\n    val onValueChangeName = remember {\n        { _name: TextFieldValue ->\n            uiState = uiState.copy(nameErrorMessage = \"\")\n            name = _name\n        }\n    }\n    val onValueChangePhoneNumber = remember {\n        { _phoneNumber: TextFieldValue ->\n            uiState = uiState.copy(phoneNumberErrorMessage = \"\")\n            phoneNumber = _phoneNumber\n        }\n    }\n\n    val saveAddEditContact = remember {\n        {\n            viewModel.onEvent(\n                event = EmergencyCallVmEvent.SaveContact(\n                    emergencyContactModel = EmergencyContactModel(\n                        id = uiState.contactCurrentlyEditing?.id ?: 0,\n                        name = name.text,\n                        phoneNumber = phoneNumber.text,\n                        photo = uiState.selectedImageUri\n                    )\n                ))\n        }\n    }\n    val keyboardActions = remember {\n        KeyboardActions(onDone = {\n            saveAddEditContact()\n        })\n    }\n\n\n    val onSaveContactSuccess = remember {\n        {\n            Toast.makeText(context, \"Contact Saved\", Toast.LENGTH_LONG).show()\n        }\n    }\n\n    val onUnknownFailure = remember {\n        { message: String ->\n            Toast.makeText(context, message, Toast.LENGTH_LONG).show()\n        }\n    }\n    val onPhoneFailure = remember {\n        { message: String ->\n            uiState = uiState.copy(phoneNumberErrorMessage = message)\n        }\n    }\n    val onNameFailure = remember {\n        { message: String ->\n            uiState = uiState.copy(nameErrorMessage = message)\n        }\n    }\n\n\n    val onGetContactSuccess = remember {\n        { emergencyContactModel: EmergencyContactModel ->\n            uiState = uiState.copy(\n                contactCurrentlyEditing = emergencyContactModel,\n                nameErrorMessage = \"\",\n                phoneNumberErrorMessage = \"\")\n\n            name = name.copy(text = emergencyContactModel.name)\n            phoneNumber = phoneNumber.copy(text = emergencyContactModel.phoneNumber)\n        }\n    }\n\n\n    LaunchedEffect(key1 = shouldOpenAddNewContact) {\n        if (shouldOpenAddNewContact) {\n            onClickAddContact()\n        }\n    }\n\n    LaunchedEffect(key1 = true) {\n        viewModel.eventFlow.collectLatest { event ->\n            when (event) {\n                is EmergencyCallEvent.ContactDeleteFailed -> {\n                    Toast.makeText(context, \"Failed to delete contact\", Toast.LENGTH_SHORT).show()\n                }\n\n                is EmergencyCallEvent.ContactDeleteSuccess -> {\n                    Toast.makeText(context, \"Contact deleted\", Toast.LENGTH_SHORT).show()\n                }\n                is EmergencyCallEvent.GetContactSuccess -> onGetContactSuccess(event.emergencyContactModel)\n                is EmergencyCallEvent.NameFailure -> onNameFailure(event.message)\n                is EmergencyCallEvent.PhoneNumberFailure -> onPhoneFailure(event.message)\n                is EmergencyCallEvent.SaveContactSuccess -> {\n                    onSaveContactSuccess(); onCloseEditContactScreen()\n                }\n\n                is EmergencyCallEvent.UnknownFailure -> onUnknownFailure(event.message)\n            }\n        }\n    }\n\n    EmergencyCallScreenContent(\n        uiState = uiState,\n        modifier = Modifier.padding(paddingValues),\n        state = state,\n        keyboardActions = keyboardActions,\n        name = name,\n        phoneNumber = phoneNumber,\n        event = { event ->\n            when (event) {\n                is EmergencyCallUiEvent.OnClickContact -> onClickContact(event.phoneNumber)\n                is EmergencyCallUiEvent.OnClickAddContact -> onClickAddContact()\n                is EmergencyCallUiEvent.OnClickDeleteContact -> showDeleteDialog(event.emergencyContact)\n                is EmergencyCallUiEvent.OnClickEditContact -> onClickEditContact(event.emergencyContact)\n                is EmergencyCallUiEvent.DismissDeleteContactDialog -> dismissDeleteDialog()\n                is EmergencyCallUiEvent.DeleteContact -> deleteContact(event.emergencyContact)\n                is EmergencyCallUiEvent.DismissMaximumContactDialog -> dismissMaximumDialog()\n                is EmergencyCallUiEvent.CancelEditContact -> onCloseEditContactScreen()\n                is EmergencyCallUiEvent.DismissEditContactScreen -> onCloseEditContactScreen()\n                is EmergencyCallUiEvent.OnChangeName -> onValueChangeName(event.name)\n                is EmergencyCallUiEvent.OnChangePhoneNumber -> onValueChangePhoneNumber(event.phoneNumber)\n                is EmergencyCallUiEvent.SaveEditContact -> saveAddEditContact()\n\n            }\n        })\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/EmergencyCallScreen.kt b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/EmergencyCallScreen.kt
--- a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/EmergencyCallScreen.kt	(revision 4f4d466c53fba2c9815aa7cdf2a4fac47e4c6b45)
+++ b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/EmergencyCallScreen.kt	(date 1695480077940)
@@ -1,28 +1,42 @@
 package com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen
 
 import android.Manifest
+import android.graphics.Bitmap
+import android.graphics.ImageDecoder
+import android.net.Uri
+import android.os.Build
+import android.provider.MediaStore
 import android.widget.Toast
+import androidx.activity.compose.rememberLauncherForActivityResult
+import androidx.activity.result.contract.ActivityResultContracts
+import androidx.activity.result.launch
 import androidx.compose.foundation.layout.PaddingValues
 import androidx.compose.foundation.layout.padding
 import androidx.compose.foundation.text.KeyboardActions
 import androidx.compose.material.ExperimentalMaterialApi
+import androidx.compose.material.ModalBottomSheetValue
+import androidx.compose.material.rememberModalBottomSheetState
 import androidx.compose.runtime.Composable
 import androidx.compose.runtime.LaunchedEffect
 import androidx.compose.runtime.derivedStateOf
 import androidx.compose.runtime.getValue
 import androidx.compose.runtime.mutableStateOf
 import androidx.compose.runtime.remember
+import androidx.compose.runtime.rememberCoroutineScope
 import androidx.compose.runtime.saveable.rememberSaveable
 import androidx.compose.runtime.setValue
 import androidx.compose.ui.ExperimentalComposeUiApi
 import androidx.compose.ui.Modifier
 import androidx.compose.ui.platform.LocalContext
+import androidx.compose.ui.platform.LocalSoftwareKeyboardController
 import androidx.compose.ui.text.input.TextFieldValue
 import androidx.hilt.navigation.compose.hiltViewModel
 import androidx.lifecycle.compose.collectAsStateWithLifecycle
 import androidx.navigation.NavController
 import com.example.cyclistance.core.utils.constants.EmergencyCallConstants.MAX_CONTACTS
 import com.example.cyclistance.core.utils.contexts.callPhoneNumber
+import com.example.cyclistance.core.utils.permissions.requestPermission
+import com.example.cyclistance.core.utils.save_images.ImageUtils.toImageUri
 import com.example.cyclistance.feature_emergency_call.domain.model.EmergencyContactModel
 import com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.components.emergency_call.EmergencyCallScreenContent
 import com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.event.EmergencyCallEvent
@@ -31,8 +45,10 @@
 import com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.state.EmergencyCallUIState
 import com.google.accompanist.permissions.ExperimentalPermissionsApi
 import com.google.accompanist.permissions.isGranted
+import com.google.accompanist.permissions.rememberMultiplePermissionsState
 import com.google.accompanist.permissions.rememberPermissionState
 import kotlinx.coroutines.flow.collectLatest
+import kotlinx.coroutines.launch
 
 @OptIn(
     ExperimentalPermissionsApi::class, ExperimentalMaterialApi::class,
@@ -44,8 +60,10 @@
     paddingValues: PaddingValues,
     shouldOpenAddNewContact: Boolean) {
 
+    val keyboardController = LocalSoftwareKeyboardController.current
     val context = LocalContext.current
     val state by viewModel.state.collectAsStateWithLifecycle()
+    var imageBitmap by remember { mutableStateOf<Bitmap?>(null) }
     var name by rememberSaveable(stateSaver = TextFieldValue.Saver) {
         mutableStateOf(TextFieldValue())
     }
@@ -153,6 +171,114 @@
     }
 
 
+    val scope = rememberCoroutineScope()
+    val bottomSheetScaffoldState = rememberModalBottomSheetState(ModalBottomSheetValue.Hidden)
+    val toggleBottomSheet = remember(bottomSheetScaffoldState, state.isLoading) {
+        {
+            scope.launch {
+
+                if (!state.isLoading) {
+                    with(bottomSheetScaffoldState) {
+                        if (isVisible) {
+                            hide()
+                        } else {
+                            show()
+                        }
+                    }
+                }
+            }
+        }
+    }
+    val openGalleryResultLauncher =
+        rememberLauncherForActivityResult(ActivityResultContracts.GetContent()) { uri: Uri? ->
+            uiState = uiState.copy(selectedImageUri = uri.toString())
+            uri?.let { selectedUri ->
+                imageBitmap =
+                    when {
+                        Build.VERSION.SDK_INT < Build.VERSION_CODES.P -> {
+                            MediaStore.Images.Media.getBitmap(
+                                context.contentResolver,
+                                selectedUri)
+                        }
+
+                        else -> {
+                            val source =
+                                ImageDecoder.createSource(
+                                    context.contentResolver,
+                                    selectedUri)
+                            ImageDecoder.decodeBitmap(source)
+                        }
+                    }
+            }
+        }
+
+    val openCameraResultLauncher =
+        rememberLauncherForActivityResult(ActivityResultContracts.TakePicturePreview()) { bitmap: Bitmap? ->
+            val uri = bitmap?.toImageUri().toString()
+            imageBitmap = bitmap
+            uiState = uiState.copy(selectedImageUri = uri)
+
+        }
+
+    val filesAndMediaPermissionState =
+        rememberMultiplePermissionsState(
+            permissions = listOf(
+                Manifest.permission.READ_EXTERNAL_STORAGE,
+                Manifest.permission.WRITE_EXTERNAL_STORAGE)) { permissionGranted ->
+            if (permissionGranted.values.all { it }) {
+                openGalleryResultLauncher.launch("image/*")
+            }
+        }
+
+
+    val openCameraPermissionState =
+        rememberPermissionState(permission = Manifest.permission.CAMERA) { permissionGranted ->
+
+            if (permissionGranted) {
+                openCameraResultLauncher.launch()
+            }
+        }
+
+    val openGallery = remember {
+        {
+            filesAndMediaPermissionState.requestPermission(
+                onGranted = {
+                    openGalleryResultLauncher.launch("image/*")
+                }, onExplain = {
+                    uiState = uiState.copy(filesAndMediaDialogVisible = true)
+                }, onDenied = {
+                    uiState = uiState.copy(filesAndMediaDialogVisible = true)
+                })
+
+        }
+    }
+
+    val openCamera = remember {
+        {
+            openCameraPermissionState.requestPermission(
+                onGranted = {
+                    openCameraResultLauncher.launch()
+                }, onExplain = {
+                    uiState = uiState.copy(cameraPermissionDialogVisible = true)
+                }, onDenied = {
+                    uiState = uiState.copy(cameraPermissionDialogVisible = true)
+                })
+        }
+    }
+
+
+    val onDismissFilesAndMediaPermissionDialog = remember {
+        {
+            uiState = uiState.copy(filesAndMediaDialogVisible = false)
+        }
+    }
+
+    val onDismissCameraPermissionDialog = remember {
+        {
+            uiState = uiState.copy(cameraPermissionDialogVisible = false)
+        }
+    }
+
 
 
     val onValueChangeName = remember {
@@ -256,6 +382,7 @@
         uiState = uiState,
         modifier = Modifier.padding(paddingValues),
         state = state,
+        bottomSheetScaffoldState = bottomSheetScaffoldState,
         keyboardActions = keyboardActions,
         name = name,
         phoneNumber = phoneNumber,
@@ -273,7 +400,14 @@
                 is EmergencyCallUiEvent.OnChangeName -> onValueChangeName(event.name)
                 is EmergencyCallUiEvent.OnChangePhoneNumber -> onValueChangePhoneNumber(event.phoneNumber)
                 is EmergencyCallUiEvent.SaveEditContact -> saveAddEditContact()
-
+                is EmergencyCallUiEvent.ToggleBottomSheet -> {
+                    toggleBottomSheet()
+                    keyboardController?.hide()
+                }
+                EmergencyCallUiEvent.DismissCameraDialog -> onDismissCameraPermissionDialog()
+                EmergencyCallUiEvent.DismissFilesAndMediaDialog -> onDismissFilesAndMediaPermissionDialog()
+                EmergencyCallUiEvent.OpenCamera -> openCamera()
+                EmergencyCallUiEvent.SelectImageFromGallery -> openGallery()
             }
         })
 }
\ No newline at end of file
Index: app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/add_edit_contact/AddEditContactPhotoSection.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.components.add_edit_contact\n\nimport androidx.compose.foundation.layout.fillMaxSize\nimport androidx.compose.foundation.layout.size\nimport androidx.compose.foundation.shape.CircleShape\nimport androidx.compose.material.Icon\nimport androidx.compose.material.Surface\nimport androidx.compose.runtime.Composable\nimport androidx.compose.runtime.remember\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.draw.clip\nimport androidx.compose.ui.graphics.Color\nimport androidx.compose.ui.layout.ContentScale\nimport androidx.compose.ui.platform.LocalContext\nimport androidx.compose.ui.res.painterResource\nimport androidx.compose.ui.unit.dp\nimport coil.compose.AsyncImage\nimport coil.request.CachePolicy\nimport coil.request.ImageRequest\nimport com.example.cyclistance.R\nimport com.example.cyclistance.core.utils.constants.EmergencyCallConstants\nimport com.example.cyclistance.core.utils.constants.EmergencyCallConstants.DICE_BEAR_URL\nimport com.example.cyclistance.feature_emergency_call.domain.model.EmergencyContactModel\nimport com.example.cyclistance.navigation.IsDarkTheme\n\n\n@Composable\nfun AddEditPhotoSection(\n    isOnEditMode: Boolean,\n    emergencyContact: EmergencyContactModel?) {\n\n\n    val isDarkTheme = IsDarkTheme.current\n\n    val shouldShowAddEditImage = remember(isOnEditMode, emergencyContact?.photo) {\n        isOnEditMode.or(emergencyContact?.photo?.isNotEmpty() == true)\n    }\n\n    val imageModel = remember(emergencyContact?.name, emergencyContact?.photo) {\n        if (emergencyContact?.photo != EmergencyCallConstants.NATIONAL_EMERGENCY_PHOTO &&\n            emergencyContact?.photo != EmergencyCallConstants.PHILIPPINE_RED_CROSS_PHOTO) {\n\n            \"$DICE_BEAR_URL${emergencyContact?.name}\"\n        } else {\n            emergencyContact.photo\n        }\n    }\n\n\n    if (shouldShowAddEditImage) {\n\n        AddEditContactImage(\n            photoUrl = imageModel,\n            modifier = Modifier.size(125.dp))\n\n    } else {\n\n        Icon(\n            painter = painterResource(id = if (isDarkTheme) R.drawable.ic_add_new_contact_dark else R.drawable.ic_add_new_contact_light),\n            contentDescription = \"Add new contact\",\n            tint = Color.Unspecified,\n            modifier = Modifier\n                .size(100.dp)\n                .clip(CircleShape)\n        )\n\n    }\n\n\n}\n\n@Composable\nprivate fun AddEditContactImage(\n    modifier: Modifier = Modifier,\n    photoUrl: String?,\n) {\n    Surface(\n        modifier = modifier,\n        color = (Color.Transparent),\n        shape = CircleShape) {\n\n        AsyncImage(\n            model = ImageRequest.Builder(LocalContext.current)\n                .data(photoUrl)\n                .crossfade(true)\n                .networkCachePolicy(CachePolicy.ENABLED)\n                .diskCachePolicy(CachePolicy.ENABLED)\n                .memoryCachePolicy(CachePolicy.ENABLED)\n                .build(),\n            alignment = Alignment.Center,\n            contentDescription = \"User Profile Image\",\n            modifier = Modifier\n                .clip(CircleShape)\n                .fillMaxSize(),\n            contentScale = ContentScale.Crop,\n            placeholder = painterResource(id = R.drawable.ic_empty_profile_placeholder_large),\n            error = painterResource(id = R.drawable.ic_empty_profile_placeholder_large),\n            fallback = painterResource(id = R.drawable.ic_empty_profile_placeholder_large))\n\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/add_edit_contact/AddEditContactPhotoSection.kt b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/add_edit_contact/AddEditContactPhotoSection.kt
--- a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/add_edit_contact/AddEditContactPhotoSection.kt	(revision 4f4d466c53fba2c9815aa7cdf2a4fac47e4c6b45)
+++ b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/add_edit_contact/AddEditContactPhotoSection.kt	(date 1695482398048)
@@ -1,5 +1,7 @@
 package com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.components.add_edit_contact
 
+import androidx.compose.foundation.Image
+import androidx.compose.foundation.clickable
 import androidx.compose.foundation.layout.fillMaxSize
 import androidx.compose.foundation.layout.size
 import androidx.compose.foundation.shape.CircleShape
@@ -21,17 +23,18 @@
 import com.example.cyclistance.R
 import com.example.cyclistance.core.utils.constants.EmergencyCallConstants
 import com.example.cyclistance.core.utils.constants.EmergencyCallConstants.DICE_BEAR_URL
+import com.example.cyclistance.core.utils.save_images.ImageUtils
 import com.example.cyclistance.feature_emergency_call.domain.model.EmergencyContactModel
-import com.example.cyclistance.navigation.IsDarkTheme
+import com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.event.EmergencyCallUiEvent
 
 
 @Composable
 fun AddEditPhotoSection(
     isOnEditMode: Boolean,
-    emergencyContact: EmergencyContactModel?) {
+    emergencyContact: EmergencyContactModel?,
+    event: (EmergencyCallUiEvent) -> Unit) {
 
 
-    val isDarkTheme = IsDarkTheme.current
 
     val shouldShowAddEditImage = remember(isOnEditMode, emergencyContact?.photo) {
         isOnEditMode.or(emergencyContact?.photo?.isNotEmpty() == true)
@@ -52,17 +55,19 @@
 
         AddEditContactImage(
             photoUrl = imageModel,
+            event = event,
             modifier = Modifier.size(125.dp))
 
     } else {
 
         Icon(
-            painter = painterResource(id = if (isDarkTheme) R.drawable.ic_add_new_contact_dark else R.drawable.ic_add_new_contact_light),
+            painter = painterResource(id = R.drawable.ic_add_to_contact),
             contentDescription = "Add new contact",
             tint = Color.Unspecified,
             modifier = Modifier
                 .size(100.dp)
                 .clip(CircleShape)
+                .clickable { event(EmergencyCallUiEvent.ToggleBottomSheet) }
         )
 
     }
@@ -74,29 +79,44 @@
 private fun AddEditContactImage(
     modifier: Modifier = Modifier,
     photoUrl: String?,
-) {
+    event: (EmergencyCallUiEvent) -> Unit) {
     Surface(
         modifier = modifier,
         color = (Color.Transparent),
         shape = CircleShape) {
 
-        AsyncImage(
-            model = ImageRequest.Builder(LocalContext.current)
-                .data(photoUrl)
-                .crossfade(true)
-                .networkCachePolicy(CachePolicy.ENABLED)
-                .diskCachePolicy(CachePolicy.ENABLED)
-                .memoryCachePolicy(CachePolicy.ENABLED)
-                .build(),
-            alignment = Alignment.Center,
-            contentDescription = "User Profile Image",
-            modifier = Modifier
-                .clip(CircleShape)
-                .fillMaxSize(),
-            contentScale = ContentScale.Crop,
-            placeholder = painterResource(id = R.drawable.ic_empty_profile_placeholder_large),
-            error = painterResource(id = R.drawable.ic_empty_profile_placeholder_large),
-            fallback = painterResource(id = R.drawable.ic_empty_profile_placeholder_large))
+
+        val isDefaultContact = remember(photoUrl){
+            photoUrl == EmergencyCallConstants.NATIONAL_EMERGENCY_PHOTO ||
+            photoUrl == EmergencyCallConstants.PHILIPPINE_RED_CROSS_PHOTO
+        }
+        if(isDefaultContact){
+
+            Image(
+               bitmap = ImageUtils
+            )
+
+        }else {
+
+            AsyncImage(
+                model = ImageRequest.Builder(LocalContext.current)
+                    .data(photoUrl)
+                    .crossfade(true)
+                    .networkCachePolicy(CachePolicy.ENABLED)
+                    .diskCachePolicy(CachePolicy.ENABLED)
+                    .memoryCachePolicy(CachePolicy.ENABLED)
+                    .build(),
+                alignment = Alignment.Center,
+                contentDescription = "User Profile Image",
+                modifier = Modifier
+                    .clip(CircleShape)
+                    .fillMaxSize()
+                    .clickable { event(EmergencyCallUiEvent.ToggleBottomSheet) },
+                contentScale = ContentScale.Crop,
+                placeholder = painterResource(id = R.drawable.ic_empty_profile_placeholder_large),
+                error = painterResource(id = R.drawable.ic_empty_profile_placeholder_large),
+                fallback = painterResource(id = R.drawable.ic_empty_profile_placeholder_large))
 
+        }
     }
 }
\ No newline at end of file
Index: app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/add_edit_contact/AddEditContactContent.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.components.add_edit_contact\n\nimport androidx.compose.foundation.layout.Arrangement\nimport androidx.compose.foundation.layout.Column\nimport androidx.compose.foundation.layout.fillMaxSize\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.foundation.layout.wrapContentSize\nimport androidx.compose.foundation.text.KeyboardActions\nimport androidx.compose.material.CircularProgressIndicator\nimport androidx.compose.material.ExperimentalMaterialApi\nimport androidx.compose.material.MaterialTheme\nimport androidx.compose.material.Scaffold\nimport androidx.compose.material.Surface\nimport androidx.compose.material.icons.Icons\nimport androidx.compose.material.icons.filled.Close\nimport androidx.compose.runtime.Composable\nimport androidx.compose.runtime.derivedStateOf\nimport androidx.compose.runtime.getValue\nimport androidx.compose.runtime.remember\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.text.input.TextFieldValue\nimport androidx.compose.ui.tooling.preview.Preview\nimport androidx.compose.ui.unit.dp\nimport androidx.compose.ui.window.Dialog\nimport androidx.compose.ui.window.DialogProperties\nimport androidx.constraintlayout.compose.ConstraintLayout\nimport androidx.constraintlayout.compose.Dimension\nimport com.example.cyclistance.core.utils.constants.EmergencyCallConstants.PHILIPPINE_RED_CROSS_PHOTO\nimport com.example.cyclistance.feature_emergency_call.domain.model.EmergencyContactModel\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.event.EmergencyCallUiEvent\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.state.EmergencyCallState\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.state.EmergencyCallUIState\nimport com.example.cyclistance.feature_mapping.presentation.common.ButtonNavigation\nimport com.example.cyclistance.theme.CyclistanceTheme\nimport com.example.cyclistance.top_bars.TitleTopAppBar\nimport com.example.cyclistance.top_bars.TopAppBarCreator\n\n@OptIn(ExperimentalMaterialApi::class)\n@Composable\nfun AddEditContactContent(\n    modifier: Modifier = Modifier,\n    keyboardActions: KeyboardActions = KeyboardActions { },\n    event: (EmergencyCallUiEvent) -> Unit,\n    state: EmergencyCallState,\n    name: TextFieldValue,\n    phoneNumber: TextFieldValue,\n    uiState: EmergencyCallUIState) {\n\n    val isOnEditMode by remember(key1 = uiState.contactCurrentlyEditing) {\n        derivedStateOf { uiState.contactCurrentlyEditing?.isEmpty() == false }\n    }\n\n    val isUserInformationChanges by remember(\n        name,\n        phoneNumber,\n        uiState.selectedImageUri) {\n        derivedStateOf {\n            name.text != state.nameSnapshot ||\n            phoneNumber.text != state.phoneNumberSnapshot ||\n            uiState.selectedImageUri.isNotEmpty()\n        }\n    }\n\n    Dialog(\n        onDismissRequest = { event(EmergencyCallUiEvent.DismissEditContactScreen) },\n        properties = DialogProperties(\n            usePlatformDefaultWidth = false,\n            dismissOnClickOutside = false,\n        )) {\n\n        Scaffold(modifier = modifier, topBar = {\n            TopAppBarCreator(\n                icon = Icons.Default.Close,\n                onClickIcon = { event(EmergencyCallUiEvent.DismissEditContactScreen) },\n                topAppBarTitle = {\n                    TitleTopAppBar(title = if (isOnEditMode) \"Edit Contact\" else \"New Contact\")\n                })\n\n        }) { paddingValues ->\n\n            Surface(\n                modifier = Modifier\n                    .padding(paddingValues)\n                    .fillMaxSize(), color = MaterialTheme.colors.background) {\n\n\n\n                    ConstraintLayout(modifier = Modifier.fillMaxSize()) {\n\n                        val (addPhoto, content, button, progressBar) = createRefs()\n\n                        Column(\n                            modifier = Modifier\n                                .wrapContentSize()\n                                .constrainAs(addPhoto) {\n                                    top.linkTo(parent.top, margin = 20.dp)\n                                    start.linkTo(parent.start)\n                                    end.linkTo(parent.end)\n                                },\n                            verticalArrangement = Arrangement.spacedBy(\n                                7.dp,\n                                alignment = Alignment.CenterVertically),\n                            horizontalAlignment = Alignment.CenterHorizontally) {\n\n                            AddEditPhotoSection(\n                                isOnEditMode = isOnEditMode,\n                                emergencyContact = uiState.contactCurrentlyEditing,\n                            )\n\n                        }\n\n\n                        AddEditContextTextFieldSection(\n                            modifier = Modifier.constrainAs(content) {\n                                top.linkTo(addPhoto.bottom, margin = 25.dp)\n                                start.linkTo(parent.start)\n                                end.linkTo(parent.end)\n                                width = Dimension.percent(0.9f)\n                            },\n                            uiState = uiState,\n                            state = state,\n                            event = event,\n                            keyboardActions = keyboardActions,\n                            name = name,\n                            phoneNumber = phoneNumber)\n\n\n                        ButtonNavigation(\n                            modifier = Modifier.constrainAs(button) {\n                                top.linkTo(content.bottom, margin = 30.dp)\n                                start.linkTo(parent.start)\n                                end.linkTo(parent.end)\n                                height = Dimension.wrapContent\n                                width = Dimension.percent(0.8f)\n                            },\n                            positiveButtonText = \"Save\",\n                            onClickNegativeButton = { event(EmergencyCallUiEvent.CancelEditContact) },\n                            onClickPositiveButton = { event(EmergencyCallUiEvent.SaveEditContact) },\n                            negativeButtonEnabled = !state.isLoading,\n                            positiveButtonEnabled = !state.isLoading && isUserInformationChanges\n                        )\n\n                        if (state.isLoading) {\n                            CircularProgressIndicator(modifier = Modifier.constrainAs(progressBar) {\n                                top.linkTo(parent.top)\n                                end.linkTo(parent.end)\n                                start.linkTo(parent.start)\n                                bottom.linkTo(parent.bottom)\n                                this.centerTo(parent)\n                            })\n                        }\n\n                    }\n                }\n            }\n    }\n}\n\n\n@OptIn(ExperimentalMaterialApi::class)\n@Preview(device = \"id:Galaxy Nexus\")\n@Composable\nfun PreviewAddNewContactContentDarkEditMode() {\n    CyclistanceTheme(darkTheme = true) {\n        AddEditContactContent(\n            event = {},\n            uiState = EmergencyCallUIState(),\n            state = EmergencyCallState(),\n            phoneNumber = TextFieldValue(\"143\"),\n            name = TextFieldValue(\"Philippine Red Cross\"))\n    }\n}\n\n@OptIn(ExperimentalMaterialApi::class)\n@Preview\n@Composable\nfun PreviewAddNewContactContentDark() {\n    CyclistanceTheme(darkTheme = true) {\n        AddEditContactContent(\n            event = {},\n            uiState = EmergencyCallUIState(\n                contactCurrentlyEditing = EmergencyContactModel(\n                    name = \"Philippine Red Cross\",\n                    photo = PHILIPPINE_RED_CROSS_PHOTO,\n                    phoneNumber = \"143\",\n                    id = 1)),\n            state = EmergencyCallState(),\n            phoneNumber = TextFieldValue(\"143\"),\n            name = TextFieldValue(\"Philippine Red Cross\")\n        )\n    }\n}\n\n@OptIn(ExperimentalMaterialApi::class)\n@Preview\n@Composable\nfun PreviewAddNewContactContentLight() {\n    CyclistanceTheme(darkTheme = false) {\n        AddEditContactContent(\n            event = {},\n            uiState = EmergencyCallUIState(\n                contactCurrentlyEditing = EmergencyContactModel(\n                    name = \"Philippine Red Cross\",\n                    photo = PHILIPPINE_RED_CROSS_PHOTO,\n                    phoneNumber = \"143\",\n                    id = 1)),\n            state = EmergencyCallState(),\n            phoneNumber = TextFieldValue(\"143\"),\n            name = TextFieldValue(\"Philippine Red Cross\")\n        )\n    }\n}\n\n\n\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/add_edit_contact/AddEditContactContent.kt b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/add_edit_contact/AddEditContactContent.kt
--- a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/add_edit_contact/AddEditContactContent.kt	(revision 4f4d466c53fba2c9815aa7cdf2a4fac47e4c6b45)
+++ b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/add_edit_contact/AddEditContactContent.kt	(date 1695480167169)
@@ -9,10 +9,13 @@
 import androidx.compose.material.CircularProgressIndicator
 import androidx.compose.material.ExperimentalMaterialApi
 import androidx.compose.material.MaterialTheme
+import androidx.compose.material.ModalBottomSheetState
+import androidx.compose.material.ModalBottomSheetValue
 import androidx.compose.material.Scaffold
 import androidx.compose.material.Surface
 import androidx.compose.material.icons.Icons
 import androidx.compose.material.icons.filled.Close
+import androidx.compose.material.rememberModalBottomSheetState
 import androidx.compose.runtime.Composable
 import androidx.compose.runtime.derivedStateOf
 import androidx.compose.runtime.getValue
@@ -32,6 +35,7 @@
 import com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.state.EmergencyCallState
 import com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.state.EmergencyCallUIState
 import com.example.cyclistance.feature_mapping.presentation.common.ButtonNavigation
+import com.example.cyclistance.feature_user_profile.presentation.edit_profile.components.SelectImageBottomSheet
 import com.example.cyclistance.theme.CyclistanceTheme
 import com.example.cyclistance.top_bars.TitleTopAppBar
 import com.example.cyclistance.top_bars.TopAppBarCreator
@@ -40,6 +44,7 @@
 @Composable
 fun AddEditContactContent(
     modifier: Modifier = Modifier,
+    bottomSheetScaffoldState: ModalBottomSheetState,
     keyboardActions: KeyboardActions = KeyboardActions { },
     event: (EmergencyCallUiEvent) -> Unit,
     state: EmergencyCallState,
@@ -84,7 +89,17 @@
                     .padding(paddingValues)
                     .fillMaxSize(), color = MaterialTheme.colors.background) {
 
-
+                SelectImageBottomSheet(
+                    onClickGalleryButton = {
+                        event(EmergencyCallUiEvent.ToggleBottomSheet)
+                        event(EmergencyCallUiEvent.SelectImageFromGallery)
+                    },
+                    onClickCameraButton = {
+                        event(EmergencyCallUiEvent.ToggleBottomSheet)
+                        event(EmergencyCallUiEvent.OpenCamera)
+                    },
+                    bottomSheetScaffoldState = bottomSheetScaffoldState,
+                    isLoading = state.isLoading) {
 
                     ConstraintLayout(modifier = Modifier.fillMaxSize()) {
 
@@ -106,7 +121,7 @@
                             AddEditPhotoSection(
                                 isOnEditMode = isOnEditMode,
                                 emergencyContact = uiState.contactCurrentlyEditing,
-                            )
+                                event = event)
 
                         }
 
@@ -153,7 +168,10 @@
 
                     }
                 }
+
             }
+        }
+
     }
 }
 
@@ -164,6 +182,8 @@
 fun PreviewAddNewContactContentDarkEditMode() {
     CyclistanceTheme(darkTheme = true) {
         AddEditContactContent(
+            bottomSheetScaffoldState = rememberModalBottomSheetState(
+                ModalBottomSheetValue.Expanded),
             event = {},
             uiState = EmergencyCallUIState(),
             state = EmergencyCallState(),
@@ -178,6 +198,8 @@
 fun PreviewAddNewContactContentDark() {
     CyclistanceTheme(darkTheme = true) {
         AddEditContactContent(
+            bottomSheetScaffoldState = rememberModalBottomSheetState(
+                ModalBottomSheetValue.Hidden),
             event = {},
             uiState = EmergencyCallUIState(
                 contactCurrentlyEditing = EmergencyContactModel(
@@ -198,6 +220,8 @@
 fun PreviewAddNewContactContentLight() {
     CyclistanceTheme(darkTheme = false) {
         AddEditContactContent(
+            bottomSheetScaffoldState = rememberModalBottomSheetState(
+                ModalBottomSheetValue.Expanded),
             event = {},
             uiState = EmergencyCallUIState(
                 contactCurrentlyEditing = EmergencyContactModel(
Index: app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/event/EmergencyCallUiEvent.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.event\n\nimport androidx.compose.ui.text.input.TextFieldValue\nimport com.example.cyclistance.feature_emergency_call.domain.model.EmergencyContactModel\n\nsealed class EmergencyCallUiEvent {\n    object OnClickAddContact : EmergencyCallUiEvent()\n    data class OnClickContact(val phoneNumber: String) : EmergencyCallUiEvent()\n    data class OnClickEditContact(val emergencyContact: EmergencyContactModel) :\n        EmergencyCallUiEvent()\n\n    data class OnClickDeleteContact(val emergencyContact: EmergencyContactModel) :\n        EmergencyCallUiEvent()\n\n    data class DeleteContact(val emergencyContact: EmergencyContactModel) : EmergencyCallUiEvent()\n    object DismissDeleteContactDialog : EmergencyCallUiEvent()\n    object DismissMaximumContactDialog : EmergencyCallUiEvent()\n\n    data class OnChangeName(val name: TextFieldValue) : EmergencyCallUiEvent()\n    data class OnChangePhoneNumber(val phoneNumber: TextFieldValue) : EmergencyCallUiEvent()\n    object CancelEditContact : EmergencyCallUiEvent()\n    object SaveEditContact : EmergencyCallUiEvent()\n    object DismissEditContactScreen : EmergencyCallUiEvent()\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/event/EmergencyCallUiEvent.kt b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/event/EmergencyCallUiEvent.kt
--- a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/event/EmergencyCallUiEvent.kt	(revision 4f4d466c53fba2c9815aa7cdf2a4fac47e4c6b45)
+++ b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/event/EmergencyCallUiEvent.kt	(date 1695480046610)
@@ -4,7 +4,7 @@
 import com.example.cyclistance.feature_emergency_call.domain.model.EmergencyContactModel
 
 sealed class EmergencyCallUiEvent {
-    object OnClickAddContact : EmergencyCallUiEvent()
+    data object OnClickAddContact : EmergencyCallUiEvent()
     data class OnClickContact(val phoneNumber: String) : EmergencyCallUiEvent()
     data class OnClickEditContact(val emergencyContact: EmergencyContactModel) :
         EmergencyCallUiEvent()
@@ -13,14 +13,20 @@
         EmergencyCallUiEvent()
 
     data class DeleteContact(val emergencyContact: EmergencyContactModel) : EmergencyCallUiEvent()
-    object DismissDeleteContactDialog : EmergencyCallUiEvent()
-    object DismissMaximumContactDialog : EmergencyCallUiEvent()
+    data object DismissDeleteContactDialog : EmergencyCallUiEvent()
+    data object DismissMaximumContactDialog : EmergencyCallUiEvent()
 
     data class OnChangeName(val name: TextFieldValue) : EmergencyCallUiEvent()
     data class OnChangePhoneNumber(val phoneNumber: TextFieldValue) : EmergencyCallUiEvent()
-    object CancelEditContact : EmergencyCallUiEvent()
-    object SaveEditContact : EmergencyCallUiEvent()
-    object DismissEditContactScreen : EmergencyCallUiEvent()
+    data object CancelEditContact : EmergencyCallUiEvent()
+    data object SaveEditContact : EmergencyCallUiEvent()
+    data object ToggleBottomSheet : EmergencyCallUiEvent()
+    data object DismissEditContactScreen : EmergencyCallUiEvent()
+
+    data object SelectImageFromGallery: EmergencyCallUiEvent()
+    data object OpenCamera : EmergencyCallUiEvent()
+    data object DismissCameraDialog : EmergencyCallUiEvent()
+    data object DismissFilesAndMediaDialog : EmergencyCallUiEvent()
 
 
 }
Index: app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/state/EmergencyCallUIState.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.state\n\nimport android.os.Parcelable\nimport com.example.cyclistance.core.utils.annotations.StableState\nimport com.example.cyclistance.feature_emergency_call.domain.model.EmergencyContactModel\nimport kotlinx.parcelize.Parcelize\n\n\n@Parcelize\n@StableState\ndata class EmergencyCallUIState(\n    val deleteDialogVisible: Boolean = false,\n    val contactToDelete: EmergencyContactModel = EmergencyContactModel(),\n    val selectedPhoneNumber: String = \"\",\n    val maximumContactDialogVisible: Boolean = false,\n\n    val selectedImageUri: String = \"\",\n    val nameErrorMessage: String = \"\",\n    val phoneNumberErrorMessage: String = \"\",\n    val contactCurrentlyEditing: EmergencyContactModel? = null,\n) : Parcelable\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/state/EmergencyCallUIState.kt b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/state/EmergencyCallUIState.kt
--- a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/state/EmergencyCallUIState.kt	(revision 4f4d466c53fba2c9815aa7cdf2a4fac47e4c6b45)
+++ b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/state/EmergencyCallUIState.kt	(date 1695479525116)
@@ -18,4 +18,7 @@
     val nameErrorMessage: String = "",
     val phoneNumberErrorMessage: String = "",
     val contactCurrentlyEditing: EmergencyContactModel? = null,
+
+    val cameraPermissionDialogVisible: Boolean = false,
+    val filesAndMediaDialogVisible: Boolean = false,
 ) : Parcelable
Index: firestore-debug.log
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>Sep 22, 2023 10:01:01 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketServer start\nINFO: Started WebSocket server on ws://0.0.0.0:39015\nAPI endpoint: http://0.0.0.0:9299\nIf you are using a library that supports the FIRESTORE_EMULATOR_HOST environment variable, run:\n\n   export FIRESTORE_EMULATOR_HOST=0.0.0.0:9299\n\nDev App Server is now running.\n\nSep 22, 2023 10:01:36 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nSep 22, 2023 10:04:08 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nSep 22, 2023 10:08:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nSep 22, 2023 10:09:07 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nSep 22, 2023 10:11:37 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nSep 22, 2023 10:16:24 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nSep 22, 2023 10:32:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nSep 22, 2023 10:52:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nSep 23, 2023 12:24:37 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nSep 23, 2023 12:26:08 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nSep 23, 2023 12:43:46 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nSep 23, 2023 12:46:08 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nSep 23, 2023 12:47:39 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected non-HTTP/2 connection.\nSep 23, 2023 12:47:39 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\n*** shutting down gRPC server since JVM is shutting down\n*** server shut down\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/firestore-debug.log b/firestore-debug.log
--- a/firestore-debug.log	(revision 4f4d466c53fba2c9815aa7cdf2a4fac47e4c6b45)
+++ b/firestore-debug.log	(date 1695482439891)
@@ -17,23 +17,25 @@
 INFO: Detected HTTP/2 connection.
 Sep 22, 2023 10:11:37 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
 INFO: Detected HTTP/2 connection.
-Sep 22, 2023 10:16:24 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
+Sep 23, 2023 10:25:33 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
+INFO: Detected HTTP/2 connection.
+Sep 23, 2023 10:26:05 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
 INFO: Detected HTTP/2 connection.
-Sep 22, 2023 10:32:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
+Sep 23, 2023 10:27:36 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
 INFO: Detected HTTP/2 connection.
-Sep 22, 2023 10:52:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
+Sep 23, 2023 10:30:36 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
 INFO: Detected HTTP/2 connection.
-Sep 23, 2023 12:24:37 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
+Sep 23, 2023 10:38:36 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
 INFO: Detected HTTP/2 connection.
-Sep 23, 2023 12:26:08 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
+Sep 23, 2023 10:58:20 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
 INFO: Detected HTTP/2 connection.
-Sep 23, 2023 12:43:46 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
+Sep 23, 2023 10:59:02 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
 INFO: Detected HTTP/2 connection.
-Sep 23, 2023 12:46:08 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
+Sep 23, 2023 11:05:55 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
 INFO: Detected HTTP/2 connection.
-Sep 23, 2023 12:47:39 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
-INFO: Detected non-HTTP/2 connection.
-Sep 23, 2023 12:47:39 AM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
+Sep 23, 2023 11:07:27 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
 INFO: Detected HTTP/2 connection.
-*** shutting down gRPC server since JVM is shutting down
-*** server shut down
+Sep 23, 2023 11:10:29 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
+INFO: Detected HTTP/2 connection.
+Sep 23, 2023 11:18:30 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
+INFO: Detected HTTP/2 connection.
