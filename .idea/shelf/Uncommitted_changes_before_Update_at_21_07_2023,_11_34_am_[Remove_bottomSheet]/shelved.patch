Index: app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/add_edit_contact/AddEditContactPhotoSection.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.components.add_edit_contact\n\nimport androidx.compose.foundation.clickable\nimport androidx.compose.foundation.layout.fillMaxSize\nimport androidx.compose.foundation.layout.size\nimport androidx.compose.foundation.shape.CircleShape\nimport androidx.compose.material.Icon\nimport androidx.compose.material.Surface\nimport androidx.compose.runtime.Composable\nimport androidx.compose.runtime.remember\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.draw.clip\nimport androidx.compose.ui.graphics.Color\nimport androidx.compose.ui.layout.ContentScale\nimport androidx.compose.ui.platform.LocalContext\nimport androidx.compose.ui.res.painterResource\nimport androidx.compose.ui.unit.dp\nimport coil.compose.AsyncImage\nimport coil.request.CachePolicy\nimport coil.request.ImageRequest\nimport com.example.cyclistance.R\nimport com.example.cyclistance.core.utils.constants.EmergencyCallConstants\nimport com.example.cyclistance.core.utils.constants.EmergencyCallConstants.DICE_BEAR_URL\nimport com.example.cyclistance.feature_emergency_call.domain.model.EmergencyContactModel\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.event.EmergencyCallUiEvent\nimport com.example.cyclistance.navigation.IsDarkTheme\n\n\n@Composable\nfun AddEditPhotoSection(\n    isOnEditMode: Boolean,\n    emergencyContact: EmergencyContactModel?,\n    event: (EmergencyCallUiEvent) -> Unit) {\n\n\n    val isDarkTheme = IsDarkTheme.current\n\n    val shouldShowAddEditImage = remember(isOnEditMode, emergencyContact?.photo) {\n        isOnEditMode.or(emergencyContact?.photo?.isNotEmpty() == true)\n    }\n\n    val imageModel = remember(emergencyContact?.name, emergencyContact?.photo) {\n        if (emergencyContact?.photo != EmergencyCallConstants.NATIONAL_EMERGENCY_PHOTO &&\n            emergencyContact?.photo != EmergencyCallConstants.PHILIPPINE_RED_CROSS_PHOTO) {\n\n            \"$DICE_BEAR_URL${emergencyContact?.name}\"\n        } else {\n            emergencyContact.photo\n        }\n    }\n\n\n    if (shouldShowAddEditImage) {\n\n        AddEditContactImage(\n            photoUrl = imageModel,\n            event = event,\n            modifier = Modifier.size(125.dp))\n\n    } else {\n\n        Icon(\n            painter = painterResource(id = if (isDarkTheme) R.drawable.ic_add_new_contact_dark else R.drawable.ic_add_new_contact_light),\n            contentDescription = \"Add new contact\",\n            tint = Color.Unspecified,\n            modifier = Modifier\n                .size(100.dp)\n                .clip(CircleShape)\n                .clickable { event(EmergencyCallUiEvent.ToggleBottomSheet) }\n        )\n\n    }\n\n\n}\n\n@Composable\nprivate fun AddEditContactImage(\n    modifier: Modifier = Modifier,\n    photoUrl: String?,\n    event: (EmergencyCallUiEvent) -> Unit) {\n    Surface(\n        modifier = modifier,\n        color = (Color.Transparent),\n        shape = CircleShape) {\n\n        AsyncImage(\n            model = ImageRequest.Builder(LocalContext.current)\n                .data(photoUrl)\n                .crossfade(true)\n                .networkCachePolicy(CachePolicy.ENABLED)\n                .diskCachePolicy(CachePolicy.ENABLED)\n                .memoryCachePolicy(CachePolicy.ENABLED)\n                .build(),\n            alignment = Alignment.Center,\n            contentDescription = \"User Profile Image\",\n            modifier = Modifier\n                .clip(CircleShape)\n                .fillMaxSize()\n                .clickable { event(EmergencyCallUiEvent.ToggleBottomSheet) },\n            contentScale = ContentScale.Crop,\n            placeholder = painterResource(id = R.drawable.ic_empty_profile_placeholder_large),\n            error = painterResource(id = R.drawable.ic_empty_profile_placeholder_large),\n            fallback = painterResource(id = R.drawable.ic_empty_profile_placeholder_large))\n\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/add_edit_contact/AddEditContactPhotoSection.kt b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/add_edit_contact/AddEditContactPhotoSection.kt
--- a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/add_edit_contact/AddEditContactPhotoSection.kt	(revision ae41d0fa367d4b981fe2f7868a4de74b60f18560)
+++ b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/add_edit_contact/AddEditContactPhotoSection.kt	(date 1689909854657)
@@ -1,6 +1,5 @@
 package com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.components.add_edit_contact
 
-import androidx.compose.foundation.clickable
 import androidx.compose.foundation.layout.fillMaxSize
 import androidx.compose.foundation.layout.size
 import androidx.compose.foundation.shape.CircleShape
@@ -67,7 +66,6 @@
             modifier = Modifier
                 .size(100.dp)
                 .clip(CircleShape)
-                .clickable { event(EmergencyCallUiEvent.ToggleBottomSheet) }
         )
 
     }
@@ -97,8 +95,7 @@
             contentDescription = "User Profile Image",
             modifier = Modifier
                 .clip(CircleShape)
-                .fillMaxSize()
-                .clickable { event(EmergencyCallUiEvent.ToggleBottomSheet) },
+                .fillMaxSize(),
             contentScale = ContentScale.Crop,
             placeholder = painterResource(id = R.drawable.ic_empty_profile_placeholder_large),
             error = painterResource(id = R.drawable.ic_empty_profile_placeholder_large),
Index: app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/event/EmergencyCallUiEvent.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.event\n\nimport androidx.compose.ui.text.input.TextFieldValue\nimport com.example.cyclistance.feature_emergency_call.domain.model.EmergencyContactModel\n\nsealed class EmergencyCallUiEvent {\n    object OnClickAddContact : EmergencyCallUiEvent()\n    data class OnClickContact(val phoneNumber: String) : EmergencyCallUiEvent()\n    data class OnClickEditContact(val emergencyContact: EmergencyContactModel) :\n        EmergencyCallUiEvent()\n\n    data class OnClickDeleteContact(val emergencyContact: EmergencyContactModel) :\n        EmergencyCallUiEvent()\n\n    data class DeleteContact(val emergencyContact: EmergencyContactModel) : EmergencyCallUiEvent()\n    object DismissDeleteContactDialog : EmergencyCallUiEvent()\n    object DismissMaximumContactDialog : EmergencyCallUiEvent()\n\n    data class OnChangeName(val name: TextFieldValue) : EmergencyCallUiEvent()\n    data class OnChangePhoneNumber(val phoneNumber: TextFieldValue) : EmergencyCallUiEvent()\n    object CancelEditContact : EmergencyCallUiEvent()\n    object SaveEditContact : EmergencyCallUiEvent()\n    object ToggleBottomSheet : EmergencyCallUiEvent()\n    object DismissEditContactScreen : EmergencyCallUiEvent()\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/event/EmergencyCallUiEvent.kt b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/event/EmergencyCallUiEvent.kt
--- a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/event/EmergencyCallUiEvent.kt	(revision ae41d0fa367d4b981fe2f7868a4de74b60f18560)
+++ b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/event/EmergencyCallUiEvent.kt	(date 1689909744858)
@@ -20,7 +20,6 @@
     data class OnChangePhoneNumber(val phoneNumber: TextFieldValue) : EmergencyCallUiEvent()
     object CancelEditContact : EmergencyCallUiEvent()
     object SaveEditContact : EmergencyCallUiEvent()
-    object ToggleBottomSheet : EmergencyCallUiEvent()
     object DismissEditContactScreen : EmergencyCallUiEvent()
 
 
Index: app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/add_edit_contact/AddEditContactContent.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.components.add_edit_contact\n\nimport androidx.compose.foundation.layout.Arrangement\nimport androidx.compose.foundation.layout.Column\nimport androidx.compose.foundation.layout.fillMaxSize\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.foundation.layout.wrapContentSize\nimport androidx.compose.foundation.text.KeyboardActions\nimport androidx.compose.material.CircularProgressIndicator\nimport androidx.compose.material.ExperimentalMaterialApi\nimport androidx.compose.material.MaterialTheme\nimport androidx.compose.material.ModalBottomSheetState\nimport androidx.compose.material.ModalBottomSheetValue\nimport androidx.compose.material.Scaffold\nimport androidx.compose.material.Surface\nimport androidx.compose.material.icons.Icons\nimport androidx.compose.material.icons.filled.Close\nimport androidx.compose.material.rememberModalBottomSheetState\nimport androidx.compose.runtime.Composable\nimport androidx.compose.runtime.derivedStateOf\nimport androidx.compose.runtime.getValue\nimport androidx.compose.runtime.remember\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.text.input.TextFieldValue\nimport androidx.compose.ui.tooling.preview.Preview\nimport androidx.compose.ui.unit.dp\nimport androidx.compose.ui.window.Dialog\nimport androidx.compose.ui.window.DialogProperties\nimport androidx.constraintlayout.compose.ConstraintLayout\nimport androidx.constraintlayout.compose.Dimension\nimport com.example.cyclistance.core.utils.constants.EmergencyCallConstants.PHILIPPINE_RED_CROSS_PHOTO\nimport com.example.cyclistance.feature_emergency_call.domain.model.EmergencyContactModel\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.event.EmergencyCallUiEvent\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.state.EmergencyCallState\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.state.EmergencyCallUIState\nimport com.example.cyclistance.feature_mapping.presentation.common.ButtonNavigation\nimport com.example.cyclistance.feature_settings.presentation.setting_edit_profile.components.SelectImageBottomSheet\nimport com.example.cyclistance.theme.CyclistanceTheme\nimport com.example.cyclistance.top_bars.TitleTopAppBar\nimport com.example.cyclistance.top_bars.TopAppBarCreator\n\n@OptIn(ExperimentalMaterialApi::class)\n@Composable\nfun AddEditContactContent(\n    modifier: Modifier = Modifier,\n    bottomSheetScaffoldState: ModalBottomSheetState,\n    keyboardActions: KeyboardActions = KeyboardActions { },\n    event: (EmergencyCallUiEvent) -> Unit,\n    state: EmergencyCallState,\n    name: TextFieldValue,\n    phoneNumber: TextFieldValue,\n    uiState: EmergencyCallUIState) {\n\n    val isOnEditMode by remember(key1 = uiState.contactCurrentlyEditing) {\n        derivedStateOf { uiState.contactCurrentlyEditing?.isEmpty() == false }\n    }\n\n    val isUserInformationChanges by remember(\n        name,\n        phoneNumber,\n        uiState.selectedImageUri) {\n        derivedStateOf {\n            name.text != state.nameSnapshot ||\n            phoneNumber.text != state.phoneNumberSnapshot ||\n            uiState.selectedImageUri.isNotEmpty()\n        }\n    }\n\n    Dialog(\n        onDismissRequest = { event(EmergencyCallUiEvent.DismissEditContactScreen) },\n        properties = DialogProperties(\n            usePlatformDefaultWidth = false,\n            dismissOnClickOutside = false,\n        )) {\n\n        Scaffold(modifier = modifier, topBar = {\n            TopAppBarCreator(\n                icon = Icons.Default.Close,\n                onClickIcon = { event(EmergencyCallUiEvent.DismissEditContactScreen) },\n                topAppBarTitle = {\n                    TitleTopAppBar(title = if (isOnEditMode) \"Edit Contact\" else \"New Contact\")\n                })\n\n        }) { paddingValues ->\n\n            Surface(\n                modifier = Modifier\n                    .padding(paddingValues)\n                    .fillMaxSize(), color = MaterialTheme.colors.background) {\n\n                SelectImageBottomSheet(\n                    onClickGalleryButton = {\n                        event(EmergencyCallUiEvent.ToggleBottomSheet)\n                    },\n                    onClickCameraButton = {\n                        event(EmergencyCallUiEvent.ToggleBottomSheet)\n                    },\n                    bottomSheetScaffoldState = bottomSheetScaffoldState,\n                    isLoading = state.isLoading) {\n\n                    ConstraintLayout(modifier = Modifier.fillMaxSize()) {\n\n                        val (addPhoto, content, button, progressBar) = createRefs()\n\n                        Column(\n                            modifier = Modifier\n                                .wrapContentSize()\n                                .constrainAs(addPhoto) {\n                                    top.linkTo(parent.top, margin = 20.dp)\n                                    start.linkTo(parent.start)\n                                    end.linkTo(parent.end)\n                                },\n                            verticalArrangement = Arrangement.spacedBy(\n                                7.dp,\n                                alignment = Alignment.CenterVertically),\n                            horizontalAlignment = Alignment.CenterHorizontally) {\n\n                            AddEditPhotoSection(\n                                isOnEditMode = isOnEditMode,\n                                emergencyContact = uiState.contactCurrentlyEditing,\n                                event = event)\n\n                        }\n\n\n                        AddEditContextTextFieldSection(\n                            modifier = Modifier.constrainAs(content) {\n                                top.linkTo(addPhoto.bottom, margin = 25.dp)\n                                start.linkTo(parent.start)\n                                end.linkTo(parent.end)\n                                width = Dimension.percent(0.9f)\n                            },\n                            uiState = uiState,\n                            state = state,\n                            event = event,\n                            keyboardActions = keyboardActions,\n                            name = name,\n                            phoneNumber = phoneNumber)\n\n\n                        ButtonNavigation(\n                            modifier = Modifier.constrainAs(button) {\n                                bottom.linkTo(parent.bottom, margin = 20.dp)\n                                start.linkTo(parent.start)\n                                end.linkTo(parent.end)\n                                height = Dimension.wrapContent\n                                width = Dimension.percent(0.8f)\n                            },\n                            positiveButtonText = \"Save\",\n                            onClickCancelButton = { event(EmergencyCallUiEvent.CancelEditContact) },\n                            onClickConfirmButton = { event(EmergencyCallUiEvent.SaveEditContact) },\n                            negativeButtonEnabled = !state.isLoading,\n                            positiveButtonEnabled = !state.isLoading && isUserInformationChanges\n                        )\n\n                        if (state.isLoading) {\n                            CircularProgressIndicator(modifier = Modifier.constrainAs(progressBar) {\n                                top.linkTo(parent.top)\n                                end.linkTo(parent.end)\n                                start.linkTo(parent.start)\n                                bottom.linkTo(parent.bottom)\n                                this.centerTo(parent)\n                            })\n                        }\n\n                    }\n                }\n\n            }\n        }\n\n    }\n}\n\n\n@OptIn(ExperimentalMaterialApi::class)\n@Preview\n@Composable\nfun PreviewAddNewContactContentDarkEditMode() {\n    CyclistanceTheme(darkTheme = true) {\n        AddEditContactContent(\n            bottomSheetScaffoldState = rememberModalBottomSheetState(\n                ModalBottomSheetValue.Expanded),\n            event = {},\n            uiState = EmergencyCallUIState(),\n            state = EmergencyCallState(),\n            phoneNumber = TextFieldValue(\"143\"),\n            name = TextFieldValue(\"Philippine Red Cross\"))\n    }\n}\n\n@OptIn(ExperimentalMaterialApi::class)\n@Preview\n@Composable\nfun PreviewAddNewContactContentDark() {\n    CyclistanceTheme(darkTheme = true) {\n        AddEditContactContent(\n            bottomSheetScaffoldState = rememberModalBottomSheetState(\n                ModalBottomSheetValue.Hidden),\n            event = {},\n            uiState = EmergencyCallUIState(\n                contactCurrentlyEditing = EmergencyContactModel(\n                    name = \"Philippine Red Cross\",\n                    photo = PHILIPPINE_RED_CROSS_PHOTO,\n                    phoneNumber = \"143\",\n                    id = 1)),\n            state = EmergencyCallState(),\n            phoneNumber = TextFieldValue(\"143\"),\n            name = TextFieldValue(\"Philippine Red Cross\")\n        )\n    }\n}\n\n@OptIn(ExperimentalMaterialApi::class)\n@Preview\n@Composable\nfun PreviewAddNewContactContentLight() {\n    CyclistanceTheme(darkTheme = false) {\n        AddEditContactContent(\n            bottomSheetScaffoldState = rememberModalBottomSheetState(\n                ModalBottomSheetValue.Expanded),\n            event = {},\n            uiState = EmergencyCallUIState(\n                contactCurrentlyEditing = EmergencyContactModel(\n                    name = \"Philippine Red Cross\",\n                    photo = PHILIPPINE_RED_CROSS_PHOTO,\n                    phoneNumber = \"143\",\n                    id = 1)),\n            state = EmergencyCallState(),\n            phoneNumber = TextFieldValue(\"143\"),\n            name = TextFieldValue(\"Philippine Red Cross\")\n        )\n    }\n}\n\n\n\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/add_edit_contact/AddEditContactContent.kt b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/add_edit_contact/AddEditContactContent.kt
--- a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/add_edit_contact/AddEditContactContent.kt	(revision ae41d0fa367d4b981fe2f7868a4de74b60f18560)
+++ b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/add_edit_contact/AddEditContactContent.kt	(date 1689909830175)
@@ -9,13 +9,10 @@
 import androidx.compose.material.CircularProgressIndicator
 import androidx.compose.material.ExperimentalMaterialApi
 import androidx.compose.material.MaterialTheme
-import androidx.compose.material.ModalBottomSheetState
-import androidx.compose.material.ModalBottomSheetValue
 import androidx.compose.material.Scaffold
 import androidx.compose.material.Surface
 import androidx.compose.material.icons.Icons
 import androidx.compose.material.icons.filled.Close
-import androidx.compose.material.rememberModalBottomSheetState
 import androidx.compose.runtime.Composable
 import androidx.compose.runtime.derivedStateOf
 import androidx.compose.runtime.getValue
@@ -35,7 +32,6 @@
 import com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.state.EmergencyCallState
 import com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.state.EmergencyCallUIState
 import com.example.cyclistance.feature_mapping.presentation.common.ButtonNavigation
-import com.example.cyclistance.feature_settings.presentation.setting_edit_profile.components.SelectImageBottomSheet
 import com.example.cyclistance.theme.CyclistanceTheme
 import com.example.cyclistance.top_bars.TitleTopAppBar
 import com.example.cyclistance.top_bars.TopAppBarCreator
@@ -44,7 +40,6 @@
 @Composable
 fun AddEditContactContent(
     modifier: Modifier = Modifier,
-    bottomSheetScaffoldState: ModalBottomSheetState,
     keyboardActions: KeyboardActions = KeyboardActions { },
     event: (EmergencyCallUiEvent) -> Unit,
     state: EmergencyCallState,
@@ -89,16 +84,6 @@
                     .padding(paddingValues)
                     .fillMaxSize(), color = MaterialTheme.colors.background) {
 
-                SelectImageBottomSheet(
-                    onClickGalleryButton = {
-                        event(EmergencyCallUiEvent.ToggleBottomSheet)
-                    },
-                    onClickCameraButton = {
-                        event(EmergencyCallUiEvent.ToggleBottomSheet)
-                    },
-                    bottomSheetScaffoldState = bottomSheetScaffoldState,
-                    isLoading = state.isLoading) {
-
                     ConstraintLayout(modifier = Modifier.fillMaxSize()) {
 
                         val (addPhoto, content, button, progressBar) = createRefs()
@@ -165,7 +150,6 @@
                         }
 
                     }
-                }
 
             }
         }
@@ -180,8 +164,6 @@
 fun PreviewAddNewContactContentDarkEditMode() {
     CyclistanceTheme(darkTheme = true) {
         AddEditContactContent(
-            bottomSheetScaffoldState = rememberModalBottomSheetState(
-                ModalBottomSheetValue.Expanded),
             event = {},
             uiState = EmergencyCallUIState(),
             state = EmergencyCallState(),
@@ -196,8 +178,6 @@
 fun PreviewAddNewContactContentDark() {
     CyclistanceTheme(darkTheme = true) {
         AddEditContactContent(
-            bottomSheetScaffoldState = rememberModalBottomSheetState(
-                ModalBottomSheetValue.Hidden),
             event = {},
             uiState = EmergencyCallUIState(
                 contactCurrentlyEditing = EmergencyContactModel(
@@ -218,8 +198,6 @@
 fun PreviewAddNewContactContentLight() {
     CyclistanceTheme(darkTheme = false) {
         AddEditContactContent(
-            bottomSheetScaffoldState = rememberModalBottomSheetState(
-                ModalBottomSheetValue.Expanded),
             event = {},
             uiState = EmergencyCallUIState(
                 contactCurrentlyEditing = EmergencyContactModel(
Index: app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/EmergencyCallScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen\n\nimport android.Manifest\nimport android.widget.Toast\nimport androidx.compose.foundation.layout.PaddingValues\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.foundation.text.KeyboardActions\nimport androidx.compose.material.ExperimentalMaterialApi\nimport androidx.compose.material.ModalBottomSheetValue\nimport androidx.compose.material.rememberModalBottomSheetState\nimport androidx.compose.runtime.Composable\nimport androidx.compose.runtime.LaunchedEffect\nimport androidx.compose.runtime.derivedStateOf\nimport androidx.compose.runtime.getValue\nimport androidx.compose.runtime.mutableStateOf\nimport androidx.compose.runtime.remember\nimport androidx.compose.runtime.rememberCoroutineScope\nimport androidx.compose.runtime.saveable.rememberSaveable\nimport androidx.compose.runtime.setValue\nimport androidx.compose.ui.ExperimentalComposeUiApi\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.platform.LocalContext\nimport androidx.compose.ui.platform.LocalSoftwareKeyboardController\nimport androidx.compose.ui.text.input.TextFieldValue\nimport androidx.hilt.navigation.compose.hiltViewModel\nimport androidx.lifecycle.compose.collectAsStateWithLifecycle\nimport androidx.navigation.NavController\nimport com.example.cyclistance.core.utils.constants.EmergencyCallConstants.MAX_CONTACTS\nimport com.example.cyclistance.core.utils.contexts.callPhoneNumber\nimport com.example.cyclistance.feature_emergency_call.domain.model.EmergencyContactModel\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.components.emergency_call.EmergencyCallScreenContent\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.event.EmergencyCallEvent\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.event.EmergencyCallUiEvent\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.event.EmergencyCallVmEvent\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.state.EmergencyCallUIState\nimport com.google.accompanist.permissions.ExperimentalPermissionsApi\nimport com.google.accompanist.permissions.isGranted\nimport com.google.accompanist.permissions.rememberPermissionState\nimport kotlinx.coroutines.flow.collectLatest\nimport kotlinx.coroutines.launch\n\n@OptIn(\n    ExperimentalPermissionsApi::class, ExperimentalMaterialApi::class,\n    ExperimentalComposeUiApi::class)\n@Composable\nfun EmergencyCallScreen(\n    viewModel: EmergencyCallViewModel = hiltViewModel(),\n    navController: NavController,\n    paddingValues: PaddingValues,\n    shouldOpenAddNewContact: Boolean) {\n\n    val keyboardController = LocalSoftwareKeyboardController.current\n    val context = LocalContext.current\n    val state by viewModel.state.collectAsStateWithLifecycle()\n    var name by rememberSaveable(stateSaver = TextFieldValue.Saver) {\n        mutableStateOf(TextFieldValue())\n    }\n    var phoneNumber by rememberSaveable(stateSaver = TextFieldValue.Saver) {\n        mutableStateOf(TextFieldValue())\n    }\n\n\n    var uiState by rememberSaveable {\n        mutableStateOf(EmergencyCallUIState())\n    }\n\n    val showDeleteDialog = remember {\n        { emergencyContact: EmergencyContactModel ->\n            uiState = uiState.copy(deleteDialogVisible = true, contactToDelete = emergencyContact)\n        }\n    }\n\n    val dismissDeleteDialog = remember {\n        {\n            uiState =\n                uiState.copy(deleteDialogVisible = false, contactToDelete = EmergencyContactModel())\n        }\n    }\n\n    val maximumContactReached by remember(state.emergencyCallModel) {\n        derivedStateOf {\n            state.emergencyCallModel.contacts.size >= MAX_CONTACTS\n        }\n    }\n\n\n    val onCloseEditContactScreen = remember(shouldOpenAddNewContact) {\n        {\n            if (shouldOpenAddNewContact) {\n                navController.popBackStack()\n            } else {\n                uiState = uiState.copy(contactCurrentlyEditing = null)\n            }\n        }\n    }\n\n    val onClickAddContact = remember {\n        {\n\n            if (!maximumContactReached) {\n                uiState = uiState.copy(\n                    contactCurrentlyEditing = EmergencyContactModel(),\n                    nameErrorMessage = \"\",\n                    phoneNumberErrorMessage = \"\"\n                )\n                name = name.copy(text = \"\")\n                phoneNumber = phoneNumber.copy(text = \"\")\n            }\n\n            viewModel.onEvent(event = EmergencyCallVmEvent.ResetSnapshot)\n            uiState = uiState.copy(maximumContactDialogVisible = maximumContactReached)\n\n        }\n    }\n\n    val onClickEditContact = remember {\n        { model: EmergencyContactModel ->\n            viewModel.onEvent(event = EmergencyCallVmEvent.GetContact(model.id))\n        }\n    }\n\n    val deleteContact = remember {\n        { emergencyContact: EmergencyContactModel ->\n            viewModel.onEvent(event = EmergencyCallVmEvent.DeleteContact(emergencyContact))\n        }\n    }\n\n    val callPhoneNumber = remember {\n        { phoneNumber: String ->\n            context.callPhoneNumber(phoneNumber)\n        }\n    }\n\n    val openPhoneCallPermissionState =\n        rememberPermissionState(permission = Manifest.permission.CALL_PHONE) { permissionGranted ->\n            if (permissionGranted) {\n                uiState.selectedPhoneNumber.takeIf { it.isNotEmpty() }\n                    ?.let { callPhoneNumber(it) }\n            }\n        }\n\n\n    val onClickContact = remember {\n        { phoneNumber: String ->\n            if (!openPhoneCallPermissionState.status.isGranted) {\n                uiState = uiState.copy(selectedPhoneNumber = phoneNumber)\n                openPhoneCallPermissionState.launchPermissionRequest()\n            } else {\n                callPhoneNumber(phoneNumber)\n            }\n\n        }\n    }\n\n    val dismissMaximumDialog = remember {\n        {\n            uiState = uiState.copy(maximumContactDialogVisible = false)\n        }\n    }\n\n\n    val scope = rememberCoroutineScope()\n    val bottomSheetScaffoldState = rememberModalBottomSheetState(ModalBottomSheetValue.Hidden)\n    val toggleBottomSheet = remember(bottomSheetScaffoldState, state.isLoading) {\n        {\n            scope.launch {\n\n                if (!state.isLoading) {\n                    with(bottomSheetScaffoldState) {\n                        if (isVisible) {\n                            hide()\n                        } else {\n                            show()\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n\n\n\n\n\n    val onValueChangeName = remember {\n        { _name: TextFieldValue ->\n            uiState = uiState.copy(nameErrorMessage = \"\")\n            name = _name\n        }\n    }\n    val onValueChangePhoneNumber = remember {\n        { _phoneNumber: TextFieldValue ->\n            uiState = uiState.copy(phoneNumberErrorMessage = \"\")\n            phoneNumber = _phoneNumber\n        }\n    }\n\n    val saveAddEditContact = remember {\n        {\n            viewModel.onEvent(\n                event = EmergencyCallVmEvent.SaveContact(\n                    emergencyContactModel = EmergencyContactModel(\n                        id = uiState.contactCurrentlyEditing?.id ?: 0,\n                        name = name.text,\n                        phoneNumber = phoneNumber.text,\n                        photo = uiState.selectedImageUri\n                    )\n                ))\n        }\n    }\n    val keyboardActions = remember {\n        KeyboardActions(onDone = {\n            saveAddEditContact()\n        })\n    }\n\n\n    val onSaveContactSuccess = remember {\n        {\n            Toast.makeText(context, \"Contact Saved\", Toast.LENGTH_LONG).show()\n        }\n    }\n\n    val onUnknownFailure = remember {\n        { message: String ->\n            Toast.makeText(context, message, Toast.LENGTH_LONG).show()\n        }\n    }\n    val onPhoneFailure = remember {\n        { message: String ->\n            uiState = uiState.copy(phoneNumberErrorMessage = message)\n        }\n    }\n    val onNameFailure = remember {\n        { message: String ->\n            uiState = uiState.copy(nameErrorMessage = message)\n        }\n    }\n\n\n    val onGetContactSuccess = remember {\n        { emergencyContactModel: EmergencyContactModel ->\n            uiState = uiState.copy(\n                contactCurrentlyEditing = emergencyContactModel,\n                nameErrorMessage = \"\",\n                phoneNumberErrorMessage = \"\")\n\n            name = name.copy(text = emergencyContactModel.name)\n            phoneNumber = phoneNumber.copy(text = emergencyContactModel.phoneNumber)\n        }\n    }\n\n\n    LaunchedEffect(key1 = shouldOpenAddNewContact) {\n        if (shouldOpenAddNewContact) {\n            onClickAddContact()\n        }\n    }\n\n    LaunchedEffect(key1 = true) {\n        viewModel.eventFlow.collectLatest { event ->\n            when (event) {\n                is EmergencyCallEvent.ContactDeleteFailed -> {\n                    Toast.makeText(context, \"Failed to delete contact\", Toast.LENGTH_SHORT).show()\n                }\n\n                is EmergencyCallEvent.ContactDeleteSuccess -> {\n                    Toast.makeText(context, \"Contact deleted\", Toast.LENGTH_SHORT).show()\n                }\n                is EmergencyCallEvent.GetContactSuccess -> onGetContactSuccess(event.emergencyContactModel)\n                is EmergencyCallEvent.NameFailure -> onNameFailure(event.message)\n                is EmergencyCallEvent.PhoneNumberFailure -> onPhoneFailure(event.message)\n                is EmergencyCallEvent.SaveContactSuccess -> {\n                    onSaveContactSuccess(); onCloseEditContactScreen()\n                }\n\n                is EmergencyCallEvent.UnknownFailure -> onUnknownFailure(event.message)\n            }\n        }\n    }\n\n    EmergencyCallScreenContent(\n        uiState = uiState,\n        modifier = Modifier.padding(paddingValues),\n        state = state,\n        bottomSheetScaffoldState = bottomSheetScaffoldState,\n        keyboardActions = keyboardActions,\n        name = name,\n        phoneNumber = phoneNumber,\n        event = { event ->\n            when (event) {\n                is EmergencyCallUiEvent.OnClickContact -> onClickContact(event.phoneNumber)\n                is EmergencyCallUiEvent.OnClickAddContact -> onClickAddContact()\n                is EmergencyCallUiEvent.OnClickDeleteContact -> showDeleteDialog(event.emergencyContact)\n                is EmergencyCallUiEvent.OnClickEditContact -> onClickEditContact(event.emergencyContact)\n                is EmergencyCallUiEvent.DismissDeleteContactDialog -> dismissDeleteDialog()\n                is EmergencyCallUiEvent.DeleteContact -> deleteContact(event.emergencyContact)\n                is EmergencyCallUiEvent.DismissMaximumContactDialog -> dismissMaximumDialog()\n                is EmergencyCallUiEvent.CancelEditContact -> onCloseEditContactScreen()\n                is EmergencyCallUiEvent.DismissEditContactScreen -> onCloseEditContactScreen()\n                is EmergencyCallUiEvent.OnChangeName -> onValueChangeName(event.name)\n                is EmergencyCallUiEvent.OnChangePhoneNumber -> onValueChangePhoneNumber(event.phoneNumber)\n                is EmergencyCallUiEvent.SaveEditContact -> saveAddEditContact()\n                is EmergencyCallUiEvent.ToggleBottomSheet -> {\n                    toggleBottomSheet()\n                    keyboardController?.hide()\n                }\n            }\n        })\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/EmergencyCallScreen.kt b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/EmergencyCallScreen.kt
--- a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/EmergencyCallScreen.kt	(revision ae41d0fa367d4b981fe2f7868a4de74b60f18560)
+++ b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/EmergencyCallScreen.kt	(date 1689909769481)
@@ -14,7 +14,6 @@
 import androidx.compose.runtime.getValue
 import androidx.compose.runtime.mutableStateOf
 import androidx.compose.runtime.remember
-import androidx.compose.runtime.rememberCoroutineScope
 import androidx.compose.runtime.saveable.rememberSaveable
 import androidx.compose.runtime.setValue
 import androidx.compose.ui.ExperimentalComposeUiApi
@@ -37,7 +36,6 @@
 import com.google.accompanist.permissions.isGranted
 import com.google.accompanist.permissions.rememberPermissionState
 import kotlinx.coroutines.flow.collectLatest
-import kotlinx.coroutines.launch
 
 @OptIn(
     ExperimentalPermissionsApi::class, ExperimentalMaterialApi::class,
@@ -159,25 +157,7 @@
     }
 
 
-    val scope = rememberCoroutineScope()
     val bottomSheetScaffoldState = rememberModalBottomSheetState(ModalBottomSheetValue.Hidden)
-    val toggleBottomSheet = remember(bottomSheetScaffoldState, state.isLoading) {
-        {
-            scope.launch {
-
-                if (!state.isLoading) {
-                    with(bottomSheetScaffoldState) {
-                        if (isVisible) {
-                            hide()
-                        } else {
-                            show()
-                        }
-                    }
-                }
-            }
-        }
-    }
-
 
 
 
@@ -284,7 +264,6 @@
         uiState = uiState,
         modifier = Modifier.padding(paddingValues),
         state = state,
-        bottomSheetScaffoldState = bottomSheetScaffoldState,
         keyboardActions = keyboardActions,
         name = name,
         phoneNumber = phoneNumber,
@@ -302,10 +281,7 @@
                 is EmergencyCallUiEvent.OnChangeName -> onValueChangeName(event.name)
                 is EmergencyCallUiEvent.OnChangePhoneNumber -> onValueChangePhoneNumber(event.phoneNumber)
                 is EmergencyCallUiEvent.SaveEditContact -> saveAddEditContact()
-                is EmergencyCallUiEvent.ToggleBottomSheet -> {
-                    toggleBottomSheet()
-                    keyboardController?.hide()
-                }
+
             }
         })
 }
\ No newline at end of file
Index: app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/emergency_call/EmergencyCallScreenContent.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.components.emergency_call\n\nimport androidx.compose.foundation.layout.Box\nimport androidx.compose.foundation.layout.fillMaxSize\nimport androidx.compose.foundation.layout.fillMaxWidth\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.foundation.lazy.LazyColumn\nimport androidx.compose.foundation.lazy.items\nimport androidx.compose.foundation.text.KeyboardActions\nimport androidx.compose.material.ExperimentalMaterialApi\nimport androidx.compose.material.MaterialTheme\nimport androidx.compose.material.ModalBottomSheetState\nimport androidx.compose.material.ModalBottomSheetValue\nimport androidx.compose.material.Surface\nimport androidx.compose.material.Text\nimport androidx.compose.material.rememberModalBottomSheetState\nimport androidx.compose.runtime.Composable\nimport androidx.compose.runtime.getValue\nimport androidx.compose.runtime.mutableStateOf\nimport androidx.compose.runtime.remember\nimport androidx.compose.runtime.saveable.rememberSaveable\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.text.input.TextFieldValue\nimport androidx.compose.ui.tooling.preview.Preview\nimport androidx.compose.ui.unit.dp\nimport com.example.cyclistance.R\nimport com.example.cyclistance.core.domain.model.AlertDialogState\nimport com.example.cyclistance.core.presentation.dialogs.alert_dialog.AlertDialog\nimport com.example.cyclistance.core.utils.constants.EmergencyCallConstants\nimport com.example.cyclistance.core.utils.constants.EmergencyCallConstants.PHILIPPINE_RED_CROSS_PHOTO\nimport com.example.cyclistance.feature_emergency_call.domain.model.EmergencyCallModel\nimport com.example.cyclistance.feature_emergency_call.domain.model.EmergencyContactModel\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.components.add_edit_contact.AddEditContactContent\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.event.EmergencyCallUiEvent\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.state.EmergencyCallState\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.state.EmergencyCallUIState\nimport com.example.cyclistance.theme.Black500\nimport com.example.cyclistance.theme.CyclistanceTheme\n\n@OptIn(ExperimentalMaterialApi::class)\n@Composable\nfun EmergencyCallScreenContent(\n    modifier: Modifier = Modifier,\n    bottomSheetScaffoldState: ModalBottomSheetState,\n    keyboardActions: KeyboardActions = KeyboardActions { },\n    uiState: EmergencyCallUIState,\n    state: EmergencyCallState,\n    name: TextFieldValue,\n    phoneNumber: TextFieldValue,\n    event: (EmergencyCallUiEvent) -> Unit) {\n\n    val contactsAvailable =\n        remember(state.emergencyCallModel) { state.emergencyCallModel.contacts.isNotEmpty() }\n    val shouldShowAddEditContactDialog =\n        remember(uiState.contactCurrentlyEditing) { uiState.contactCurrentlyEditing != null }\n\n    Surface(modifier = modifier.fillMaxSize(), color = MaterialTheme.colors.background) {\n\n        Box {\n\n            if (uiState.maximumContactDialogVisible) {\n                AlertDialog(\n                    alertDialog = AlertDialogState(\n                        title = \"Maximum number of contacts reached\",\n                        description = \"You can only add ${EmergencyCallConstants.MAX_CONTACTS} contacts\",\n                        icon = R.raw.info),\n                    onDismissRequest = { event(EmergencyCallUiEvent.DismissMaximumContactDialog) })\n            }\n\n            if (uiState.deleteDialogVisible) {\n                DeleteContactDialog(\n                    onDismissRequest = { event(EmergencyCallUiEvent.DismissDeleteContactDialog) },\n                    onClickConfirmButton = {\n                        event(EmergencyCallUiEvent.DeleteContact(uiState.contactToDelete))\n                        event(EmergencyCallUiEvent.DismissDeleteContactDialog)\n                    },\n                    nameToDelete = uiState.contactToDelete.name\n                )\n            }\n\n            if (shouldShowAddEditContactDialog) {\n                AddEditContactContent(\n                    bottomSheetScaffoldState = bottomSheetScaffoldState,\n                    keyboardActions = keyboardActions,\n                    event = event,\n                    state = state,\n                    uiState = uiState,\n                    name = name,\n                    phoneNumber = phoneNumber\n                )\n            }\n\n\n\n            LazyColumn(\n                modifier = Modifier\n                    .fillMaxWidth(),\n                horizontalAlignment = Alignment.CenterHorizontally) {\n\n                item {\n                    ButtonAddContact(\n                        onClick = { event(EmergencyCallUiEvent.OnClickAddContact) },\n                        modifier = Modifier\n                            .fillMaxWidth()\n                            .padding(all = 16.dp))\n                }\n                items(items = state.emergencyCallModel.contacts, key = { it.id }) { item ->\n                    if (contactsAvailable) {\n                        ContactItem(\n                            onClick = { event(EmergencyCallUiEvent.OnClickContact(item.phoneNumber)) },\n                            emergencyContact = item,\n                            modifier = Modifier\n                                .fillMaxWidth()\n                                .padding(vertical = 1.dp),\n                            onClickEdit = {\n                                event(\n                                    EmergencyCallUiEvent.OnClickEditContact(\n                                        item))\n                            },\n                            onClickDelete = {\n                                event(EmergencyCallUiEvent.OnClickDeleteContact(item))\n                            })\n                    }\n                }\n\n            }\n\n\n            if (!contactsAvailable) {\n                Box(\n                    modifier = Modifier\n                        .fillMaxSize(), contentAlignment = Alignment.Center) {\n                    Text(\n                        text = \"No contacts added\",\n                        style = MaterialTheme.typography.h6,\n                        color = Black500\n                    )\n                }\n            }\n\n        }\n\n    }\n}\n\n\nprivate val fakeContacts = EmergencyCallModel(\n    contacts = listOf(\n        EmergencyContactModel(\n            id = 1,\n            name = EmergencyCallConstants.PHILIPPINE_RED_CROSS,\n            photo = PHILIPPINE_RED_CROSS_PHOTO,\n            phoneNumber = \"123456789\"\n        ),\n        EmergencyContactModel(\n            id = 12323,\n            name = EmergencyCallConstants.NATIONAL_EMERGENCY,\n            photo = EmergencyCallConstants.NATIONAL_EMERGENCY_PHOTO,\n            phoneNumber = \"123456789\"\n        ),\n        EmergencyContactModel(\n            id = 2,\n            name = \"John Doe\",\n            photo = \"\",\n            phoneNumber = \"123456789\"\n        ),\n        EmergencyContactModel(\n            id = 3,\n            name = \"John Doe\",\n            photo = \"\",\n            phoneNumber = \"123456789\"\n        ),\n        EmergencyContactModel(\n            id = 4,\n            name = \"John Doe\",\n            photo = \"\",\n            phoneNumber = \"123456789\"\n        ),\n        EmergencyContactModel(\n            id = 5,\n            name = \"John Doe\",\n            photo = \"\",\n            phoneNumber = \"123456789\"\n        ),\n        EmergencyContactModel(\n            id = 52,\n            name = \"John Doe\",\n            photo = \"\",\n            phoneNumber = \"123456789\"\n        ),\n\n        ))\n\n@OptIn(ExperimentalMaterialApi::class)\n@Preview\n@Composable\nfun PreviewEmergencyCallScreenContentDark() {\n\n\n    val uiState by rememberSaveable {\n        mutableStateOf(EmergencyCallUIState())\n    }\n    CyclistanceTheme(darkTheme = true) {\n        EmergencyCallScreenContent(\n            uiState = uiState.copy(\n                contactCurrentlyEditing =\n                EmergencyContactModel(\n                    id = 1,\n                    name = \"John Doe\",\n                    photo = PHILIPPINE_RED_CROSS_PHOTO,\n                    phoneNumber = \"123456789\")),\n            state = EmergencyCallState(\n                emergencyCallModel = EmergencyCallModel()\n            ),\n            bottomSheetScaffoldState = rememberModalBottomSheetState(\n                ModalBottomSheetValue.Expanded),\n            event = {}, name = TextFieldValue(\"\"), phoneNumber = TextFieldValue(\"\"))\n    }\n}\n\n@OptIn(ExperimentalMaterialApi::class)\n@Preview\n@Composable\nfun PreviewEmergencyCallScreenContentLight() {\n\n    val uiState by rememberSaveable {\n        mutableStateOf(EmergencyCallUIState())\n    }\n\n    CyclistanceTheme(darkTheme = false) {\n        EmergencyCallScreenContent(\n            uiState = uiState.copy(\n                contactCurrentlyEditing = EmergencyContactModel(\n                    id = 1,\n                    name = \"John Doe\",\n                    photo = PHILIPPINE_RED_CROSS_PHOTO,\n                    phoneNumber = \"123456789\"\n                )),\n            state = EmergencyCallState(\n                emergencyCallModel = fakeContacts\n            ),\n            bottomSheetScaffoldState = rememberModalBottomSheetState(\n                ModalBottomSheetValue.Expanded),\n            event = {},\n            name = TextFieldValue(\"\"),\n            phoneNumber = TextFieldValue(\"\"))\n    }\n}\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/emergency_call/EmergencyCallScreenContent.kt b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/emergency_call/EmergencyCallScreenContent.kt
--- a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/emergency_call/EmergencyCallScreenContent.kt	(revision ae41d0fa367d4b981fe2f7868a4de74b60f18560)
+++ b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/emergency_call/EmergencyCallScreenContent.kt	(date 1689909744878)
@@ -9,11 +9,8 @@
 import androidx.compose.foundation.text.KeyboardActions
 import androidx.compose.material.ExperimentalMaterialApi
 import androidx.compose.material.MaterialTheme
-import androidx.compose.material.ModalBottomSheetState
-import androidx.compose.material.ModalBottomSheetValue
 import androidx.compose.material.Surface
 import androidx.compose.material.Text
-import androidx.compose.material.rememberModalBottomSheetState
 import androidx.compose.runtime.Composable
 import androidx.compose.runtime.getValue
 import androidx.compose.runtime.mutableStateOf
@@ -42,7 +39,6 @@
 @Composable
 fun EmergencyCallScreenContent(
     modifier: Modifier = Modifier,
-    bottomSheetScaffoldState: ModalBottomSheetState,
     keyboardActions: KeyboardActions = KeyboardActions { },
     uiState: EmergencyCallUIState,
     state: EmergencyCallState,
@@ -81,7 +77,6 @@
 
             if (shouldShowAddEditContactDialog) {
                 AddEditContactContent(
-                    bottomSheetScaffoldState = bottomSheetScaffoldState,
                     keyboardActions = keyboardActions,
                     event = event,
                     state = state,
@@ -192,7 +187,6 @@
 
         ))
 
-@OptIn(ExperimentalMaterialApi::class)
 @Preview
 @Composable
 fun PreviewEmergencyCallScreenContentDark() {
@@ -213,13 +207,10 @@
             state = EmergencyCallState(
                 emergencyCallModel = EmergencyCallModel()
             ),
-            bottomSheetScaffoldState = rememberModalBottomSheetState(
-                ModalBottomSheetValue.Expanded),
             event = {}, name = TextFieldValue(""), phoneNumber = TextFieldValue(""))
     }
 }
 
-@OptIn(ExperimentalMaterialApi::class)
 @Preview
 @Composable
 fun PreviewEmergencyCallScreenContentLight() {
@@ -240,8 +231,6 @@
             state = EmergencyCallState(
                 emergencyCallModel = fakeContacts
             ),
-            bottomSheetScaffoldState = rememberModalBottomSheetState(
-                ModalBottomSheetValue.Expanded),
             event = {},
             name = TextFieldValue(""),
             phoneNumber = TextFieldValue(""))
