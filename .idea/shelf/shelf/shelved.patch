Index: app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/event/AddEditContactUiEvent.kt
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/event/AddEditContactUiEvent.kt b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/event/AddEditContactUiEvent.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/event/AddEditContactUiEvent.kt	(revision 36e7cffb81990236fb7834c19a7454dfed3595a0)
+++ /dev/null	(revision 36e7cffb81990236fb7834c19a7454dfed3595a0)
@@ -1,16 +0,0 @@
-package com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact.event
-
-import androidx.compose.ui.text.input.TextFieldValue
-
-sealed class AddEditContactUiEvent {
-    object SelectImageFromGallery : AddEditContactUiEvent()
-    object OpenCamera : AddEditContactUiEvent()
-    data class OnChangeName(val name: TextFieldValue) : AddEditContactUiEvent()
-    data class OnChangePhoneNumber(val phoneNumber: TextFieldValue) : AddEditContactUiEvent()
-    object CancelEditContact : AddEditContactUiEvent()
-    object SaveEditContact : AddEditContactUiEvent()
-    object ToggleBottomSheet : AddEditContactUiEvent()
-    object DismissFilesAndMediaDialog : AddEditContactUiEvent()
-    object DismissCameraDialog : AddEditContactUiEvent()
-    object CloseEditContactScreen : AddEditContactUiEvent()
-}
Index: app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/state/AddEditContactUiState.kt
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/state/AddEditContactUiState.kt b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/state/AddEditContactUiState.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/state/AddEditContactUiState.kt	(revision 36e7cffb81990236fb7834c19a7454dfed3595a0)
+++ /dev/null	(revision 36e7cffb81990236fb7834c19a7454dfed3595a0)
@@ -1,22 +0,0 @@
-package com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact.state
-
-import android.os.Parcelable
-import androidx.compose.ui.text.input.TextFieldValue
-import com.example.cyclistance.core.utils.annotations.StableState
-import kotlinx.parcelize.Parcelize
-import kotlinx.parcelize.RawValue
-
-
-@Parcelize
-@StableState
-data class AddEditContactUiState(
-    val selectedImageUri: String = "",
-    val photoUrl: String = "",
-    val name: @RawValue TextFieldValue = TextFieldValue(""),
-    val nameErrorMessage: String = "",
-    val phoneNumber: @RawValue TextFieldValue = TextFieldValue(""),
-    val phoneNumberErrorMessage: String = "",
-    val cameraPermissionDialogVisible: Boolean = false,
-    val filesAndMediaDialogVisible: Boolean = false,
-    val idCurrentlyEditing: String? = null,
-) : Parcelable
Index: app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/AddEditContactScreen.kt
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/AddEditContactScreen.kt b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/AddEditContactScreen.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/AddEditContactScreen.kt	(revision 36e7cffb81990236fb7834c19a7454dfed3595a0)
+++ /dev/null	(revision 36e7cffb81990236fb7834c19a7454dfed3595a0)
@@ -1,228 +0,0 @@
-package com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact
-
-import android.Manifest
-import android.graphics.Bitmap
-import android.graphics.ImageDecoder
-import android.net.Uri
-import android.os.Build
-import android.provider.MediaStore
-import androidx.activity.compose.rememberLauncherForActivityResult
-import androidx.activity.result.contract.ActivityResultContracts
-import androidx.activity.result.launch
-import androidx.compose.foundation.layout.PaddingValues
-import androidx.compose.foundation.layout.padding
-import androidx.compose.foundation.text.KeyboardActions
-import androidx.compose.material.ExperimentalMaterialApi
-import androidx.compose.material.ModalBottomSheetValue
-import androidx.compose.material.rememberModalBottomSheetState
-import androidx.compose.runtime.Composable
-import androidx.compose.runtime.getValue
-import androidx.compose.runtime.mutableStateOf
-import androidx.compose.runtime.remember
-import androidx.compose.runtime.rememberCoroutineScope
-import androidx.compose.runtime.setValue
-import androidx.compose.ui.ExperimentalComposeUiApi
-import androidx.compose.ui.Modifier
-import androidx.compose.ui.graphics.asImageBitmap
-import androidx.compose.ui.platform.LocalContext
-import androidx.compose.ui.platform.LocalSoftwareKeyboardController
-import androidx.compose.ui.text.input.TextFieldValue
-import androidx.lifecycle.compose.collectAsStateWithLifecycle
-import androidx.lifecycle.viewmodel.compose.viewModel
-import androidx.navigation.NavController
-import com.example.cyclistance.core.utils.permissions.requestPermission
-import com.example.cyclistance.core.utils.save_images.ImageUtils.toImageUri
-import com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact.components.AddEditContactContent
-import com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact.event.AddEditContactUiEvent
-import com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact.state.AddEditContactUiState
-import com.google.accompanist.permissions.ExperimentalPermissionsApi
-import com.google.accompanist.permissions.rememberMultiplePermissionsState
-import com.google.accompanist.permissions.rememberPermissionState
-import kotlinx.coroutines.launch
-
-@OptIn(
-    ExperimentalComposeUiApi::class, ExperimentalMaterialApi::class,
-    ExperimentalPermissionsApi::class)
-@Composable
-fun EmergencyAddEditContactScreen(
-    navController: NavController,
-    paddingValues: PaddingValues,
-    viewModel: AddEditContactViewModel = viewModel()) {
-
-    val state by viewModel.state.collectAsStateWithLifecycle()
-    val keyboardController = LocalSoftwareKeyboardController.current
-    val context = LocalContext.current
-    var imageBitmap by remember { mutableStateOf<Bitmap?>(null) }
-    val scope = rememberCoroutineScope()
-    var uiState by remember { mutableStateOf(AddEditContactUiState()) }
-    val bottomSheetScaffoldState = rememberModalBottomSheetState(ModalBottomSheetValue.Hidden)
-    val toggleBottomSheet = remember(bottomSheetScaffoldState, state.isLoading) {
-        {
-            scope.launch {
-
-                if (!state.isLoading) {
-                    with(bottomSheetScaffoldState) {
-                        if (isVisible) {
-                            hide()
-                        } else {
-                            show()
-                        }
-                    }
-                }
-            }
-        }
-    }
-    val openGalleryResultLauncher =
-        rememberLauncherForActivityResult(ActivityResultContracts.GetContent()) { uri: Uri? ->
-            uiState = uiState.copy(selectedImageUri = uri.toString())
-            uri?.let { selectedUri ->
-                imageBitmap =
-                    when {
-                        Build.VERSION.SDK_INT < Build.VERSION_CODES.P -> {
-                            MediaStore.Images.Media.getBitmap(
-                                context.contentResolver,
-                                selectedUri)
-                        }
-
-                        else -> {
-                            val source =
-                                ImageDecoder.createSource(
-                                    context.contentResolver,
-                                    selectedUri)
-                            ImageDecoder.decodeBitmap(source)
-                        }
-                    }
-            }
-
-
-        }
-
-    val openCameraResultLauncher =
-        rememberLauncherForActivityResult(ActivityResultContracts.TakePicturePreview()) { bitmap: Bitmap? ->
-            val uri = bitmap?.toImageUri().toString()
-            imageBitmap = bitmap
-            uiState = uiState.copy(selectedImageUri = uri)
-
-        }
-
-
-    val filesAndMediaPermissionState =
-        rememberMultiplePermissionsState(
-            permissions = listOf(
-                Manifest.permission.READ_EXTERNAL_STORAGE,
-                Manifest.permission.WRITE_EXTERNAL_STORAGE)) { permissionGranted ->
-            if (permissionGranted.values.all { it }) {
-                openGalleryResultLauncher.launch("image/*")
-            }
-        }
-
-
-    val openCameraPermissionState =
-        rememberPermissionState(permission = Manifest.permission.CAMERA) { permissionGranted ->
-
-            if (permissionGranted) {
-                openCameraResultLauncher.launch()
-            }
-        }
-
-
-    val onDismissFilesAndMediaPermissionDialog = remember {
-        {
-            uiState = uiState.copy(filesAndMediaDialogVisible = false)
-        }
-    }
-
-    val onDismissCameraPermissionDialog = remember {
-        {
-            uiState = uiState.copy(cameraPermissionDialogVisible = false)
-        }
-    }
-
-    val openGallery = remember {
-        {
-            filesAndMediaPermissionState.requestPermission(
-                onGranted = {
-                    openGalleryResultLauncher.launch("image/*")
-                }, onExplain = {
-                    uiState = uiState.copy(filesAndMediaDialogVisible = true)
-                })
-
-        }
-    }
-
-    val openCamera = remember {
-        {
-            openCameraPermissionState.requestPermission(
-                onGranted = {
-                    openCameraResultLauncher.launch()
-                }, onExplain = {
-                    uiState = uiState.copy(cameraPermissionDialogVisible = true)
-                })
-        }
-    }
-
-    val onValueChangeName = remember {
-        { name: TextFieldValue ->
-            uiState = uiState.copy(name = name)
-        }
-    }
-    val onValueChangePhoneNumber = remember {
-        { phoneNumber: TextFieldValue ->
-            uiState = uiState.copy(phoneNumber = phoneNumber)
-        }
-    }
-    val keyboardActions = remember {
-        KeyboardActions(onDone = {
-
-        })
-    }
-    val cancelAddEditContact = remember {
-        {
-            navController.popBackStack()
-            Unit
-        }
-    }
-    val saveAddEditContact = remember {
-        {
-
-        }
-    }
-
-    val onCloseEditContactScreen = remember {
-        {
-            navController.popBackStack()
-        }
-    }
-
-
-
-    AddEditContactContent(
-        modifier = Modifier.padding(paddingValues),
-        bottomSheetScaffoldState = bottomSheetScaffoldState,
-        keyboardActions = keyboardActions,
-        state = state,
-        uiState = uiState,
-        photoUrl = imageBitmap?.asImageBitmap() ?: uiState.photoUrl,
-        event = { event ->
-            when (event) {
-                is AddEditContactUiEvent.SelectImageFromGallery -> openGallery()
-                is AddEditContactUiEvent.OpenCamera -> openCamera()
-                is AddEditContactUiEvent.OnChangeName -> onValueChangeName(event.name)
-                is AddEditContactUiEvent.OnChangePhoneNumber -> onValueChangePhoneNumber(event.phoneNumber)
-                is AddEditContactUiEvent.CancelEditContact -> cancelAddEditContact()
-                is AddEditContactUiEvent.SaveEditContact -> saveAddEditContact()
-                is AddEditContactUiEvent.ToggleBottomSheet -> {
-                    toggleBottomSheet()
-                    keyboardController?.hide()
-                }
-
-                is AddEditContactUiEvent.DismissFilesAndMediaDialog -> onDismissCameraPermissionDialog()
-                is AddEditContactUiEvent.DismissCameraDialog -> onDismissFilesAndMediaPermissionDialog()
-                is AddEditContactUiEvent.CloseEditContactScreen -> onCloseEditContactScreen()
-            }
-        }
-
-    )
-
-}
-
Index: app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/AddEditContactViewModel.kt
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/AddEditContactViewModel.kt b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/AddEditContactViewModel.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/AddEditContactViewModel.kt	(revision 36e7cffb81990236fb7834c19a7454dfed3595a0)
+++ /dev/null	(revision 36e7cffb81990236fb7834c19a7454dfed3595a0)
@@ -1,18 +0,0 @@
-package com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact
-
-import androidx.lifecycle.SavedStateHandle
-import androidx.lifecycle.ViewModel
-import com.example.cyclistance.core.utils.constants.EmergencyCallConstants.EMERGENCY_CALL_VM_STATE_KEY
-import com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact.state.AddEditContactState
-import kotlinx.coroutines.flow.MutableStateFlow
-import kotlinx.coroutines.flow.asStateFlow
-
-class AddEditContactViewModel(
-    private val savedStateHandle: SavedStateHandle,
-) : ViewModel() {
-
-    private val _state =
-        MutableStateFlow(savedStateHandle[EMERGENCY_CALL_VM_STATE_KEY] ?: AddEditContactState())
-    val state = _state.asStateFlow()
-
-}
\ No newline at end of file
Index: app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/event/MessagingConversationUiEvent.kt
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/event/MessagingConversationUiEvent.kt b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/event/MessagingConversationUiEvent.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/event/MessagingConversationUiEvent.kt	(revision 36e7cffb81990236fb7834c19a7454dfed3595a0)
+++ /dev/null	(revision 36e7cffb81990236fb7834c19a7454dfed3595a0)
@@ -1,12 +0,0 @@
-package com.example.cyclistance.feature_messaging.presentation.messaging_conversation.event
-
-import androidx.compose.ui.text.input.TextFieldValue
-
-sealed class MessagingConversationUiEvent {
-    object ToggleMessageArea : MessagingConversationUiEvent()
-    object ResetSelectedIndex : MessagingConversationUiEvent()
-    object CloseMessagingConversationScreen : MessagingConversationUiEvent()
-    data class SelectChatItem(val index: Int) : MessagingConversationUiEvent()
-    data class OnChangeMessage(val message: TextFieldValue) : MessagingConversationUiEvent()
-
-}
Index: app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/state/MessagingConversationUiState.kt
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/state/MessagingConversationUiState.kt b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/state/MessagingConversationUiState.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/state/MessagingConversationUiState.kt	(revision 36e7cffb81990236fb7834c19a7454dfed3595a0)
+++ /dev/null	(revision 36e7cffb81990236fb7834c19a7454dfed3595a0)
@@ -1,15 +0,0 @@
-package com.example.cyclistance.feature_messaging.presentation.messaging_conversation.state
-
-import android.os.Parcelable
-import androidx.compose.ui.text.input.TextFieldValue
-import com.example.cyclistance.core.utils.annotations.StableState
-import kotlinx.parcelize.Parcelize
-import kotlinx.parcelize.RawValue
-
-@Parcelize
-@StableState
-data class MessagingConversationUiState(
-    val messageAreaExpanded: Boolean = false,
-    val chatItemSelectedIndex: Int = -1,
-    val message: @RawValue TextFieldValue = TextFieldValue("")
-) : Parcelable
\ No newline at end of file
Index: app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/MessagingConversationScreen.kt
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/MessagingConversationScreen.kt b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/MessagingConversationScreen.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/MessagingConversationScreen.kt	(revision 36e7cffb81990236fb7834c19a7454dfed3595a0)
+++ /dev/null	(revision 36e7cffb81990236fb7834c19a7454dfed3595a0)
@@ -1,93 +0,0 @@
-import androidx.activity.compose.BackHandler
-import androidx.compose.foundation.layout.PaddingValues
-import androidx.compose.foundation.layout.padding
-import androidx.compose.runtime.Composable
-import androidx.compose.runtime.getValue
-import androidx.compose.runtime.mutableStateOf
-import androidx.compose.runtime.remember
-import androidx.compose.runtime.saveable.rememberSaveable
-import androidx.compose.runtime.setValue
-import androidx.compose.ui.Modifier
-import androidx.compose.ui.text.input.TextFieldValue
-import androidx.lifecycle.compose.collectAsStateWithLifecycle
-import androidx.lifecycle.viewmodel.compose.viewModel
-import androidx.navigation.NavController
-import com.example.cyclistance.feature_messaging.presentation.messaging_conversation.MessagingConversationViewModel
-import com.example.cyclistance.feature_messaging.presentation.messaging_conversation.components.MessagingConversationContent
-import com.example.cyclistance.feature_messaging.presentation.messaging_conversation.event.MessagingConversationUiEvent
-import com.example.cyclistance.feature_messaging.presentation.messaging_conversation.state.MessagingConversationUiState
-
-@Composable
-fun MessagingConversationScreen(
-    viewModel: MessagingConversationViewModel = viewModel(),
-    navController: NavController,
-    paddingValues: PaddingValues) {
-    val state by viewModel.state.collectAsStateWithLifecycle()
-    var uiState by rememberSaveable { mutableStateOf(MessagingConversationUiState()) }
-
-    val onToggleExpand = remember {
-        {
-            uiState = uiState.copy(
-                messageAreaExpanded = !uiState.messageAreaExpanded
-            )
-        }
-    }
-    val onChangeValueMessage = remember<(TextFieldValue) -> Unit> {
-        {
-            uiState = uiState.copy(
-                message = it
-            )
-        }
-    }
-
-    val onClickChatItem = remember {
-        { index: Int ->
-            uiState = uiState.copy(
-                chatItemSelectedIndex = if (uiState.chatItemSelectedIndex == index) {
-                    -1
-                } else {
-                    index
-                })
-        }
-    }
-
-    val resetSelectedIndex = remember {
-        {
-            uiState = uiState.copy(
-                chatItemSelectedIndex = -1
-            )
-        }
-    }
-
-
-    BackHandler(enabled = true, onBack = {
-        if (uiState.messageAreaExpanded) {
-            onToggleExpand()
-        } else {
-            navController.popBackStack()
-        }
-    })
-
-    val onCloseMessageConversationScreen = remember {
-        {
-            navController.popBackStack()
-        }
-    }
-
-
-
-    MessagingConversationContent(
-        modifier = Modifier.padding(paddingValues),
-        uiState = uiState,
-        state = state,
-        event = { event ->
-            when (event) {
-                is MessagingConversationUiEvent.ToggleMessageArea -> onToggleExpand()
-                is MessagingConversationUiEvent.ResetSelectedIndex -> resetSelectedIndex()
-                is MessagingConversationUiEvent.SelectChatItem -> onClickChatItem(event.index)
-                is MessagingConversationUiEvent.OnChangeMessage -> onChangeValueMessage(event.message)
-                is MessagingConversationUiEvent.CloseMessagingConversationScreen -> onCloseMessageConversationScreen()
-            }
-        }
-    )
-}
\ No newline at end of file
Index: app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/MessagingConversationViewModel.kt
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/MessagingConversationViewModel.kt b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/MessagingConversationViewModel.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/MessagingConversationViewModel.kt	(revision 36e7cffb81990236fb7834c19a7454dfed3595a0)
+++ /dev/null	(revision 36e7cffb81990236fb7834c19a7454dfed3595a0)
@@ -1,11 +0,0 @@
-package com.example.cyclistance.feature_messaging.presentation.messaging_conversation
-
-import androidx.lifecycle.ViewModel
-import com.example.cyclistance.feature_messaging.presentation.messaging_conversation.state.MessagingConversationState
-import kotlinx.coroutines.flow.MutableStateFlow
-import kotlinx.coroutines.flow.asStateFlow
-
-class MessagingConversationViewModel : ViewModel() {
-    private val _state = MutableStateFlow(MessagingConversationState())
-    val state = _state.asStateFlow()
-}
\ No newline at end of file
Index: app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/event/MessageUiEvent.kt
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/event/MessageUiEvent.kt b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/event/MessageUiEvent.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/event/MessageUiEvent.kt	(revision 36e7cffb81990236fb7834c19a7454dfed3595a0)
+++ /dev/null	(revision 36e7cffb81990236fb7834c19a7454dfed3595a0)
@@ -1,5 +0,0 @@
-package com.example.cyclistance.feature_messaging.presentation.messaging_main_screen.event
-
-sealed class MessageUiEvent {
-    data class OnMessageClicked(val messageId: String) : MessageUiEvent()
-}
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\n  <component name=\"GradleSettings\">\n    <option name=\"linkedExternalProjectsSettings\">\n      <GradleProjectSettings>\n        <option name=\"testRunner\" value=\"GRADLE\" />\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\n        <option name=\"gradleJvm\" value=\"Embedded JDK\" />\n        <option name=\"modules\">\n          <set>\n            <option value=\"$PROJECT_DIR$\" />\n            <option value=\"$PROJECT_DIR$/app\" />\n          </set>\n        </option>\n      </GradleProjectSettings>\n    </option>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/gradle.xml b/.idea/gradle.xml
--- a/.idea/gradle.xml	(revision 36e7cffb81990236fb7834c19a7454dfed3595a0)
+++ b/.idea/gradle.xml	(date 1689248153937)
@@ -16,5 +16,6 @@
         </option>
       </GradleProjectSettings>
     </option>
+    <option name="offlineMode" value="true" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/shelf/Change_String_to_TextFieldValue.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><changelist name=\"Change_String_to_TextFieldValue\" date=\"1687225668079\" recycled=\"false\">\n  <option name=\"PATH\" value=\"$PROJECT_DIR$/.idea/shelf/Change_String_to_TextFieldValue/shelved.patch\" />\n  <option name=\"DESCRIPTION\" value=\"Change String to TextFieldValue\" />\n</changelist>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Change_String_to_TextFieldValue.xml b/.idea/shelf/Change_String_to_TextFieldValue.xml
--- a/.idea/shelf/Change_String_to_TextFieldValue.xml	(revision 36e7cffb81990236fb7834c19a7454dfed3595a0)
+++ b/.idea/shelf/Change_String_to_TextFieldValue.xml	(date 1689291548943)
@@ -1,4 +1,4 @@
-<changelist name="Change_String_to_TextFieldValue" date="1687225668079" recycled="false">
+<changelist name="Change_String_to_TextFieldValue" date="1689291544500" recycled="false" deleted="true">
   <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Change_String_to_TextFieldValue/shelved.patch" />
   <option name="DESCRIPTION" value="Change String to TextFieldValue" />
 </changelist>
\ No newline at end of file
Index: app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/MessagingViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_messaging.presentation.messaging_main_screen\n\nimport androidx.lifecycle.ViewModel\n\nclass MessagingViewModel : ViewModel(\n\n)
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/MessagingViewModel.kt b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/MessagingViewModel.kt
--- a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/MessagingViewModel.kt	(revision 36e7cffb81990236fb7834c19a7454dfed3595a0)
+++ b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/MessagingViewModel.kt	(date 1689288796452)
@@ -1,7 +1,14 @@
 package com.example.cyclistance.feature_messaging.presentation.messaging_main_screen
 
+import androidx.lifecycle.SavedStateHandle
 import androidx.lifecycle.ViewModel
+import com.example.cyclistance.feature_messaging.presentation.messaging_main_screen.state.MessagingState
+import kotlinx.coroutines.flow.MutableStateFlow
+import kotlinx.coroutines.flow.asStateFlow
 
-class MessagingViewModel : ViewModel(
-
-)
\ No newline at end of file
+class MessagingViewModel(
+    private val savedStateHandle: SavedStateHandle,
+) : ViewModel() {
+    private val _state = MutableStateFlow(MessagingState())
+    val state = _state.asStateFlow()
+}
\ No newline at end of file
Index: app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/EmergencyCallViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/EmergencyCallViewModel.kt b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/EmergencyCallViewModel.kt
new file mode 100644
--- /dev/null	(date 1689291904360)
+++ b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/EmergencyCallViewModel.kt	(date 1689291904360)
@@ -0,0 +1,14 @@
+package com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen
+
+import androidx.lifecycle.SavedStateHandle
+import androidx.lifecycle.ViewModel
+import com.example.cyclistance.core.utils.constants.EmergencyCallConstants.EMERGENCY_CALL_VM_STATE_KEY
+import com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.state.EmergencyCallState
+import kotlinx.coroutines.flow.MutableStateFlow
+import kotlinx.coroutines.flow.asStateFlow
+
+class EmergencyCallViewModel(private val savedStateHandle: SavedStateHandle) : ViewModel() {
+    private val _state =
+        MutableStateFlow(savedStateHandle[EMERGENCY_CALL_VM_STATE_KEY] ?: EmergencyCallState())
+    val state = _state.asStateFlow()
+}
\ No newline at end of file
Index: app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/MessagingScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_messaging.presentation.messaging_main_screen\n\nimport androidx.compose.foundation.layout.PaddingValues\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.runtime.Composable\nimport androidx.compose.ui.Modifier\nimport androidx.navigation.NavController\nimport com.example.cyclistance.feature_messaging.presentation.messaging_main_screen.components.MessagingScreenContent\nimport com.example.cyclistance.feature_messaging.presentation.messaging_main_screen.components.fakeMessages\nimport com.example.cyclistance.feature_messaging.presentation.messaging_main_screen.event.MessageUiEvent\nimport com.example.cyclistance.navigation.Screens\n\n@Composable\nfun MessagingScreen(navController: NavController, paddingValues: PaddingValues) {\n\n    MessagingScreenContent(\n        messagesModel = fakeMessages,\n        event = {\n            when (it) {\n                is MessageUiEvent.OnMessageClicked -> {\n                    navController.navigate(Screens.Messaging.ConversationScreen.screenRoute)\n                }\n            }\n        },\n        modifier = Modifier.padding(paddingValues)\n    )\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/MessagingScreen.kt b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/MessagingScreen.kt
--- a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/MessagingScreen.kt	(revision 36e7cffb81990236fb7834c19a7454dfed3595a0)
+++ b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/MessagingScreen.kt	(date 1689291904333)
@@ -1,25 +1,100 @@
 package com.example.cyclistance.feature_messaging.presentation.messaging_main_screen
 
+import androidx.activity.compose.BackHandler
 import androidx.compose.foundation.layout.PaddingValues
 import androidx.compose.foundation.layout.padding
 import androidx.compose.runtime.Composable
+import androidx.compose.runtime.getValue
+import androidx.compose.runtime.mutableStateOf
+import androidx.compose.runtime.remember
+import androidx.compose.runtime.saveable.rememberSaveable
+import androidx.compose.runtime.setValue
 import androidx.compose.ui.Modifier
+import androidx.compose.ui.text.input.TextFieldValue
+import androidx.lifecycle.compose.collectAsStateWithLifecycle
+import androidx.lifecycle.viewmodel.compose.viewModel
 import androidx.navigation.NavController
 import com.example.cyclistance.feature_messaging.presentation.messaging_main_screen.components.MessagingScreenContent
 import com.example.cyclistance.feature_messaging.presentation.messaging_main_screen.components.fakeMessages
-import com.example.cyclistance.feature_messaging.presentation.messaging_main_screen.event.MessageUiEvent
-import com.example.cyclistance.navigation.Screens
+import com.example.cyclistance.feature_messaging.presentation.messaging_main_screen.event.MessagingUiEvent
+import com.example.cyclistance.feature_messaging.presentation.messaging_main_screen.state.MessagingUiState
 
 @Composable
-fun MessagingScreen(navController: NavController, paddingValues: PaddingValues) {
+fun MessagingScreen(
+    viewModel: MessagingViewModel = viewModel(),
+    navController: NavController,
+    paddingValues: PaddingValues) {
+
+    var uiState by rememberSaveable { mutableStateOf(MessagingUiState()) }
+    val state by viewModel.state.collectAsStateWithLifecycle()
+    val onToggleExpand = remember {
+        {
+            uiState = uiState.copy(
+                messageAreaExpanded = !uiState.messageAreaExpanded
+            )
+        }
+    }
+    val onChangeValueMessage = remember<(TextFieldValue) -> Unit> {
+        {
+            uiState = uiState.copy(
+                message = it
+            )
+        }
+    }
+
+    val onClickChatItem = remember {
+        { index: Int ->
+            uiState = uiState.copy(
+                chatItemSelectedIndex = if (uiState.chatItemSelectedIndex == index) {
+                    -1
+                } else {
+                    index
+                })
+        }
+    }
+
+    val resetSelectedIndex = remember {
+        {
+            uiState = uiState.copy(
+                chatItemSelectedIndex = -1
+            )
+        }
+    }
+
+
+    BackHandler(enabled = true, onBack = {
+        if (uiState.messageAreaExpanded) {
+            onToggleExpand()
+        } else {
+            navController.popBackStack()
+        }
+    })
+
+    val onCloseMessageConversationScreen = remember {
+        {
+            uiState = uiState.copy(selectedConversationId = null)
+        }
+    }
+
+    val onSelectedConversation = remember {
+        { id: String ->
+            uiState = uiState.copy(selectedConversationId = id)
+        }
+    }
+
+
 
     MessagingScreenContent(
-        messagesModel = fakeMessages,
-        event = {
-            when (it) {
-                is MessageUiEvent.OnMessageClicked -> {
-                    navController.navigate(Screens.Messaging.ConversationScreen.screenRoute)
-                }
+        uiState = uiState,
+        state = state.copy(messagesModel = fakeMessages),
+        event = { event ->
+            when (event) {
+                is MessagingUiEvent.OnMessageClicked -> onSelectedConversation(event.messageId)
+                is MessagingUiEvent.ToggleMessageArea -> onToggleExpand()
+                is MessagingUiEvent.ResetSelectedIndex -> resetSelectedIndex()
+                is MessagingUiEvent.SelectChatItem -> onClickChatItem(event.index)
+                is MessagingUiEvent.OnChangeMessage -> onChangeValueMessage(event.message)
+                is MessagingUiEvent.CloseMessagingConversationDialog -> onCloseMessageConversationScreen()
             }
         },
         modifier = Modifier.padding(paddingValues)
Index: app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/state/AddEditContactState.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/state/AddEditContactState.kt b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/state/EmergencyCallState.kt
rename from app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/state/AddEditContactState.kt
rename to app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/state/EmergencyCallState.kt
--- a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/state/AddEditContactState.kt	(revision 36e7cffb81990236fb7834c19a7454dfed3595a0)
+++ b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/state/EmergencyCallState.kt	(date 1689291904303)
@@ -1,4 +1,4 @@
-package com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact.state
+package com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.state
 
 import android.os.Parcelable
 import com.example.cyclistance.core.utils.annotations.StableState
@@ -6,7 +6,7 @@
 
 @Parcelize
 @StableState
-data class AddEditContactState(
+data class EmergencyCallState(
     val isLoading: Boolean = false,
     val nameSnapshot: String = "",
     val phoneNumberSnapshot: String = "",
Index: app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/event/MessagingUiEvent.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/event/MessagingUiEvent.kt b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/event/MessagingUiEvent.kt
new file mode 100644
--- /dev/null	(date 1689287368509)
+++ b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/event/MessagingUiEvent.kt	(date 1689287368509)
@@ -0,0 +1,12 @@
+package com.example.cyclistance.feature_messaging.presentation.messaging_main_screen.event
+
+import androidx.compose.ui.text.input.TextFieldValue
+
+sealed class MessagingUiEvent {
+    data class OnMessageClicked(val messageId: String) : MessagingUiEvent()
+    object ToggleMessageArea : MessagingUiEvent()
+    object ResetSelectedIndex : MessagingUiEvent()
+    object CloseMessagingConversationDialog : MessagingUiEvent()
+    data class SelectChatItem(val index: Int) : MessagingUiEvent()
+    data class OnChangeMessage(val message: TextFieldValue) : MessagingUiEvent()
+}
Index: app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/components/MessagingScreenContent.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_messaging.presentation.messaging_main_screen.components\n\nimport androidx.compose.foundation.layout.Arrangement\nimport androidx.compose.foundation.layout.Box\nimport androidx.compose.foundation.layout.BoxScope\nimport androidx.compose.foundation.layout.Column\nimport androidx.compose.foundation.layout.fillMaxSize\nimport androidx.compose.foundation.layout.fillMaxWidth\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.foundation.layout.size\nimport androidx.compose.foundation.layout.wrapContentHeight\nimport androidx.compose.foundation.lazy.LazyColumn\nimport androidx.compose.foundation.lazy.items\nimport androidx.compose.foundation.shape.CircleShape\nimport androidx.compose.material.ExperimentalMaterialApi\nimport androidx.compose.material.Icon\nimport androidx.compose.material.MaterialTheme\nimport androidx.compose.material.Surface\nimport androidx.compose.material.Text\nimport androidx.compose.runtime.Composable\nimport androidx.compose.runtime.derivedStateOf\nimport androidx.compose.runtime.getValue\nimport androidx.compose.runtime.remember\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.res.painterResource\nimport androidx.compose.ui.text.style.TextAlign\nimport androidx.compose.ui.tooling.preview.Preview\nimport androidx.compose.ui.unit.TextUnit\nimport androidx.compose.ui.unit.TextUnitType\nimport androidx.compose.ui.unit.dp\nimport com.example.cyclistance.R\nimport com.example.cyclistance.feature_messaging.domain.model.ui.MessageItemModel\nimport com.example.cyclistance.feature_messaging.domain.model.ui.MessagesModel\nimport com.example.cyclistance.feature_messaging.presentation.messaging_main_screen.event.MessageUiEvent\nimport com.example.cyclistance.theme.Black500\nimport com.example.cyclistance.theme.CyclistanceTheme\n\n@Composable\nfun MessagingScreenContent(\n    modifier: Modifier = Modifier,\n    messagesModel: MessagesModel,\n    event: (MessageUiEvent) -> Unit) {\n\n\n    val messageAvailable by remember(messagesModel.messages) { derivedStateOf { messagesModel.messages.isNotEmpty() } }\n\n    Surface(modifier = modifier.fillMaxSize(), color = MaterialTheme.colors.background) {\n\n        if (messageAvailable) {\n\n            Box(contentAlignment = Alignment.TopCenter, modifier = Modifier.fillMaxWidth()) {\n                Column(\n                    modifier = Modifier\n                        .fillMaxWidth(),\n                    horizontalAlignment = Alignment.Start,\n                    verticalArrangement = Arrangement.SpaceEvenly) {\n\n                    MessagingSearchBar(\n                        modifier = Modifier\n                            .fillMaxWidth()\n                            .padding(top = 12.dp)\n                            .padding(horizontal = 8.dp),\n\n                        value = \"\",\n                        onValueChange = {},\n                        onClickClearSearch = {})\n\n                    Text(\n                        text = \"Recent Messages\",\n                        style = MaterialTheme.typography.body2.copy(\n                            letterSpacing = TextUnit(\n                                2f,\n                                type = TextUnitType.Sp)),\n                        modifier = Modifier.padding(horizontal = 8.dp, vertical = 12.dp),\n                    )\n\n                    MessagesSection(messagesModel = messagesModel, onClick = {\n                        event(MessageUiEvent.OnMessageClicked(it))\n\n                    })\n                }\n            }\n        } else {\n\n            Box(modifier = modifier.fillMaxSize(), contentAlignment = Alignment.Center) {\n\n                Text(\n                    text = \"Start a conversation by sending a message. Connect with others and let the chat come alive!\",\n                    color = Black500,\n                    style = MaterialTheme.typography.subtitle1,\n                    modifier = Modifier.fillMaxWidth(0.7f),\n                    textAlign = TextAlign.Center, lineHeight = TextUnit(20f, TextUnitType.Sp))\n\n                AddMessageButton(onClick = {}, modifier = Modifier.align(Alignment.BottomEnd))\n\n            }\n        }\n\n    }\n}\n\n\n@OptIn(ExperimentalMaterialApi::class)\n@Composable\nprivate fun BoxScope.AddMessageButton(modifier: Modifier = Modifier, onClick: () -> Unit) {\n    Surface(\n        color = MaterialTheme.colors.primary,\n        contentColor = MaterialTheme.colors.background,\n        modifier = modifier\n            .padding(all = 12.dp),\n        shape = CircleShape,\n        onClick = onClick) {\n\n        Icon(\n            painter = painterResource(id = R.drawable.baseline_edit_24),\n            contentDescription = \"Add Message\",\n            modifier = Modifier\n                .padding(12.dp)\n                .size(28.dp),\n            )\n    }\n}\n\n@Composable\nprivate fun MessagesSection(\n    modifier: Modifier = Modifier,\n    messagesModel: MessagesModel,\n    onClick: (String) -> Unit) {\n\n    LazyColumn(\n        modifier = modifier\n            .fillMaxSize()) {\n        items(messagesModel.messages, key = {\n            it.messageId\n\n        }) { item ->\n\n            MessagingItem(\n                modifier = Modifier\n                    .fillMaxWidth()\n                    .wrapContentHeight(),\n                messageItemModel = item,\n                onClick = onClick\n            )\n        }\n    }\n}\n\n\nval fakeMessages = MessagesModel(\n    listOf(\n        MessageItemModel(\n            userPhotoUrl = \"https://www.liquidsandsolids.com/wp-content/uploads/2022/09/talking-to-a-dead-person.jpg\",\n            name = \"John Doe\",\n            message = \"Hey there! How are you?\",\n            timeStamp = \"12:00\",\n            unreadMessages = 4,\n            isMessageSent = false,\n            messageId = \"1\"\n        ),\n        MessageItemModel(\n            userPhotoUrl = \"https://images.unsplash.com/photo-1438761681033-6461ffad8d80?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8Mnx8cGVyc29ufGVufDB8fDB8fHww&w=1000&q=80\",\n            name = \"Jane Doe\",\n            message = \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Maxime mollitia,\\n\" +\n                      \"molestiae quas vel sint commodi repudiandae consequuntur voluptatum laborum\\n\" +\n                      \"numquam blanditiis harum quisquam eius sed odit fugiat iusto fuga praesentium\\n\" +\n                      \"optio, eaque rerum! Provident similique accusantium nemo autem.\",\n            timeStamp = \"12:00\",\n            unreadMessages = 10,\n            isMessageSent = true,\n            messageId = \"2\"\n        ),\n        MessageItemModel(\n            userPhotoUrl = \"https://www.diethelmtravel.com/wp-content/uploads/2016/04/bill-gates-wealthiest-person.jpg\",\n            name = \"Jennifer\",\n            message = \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Maxime mollitia,\\n\" +\n                      \"molestiae quas vel sint commodi repudiandae consequuntur voluptatum laborum\\n\" +\n                      \"numquam blanditiis harum quisquam eius sed odit fugiat iusto fuga praesentium\\n\" +\n                      \"optio, eaque rerum! Provident similique accusantium nemo autem.\",\n            timeStamp = \"12:00\",\n            unreadMessages = 0,\n            isMessageSent = true,\n            messageId = \"3\"\n        ),\n        MessageItemModel(\n            userPhotoUrl = \"https://www.harleytherapy.co.uk/counselling/wp-content/uploads/16297800391_5c6e812832.jpg\",\n            name = \"John Doe\",\n            message = \"Hello\",\n            timeStamp = \"12:00\",\n            unreadMessages = 0,\n            isMessageSent = true,\n            messageId = \"4\"\n        ),\n        MessageItemModel(\n            userPhotoUrl = \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcREz8aDOvFn1m2fCQ020dcrr-RCxey0NyF_XG6JOG1HzYoQRdBwB8U3fQJKEwG7t6Yr72Q\",\n            name = \"John Doe\",\n            message = \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Maxime mollitia,\\n\" +\n                      \"molestiae quas vel sint commodi repudiandae consequuntur voluptatum laborum\\n\" +\n                      \"numquam blanditiis harum quisquam eius sed odit fugiat iusto fuga praesentium\\n\" +\n                      \"optio, eaque rerum! Provident similique accusantium nemo autem.\",\n            timeStamp = \"12:00\",\n            unreadMessages = 0,\n            isMessageSent = false,\n            messageId = \"5\"\n        ),\n\n        )\n)\n\n@Preview\n@Composable\nfun PreviewMessagingScreenContentDark() {\n    CyclistanceTheme(darkTheme = true) {\n        MessagingScreenContent(\n            messagesModel = MessagesModel(),\n            event = {})\n    }\n}\n\n@Preview\n@Composable\nfun PreviewMessagingScreenContentLight() {\n    CyclistanceTheme(darkTheme = false) {\n        MessagingScreenContent(\n            messagesModel = fakeMessages,\n            event = {})\n    }\n}\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/components/MessagingScreenContent.kt b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/components/MessagingScreenContent.kt
--- a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/components/MessagingScreenContent.kt	(revision 36e7cffb81990236fb7834c19a7454dfed3595a0)
+++ b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/components/MessagingScreenContent.kt	(date 1689291904377)
@@ -18,8 +18,6 @@
 import androidx.compose.material.Surface
 import androidx.compose.material.Text
 import androidx.compose.runtime.Composable
-import androidx.compose.runtime.derivedStateOf
-import androidx.compose.runtime.getValue
 import androidx.compose.runtime.remember
 import androidx.compose.ui.Alignment
 import androidx.compose.ui.Modifier
@@ -32,22 +30,41 @@
 import com.example.cyclistance.R
 import com.example.cyclistance.feature_messaging.domain.model.ui.MessageItemModel
 import com.example.cyclistance.feature_messaging.domain.model.ui.MessagesModel
-import com.example.cyclistance.feature_messaging.presentation.messaging_main_screen.event.MessageUiEvent
+import com.example.cyclistance.feature_messaging.presentation.messaging_main_screen.event.MessagingUiEvent
+import com.example.cyclistance.feature_messaging.presentation.messaging_main_screen.state.MessagingState
+import com.example.cyclistance.feature_messaging.presentation.messaging_main_screen.state.MessagingUiState
 import com.example.cyclistance.theme.Black500
 import com.example.cyclistance.theme.CyclistanceTheme
 
 @Composable
 fun MessagingScreenContent(
     modifier: Modifier = Modifier,
-    messagesModel: MessagesModel,
-    event: (MessageUiEvent) -> Unit) {
+    uiState: MessagingUiState,
+    state: MessagingState,
+    event: (MessagingUiEvent) -> Unit) {
 
 
-    val messageAvailable by remember(messagesModel.messages) { derivedStateOf { messagesModel.messages.isNotEmpty() } }
+    val messageAvailable =
+        remember(state.messagesModel.messages) { state.messagesModel.messages.isNotEmpty() }
+    val shouldShowConversation =
+        remember(uiState.selectedConversationId) { uiState.selectedConversationId != null }
 
     Surface(modifier = modifier.fillMaxSize(), color = MaterialTheme.colors.background) {
 
-        if (messageAvailable) {
+
+        if (shouldShowConversation) {
+            MessagingConversationContent(
+                modifier = Modifier.fillMaxSize(),
+                uiState = uiState,
+                state = state,
+                event = event
+            )
+        }
+
+
+
+
+        if (messageAvailable && !shouldShowConversation) {
 
             Box(contentAlignment = Alignment.TopCenter, modifier = Modifier.fillMaxWidth()) {
                 Column(
@@ -75,13 +92,19 @@
                         modifier = Modifier.padding(horizontal = 8.dp, vertical = 12.dp),
                     )
 
-                    MessagesSection(messagesModel = messagesModel, onClick = {
-                        event(MessageUiEvent.OnMessageClicked(it))
-
+                    MessagesSection(messagesModel = state.messagesModel, onClick = {
+                        event(MessagingUiEvent.OnMessageClicked(it))
                     })
                 }
             }
-        } else {
+        }
+
+
+
+
+
+        if (!messageAvailable && !shouldShowConversation) {
+
 
             Box(modifier = modifier.fillMaxSize(), contentAlignment = Alignment.Center) {
 
@@ -95,6 +118,7 @@
                 AddMessageButton(onClick = {}, modifier = Modifier.align(Alignment.BottomEnd))
 
             }
+
         }
 
     }
@@ -118,7 +142,7 @@
             modifier = Modifier
                 .padding(12.dp)
                 .size(28.dp),
-            )
+        )
     }
 }
 
@@ -213,8 +237,7 @@
 fun PreviewMessagingScreenContentDark() {
     CyclistanceTheme(darkTheme = true) {
         MessagingScreenContent(
-            messagesModel = MessagesModel(),
-            event = {})
+            event = {}, uiState = MessagingUiState(), state = MessagingState())
     }
 }
 
@@ -223,8 +246,7 @@
 fun PreviewMessagingScreenContentLight() {
     CyclistanceTheme(darkTheme = false) {
         MessagingScreenContent(
-            messagesModel = fakeMessages,
-            event = {})
+            event = {}, uiState = MessagingUiState(), state = MessagingState())
     }
 }
 
Index: app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/state/MessagingUiState.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/state/MessagingUiState.kt b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/state/MessagingUiState.kt
new file mode 100644
--- /dev/null	(date 1689291904340)
+++ b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/state/MessagingUiState.kt	(date 1689291904340)
@@ -0,0 +1,19 @@
+package com.example.cyclistance.feature_messaging.presentation.messaging_main_screen.state
+
+import android.os.Parcelable
+import androidx.compose.ui.text.input.TextFieldValue
+import com.example.cyclistance.feature_messaging.domain.model.ui.MessagesModel
+import com.google.android.material.bottomsheet.BottomSheetBehavior.StableState
+import kotlinx.parcelize.Parcelize
+import kotlinx.parcelize.RawValue
+
+
+@Parcelize
+@StableState
+data class MessagingUiState(
+    val messages: MessagesModel = MessagesModel(),
+    val messageAreaExpanded: Boolean = false,
+    val selectedConversationId: String? = null,
+    val chatItemSelectedIndex: Int = -1,
+    val message: @RawValue TextFieldValue = TextFieldValue("")
+) : Parcelable
\ No newline at end of file
Index: app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/EmergencyCallScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen\n\nimport androidx.compose.foundation.layout.PaddingValues\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.runtime.Composable\nimport androidx.compose.runtime.getValue\nimport androidx.compose.runtime.mutableStateOf\nimport androidx.compose.runtime.remember\nimport androidx.compose.runtime.saveable.rememberSaveable\nimport androidx.compose.runtime.setValue\nimport androidx.compose.ui.Modifier\nimport androidx.navigation.NavController\nimport com.example.cyclistance.feature_emergency_call.domain.model.ui.EmergencyCallModel\nimport com.example.cyclistance.feature_emergency_call.domain.model.ui.EmergencyContactModel\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.components.EmergencyCallScreenContent\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.event.EmergencyCallUiEvent\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.state.EmergencyCallUIState\nimport com.example.cyclistance.navigation.Screens\n\n@Composable\nfun EmergencyCallScreen(navController: NavController, paddingValues: PaddingValues) {\n\n    var uiState by rememberSaveable {\n        mutableStateOf(EmergencyCallUIState())\n    }\n\n    val showDeleteDialog = remember {\n        { emergencyContact: EmergencyContactModel ->\n            uiState = uiState.copy(deleteDialogVisible = true, contactToDelete = emergencyContact)\n        }\n    }\n\n    val dismissDeleteDialog = remember {\n        {\n            uiState =\n                uiState.copy(deleteDialogVisible = false, contactToDelete = EmergencyContactModel())\n        }\n    }\n\n    EmergencyCallScreenContent(\n        uiState = uiState,\n        modifier = Modifier.padding(paddingValues),\n        emergencyCallModel = EmergencyCallModel(),\n        event = { event ->\n            when (event) {\n                is EmergencyCallUiEvent.OnClickContact -> {}\n                is EmergencyCallUiEvent.OnClickAddContact -> {\n                    navController.navigate(Screens.EmergencyCall.AddNewContact.screenRoute)\n                }\n\n                is EmergencyCallUiEvent.OnClickCancel -> {\n                    navController.popBackStack()\n                }\n\n                is EmergencyCallUiEvent.OnClickDeleteContact -> showDeleteDialog(event.emergencyContact)\n                is EmergencyCallUiEvent.OnClickEditContact -> {}\n                is EmergencyCallUiEvent.DismissDeleteContactDialog -> dismissDeleteDialog()\n                is EmergencyCallUiEvent.DeleteContact -> {}\n\n            }\n        })\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/EmergencyCallScreen.kt b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/EmergencyCallScreen.kt
--- a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/EmergencyCallScreen.kt	(revision 36e7cffb81990236fb7834c19a7454dfed3595a0)
+++ b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/EmergencyCallScreen.kt	(date 1689291904327)
@@ -1,27 +1,199 @@
 package com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen
 
+import android.Manifest
+import android.graphics.Bitmap
+import android.graphics.ImageDecoder
+import android.net.Uri
+import android.os.Build
+import android.provider.MediaStore
+import androidx.activity.compose.rememberLauncherForActivityResult
+import androidx.activity.result.contract.ActivityResultContracts
+import androidx.activity.result.launch
 import androidx.compose.foundation.layout.PaddingValues
 import androidx.compose.foundation.layout.padding
+import androidx.compose.foundation.text.KeyboardActions
+import androidx.compose.material.ExperimentalMaterialApi
+import androidx.compose.material.ModalBottomSheetValue
+import androidx.compose.material.rememberModalBottomSheetState
 import androidx.compose.runtime.Composable
 import androidx.compose.runtime.getValue
 import androidx.compose.runtime.mutableStateOf
 import androidx.compose.runtime.remember
+import androidx.compose.runtime.rememberCoroutineScope
 import androidx.compose.runtime.saveable.rememberSaveable
 import androidx.compose.runtime.setValue
+import androidx.compose.ui.ExperimentalComposeUiApi
 import androidx.compose.ui.Modifier
+import androidx.compose.ui.platform.LocalContext
+import androidx.compose.ui.platform.LocalSoftwareKeyboardController
+import androidx.compose.ui.text.input.TextFieldValue
+import androidx.lifecycle.compose.collectAsStateWithLifecycle
+import androidx.lifecycle.viewmodel.compose.viewModel
 import androidx.navigation.NavController
+import com.example.cyclistance.core.utils.permissions.requestPermission
+import com.example.cyclistance.core.utils.save_images.ImageUtils.toImageUri
 import com.example.cyclistance.feature_emergency_call.domain.model.ui.EmergencyCallModel
 import com.example.cyclistance.feature_emergency_call.domain.model.ui.EmergencyContactModel
 import com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.components.EmergencyCallScreenContent
 import com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.event.EmergencyCallUiEvent
 import com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.state.EmergencyCallUIState
-import com.example.cyclistance.navigation.Screens
+import com.google.accompanist.permissions.ExperimentalPermissionsApi
+import com.google.accompanist.permissions.rememberMultiplePermissionsState
+import com.google.accompanist.permissions.rememberPermissionState
+import kotlinx.coroutines.launch
 
+@OptIn(
+    ExperimentalComposeUiApi::class, ExperimentalMaterialApi::class,
+    ExperimentalPermissionsApi::class)
 @Composable
-fun EmergencyCallScreen(navController: NavController, paddingValues: PaddingValues) {
+fun EmergencyCallScreen(
+    viewModel: EmergencyCallViewModel = viewModel(),
+    navController: NavController,
+    paddingValues: PaddingValues) {
+
+    val state by viewModel.state.collectAsStateWithLifecycle()
+    val keyboardController = LocalSoftwareKeyboardController.current
+    val context = LocalContext.current
+    var imageBitmap by remember { mutableStateOf<Bitmap?>(null) }
+    val scope = rememberCoroutineScope()
+    var uiState by rememberSaveable { mutableStateOf(EmergencyCallUIState()) }
+    val bottomSheetScaffoldState = rememberModalBottomSheetState(ModalBottomSheetValue.Hidden)
+    val toggleBottomSheet = remember(bottomSheetScaffoldState, state.isLoading) {
+        {
+            scope.launch {
+
+                if (!state.isLoading) {
+                    with(bottomSheetScaffoldState) {
+                        if (isVisible) {
+                            hide()
+                        } else {
+                            show()
+                        }
+                    }
+                }
+            }
+        }
+    }
+    val openGalleryResultLauncher =
+        rememberLauncherForActivityResult(ActivityResultContracts.GetContent()) { uri: Uri? ->
+            uiState = uiState.copy(selectedImageUri = uri.toString())
+            uri?.let { selectedUri ->
+                imageBitmap =
+                    when {
+                        Build.VERSION.SDK_INT < Build.VERSION_CODES.P -> {
+                            MediaStore.Images.Media.getBitmap(
+                                context.contentResolver,
+                                selectedUri)
+                        }
+
+                        else -> {
+                            val source =
+                                ImageDecoder.createSource(
+                                    context.contentResolver,
+                                    selectedUri)
+                            ImageDecoder.decodeBitmap(source)
+                        }
+                    }
+            }
+
 
-    var uiState by rememberSaveable {
-        mutableStateOf(EmergencyCallUIState())
+        }
+
+    val openCameraResultLauncher =
+        rememberLauncherForActivityResult(ActivityResultContracts.TakePicturePreview()) { bitmap: Bitmap? ->
+            val uri = bitmap?.toImageUri().toString()
+            imageBitmap = bitmap
+            uiState = uiState.copy(selectedImageUri = uri)
+
+        }
+
+
+    val filesAndMediaPermissionState =
+        rememberMultiplePermissionsState(
+            permissions = listOf(
+                Manifest.permission.READ_EXTERNAL_STORAGE,
+                Manifest.permission.WRITE_EXTERNAL_STORAGE)) { permissionGranted ->
+            if (permissionGranted.values.all { it }) {
+                openGalleryResultLauncher.launch("image/*")
+            }
+        }
+
+
+    val openCameraPermissionState =
+        rememberPermissionState(permission = Manifest.permission.CAMERA) { permissionGranted ->
+
+            if (permissionGranted) {
+                openCameraResultLauncher.launch()
+            }
+        }
+
+
+    val onDismissFilesAndMediaPermissionDialog = remember {
+        {
+            uiState = uiState.copy(filesAndMediaDialogVisible = false)
+        }
+    }
+
+    val onDismissCameraPermissionDialog = remember {
+        {
+            uiState = uiState.copy(cameraPermissionDialogVisible = false)
+        }
+    }
+
+    val openGallery = remember {
+        {
+            filesAndMediaPermissionState.requestPermission(
+                onGranted = {
+                    openGalleryResultLauncher.launch("image/*")
+                }, onExplain = {
+                    uiState = uiState.copy(filesAndMediaDialogVisible = true)
+                })
+
+        }
+    }
+
+    val openCamera = remember {
+        {
+            openCameraPermissionState.requestPermission(
+                onGranted = {
+                    openCameraResultLauncher.launch()
+                }, onExplain = {
+                    uiState = uiState.copy(cameraPermissionDialogVisible = true)
+                })
+        }
+    }
+
+    val onValueChangeName = remember {
+        { name: TextFieldValue ->
+            uiState = uiState.copy(name = name)
+        }
+    }
+    val onValueChangePhoneNumber = remember {
+        { phoneNumber: TextFieldValue ->
+            uiState = uiState.copy(phoneNumber = phoneNumber)
+        }
+    }
+    val keyboardActions = remember {
+        KeyboardActions(onDone = {
+
+        })
+    }
+    val cancelAddEditContact = remember {
+        {
+            navController.popBackStack()
+            Unit
+        }
+    }
+    val saveAddEditContact = remember {
+        {
+
+        }
+    }
+
+    val onCloseEditContactScreen = remember {
+        {
+            navController.popBackStack()
+        }
     }
 
     val showDeleteDialog = remember {
@@ -45,7 +217,8 @@
             when (event) {
                 is EmergencyCallUiEvent.OnClickContact -> {}
                 is EmergencyCallUiEvent.OnClickAddContact -> {
-                    navController.navigate(Screens.EmergencyCall.AddNewContact.screenRoute)
+
+                    /*todo*/
                 }
 
                 is EmergencyCallUiEvent.OnClickCancel -> {
@@ -56,6 +229,20 @@
                 is EmergencyCallUiEvent.OnClickEditContact -> {}
                 is EmergencyCallUiEvent.DismissDeleteContactDialog -> dismissDeleteDialog()
                 is EmergencyCallUiEvent.DeleteContact -> {}
+                is EmergencyCallUiEvent.SelectImageFromGallery -> openGallery()
+                is EmergencyCallUiEvent.OpenCamera -> openCamera()
+                is EmergencyCallUiEvent.OnChangeName -> onValueChangeName(event.name)
+                is EmergencyCallUiEvent.OnChangePhoneNumber -> onValueChangePhoneNumber(event.phoneNumber)
+                is EmergencyCallUiEvent.CancelEditContact -> cancelAddEditContact()
+                is EmergencyCallUiEvent.SaveEditContact -> saveAddEditContact()
+                is EmergencyCallUiEvent.ToggleBottomSheet -> {
+                    toggleBottomSheet()
+                    keyboardController?.hide()
+                }
+
+                is EmergencyCallUiEvent.DismissFilesAndMediaDialog -> onDismissCameraPermissionDialog()
+                is EmergencyCallUiEvent.DismissCameraDialog -> onDismissFilesAndMediaPermissionDialog()
+                is EmergencyCallUiEvent.CloseEditContactScreen -> onCloseEditContactScreen()
 
             }
         })
Index: firebase-debug.log
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/firebase-debug.log b/firebase-debug.log
--- a/firebase-debug.log	(revision 36e7cffb81990236fb7834c19a7454dfed3595a0)
+++ b/firebase-debug.log	(date 1689248349365)
@@ -8134,3 +8134,50 @@
 
 Issues? Report them at https://github.com/firebase/firebase-tools/issues and attach the *-debug.log files.
  
+[debug] [2023-07-13T11:38:59.661Z] ----------------------------------------------------------------------
+[debug] [2023-07-13T11:38:59.663Z] Command:       /usr/local/bin/firebase /home/miko/.cache/firebase/tools/lib/node_modules/firebase-tools/lib/bin/firebase emulators:start
+[debug] [2023-07-13T11:38:59.664Z] CLI Version:   11.8.1
+[debug] [2023-07-13T11:38:59.664Z] Platform:      linux
+[debug] [2023-07-13T11:38:59.664Z] Node Version:  v16.16.0
+[debug] [2023-07-13T11:38:59.690Z] Time:          Thu Jul 13 2023 19:38:59 GMT+0800 (Philippine Standard Time)
+[debug] [2023-07-13T11:38:59.691Z] ----------------------------------------------------------------------
+[debug] 
+[debug] [2023-07-13T11:38:59.694Z] >>> [apiv2][query] GET https://firebase-public.firebaseio.com/cli.json [none]
+[debug] [2023-07-13T11:38:59.793Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
+[debug] [2023-07-13T11:38:59.794Z] > authorizing via signed-in user (mikocabal27@gmail.com)
+[debug] [2023-07-13T11:39:00.120Z] openjdk version "17.0.7" 2023-04-18
+OpenJDK Runtime Environment (build 17.0.7+7)
+
+[debug] [2023-07-13T11:39:00.120Z] OpenJDK 64-Bit Server VM (build 17.0.7+7, mixed mode)
+
+[debug] [2023-07-13T11:39:00.125Z] Parsed Java major version: 17
+[info] i  emulators: Starting emulators: auth, storage {"metadata":{"emulator":{"name":"hub"},"message":"Starting emulators: auth, storage"}}
+[debug] [2023-07-13T11:39:00.137Z] [hub] writing locator at /tmp/hub-cyclistance-cc715.json
+[debug] [2023-07-13T11:39:07.804Z] <<< [apiv2][status] GET https://firebase-public.firebaseio.com/cli.json 200
+[debug] [2023-07-13T11:39:07.804Z] <<< [apiv2][body] GET https://firebase-public.firebaseio.com/cli.json {"cloudBuildErrorAfter":1594252800000,"cloudBuildWarnAfter":1590019200000,"defaultNode10After":1594252800000,"minVersion":"3.0.5","node8DeploysDisabledAfter":1613390400000,"node8RuntimeDisabledAfter":1615809600000,"node8WarnAfter":1600128000000}
+[debug] [2023-07-13T11:39:07.835Z] Ignoring unsupported arg: port {"metadata":{"emulator":{"name":"storage"},"message":"Ignoring unsupported arg: port"}}
+[debug] [2023-07-13T11:39:09.078Z] Temp file directory for storage emulator: /tmp/firebase/storage/blobs {"metadata":{"emulator":{"name":"storage"},"message":"Temp file directory for storage emulator: /tmp/firebase/storage/blobs"}}
+[debug] [2023-07-13T11:39:09.097Z] Ignoring unsupported arg: auto_download {"metadata":{"emulator":{"name":"ui"},"message":"Ignoring unsupported arg: auto_download"}}
+[debug] [2023-07-13T11:39:09.098Z] Ignoring unsupported arg: port {"metadata":{"emulator":{"name":"ui"},"message":"Ignoring unsupported arg: port"}}
+[debug] [2023-07-13T11:39:09.098Z] Starting Emulator UI with command {"binary":"node","args":["/home/miko/.cache/firebase/emulators/ui-v1.9.0/server/server.js"],"optionalArgs":[],"joinArgs":false} {"metadata":{"emulator":{"name":"ui"},"message":"Starting Emulator UI with command {\"binary\":\"node\",\"args\":[\"/home/miko/.cache/firebase/emulators/ui-v1.9.0/server/server.js\"],\"optionalArgs\":[],\"joinArgs\":false}"}}
+[info] i  ui: Emulator UI logging to ui-debug.log {"metadata":{"emulator":{"name":"ui"},"message":"Emulator UI logging to \u001b[1mui-debug.log\u001b[22m"}}
+[debug] [2023-07-13T11:39:09.346Z] Web / API server started at localhost:4000
+ {"metadata":{"emulator":{"name":"ui"},"message":"Web / API server started at localhost:4000\n"}}
+[info] 
+┌─────────────────────────────────────────────────────────────┐
+│ ✔  All emulators ready! It is now safe to connect your app. │
+│ i  View Emulator UI at http://localhost:4000                │
+└─────────────────────────────────────────────────────────────┘
+
+┌────────────────┬──────────────┬───────────────────────────────┐
+│ Emulator       │ Host:Port    │ View in Emulator UI           │
+├────────────────┼──────────────┼───────────────────────────────┤
+│ Authentication │ 0.0.0.0:9099 │ http://localhost:4000/auth    │
+├────────────────┼──────────────┼───────────────────────────────┤
+│ Storage        │ 0.0.0.0:9199 │ http://localhost:4000/storage │
+└────────────────┴──────────────┴───────────────────────────────┘
+  Emulator Hub running at localhost:4400
+  Other reserved ports: 4500
+
+Issues? Report them at https://github.com/firebase/firebase-tools/issues and attach the *-debug.log files.
+ 
Index: app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/event/EmergencyCallUiEvent.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.event\n\nimport com.example.cyclistance.feature_emergency_call.domain.model.ui.EmergencyContactModel\n\nsealed class EmergencyCallUiEvent {\n    object OnClickCancel : EmergencyCallUiEvent()\n    object OnClickAddContact : EmergencyCallUiEvent()\n    object OnClickContact : EmergencyCallUiEvent()\n    data class OnClickEditContact(val id: String) : EmergencyCallUiEvent()\n    data class OnClickDeleteContact(val emergencyContact: EmergencyContactModel) :\n        EmergencyCallUiEvent()\n\n    data class DeleteContact(val id: String) : EmergencyCallUiEvent()\n    object DismissDeleteContactDialog : EmergencyCallUiEvent()\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/event/EmergencyCallUiEvent.kt b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/event/EmergencyCallUiEvent.kt
--- a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/event/EmergencyCallUiEvent.kt	(revision 36e7cffb81990236fb7834c19a7454dfed3595a0)
+++ b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/event/EmergencyCallUiEvent.kt	(date 1689291904357)
@@ -1,5 +1,6 @@
 package com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.event
 
+import androidx.compose.ui.text.input.TextFieldValue
 import com.example.cyclistance.feature_emergency_call.domain.model.ui.EmergencyContactModel
 
 sealed class EmergencyCallUiEvent {
@@ -14,4 +15,14 @@
     object DismissDeleteContactDialog : EmergencyCallUiEvent()
 
 
+    object SelectImageFromGallery : EmergencyCallUiEvent()
+    object OpenCamera : EmergencyCallUiEvent()
+    data class OnChangeName(val name: TextFieldValue) : EmergencyCallUiEvent()
+    data class OnChangePhoneNumber(val phoneNumber: TextFieldValue) : EmergencyCallUiEvent()
+    object CancelEditContact : EmergencyCallUiEvent()
+    object SaveEditContact : EmergencyCallUiEvent()
+    object ToggleBottomSheet : EmergencyCallUiEvent()
+    object DismissFilesAndMediaDialog : EmergencyCallUiEvent()
+    object DismissCameraDialog : EmergencyCallUiEvent()
+    object CloseEditContactScreen : EmergencyCallUiEvent()
 }
Index: app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/state/EmergencyCallUIState.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.state\n\nimport android.os.Parcelable\nimport com.example.cyclistance.core.utils.annotations.StableState\nimport com.example.cyclistance.feature_emergency_call.domain.model.ui.EmergencyContactModel\nimport kotlinx.parcelize.Parcelize\n\n\n@Parcelize\n@StableState\ndata class EmergencyCallUIState(\n    val deleteDialogVisible: Boolean = false,\n    val contactToDelete: EmergencyContactModel = EmergencyContactModel()\n) : Parcelable\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/state/EmergencyCallUIState.kt b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/state/EmergencyCallUIState.kt
--- a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/state/EmergencyCallUIState.kt	(revision 36e7cffb81990236fb7834c19a7454dfed3595a0)
+++ b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/state/EmergencyCallUIState.kt	(date 1689288695602)
@@ -1,14 +1,25 @@
 package com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.state
 
 import android.os.Parcelable
+import androidx.compose.ui.text.input.TextFieldValue
 import com.example.cyclistance.core.utils.annotations.StableState
 import com.example.cyclistance.feature_emergency_call.domain.model.ui.EmergencyContactModel
 import kotlinx.parcelize.Parcelize
+import kotlinx.parcelize.RawValue
 
 
 @Parcelize
 @StableState
 data class EmergencyCallUIState(
     val deleteDialogVisible: Boolean = false,
-    val contactToDelete: EmergencyContactModel = EmergencyContactModel()
+    val contactToDelete: EmergencyContactModel? = null,
+    val selectedImageUri: String = "",
+    val photoUrl: String = "",
+    val name: @RawValue TextFieldValue = TextFieldValue(""),
+    val nameErrorMessage: String = "",
+    val phoneNumber: @RawValue TextFieldValue = TextFieldValue(""),
+    val phoneNumberErrorMessage: String = "",
+    val cameraPermissionDialogVisible: Boolean = false,
+    val filesAndMediaDialogVisible: Boolean = false,
+    val idCurrentlyEditing: String? = null,
 ) : Parcelable
Index: app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/components/MessagingConversationContent.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/components/MessagingConversationContent.kt b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/components/ConversationContent.kt
rename from app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/components/MessagingConversationContent.kt
rename to app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/components/ConversationContent.kt
--- a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/components/MessagingConversationContent.kt	(revision 36e7cffb81990236fb7834c19a7454dfed3595a0)
+++ b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/components/ConversationContent.kt	(date 1689291904350)
@@ -1,4 +1,4 @@
-package com.example.cyclistance.feature_messaging.presentation.messaging_conversation.components
+package com.example.cyclistance.feature_messaging.presentation.messaging_main_screen.components
 
 
 import androidx.compose.animation.AnimatedVisibility
@@ -46,6 +46,8 @@
 import androidx.compose.ui.res.painterResource
 import androidx.compose.ui.tooling.preview.Preview
 import androidx.compose.ui.unit.dp
+import androidx.compose.ui.window.Dialog
+import androidx.compose.ui.window.DialogProperties
 import coil.compose.AsyncImage
 import com.example.cyclistance.R
 import com.example.cyclistance.core.utils.composable_utils.Keyboard
@@ -54,9 +56,9 @@
 import com.example.cyclistance.feature_messaging.domain.model.ui.Duration
 import com.example.cyclistance.feature_messaging.domain.model.ui.MessageContent
 import com.example.cyclistance.feature_messaging.domain.model.ui.MessageConversation
-import com.example.cyclistance.feature_messaging.presentation.messaging_conversation.event.MessagingConversationUiEvent
-import com.example.cyclistance.feature_messaging.presentation.messaging_conversation.state.MessagingConversationState
-import com.example.cyclistance.feature_messaging.presentation.messaging_conversation.state.MessagingConversationUiState
+import com.example.cyclistance.feature_messaging.presentation.messaging_main_screen.event.MessagingUiEvent
+import com.example.cyclistance.feature_messaging.presentation.messaging_main_screen.state.MessagingState
+import com.example.cyclistance.feature_messaging.presentation.messaging_main_screen.state.MessagingUiState
 import com.example.cyclistance.navigation.IsDarkTheme
 import com.example.cyclistance.theme.Black500
 import com.example.cyclistance.theme.CyclistanceTheme
@@ -192,9 +194,9 @@
 @Composable
 fun MessagingConversationContent(
     modifier: Modifier = Modifier,
-    uiState: MessagingConversationUiState,
-    state: MessagingConversationState,
-    event: (MessagingConversationUiEvent) -> Unit) {
+    uiState: MessagingUiState,
+    state: MessagingState,
+    event: (MessagingUiEvent) -> Unit) {
 
     val conversationAvailable by remember(state.conversation) {
         derivedStateOf { state.conversation.messages.isNotEmpty() }
@@ -225,139 +227,150 @@
         if (!uiState.messageAreaExpanded) {
             return@LaunchedEffect
         }
-        event(MessagingConversationUiEvent.ToggleMessageArea)
+        event(MessagingUiEvent.ToggleMessageArea)
 
     }
 
 
+    Dialog(
+        onDismissRequest = { event(MessagingUiEvent.CloseMessagingConversationDialog) },
+        properties = DialogProperties(
+            usePlatformDefaultWidth = false,
+            dismissOnClickOutside = false,
+            dismissOnBackPress = true
+        )) {
 
-    Scaffold(modifier = modifier, backgroundColor = MaterialTheme.colors.background, topBar = {
-        TopAppBarCreator(
-            icon = Icons.Default.Close,
-            onClickIcon = { event(MessagingConversationUiEvent.CloseMessagingConversationScreen) },
-            topAppBarTitle = {
-                Row(
-                    modifier = Modifier.wrapContentSize(),
-                    verticalAlignment = Alignment.CenterVertically,
-                    horizontalArrangement = Arrangement.spacedBy(5.dp)) {
+        Scaffold(modifier = modifier, backgroundColor = MaterialTheme.colors.background, topBar = {
+            TopAppBarCreator(
+                icon = Icons.Default.Close,
+                onClickIcon = { event(MessagingUiEvent.CloseMessagingConversationDialog) },
+                topAppBarTitle = {
+                    Row(
+                        modifier = Modifier.wrapContentSize(),
+                        verticalAlignment = Alignment.CenterVertically,
+                        horizontalArrangement = Arrangement.spacedBy(5.dp)) {
 
-                    AsyncImage(
-                        model = "https://t3.ftcdn.net/jpg/02/99/04/20/360_F_299042079_vGBD7wIlSeNl7vOevWHiL93G4koMM967.jpg",
-                        alignment = Alignment.Center,
-                        contentDescription = "User Profile Image",
-                        modifier = Modifier
-                            .clip(CircleShape)
-                            .size(35.dp)
-                            .clickable { event(MessagingConversationUiEvent.CloseMessagingConversationScreen) },
-                        contentScale = ContentScale.Crop,
-                        placeholder = painterResource(id = R.drawable.ic_empty_profile_placeholder_large),
-                        error = painterResource(id = R.drawable.ic_empty_profile_placeholder_large),
-                        fallback = painterResource(id = R.drawable.ic_empty_profile_placeholder_large))
-                    TitleTopAppBar(title = "John Doe", modifier = Modifier.padding(start = 5.dp))
-                }
-            })
-    }) { paddingValues ->
+                        AsyncImage(
+                            model = "https://t3.ftcdn.net/jpg/02/99/04/20/360_F_299042079_vGBD7wIlSeNl7vOevWHiL93G4koMM967.jpg",
+                            alignment = Alignment.Center,
+                            contentDescription = "User Profile Image",
+                            modifier = Modifier
+                                .clip(CircleShape)
+                                .size(35.dp)
+                                .clickable { },
+                            contentScale = ContentScale.Crop,
+                            placeholder = painterResource(id = R.drawable.ic_empty_profile_placeholder_large),
+                            error = painterResource(id = R.drawable.ic_empty_profile_placeholder_large),
+                            fallback = painterResource(id = R.drawable.ic_empty_profile_placeholder_large))
+                        TitleTopAppBar(
+                            title = "John Doe",
+                            modifier = Modifier.padding(start = 5.dp))
+                    }
+                })
+        }) { paddingValues ->
 
-        Surface(
-            modifier = Modifier
-                .padding(paddingValues)
-                .fillMaxSize()
-                .noRippleClickable {
+            Surface(
+                modifier = Modifier
+                    .padding(paddingValues)
+                    .fillMaxSize()
+                    .noRippleClickable {
 
-                    event(MessagingConversationUiEvent.ResetSelectedIndex)
+                        event(MessagingUiEvent.ResetSelectedIndex)
 
-                    if (uiState.messageAreaExpanded) {
-                        event(MessagingConversationUiEvent.ToggleMessageArea)
-                    }
-                    focusManager.clearFocus()
-                },
-            color = MaterialTheme.colors.background) {
+                        if (uiState.messageAreaExpanded) {
+                            event(MessagingUiEvent.ToggleMessageArea)
+                        }
+                        focusManager.clearFocus()
+                    },
+                color = MaterialTheme.colors.background) {
 
-            Box(
-                modifier = Modifier.fillMaxSize(),
-                contentAlignment = if (conversationAvailable) Alignment.BottomCenter else Alignment.Center) {
+                Box(
+                    modifier = Modifier.fillMaxSize(),
+                    contentAlignment = if (conversationAvailable) Alignment.BottomCenter else Alignment.Center) {
 
 
-                Column(
-                    modifier = Modifier.fillMaxSize()) {
+                    Column(
+                        modifier = Modifier.fillMaxSize()) {
 
 
-                    if (conversationAvailable) {
+                        if (conversationAvailable) {
 
-                        LazyColumn(
-                            state = listState,
-                            verticalArrangement = Arrangement.Top,
-                            horizontalAlignment = Alignment.CenterHorizontally,
-                            modifier = Modifier.weight(1f),
-                            contentPadding = PaddingValues(top = 16.dp, bottom = 24.dp)
-                        ) {
+                            LazyColumn(
+                                state = listState,
+                                verticalArrangement = Arrangement.Top,
+                                horizontalAlignment = Alignment.CenterHorizontally,
+                                modifier = Modifier.weight(1f),
+                                contentPadding = PaddingValues(top = 16.dp, bottom = 24.dp)
+                            ) {
 
-                            itemsIndexed(
-                                items = state.conversation.messages,
-                                key = { _, item -> item.messageId }) { index, message ->
+                                itemsIndexed(
+                                    items = state.conversation.messages,
+                                    key = { _, item -> item.messageId }) { index, message ->
 
-                                val isSender by remember { derivedStateOf { message.senderId != USER_ID } }
-                                val timeStampAvailable by remember { derivedStateOf { message.duration != null && message.dateSent != null } }
+                                    val isSender by remember { derivedStateOf { message.senderId != USER_ID } }
+                                    val timeStampAvailable by remember { derivedStateOf { message.duration != null && message.dateSent != null } }
 
-                                AnimatedVisibility(visible = timeStampAvailable) {
+                                    AnimatedVisibility(visible = timeStampAvailable) {
 
-                                    MessagingTimeStamp(
-                                        value = message.dateSent!!,
-                                        modifier = Modifier
-                                            .fillMaxWidth()
-                                            .padding(vertical = 8.dp))
-                                }
+                                        MessagingTimeStamp(
+                                            value = message.dateSent!!,
+                                            modifier = Modifier
+                                                .fillMaxWidth()
+                                                .padding(vertical = 8.dp))
+                                    }
 
 
-                                ChatItem(
-                                    message = message,
-                                    isSender = isSender,
-                                    modifier = Modifier
-                                        .fillMaxWidth()
-                                        .padding(vertical = 8.dp, horizontal = 6.dp),
-                                    contentAlignment = if (isSender) Alignment.CenterStart else Alignment.CenterEnd,
-                                    currentIndex = index,
-                                    selectedIndex = uiState.chatItemSelectedIndex,
-                                    onClick = {
-                                        event(
-                                            MessagingConversationUiEvent.SelectChatItem(
-                                                index = it))
-                                    }
-                                )
-                            }
+                                    ChatItem(
+                                        message = message,
+                                        isSender = isSender,
+                                        modifier = Modifier
+                                            .fillMaxWidth()
+                                            .padding(vertical = 8.dp, horizontal = 6.dp),
+                                        contentAlignment = if (isSender) Alignment.CenterStart else Alignment.CenterEnd,
+                                        currentIndex = index,
+                                        selectedIndex = uiState.chatItemSelectedIndex,
+                                        onClick = {
+                                            event(
+                                                MessagingUiEvent.SelectChatItem(
+                                                    index = it))
+                                        }
+                                    )
+                                }
 
-                        }
+                            }
 
-                    } else {
-                        PlaceholderEmptyConversation(modifier = Modifier
-                            .weight(1f)
-                            .fillMaxSize())
-                    }
+                        } else {
+                            PlaceholderEmptyConversation(
+                                modifier = Modifier
+                                    .weight(1f)
+                                    .fillMaxSize())
+                        }
 
 
 
 
-                    MessagingTextArea(
-                        message = uiState.message,
-                        onValueChange = { event(MessagingConversationUiEvent.OnChangeMessage(it)) },
-                        modifier = Modifier.wrapContentHeight(),
-                        onClickSend = {},
-                        onToggleExpand = { event(MessagingConversationUiEvent.ToggleMessageArea) },
-                        isExpanded = uiState.messageAreaExpanded)
+                        MessagingTextArea(
+                            message = uiState.message,
+                            onValueChange = { event(MessagingUiEvent.OnChangeMessage(it)) },
+                            modifier = Modifier.wrapContentHeight(),
+                            onClickSend = {},
+                            onToggleExpand = { event(MessagingUiEvent.ToggleMessageArea) },
+                            isExpanded = uiState.messageAreaExpanded)
 
-                }
+                    }
 
-                ScrollToBottomButton(
-                    modifier = Modifier.absoluteOffset(y = (-85).dp),
-                    isVisible = isScrollingUp,
-                    onClick = {
-                        scope.launch {
-                            listState.animateScrollToItem(index = state.conversation.messages.indices.last)
-                        }
-                    })
+                    ScrollToBottomButton(
+                        modifier = Modifier.absoluteOffset(y = (-85).dp),
+                        isVisible = isScrollingUp,
+                        onClick = {
+                            scope.launch {
+                                listState.animateScrollToItem(index = state.conversation.messages.indices.last)
+                            }
+                        })
 
-            }
+                }
 
+            }
         }
     }
 
@@ -407,8 +420,8 @@
     CompositionLocalProvider(IsDarkTheme provides true) {
         CyclistanceTheme(darkTheme = true) {
             MessagingConversationContent(
-                uiState = MessagingConversationUiState(messageAreaExpanded = true),
-                event = {}, state = MessagingConversationState())
+                uiState = MessagingUiState(messageAreaExpanded = true),
+                event = {}, state = MessagingState())
         }
     }
 }
@@ -419,8 +432,8 @@
     CompositionLocalProvider(IsDarkTheme provides false) {
         CyclistanceTheme(darkTheme = false) {
             MessagingConversationContent(
-                uiState = MessagingConversationUiState(messageAreaExpanded = true),
-                event = {}, state = MessagingConversationState())
+                uiState = MessagingUiState(messageAreaExpanded = true),
+                event = {}, state = MessagingState())
         }
     }
 }
Index: app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/components/ScrollToBottomButton.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/components/ScrollToBottomButton.kt b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/components/ConversationScrollToBottomButton.kt
rename from app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/components/ScrollToBottomButton.kt
rename to app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/components/ConversationScrollToBottomButton.kt
--- a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/components/ScrollToBottomButton.kt	(revision 36e7cffb81990236fb7834c19a7454dfed3595a0)
+++ b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/components/ConversationScrollToBottomButton.kt	(date 1689250152177)
@@ -1,4 +1,4 @@
-package com.example.cyclistance.feature_messaging.presentation.messaging_conversation.components
+package com.example.cyclistance.feature_messaging.presentation.messaging_main_screen.components
 
 import androidx.compose.animation.AnimatedVisibility
 import androidx.compose.animation.scaleIn
Index: app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/EmergencyCallScreenContent.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.components\n\nimport androidx.compose.foundation.BorderStroke\nimport androidx.compose.foundation.layout.Arrangement\nimport androidx.compose.foundation.layout.Box\nimport androidx.compose.foundation.layout.Column\nimport androidx.compose.foundation.layout.fillMaxSize\nimport androidx.compose.foundation.layout.fillMaxWidth\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.foundation.layout.wrapContentSize\nimport androidx.compose.foundation.lazy.LazyColumn\nimport androidx.compose.foundation.lazy.items\nimport androidx.compose.foundation.shape.RoundedCornerShape\nimport androidx.compose.material.ButtonDefaults\nimport androidx.compose.material.MaterialTheme\nimport androidx.compose.material.OutlinedButton\nimport androidx.compose.material.Surface\nimport androidx.compose.material.Text\nimport androidx.compose.runtime.Composable\nimport androidx.compose.runtime.derivedStateOf\nimport androidx.compose.runtime.getValue\nimport androidx.compose.runtime.mutableStateOf\nimport androidx.compose.runtime.remember\nimport androidx.compose.runtime.saveable.rememberSaveable\nimport androidx.compose.runtime.setValue\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.graphics.Color\nimport androidx.compose.ui.tooling.preview.Preview\nimport androidx.compose.ui.unit.dp\nimport com.example.cyclistance.core.utils.constants.EmergencyCallConstants\nimport com.example.cyclistance.feature_emergency_call.domain.model.ui.EmergencyCallModel\nimport com.example.cyclistance.feature_emergency_call.domain.model.ui.EmergencyContactModel\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.event.EmergencyCallUiEvent\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.state.EmergencyCallUIState\nimport com.example.cyclistance.theme.Black500\nimport com.example.cyclistance.theme.CyclistanceTheme\n\n@Composable\nfun EmergencyCallScreenContent(\n    modifier: Modifier = Modifier,\n    emergencyCallModel: EmergencyCallModel,\n    uiState: EmergencyCallUIState,\n    event: (EmergencyCallUiEvent) -> Unit) {\n\n    val messageAvailable by remember(emergencyCallModel.contacts) { derivedStateOf { emergencyCallModel.contacts.isNotEmpty() } }\n\n    Surface(modifier = modifier.fillMaxSize(), color = MaterialTheme.colors.background) {\n\n\n        Box(modifier = Modifier) {\n\n            if (uiState.deleteDialogVisible) {\n                DeleteContactDialog(\n                    onDismissRequest = { event(EmergencyCallUiEvent.DismissDeleteContactDialog) },\n                    onClickConfirmButton = { event(EmergencyCallUiEvent.DeleteContact(uiState.contactToDelete.id)) },\n                    nameToDelete = uiState.contactToDelete.name\n                )\n            }\n\n            Column(verticalArrangement = Arrangement.SpaceEvenly) {\n\n\n                ButtonAddContact(\n                    onClick = { event(EmergencyCallUiEvent.OnClickAddContact) },\n                    modifier = Modifier.padding(vertical = 16.dp))\n\n\n                if (messageAvailable) {\n                    LazyColumn(\n                        modifier = Modifier\n                            .fillMaxWidth()\n                            .weight(0.8f),\n                        horizontalAlignment = Alignment.CenterHorizontally) {\n\n\n                        items(items = emergencyCallModel.contacts, key = { it.id }) { item ->\n                            ContactItem(\n                                onClick = { event(EmergencyCallUiEvent.OnClickContact) },\n                                emergencyContact = item,\n                                modifier = Modifier\n                                    .fillMaxWidth()\n                                    .padding(vertical = 1.dp),\n                                onClickEdit = { event(EmergencyCallUiEvent.OnClickEditContact(it)) },\n                                onClickDelete = { event(EmergencyCallUiEvent.OnClickDeleteContact(it)) })\n                        }\n                    }\n\n                } else {\n                    Box(\n                        modifier = Modifier\n                            .fillMaxWidth()\n                            .weight(0.8f), contentAlignment = Alignment.Center) {\n                        Text(\n                            text = \"No contacts added\",\n                            style = MaterialTheme.typography.h6,\n                            color = Black500\n                        )\n                    }\n                }\n\n                Box(\n                    modifier = Modifier\n                        .weight(0.2f)\n                        .fillMaxWidth(),\n                    contentAlignment = Alignment.Center) {\n\n                    OutlinedButton(\n                        modifier = Modifier.wrapContentSize(),\n                        onClick = { event(EmergencyCallUiEvent.OnClickCancel) },\n                        colors = ButtonDefaults.buttonColors(backgroundColor = Color.Transparent),\n                        border = BorderStroke(1.dp, Black500), shape = RoundedCornerShape(12.dp)) {\n\n                        Text(\n                            text = \"Close\",\n                            color = MaterialTheme.colors.onBackground,\n                            style = MaterialTheme.typography.button,\n                            modifier = Modifier.padding(horizontal = 24.dp, vertical = 2.dp))\n                    }\n\n                }\n            }\n        }\n\n    }\n}\n\n\nprivate val fakeContacts = EmergencyCallModel(\n    contacts = listOf(\n        EmergencyContactModel(\n            id = \"1\",\n            name = EmergencyCallConstants.PHILIPPINE_RED_CROSS,\n            photo = EmergencyCallConstants.PHILIPPINE_RED_CROSS_PHOTO,\n            number = \"123456789\"\n        ),\n        EmergencyContactModel(\n            id = \"12323\",\n            name = EmergencyCallConstants.NATIONAL_EMERGENCY,\n            photo = EmergencyCallConstants.NATIONAL_EMERGENCY_PHOTO,\n            number = \"123456789\"\n        ),\n        EmergencyContactModel(\n            id = \"2\",\n            name = \"John Doe\",\n            photo = \"\",\n            number = \"123456789\"\n        ),\n        EmergencyContactModel(\n            id = \"3\",\n            name = \"John Doe\",\n            photo = \"\",\n            number = \"123456789\"\n        ),\n        EmergencyContactModel(\n            id = \"4\",\n            name = \"John Doe\",\n            photo = \"\",\n            number = \"123456789\"\n        ),\n        EmergencyContactModel(\n            id = \"5\",\n            name = \"John Doe\",\n            photo = \"\",\n            number = \"123456789\"\n        ),\n        EmergencyContactModel(\n            id = \"52\",\n            name = \"John Doe\",\n            photo = \"\",\n            number = \"123456789\"\n        ),\n\n        ))\n\n@Preview\n@Composable\nfun PreviewEmergencyCallScreenContentDark() {\n\n\n    var uiState by rememberSaveable {\n        mutableStateOf(EmergencyCallUIState())\n    }\n\n    val showDeleteDialog = remember {\n        { emergencyContact: EmergencyContactModel ->\n            uiState = uiState.copy(deleteDialogVisible = true, contactToDelete = emergencyContact)\n        }\n    }\n\n    val dismissDeleteDialog = remember {\n        {\n            uiState =\n                uiState.copy(deleteDialogVisible = false, contactToDelete = EmergencyContactModel())\n        }\n    }\n\n    CyclistanceTheme(darkTheme = true) {\n        EmergencyCallScreenContent(\n            uiState = uiState,\n            emergencyCallModel = fakeContacts, event = { event ->\n                when (event) {\n                    is EmergencyCallUiEvent.OnClickContact -> {\n\n                    }\n\n                    is EmergencyCallUiEvent.OnClickAddContact -> {\n                    }\n\n                    is EmergencyCallUiEvent.OnClickCancel -> {\n                    }\n\n                    is EmergencyCallUiEvent.OnClickDeleteContact -> showDeleteDialog(event.emergencyContact)\n                    is EmergencyCallUiEvent.OnClickEditContact -> {\n\n                    }\n\n                    is EmergencyCallUiEvent.DismissDeleteContactDialog -> dismissDeleteDialog()\n                    is EmergencyCallUiEvent.DeleteContact -> {}\n\n                }\n            })\n    }\n}\n\n@Preview\n@Composable\nfun PreviewEmergencyCallScreenContentLight() {\n\n    var uiState by rememberSaveable {\n        mutableStateOf(EmergencyCallUIState())\n    }\n\n    val showDeleteDialog = remember {\n        { emergencyContact: EmergencyContactModel ->\n            uiState = uiState.copy(deleteDialogVisible = true, contactToDelete = emergencyContact)\n        }\n    }\n\n    val dismissDeleteDialog = remember {\n        {\n            uiState =\n                uiState.copy(deleteDialogVisible = false, contactToDelete = EmergencyContactModel())\n        }\n    }\n\n    CyclistanceTheme(darkTheme = false) {\n        EmergencyCallScreenContent(\n            uiState = uiState,\n            emergencyCallModel = fakeContacts, event = { event ->\n                when (event) {\n                    is EmergencyCallUiEvent.OnClickContact -> {\n\n                    }\n\n                    is EmergencyCallUiEvent.OnClickAddContact -> {\n\n                    }\n\n                    is EmergencyCallUiEvent.OnClickCancel -> {\n\n                    }\n\n                    is EmergencyCallUiEvent.OnClickDeleteContact -> showDeleteDialog(event.emergencyContact)\n                    is EmergencyCallUiEvent.OnClickEditContact -> {\n\n                    }\n\n                    is EmergencyCallUiEvent.DismissDeleteContactDialog -> dismissDeleteDialog()\n                    is EmergencyCallUiEvent.DeleteContact -> {}\n                }\n            })\n    }\n}\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/EmergencyCallScreenContent.kt b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/EmergencyCallScreenContent.kt
--- a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/EmergencyCallScreenContent.kt	(revision 36e7cffb81990236fb7834c19a7454dfed3595a0)
+++ b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/EmergencyCallScreenContent.kt	(date 1689291904317)
@@ -44,17 +44,22 @@
     event: (EmergencyCallUiEvent) -> Unit) {
 
     val messageAvailable by remember(emergencyCallModel.contacts) { derivedStateOf { emergencyCallModel.contacts.isNotEmpty() } }
+    val shouldShowShowDeleteDialog by remember { derivedStateOf { uiState.deleteDialogVisible && uiState.contactToDelete != null } }
 
     Surface(modifier = modifier.fillMaxSize(), color = MaterialTheme.colors.background) {
 
 
         Box(modifier = Modifier) {
 
-            if (uiState.deleteDialogVisible) {
+            if (shouldShowShowDeleteDialog) {
                 DeleteContactDialog(
                     onDismissRequest = { event(EmergencyCallUiEvent.DismissDeleteContactDialog) },
-                    onClickConfirmButton = { event(EmergencyCallUiEvent.DeleteContact(uiState.contactToDelete.id)) },
-                    nameToDelete = uiState.contactToDelete.name
+                    onClickConfirmButton = {
+                        uiState.contactToDelete?.id?.let { contactId ->
+                            event(EmergencyCallUiEvent.DeleteContact(contactId))
+                        }
+                    },
+                    nameToDelete = uiState.contactToDelete!!.name
                 )
             }
 
@@ -217,6 +222,7 @@
 
                     is EmergencyCallUiEvent.DismissDeleteContactDialog -> dismissDeleteDialog()
                     is EmergencyCallUiEvent.DeleteContact -> {}
+                    else -> {}
 
                 }
             })
@@ -268,6 +274,7 @@
 
                     is EmergencyCallUiEvent.DismissDeleteContactDialog -> dismissDeleteDialog()
                     is EmergencyCallUiEvent.DeleteContact -> {}
+                    else -> {}
                 }
             })
     }
Index: app/src/main/java/com/example/cyclistance/navigation/nav_graph/MessagingGraph.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.navigation.nav_graph\n\nimport MessagingConversationScreen\nimport androidx.compose.foundation.layout.PaddingValues\nimport androidx.navigation.NavController\nimport androidx.navigation.NavGraphBuilder\nimport androidx.navigation.compose.composable\nimport androidx.navigation.navigation\nimport com.example.cyclistance.feature_messaging.presentation.messaging_main_screen.MessagingScreen\nimport com.example.cyclistance.navigation.Screens\n\nfun NavGraphBuilder.messagingGraph(\n    navController: NavController,\n    paddingValues: PaddingValues) {\n    navigation(\n        startDestination = Screens.Messaging.MessagingScreen.screenRoute,\n        route = Screens.Messaging.ROUTE\n    ) {\n        composable(Screens.Messaging.MessagingScreen.screenRoute) {\n            MessagingScreen(\n                navController = navController,\n                paddingValues = paddingValues\n            )\n        }\n\n        composable(Screens.Messaging.ConversationScreen.screenRoute) {\n            MessagingConversationScreen(\n                navController = navController,\n                paddingValues = paddingValues)\n        }\n    }\n}\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/navigation/nav_graph/MessagingGraph.kt b/app/src/main/java/com/example/cyclistance/navigation/nav_graph/MessagingGraph.kt
--- a/app/src/main/java/com/example/cyclistance/navigation/nav_graph/MessagingGraph.kt	(revision 36e7cffb81990236fb7834c19a7454dfed3595a0)
+++ b/app/src/main/java/com/example/cyclistance/navigation/nav_graph/MessagingGraph.kt	(date 1689251758885)
@@ -1,6 +1,5 @@
 package com.example.cyclistance.navigation.nav_graph
 
-import MessagingConversationScreen
 import androidx.compose.foundation.layout.PaddingValues
 import androidx.navigation.NavController
 import androidx.navigation.NavGraphBuilder
@@ -23,11 +22,6 @@
             )
         }
 
-        composable(Screens.Messaging.ConversationScreen.screenRoute) {
-            MessagingConversationScreen(
-                navController = navController,
-                paddingValues = paddingValues)
-        }
     }
 }
 
Index: app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/components/MessagingTextArea.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/components/MessagingTextArea.kt b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/components/ConversationTextArea.kt
rename from app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/components/MessagingTextArea.kt
rename to app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/components/ConversationTextArea.kt
--- a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/components/MessagingTextArea.kt	(revision 36e7cffb81990236fb7834c19a7454dfed3595a0)
+++ b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/components/ConversationTextArea.kt	(date 1689250152190)
@@ -1,4 +1,4 @@
-package com.example.cyclistance.feature_messaging.presentation.messaging_conversation.components
+package com.example.cyclistance.feature_messaging.presentation.messaging_main_screen.components
 
 import androidx.compose.animation.animateContentSize
 import androidx.compose.animation.core.Spring
Index: app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/components/MessagingTimeStamp.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/components/MessagingTimeStamp.kt b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/components/ConversationTimeStamp.kt
rename from app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/components/MessagingTimeStamp.kt
rename to app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/components/ConversationTimeStamp.kt
--- a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/components/MessagingTimeStamp.kt	(revision 36e7cffb81990236fb7834c19a7454dfed3595a0)
+++ b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/components/ConversationTimeStamp.kt	(date 1689250152197)
@@ -1,4 +1,4 @@
-package com.example.cyclistance.feature_messaging.presentation.messaging_conversation.components
+package com.example.cyclistance.feature_messaging.presentation.messaging_main_screen.components
 
 import androidx.compose.material.MaterialTheme
 import androidx.compose.material.Text
Index: app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/state/MessagignConversationState.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/state/MessagignConversationState.kt b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/state/MessagingState.kt
rename from app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/state/MessagignConversationState.kt
rename to app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/state/MessagingState.kt
--- a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/state/MessagignConversationState.kt	(revision 36e7cffb81990236fb7834c19a7454dfed3595a0)
+++ b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/state/MessagingState.kt	(date 1689291904367)
@@ -1,12 +1,14 @@
-package com.example.cyclistance.feature_messaging.presentation.messaging_conversation.state
+package com.example.cyclistance.feature_messaging.presentation.messaging_main_screen.state
 
 import android.os.Parcelable
 import com.example.cyclistance.core.utils.annotations.StableState
 import com.example.cyclistance.feature_messaging.domain.model.ui.MessageConversation
+import com.example.cyclistance.feature_messaging.domain.model.ui.MessagesModel
 import kotlinx.parcelize.Parcelize
 
 @Parcelize
 @StableState
-data class MessagingConversationState(
-    val conversation: MessageConversation = MessageConversation()
+data class MessagingState(
+    val conversation: MessageConversation = MessageConversation(),
+    val messagesModel: MessagesModel = MessagesModel()
 ) : Parcelable
Index: app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/components/ChatItem.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/components/ChatItem.kt b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/components/ConversationChatItem.kt
rename from app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/components/ChatItem.kt
rename to app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/components/ConversationChatItem.kt
--- a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/components/ChatItem.kt	(revision 36e7cffb81990236fb7834c19a7454dfed3595a0)
+++ b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/components/ConversationChatItem.kt	(date 1689250152184)
@@ -1,4 +1,4 @@
-package com.example.cyclistance.feature_messaging.presentation.messaging_conversation.components
+package com.example.cyclistance.feature_messaging.presentation.messaging_main_screen.components
 
 import androidx.compose.animation.AnimatedVisibility
 import androidx.compose.animation.core.tween
Index: app/src/main/java/com/example/cyclistance/navigation/nav_graph/EmergencyGraph.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.navigation.nav_graph\n\nimport androidx.compose.foundation.layout.PaddingValues\nimport androidx.navigation.NavController\nimport androidx.navigation.NavGraphBuilder\nimport androidx.navigation.compose.composable\nimport androidx.navigation.navigation\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact.EmergencyAddEditContactScreen\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.EmergencyCallScreen\nimport com.example.cyclistance.navigation.Screens\n\nfun NavGraphBuilder.emergencyCallGraph(\n    navController: NavController,\n    paddingValues: PaddingValues\n) {\n    navigation(\n        startDestination = Screens.EmergencyCall.EmergencyCallScreen.screenRoute,\n        route = Screens.EmergencyCall.ROUTE) {\n        composable(Screens.EmergencyCall.EmergencyCallScreen.screenRoute) {\n            EmergencyCallScreen(\n                navController = navController, paddingValues = paddingValues\n            )\n        }\n\n        composable(Screens.EmergencyCall.AddNewContact.screenRoute) {\n            EmergencyAddEditContactScreen(\n                navController = navController, paddingValues = paddingValues\n            )\n        }\n\n    }\n}\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/navigation/nav_graph/EmergencyGraph.kt b/app/src/main/java/com/example/cyclistance/navigation/nav_graph/EmergencyGraph.kt
--- a/app/src/main/java/com/example/cyclistance/navigation/nav_graph/EmergencyGraph.kt	(revision 36e7cffb81990236fb7834c19a7454dfed3595a0)
+++ b/app/src/main/java/com/example/cyclistance/navigation/nav_graph/EmergencyGraph.kt	(date 1689291904310)
@@ -5,7 +5,6 @@
 import androidx.navigation.NavGraphBuilder
 import androidx.navigation.compose.composable
 import androidx.navigation.navigation
-import com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact.EmergencyAddEditContactScreen
 import com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.EmergencyCallScreen
 import com.example.cyclistance.navigation.Screens
 
@@ -22,11 +21,6 @@
             )
         }
 
-        composable(Screens.EmergencyCall.AddNewContact.screenRoute) {
-            EmergencyAddEditContactScreen(
-                navController = navController, paddingValues = paddingValues
-            )
-        }
 
     }
 }
Index: app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/components/AddEditContactPhotoSection.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/components/AddEditContactPhotoSection.kt b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/AddEditContactPhotoSection.kt
rename from app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/components/AddEditContactPhotoSection.kt
rename to app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/AddEditContactPhotoSection.kt
--- a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/components/AddEditContactPhotoSection.kt	(revision 36e7cffb81990236fb7834c19a7454dfed3595a0)
+++ b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/AddEditContactPhotoSection.kt	(date 1689290431634)
@@ -1,4 +1,4 @@
-package com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact.components
+package com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.components
 
 import androidx.compose.foundation.Image
 import androidx.compose.foundation.clickable
@@ -16,14 +16,14 @@
 import androidx.compose.ui.unit.dp
 import coil.compose.AsyncImage
 import com.example.cyclistance.R
-import com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact.event.AddEditContactUiEvent
+import com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.event.EmergencyCallUiEvent
 
 
 @Composable
 fun AddEditPhotoSection(
     isOnEditMode: Boolean,
     photoUrl: Any,
-    event: (AddEditContactUiEvent) -> Unit) {
+    event: (EmergencyCallUiEvent) -> Unit) {
 
     if (isOnEditMode) {
         AddEditContactImage(photoUrl = photoUrl, event = event)
@@ -36,14 +36,14 @@
             modifier = Modifier
                 .size(100.dp)
                 .clip(CircleShape)
-                .clickable { event(AddEditContactUiEvent.ToggleBottomSheet) }
+                .clickable { event(EmergencyCallUiEvent.ToggleBottomSheet) }
         )
     }
 
 }
 
 @Composable
-private fun AddEditContactImage(photoUrl: Any, event: (AddEditContactUiEvent) -> Unit) {
+private fun AddEditContactImage(photoUrl: Any, event: (EmergencyCallUiEvent) -> Unit) {
     when (photoUrl) {
         is String -> {
             AsyncImage(
@@ -53,7 +53,7 @@
                 modifier = Modifier
                     .clip(CircleShape)
                     .size(100.dp)
-                    .clickable { event(AddEditContactUiEvent.ToggleBottomSheet) },
+                    .clickable { event(EmergencyCallUiEvent.ToggleBottomSheet) },
                 contentScale = ContentScale.Crop,
                 placeholder = painterResource(id = R.drawable.ic_empty_profile_placeholder_large),
                 error = painterResource(id = R.drawable.ic_empty_profile_placeholder_large),
@@ -68,7 +68,7 @@
                 modifier = Modifier
                     .clip(CircleShape)
                     .size(100.dp)
-                    .clickable { event(AddEditContactUiEvent.ToggleBottomSheet) },
+                    .clickable { event(EmergencyCallUiEvent.ToggleBottomSheet) },
                 contentScale = ContentScale.Crop,
 
                 )
Index: app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/components/AddEditContactContent.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/components/AddEditContactContent.kt b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/AddEditContactContent.kt
rename from app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/components/AddEditContactContent.kt
rename to app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/AddEditContactContent.kt
--- a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/components/AddEditContactContent.kt	(revision 36e7cffb81990236fb7834c19a7454dfed3595a0)
+++ b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/AddEditContactContent.kt	(date 1689290357101)
@@ -1,4 +1,4 @@
-package com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact.components
+package com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.components
 
 import androidx.compose.foundation.layout.Arrangement
 import androidx.compose.foundation.layout.Column
@@ -31,9 +31,9 @@
 import com.example.cyclistance.core.utils.constants.EmergencyCallConstants.PHILIPPINE_RED_CROSS_PHOTO
 import com.example.cyclistance.feature_dialogs.presentation.permissions_dialog.DialogCameraPermission
 import com.example.cyclistance.feature_dialogs.presentation.permissions_dialog.DialogFilesAndMediaPermission
-import com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact.event.AddEditContactUiEvent
-import com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact.state.AddEditContactState
-import com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact.state.AddEditContactUiState
+import com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.event.EmergencyCallUiEvent
+import com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.state.EmergencyCallState
+import com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.state.EmergencyCallUIState
 import com.example.cyclistance.feature_mapping.presentation.common.ButtonNavigation
 import com.example.cyclistance.feature_settings.presentation.setting_edit_profile.components.SelectImageBottomSheet
 import com.example.cyclistance.theme.CyclistanceTheme
@@ -46,10 +46,10 @@
     modifier: Modifier = Modifier,
     bottomSheetScaffoldState: ModalBottomSheetState,
     keyboardActions: KeyboardActions = KeyboardActions { },
-    event: (AddEditContactUiEvent) -> Unit,
-    state: AddEditContactState,
+    event: (EmergencyCallUiEvent) -> Unit,
+    state: EmergencyCallState,
     photoUrl: Any,
-    uiState: AddEditContactUiState) {
+    uiState: EmergencyCallUIState) {
 
 
     val isOnEditMode by remember(key1 = uiState.idCurrentlyEditing) {
@@ -70,7 +70,7 @@
     Scaffold(modifier = modifier, topBar = {
         TopAppBarCreator(
             icon = Icons.Default.Close,
-            onClickIcon = { event(AddEditContactUiEvent.CloseEditContactScreen) },
+            onClickIcon = { event(EmergencyCallUiEvent.CloseEditContactScreen) },
             topAppBarTitle = {
                 TitleTopAppBar(title = if (isOnEditMode) "Edit Contact" else "New Contact")
             })
@@ -84,12 +84,12 @@
 
             SelectImageBottomSheet(
                 onClickGalleryButton = {
-                    event(AddEditContactUiEvent.ToggleBottomSheet)
-                    event(AddEditContactUiEvent.SelectImageFromGallery)
+                    event(EmergencyCallUiEvent.ToggleBottomSheet)
+                    event(EmergencyCallUiEvent.SelectImageFromGallery)
                 },
                 onClickCameraButton = {
-                    event(AddEditContactUiEvent.ToggleBottomSheet)
-                    event(AddEditContactUiEvent.OpenCamera)
+                    event(EmergencyCallUiEvent.ToggleBottomSheet)
+                    event(EmergencyCallUiEvent.OpenCamera)
                 },
                 bottomSheetScaffoldState = bottomSheetScaffoldState,
                 isLoading = state.isLoading) {
@@ -146,8 +146,8 @@
                             width = Dimension.percent(0.8f)
                         },
                         positiveButtonText = "Save",
-                        onClickCancelButton = { event(AddEditContactUiEvent.CancelEditContact) },
-                        onClickConfirmButton = { event(AddEditContactUiEvent.SaveEditContact) },
+                        onClickCancelButton = { event(EmergencyCallUiEvent.CancelEditContact) },
+                        onClickConfirmButton = { event(EmergencyCallUiEvent.SaveEditContact) },
                         negativeButtonEnabled = !state.isLoading,
                         positiveButtonEnabled = !state.isLoading && isUserInformationChanges
                     )
@@ -163,7 +163,7 @@
                             height = Dimension.wrapContent
                             centerTo(parent)
                         }, onDismiss = {
-                            event(AddEditContactUiEvent.DismissCameraDialog)
+                            event(EmergencyCallUiEvent.DismissCameraDialog)
                         })
                     }
 
@@ -177,7 +177,7 @@
                                 height = Dimension.wrapContent
                                 centerTo(parent)
                             }, onDismiss = {
-                                event(AddEditContactUiEvent.DismissFilesAndMediaDialog)
+                                event(EmergencyCallUiEvent.DismissFilesAndMediaDialog)
                             })
                     }
 
@@ -209,8 +209,8 @@
             bottomSheetScaffoldState = rememberModalBottomSheetState(
                 ModalBottomSheetValue.Expanded),
             event = {},
-            uiState = AddEditContactUiState(idCurrentlyEditing = "1"),
-            state = AddEditContactState(),
+            uiState = EmergencyCallUIState(idCurrentlyEditing = "1"),
+            state = EmergencyCallState(),
             photoUrl = PHILIPPINE_RED_CROSS_PHOTO)
     }
 }
@@ -224,8 +224,8 @@
             bottomSheetScaffoldState = rememberModalBottomSheetState(
                 ModalBottomSheetValue.Hidden),
             event = {},
-            uiState = AddEditContactUiState(),
-            state = AddEditContactState(),
+            uiState = EmergencyCallUIState(),
+            state = EmergencyCallState(),
             photoUrl = PHILIPPINE_RED_CROSS_PHOTO)
     }
 }
@@ -239,8 +239,8 @@
             bottomSheetScaffoldState = rememberModalBottomSheetState(
                 ModalBottomSheetValue.Expanded),
             event = {},
-            uiState = AddEditContactUiState(),
-            state = AddEditContactState(), photoUrl = PHILIPPINE_RED_CROSS_PHOTO)
+            uiState = EmergencyCallUIState(),
+            state = EmergencyCallState(), photoUrl = PHILIPPINE_RED_CROSS_PHOTO)
     }
 }
 
Index: app/src/main/java/com/example/cyclistance/navigation/Screens.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.navigation\n\nsealed class Screens {\n\n\n    open class Authentication(val screenRoute: String = \"\") : Screens() {\n        companion object {\n            const val ROUTE = \"authentication\"\n        }\n\n        object SignInScreen : Authentication(screenRoute = \"sign_in_screen\")\n        object SignUpScreen : Authentication(screenRoute = \"sign_up_screen\")\n        object EmailAuthScreen : Authentication(screenRoute = \"email_auth_screen\")\n    }\n\n    open class EmergencyCall(val screenRoute: String = \"\") : Screens() {\n        companion object {\n            const val ROUTE = \"emergency_call\"\n        }\n\n        object EmergencyCallScreen : EmergencyCall(screenRoute = \"emergency_call_screen\")\n        object AddNewContact : EmergencyCall(screenRoute = \"emergency_add_new_contact\")\n    }\n\n    open class Messaging(val screenRoute: String = \"\") : Screens() {\n        companion object {\n            const val ROUTE = \"messaging\"\n        }\n\n        object MessagingScreen : Messaging(screenRoute = \"messaging_screen\")\n        object ConversationScreen : Messaging(screenRoute = \"messaging_conversation_screen\")\n    }\n\n    open class OnBoarding(val screenRoute: String = \"\") : Screens() {\n        companion object {\n            const val ROUTE = \"on_boarding\"\n        }\n\n        object IntroSliderScreen : OnBoarding(screenRoute = \"intro_slider_screen\")\n    }\n\n    open class Mapping(val screenRoute: String = \"\") : Screens() {\n        companion object {\n            const val ROUTE = \"mapping\"\n        }\n\n        object MappingScreen : Mapping(screenRoute = \"mapping_screen\")\n        object CancellationScreen : Mapping(screenRoute = \"cancellation_screen\")\n        object ConfirmDetailsScreen : Mapping(screenRoute = \"confirm_details_screen\")\n    }\n\n    open class Settings(val screenRoute: String = \"\") : Screens() {\n\n        companion object {\n            const val ROUTE = \"settings\"\n        }\n\n        object ChangePasswordScreen : Settings(screenRoute = \"change_password_screen\")\n        object EditProfileScreen : Settings(screenRoute = \"edit_profile_screen\")\n        object SettingScreen : Settings(screenRoute = \"setting_screen\")\n    }\n\n\n    open class RideHistory(val screenRoute: String = \"\") : Screens() {\n        companion object {\n            const val ROUTE = \"ride_history\"\n        }\n\n        object RideHistoryScreen : RideHistory(screenRoute = \"ride_history_screen\")\n        object RideHistoryDetailsScreen : RideHistory(screenRoute = \"ride_history_details_screen\")\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/navigation/Screens.kt b/app/src/main/java/com/example/cyclistance/navigation/Screens.kt
--- a/app/src/main/java/com/example/cyclistance/navigation/Screens.kt	(revision 36e7cffb81990236fb7834c19a7454dfed3595a0)
+++ b/app/src/main/java/com/example/cyclistance/navigation/Screens.kt	(date 1689291368744)
@@ -19,7 +19,6 @@
         }
 
         object EmergencyCallScreen : EmergencyCall(screenRoute = "emergency_call_screen")
-        object AddNewContact : EmergencyCall(screenRoute = "emergency_add_new_contact")
     }
 
     open class Messaging(val screenRoute: String = "") : Screens() {
@@ -28,7 +27,6 @@
         }
 
         object MessagingScreen : Messaging(screenRoute = "messaging_screen")
-        object ConversationScreen : Messaging(screenRoute = "messaging_conversation_screen")
     }
 
     open class OnBoarding(val screenRoute: String = "") : Screens() {
Index: app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/components/AddEditContactTextFieldSection.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/components/AddEditContactTextFieldSection.kt b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/AddEditContactTextFieldSection.kt
rename from app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/components/AddEditContactTextFieldSection.kt
rename to app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/AddEditContactTextFieldSection.kt
--- a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/components/AddEditContactTextFieldSection.kt	(revision 36e7cffb81990236fb7834c19a7454dfed3595a0)
+++ b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/AddEditContactTextFieldSection.kt	(date 1689290493970)
@@ -1,4 +1,4 @@
-package com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact.components
+package com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.components
 
 import androidx.compose.foundation.layout.Arrangement
 import androidx.compose.foundation.layout.Column
@@ -15,9 +15,9 @@
 import androidx.compose.ui.text.input.KeyboardCapitalization
 import androidx.compose.ui.text.input.KeyboardType
 import androidx.compose.ui.unit.dp
-import com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact.event.AddEditContactUiEvent
-import com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact.state.AddEditContactState
-import com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact.state.AddEditContactUiState
+import com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.event.EmergencyCallUiEvent
+import com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.state.EmergencyCallState
+import com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.state.EmergencyCallUIState
 import com.example.cyclistance.feature_settings.presentation.setting_edit_profile.components.TextFieldCreator
 import com.example.cyclistance.feature_settings.presentation.setting_edit_profile.components.TextFieldItem
 import com.example.cyclistance.theme.Black500
@@ -25,10 +25,10 @@
 @Composable
 fun AddEditContextTextFieldSection(
     modifier: Modifier,
-    uiState: AddEditContactUiState,
-    state: AddEditContactState,
+    uiState: EmergencyCallUIState,
+    state: EmergencyCallState,
     keyboardActions: KeyboardActions,
-    event: (AddEditContactUiEvent) -> Unit) {
+    event: (EmergencyCallUiEvent) -> Unit) {
 
 
     Column(
@@ -44,7 +44,7 @@
                     autoCorrect = false,
                     keyboardType = KeyboardType.Text,
                     imeAction = ImeAction.Next),
-                onValueChange = { event(AddEditContactUiEvent.OnChangeName(it)) })
+                onValueChange = { event(EmergencyCallUiEvent.OnChangeName(it)) })
         }
 
         TextFieldCreator(label = "Phone", errorMessage = "") {
@@ -67,7 +67,7 @@
                         keyboardType = KeyboardType.Phone,
                         imeAction = ImeAction.Done),
                     keyboardActions = keyboardActions,
-                    onValueChange = { event(AddEditContactUiEvent.OnChangePhoneNumber(it)) })
+                    onValueChange = { event(EmergencyCallUiEvent.OnChangePhoneNumber(it)) })
 
             }
         }
