Index: app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/event/AddEditContactUiEvent.kt
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/event/AddEditContactUiEvent.kt b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/event/AddEditContactUiEvent.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/event/AddEditContactUiEvent.kt	(revision c9cf29066d03f2255d5df21f2306f599c2a3e47c)
+++ /dev/null	(revision c9cf29066d03f2255d5df21f2306f599c2a3e47c)
@@ -1,16 +0,0 @@
-package com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact.event
-
-import androidx.compose.ui.text.input.TextFieldValue
-
-sealed class AddEditContactUiEvent {
-    object SelectImageFromGallery : AddEditContactUiEvent()
-    object OpenCamera : AddEditContactUiEvent()
-    data class OnChangeName(val name: TextFieldValue) : AddEditContactUiEvent()
-    data class OnChangePhoneNumber(val phoneNumber: TextFieldValue) : AddEditContactUiEvent()
-    object CancelEditContact : AddEditContactUiEvent()
-    object SaveEditContact : AddEditContactUiEvent()
-    object ToggleBottomSheet : AddEditContactUiEvent()
-    object DismissFilesAndMediaDialog : AddEditContactUiEvent()
-    object DismissCameraDialog : AddEditContactUiEvent()
-    object CloseEditContactScreen : AddEditContactUiEvent()
-}
Index: app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/event/AddEditEvent.kt
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/event/AddEditEvent.kt b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/event/AddEditEvent.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/event/AddEditEvent.kt	(revision c9cf29066d03f2255d5df21f2306f599c2a3e47c)
+++ /dev/null	(revision c9cf29066d03f2255d5df21f2306f599c2a3e47c)
@@ -1,11 +0,0 @@
-package com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact.event
-
-import com.example.cyclistance.feature_emergency_call.domain.model.EmergencyContactModel
-
-sealed class AddEditEvent {
-    data class GetContactSuccess(val emergencyContactModel: EmergencyContactModel) : AddEditEvent()
-    object SaveContactSuccess : AddEditEvent()
-    data class NameFailure(val message: String) : AddEditEvent()
-    data class PhoneNumberFailure(val message: String) : AddEditEvent()
-    data class UnknownFailure(val message: String) : AddEditEvent()
-}
Index: app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/event/AddEditVmEvent.kt
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/event/AddEditVmEvent.kt b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/event/AddEditVmEvent.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/event/AddEditVmEvent.kt	(revision c9cf29066d03f2255d5df21f2306f599c2a3e47c)
+++ /dev/null	(revision c9cf29066d03f2255d5df21f2306f599c2a3e47c)
@@ -1,7 +0,0 @@
-package com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact.event
-
-import com.example.cyclistance.feature_emergency_call.domain.model.EmergencyContactModel
-
-sealed class AddEditVmEvent {
-    data class SaveContact(val emergencyContactModel: EmergencyContactModel) : AddEditVmEvent()
-}
\ No newline at end of file
Index: app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/state/AddEditContactUiState.kt
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/state/AddEditContactUiState.kt b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/state/AddEditContactUiState.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/state/AddEditContactUiState.kt	(revision c9cf29066d03f2255d5df21f2306f599c2a3e47c)
+++ /dev/null	(revision c9cf29066d03f2255d5df21f2306f599c2a3e47c)
@@ -1,23 +0,0 @@
-package com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact.state
-
-import android.os.Parcelable
-import androidx.compose.ui.text.input.TextFieldValue
-import com.example.cyclistance.core.utils.annotations.StableState
-import com.example.cyclistance.feature_emergency_call.domain.model.EmergencyContactModel
-import kotlinx.parcelize.Parcelize
-import kotlinx.parcelize.RawValue
-
-
-@Parcelize
-@StableState
-data class AddEditContactUiState(
-    val selectedImageUri: String = "",
-    val photoUrl: String? = null,
-    val name: @RawValue TextFieldValue = TextFieldValue(""),
-    val nameErrorMessage: String = "",
-    val phoneNumber: @RawValue TextFieldValue = TextFieldValue(""),
-    val phoneNumberErrorMessage: String = "",
-    val cameraPermissionDialogVisible: Boolean = false,
-    val filesAndMediaDialogVisible: Boolean = false,
-    val contactCurrentlyEditing: EmergencyContactModel? = null,
-) : Parcelable
Index: app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/AddEditContactScreen.kt
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/AddEditContactScreen.kt b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/AddEditContactScreen.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/AddEditContactScreen.kt	(revision c9cf29066d03f2255d5df21f2306f599c2a3e47c)
+++ /dev/null	(revision c9cf29066d03f2255d5df21f2306f599c2a3e47c)
@@ -1,288 +0,0 @@
-package com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact
-
-import android.Manifest
-import android.graphics.Bitmap
-import android.graphics.ImageDecoder
-import android.net.Uri
-import android.os.Build
-import android.provider.MediaStore
-import android.widget.Toast
-import androidx.activity.compose.rememberLauncherForActivityResult
-import androidx.activity.result.contract.ActivityResultContracts
-import androidx.activity.result.launch
-import androidx.compose.foundation.layout.PaddingValues
-import androidx.compose.foundation.layout.padding
-import androidx.compose.foundation.text.KeyboardActions
-import androidx.compose.material.ExperimentalMaterialApi
-import androidx.compose.material.ModalBottomSheetValue
-import androidx.compose.material.rememberModalBottomSheetState
-import androidx.compose.runtime.Composable
-import androidx.compose.runtime.LaunchedEffect
-import androidx.compose.runtime.getValue
-import androidx.compose.runtime.mutableStateOf
-import androidx.compose.runtime.remember
-import androidx.compose.runtime.rememberCoroutineScope
-import androidx.compose.runtime.setValue
-import androidx.compose.ui.ExperimentalComposeUiApi
-import androidx.compose.ui.Modifier
-import androidx.compose.ui.graphics.asImageBitmap
-import androidx.compose.ui.platform.LocalContext
-import androidx.compose.ui.platform.LocalSoftwareKeyboardController
-import androidx.compose.ui.text.input.TextFieldValue
-import androidx.hilt.navigation.compose.hiltViewModel
-import androidx.lifecycle.compose.collectAsStateWithLifecycle
-import androidx.navigation.NavController
-import com.example.cyclistance.core.utils.permissions.requestPermission
-import com.example.cyclistance.core.utils.save_images.ImageUtils.toImageUri
-import com.example.cyclistance.feature_emergency_call.domain.model.EmergencyContactModel
-import com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact.components.AddEditContactContent
-import com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact.event.AddEditContactUiEvent
-import com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact.event.AddEditEvent
-import com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact.event.AddEditVmEvent
-import com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact.state.AddEditContactUiState
-import com.google.accompanist.permissions.ExperimentalPermissionsApi
-import com.google.accompanist.permissions.rememberMultiplePermissionsState
-import com.google.accompanist.permissions.rememberPermissionState
-import kotlinx.coroutines.flow.collectLatest
-import kotlinx.coroutines.launch
-
-@OptIn(
-    ExperimentalComposeUiApi::class, ExperimentalMaterialApi::class,
-    ExperimentalPermissionsApi::class)
-@Composable
-fun EmergencyAddEditContactScreen(
-    navController: NavController,
-    paddingValues: PaddingValues,
-    viewModel: AddEditContactViewModel = hiltViewModel()) {
-
-    val state by viewModel.state.collectAsStateWithLifecycle()
-    val keyboardController = LocalSoftwareKeyboardController.current
-    val context = LocalContext.current
-    var imageBitmap by remember { mutableStateOf<Bitmap?>(null) }
-    val scope = rememberCoroutineScope()
-    var uiState by remember { mutableStateOf(AddEditContactUiState()) }
-    val bottomSheetScaffoldState = rememberModalBottomSheetState(ModalBottomSheetValue.Hidden)
-    val toggleBottomSheet = remember(bottomSheetScaffoldState, state.isLoading) {
-        {
-            scope.launch {
-
-                if (!state.isLoading) {
-                    with(bottomSheetScaffoldState) {
-                        if (isVisible) {
-                            hide()
-                        } else {
-                            show()
-                        }
-                    }
-                }
-            }
-        }
-    }
-    val openGalleryResultLauncher =
-        rememberLauncherForActivityResult(ActivityResultContracts.GetContent()) { uri: Uri? ->
-            uiState = uiState.copy(selectedImageUri = uri.toString())
-            uri?.let { selectedUri ->
-                imageBitmap =
-                    when {
-                        Build.VERSION.SDK_INT < Build.VERSION_CODES.P -> {
-                            MediaStore.Images.Media.getBitmap(
-                                context.contentResolver,
-                                selectedUri)
-                        }
-
-                        else -> {
-                            val source =
-                                ImageDecoder.createSource(
-                                    context.contentResolver,
-                                    selectedUri)
-                            ImageDecoder.decodeBitmap(source)
-                        }
-                    }
-            }
-
-
-        }
-
-    val openCameraResultLauncher =
-        rememberLauncherForActivityResult(ActivityResultContracts.TakePicturePreview()) { bitmap: Bitmap? ->
-            val uri = bitmap?.toImageUri().toString()
-            imageBitmap = bitmap
-            uiState = uiState.copy(selectedImageUri = uri)
-
-        }
-
-
-    val filesAndMediaPermissionState =
-        rememberMultiplePermissionsState(
-            permissions = listOf(
-                Manifest.permission.READ_EXTERNAL_STORAGE,
-                Manifest.permission.WRITE_EXTERNAL_STORAGE)) { permissionGranted ->
-            if (permissionGranted.values.all { it }) {
-                openGalleryResultLauncher.launch("image/*")
-            }
-        }
-
-
-    val openCameraPermissionState =
-        rememberPermissionState(permission = Manifest.permission.CAMERA) { permissionGranted ->
-
-            if (permissionGranted) {
-                openCameraResultLauncher.launch()
-            }
-        }
-
-
-    val onDismissFilesAndMediaPermissionDialog = remember {
-        {
-            uiState = uiState.copy(filesAndMediaDialogVisible = false)
-        }
-    }
-
-    val onDismissCameraPermissionDialog = remember {
-        {
-            uiState = uiState.copy(cameraPermissionDialogVisible = false)
-        }
-    }
-
-    val openGallery = remember {
-        {
-            filesAndMediaPermissionState.requestPermission(
-                onGranted = {
-                    openGalleryResultLauncher.launch("image/*")
-                }, onExplain = {
-                    uiState = uiState.copy(filesAndMediaDialogVisible = true)
-                })
-
-        }
-    }
-
-    val openCamera = remember {
-        {
-            openCameraPermissionState.requestPermission(
-                onGranted = {
-                    openCameraResultLauncher.launch()
-                }, onExplain = {
-                    uiState = uiState.copy(cameraPermissionDialogVisible = true)
-                })
-        }
-    }
-
-    val onValueChangeName = remember {
-        { name: TextFieldValue ->
-            uiState = uiState.copy(name = name, nameErrorMessage = "")
-        }
-    }
-    val onValueChangePhoneNumber = remember {
-        { phoneNumber: TextFieldValue ->
-            uiState = uiState.copy(phoneNumber = phoneNumber, phoneNumberErrorMessage = "")
-        }
-    }
-
-    val saveAddEditContact = remember {
-        {
-            viewModel.onEvent(
-                event = AddEditVmEvent.SaveContact(
-                    emergencyContactModel = EmergencyContactModel(
-                        id = uiState.contactCurrentlyEditing?.id ?: 0,
-                        name = uiState.name.text,
-                        phoneNumber = uiState.phoneNumber.text,
-                        photo = uiState.selectedImageUri
-                    )
-                ))
-        }
-    }
-    val keyboardActions = remember {
-        KeyboardActions(onDone = {
-            saveAddEditContact()
-        })
-    }
-
-
-    val onCloseEditContactScreen = remember {
-        {
-            navController.popBackStack()
-            Unit
-        }
-    }
-
-
-    val onSaveContactSuccess = remember {
-        {
-            Toast.makeText(context, "Contact Saved", Toast.LENGTH_LONG).show()
-        }
-    }
-
-    val onUnknownFailure = remember {
-        { message: String ->
-            Toast.makeText(context, message, Toast.LENGTH_LONG).show()
-        }
-    }
-    val onPhoneFailure = remember {
-        { message: String ->
-            uiState = uiState.copy(phoneNumberErrorMessage = message)
-        }
-    }
-    val onNameFailure = remember {
-        { message: String ->
-            uiState = uiState.copy(nameErrorMessage = message)
-        }
-    }
-
-
-    val onGetContactSuccess = remember {
-        { emergencyContactModel: EmergencyContactModel ->
-            uiState = uiState.copy(
-                contactCurrentlyEditing = emergencyContactModel,
-                photoUrl = emergencyContactModel.photo,
-                name = TextFieldValue(emergencyContactModel.name),
-                phoneNumber = TextFieldValue(emergencyContactModel.phoneNumber)
-            )
-        }
-    }
-
-    LaunchedEffect(key1 = true) {
-        viewModel.eventFlow.collectLatest { event ->
-            when (event) {
-                is AddEditEvent.GetContactSuccess -> onGetContactSuccess(event.emergencyContactModel)
-                is AddEditEvent.SaveContactSuccess -> {
-                    onSaveContactSuccess(); onCloseEditContactScreen()
-                }
-
-                is AddEditEvent.NameFailure -> onNameFailure(event.message)
-                is AddEditEvent.PhoneNumberFailure -> onPhoneFailure(event.message)
-                is AddEditEvent.UnknownFailure -> onUnknownFailure(event.message)
-            }
-        }
-    }
-
-
-    AddEditContactContent(
-        modifier = Modifier.padding(paddingValues),
-        bottomSheetScaffoldState = bottomSheetScaffoldState,
-        keyboardActions = keyboardActions,
-        state = state,
-        uiState = uiState,
-        photoUrl = imageBitmap?.asImageBitmap() ?: uiState.photoUrl,
-        event = { event ->
-            when (event) {
-                is AddEditContactUiEvent.SelectImageFromGallery -> openGallery()
-                is AddEditContactUiEvent.OpenCamera -> openCamera()
-                is AddEditContactUiEvent.OnChangeName -> onValueChangeName(event.name)
-                is AddEditContactUiEvent.OnChangePhoneNumber -> onValueChangePhoneNumber(event.phoneNumber)
-                is AddEditContactUiEvent.CancelEditContact -> onCloseEditContactScreen()
-                is AddEditContactUiEvent.SaveEditContact -> saveAddEditContact()
-                is AddEditContactUiEvent.ToggleBottomSheet -> {
-                    toggleBottomSheet()
-                    keyboardController?.hide()
-                }
-
-                is AddEditContactUiEvent.DismissFilesAndMediaDialog -> onDismissCameraPermissionDialog()
-                is AddEditContactUiEvent.DismissCameraDialog -> onDismissFilesAndMediaPermissionDialog()
-                is AddEditContactUiEvent.CloseEditContactScreen -> onCloseEditContactScreen()
-            }
-        }
-
-    )
-
-}
-
Index: app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/AddEditContactViewModel.kt
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/AddEditContactViewModel.kt b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/AddEditContactViewModel.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/AddEditContactViewModel.kt	(revision c9cf29066d03f2255d5df21f2306f599c2a3e47c)
+++ /dev/null	(revision c9cf29066d03f2255d5df21f2306f599c2a3e47c)
@@ -1,112 +0,0 @@
-package com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact
-
-import androidx.lifecycle.SavedStateHandle
-import androidx.lifecycle.ViewModel
-import androidx.lifecycle.viewModelScope
-import com.example.cyclistance.core.utils.constants.EmergencyCallConstants.ADD_EDIT_CONTACT_VM_STATE_KEY
-import com.example.cyclistance.core.utils.constants.EmergencyCallConstants.CONTACT_ID
-import com.example.cyclistance.feature_emergency_call.domain.exceptions.EmergencyCallExceptions
-import com.example.cyclistance.feature_emergency_call.domain.model.EmergencyContactModel
-import com.example.cyclistance.feature_emergency_call.domain.use_case.EmergencyContactUseCase
-import com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact.event.AddEditEvent
-import com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact.event.AddEditVmEvent
-import com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact.state.AddEditContactState
-import dagger.hilt.android.lifecycle.HiltViewModel
-import kotlinx.coroutines.flow.MutableSharedFlow
-import kotlinx.coroutines.flow.MutableStateFlow
-import kotlinx.coroutines.flow.asSharedFlow
-import kotlinx.coroutines.flow.asStateFlow
-import kotlinx.coroutines.flow.catch
-import kotlinx.coroutines.flow.launchIn
-import kotlinx.coroutines.flow.onEach
-import kotlinx.coroutines.flow.update
-import kotlinx.coroutines.launch
-import timber.log.Timber
-import javax.inject.Inject
-
-@HiltViewModel
-class AddEditContactViewModel @Inject constructor(
-    private val savedStateHandle: SavedStateHandle,
-    private val emergencyCallUseCase: EmergencyContactUseCase,
-) : ViewModel() {
-
-    private val _state =
-        MutableStateFlow(savedStateHandle[ADD_EDIT_CONTACT_VM_STATE_KEY] ?: AddEditContactState())
-    val state = _state.asStateFlow()
-
-    private val _eventFlow: MutableSharedFlow<AddEditEvent> = MutableSharedFlow()
-    val eventFlow = _eventFlow.asSharedFlow()
-
-    private val contactId: String? = savedStateHandle[CONTACT_ID]
-
-
-    init {
-        getContact(contactId)
-        getContacts()
-    }
-
-    fun onEvent(event: AddEditVmEvent) {
-        when (event) {
-            is AddEditVmEvent.SaveContact -> {
-                saveContact(event.emergencyContactModel)
-            }
-        }
-        savedStateHandle[ADD_EDIT_CONTACT_VM_STATE_KEY] = state.value
-    }
-
-    private fun getContact(id: String?) {
-
-        id ?: return
-        emergencyCallUseCase.getContactUseCase(id.toInt()).catch {
-            Timber.e("Error getting contact")
-        }.onEach { contact ->
-            _eventFlow.emit(value = AddEditEvent.GetContactSuccess(contact))
-            _state.update {
-                it.copy(
-                    nameSnapshot = contact.name,
-                    phoneNumberSnapshot = contact.phoneNumber
-                )
-            }
-            savedStateHandle[ADD_EDIT_CONTACT_VM_STATE_KEY] = state.value
-        }.launchIn(viewModelScope)
-
-    }
-
-    private fun getContacts() {
-        emergencyCallUseCase.getContactsUseCase().catch {
-            Timber.e("Error getting contacts")
-        }.onEach { model ->
-            _state.update { it.copy(emergencyCallModel = model) }
-            savedStateHandle[ADD_EDIT_CONTACT_VM_STATE_KEY] = state.value
-        }.launchIn(viewModelScope)
-    }
-
-    private fun saveContact(emergencyContactModel: EmergencyContactModel) {
-        viewModelScope.launch {
-            runCatching {
-                emergencyCallUseCase.upsertContactUseCase(emergencyContactModel)
-            }.onSuccess {
-                _eventFlow.emit(value = AddEditEvent.SaveContactSuccess)
-            }.onFailure {
-                it.handleException()
-            }
-        }
-    }
-
-    private suspend fun Throwable.handleException() {
-        when (this) {
-            is EmergencyCallExceptions.NameException -> {
-                _eventFlow.emit(value = AddEditEvent.NameFailure(this.message!!))
-            }
-
-            is EmergencyCallExceptions.PhoneNumberException -> {
-                _eventFlow.emit(value = AddEditEvent.PhoneNumberFailure(this.message!!))
-            }
-
-            else -> {
-                _eventFlow.emit(value = AddEditEvent.UnknownFailure(this.message!!))
-            }
-        }
-    }
-
-}
\ No newline at end of file
Index: app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/EmergencyCallViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen\n\nimport androidx.lifecycle.SavedStateHandle\nimport androidx.lifecycle.ViewModel\nimport androidx.lifecycle.viewModelScope\nimport com.example.cyclistance.core.utils.constants.EmergencyCallConstants.EMERGENCY_CALL_VM_STATE_KEY\nimport com.example.cyclistance.core.utils.constants.EmergencyCallConstants.NATIONAL_EMERGENCY\nimport com.example.cyclistance.core.utils.constants.EmergencyCallConstants.NATIONAL_EMERGENCY_NUMBER\nimport com.example.cyclistance.core.utils.constants.EmergencyCallConstants.NATIONAL_EMERGENCY_PHOTO\nimport com.example.cyclistance.core.utils.constants.EmergencyCallConstants.PHILIPPINE_RED_CROSS\nimport com.example.cyclistance.core.utils.constants.EmergencyCallConstants.PHILIPPINE_RED_CROSS_NUMBER\nimport com.example.cyclistance.core.utils.constants.EmergencyCallConstants.PHILIPPINE_RED_CROSS_PHOTO\nimport com.example.cyclistance.feature_emergency_call.domain.model.EmergencyContactModel\nimport com.example.cyclistance.feature_emergency_call.domain.use_case.EmergencyContactUseCase\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.event.EmergencyCallEvent\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.event.EmergencyCallVmEvent\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.state.EmergencyCallState\nimport dagger.hilt.android.lifecycle.HiltViewModel\nimport kotlinx.coroutines.flow.MutableSharedFlow\nimport kotlinx.coroutines.flow.MutableStateFlow\nimport kotlinx.coroutines.flow.asSharedFlow\nimport kotlinx.coroutines.flow.asStateFlow\nimport kotlinx.coroutines.flow.catch\nimport kotlinx.coroutines.flow.first\nimport kotlinx.coroutines.flow.launchIn\nimport kotlinx.coroutines.flow.onEach\nimport kotlinx.coroutines.flow.update\nimport kotlinx.coroutines.launch\nimport timber.log.Timber\nimport javax.inject.Inject\n\n@HiltViewModel\nclass EmergencyCallViewModel @Inject constructor(\n    private val emergencyCallUseCase: EmergencyContactUseCase,\n    private val savedStateHandle: SavedStateHandle,\n) : ViewModel() {\n\n\n    private val _state =\n        MutableStateFlow(savedStateHandle[EMERGENCY_CALL_VM_STATE_KEY] ?: EmergencyCallState())\n    val state = _state.asStateFlow()\n\n    private val _eventFlow: MutableSharedFlow<EmergencyCallEvent> = MutableSharedFlow()\n    val eventFlow = _eventFlow.asSharedFlow()\n\n\n    init {\n\n        emergencyCallUseCase.getContactsUseCase().catch {\n            Timber.v(\"Error: ${it.message}\")\n        }.onEach { model ->\n\n            val isPurposefullyDeleted =\n                emergencyCallUseCase.areContactsPurposelyDeletedUseCase().first()\n            if (model.contacts.isEmpty().and(isPurposefullyDeleted.not())) {\n                addDefaultContact()\n            } else {\n                _state.update { it.copy(emergencyCallModel = model) }\n            }\n            savedStateHandle[EMERGENCY_CALL_VM_STATE_KEY] = state.value\n\n        }.launchIn(viewModelScope)\n\n    }\n\n    fun onEvent(event: EmergencyCallVmEvent) {\n        when (event) {\n            is EmergencyCallVmEvent.DeleteContact -> {\n                deleteContact(event.emergencyContactModel)\n            }\n        }\n        savedStateHandle[EMERGENCY_CALL_VM_STATE_KEY] = state.value\n    }\n\n\n    private fun deleteContact(contact: EmergencyContactModel) {\n        viewModelScope.launch {\n            runCatching {\n                emergencyCallUseCase.deleteContactUseCase(contact)\n            }.onSuccess {\n                _eventFlow.emit(value = EmergencyCallEvent.ContactDeleteSuccess)\n                if (isLastContact) {\n                    emergencyCallUseCase.setContactsPurposelyDeletedUseCase()\n                }\n            }.onFailure {\n                _eventFlow.emit(value = EmergencyCallEvent.ContactDeleteFailed)\n            }\n        }\n    }\n\n    private val isLastContact = state.value.emergencyCallModel.contacts.size == 1\n\n    private suspend fun addDefaultContact() {\n        emergencyCallUseCase.upsertContactUseCase(\n            emergencyContact = EmergencyContactModel(\n                name = PHILIPPINE_RED_CROSS,\n                photo = PHILIPPINE_RED_CROSS_PHOTO,\n                phoneNumber = PHILIPPINE_RED_CROSS_NUMBER\n            )\n        )\n        emergencyCallUseCase.upsertContactUseCase(\n            emergencyContact = EmergencyContactModel(\n                name = NATIONAL_EMERGENCY,\n                photo = NATIONAL_EMERGENCY_PHOTO,\n                phoneNumber = NATIONAL_EMERGENCY_NUMBER\n            )\n        )\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/EmergencyCallViewModel.kt b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/EmergencyCallViewModel.kt
--- a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/EmergencyCallViewModel.kt	(revision c9cf29066d03f2255d5df21f2306f599c2a3e47c)
+++ b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/EmergencyCallViewModel.kt	(date 1689296399781)
@@ -3,25 +3,19 @@
 import androidx.lifecycle.SavedStateHandle
 import androidx.lifecycle.ViewModel
 import androidx.lifecycle.viewModelScope
-import com.example.cyclistance.core.utils.constants.EmergencyCallConstants.EMERGENCY_CALL_VM_STATE_KEY
-import com.example.cyclistance.core.utils.constants.EmergencyCallConstants.NATIONAL_EMERGENCY
-import com.example.cyclistance.core.utils.constants.EmergencyCallConstants.NATIONAL_EMERGENCY_NUMBER
-import com.example.cyclistance.core.utils.constants.EmergencyCallConstants.NATIONAL_EMERGENCY_PHOTO
-import com.example.cyclistance.core.utils.constants.EmergencyCallConstants.PHILIPPINE_RED_CROSS
-import com.example.cyclistance.core.utils.constants.EmergencyCallConstants.PHILIPPINE_RED_CROSS_NUMBER
-import com.example.cyclistance.core.utils.constants.EmergencyCallConstants.PHILIPPINE_RED_CROSS_PHOTO
+import com.example.cyclistance.core.utils.constants.EmergencyCallConstants
+import com.example.cyclistance.feature_emergency_call.domain.exceptions.EmergencyCallExceptions
 import com.example.cyclistance.feature_emergency_call.domain.model.EmergencyContactModel
 import com.example.cyclistance.feature_emergency_call.domain.use_case.EmergencyContactUseCase
-import com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.event.EmergencyCallEvent
-import com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.event.EmergencyCallVmEvent
-import com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.state.EmergencyCallState
+import com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact.event.AddEditEvent
+import com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact.event.AddEditVmEvent
+import com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact.state.AddEditContactState
 import dagger.hilt.android.lifecycle.HiltViewModel
 import kotlinx.coroutines.flow.MutableSharedFlow
 import kotlinx.coroutines.flow.MutableStateFlow
 import kotlinx.coroutines.flow.asSharedFlow
 import kotlinx.coroutines.flow.asStateFlow
 import kotlinx.coroutines.flow.catch
-import kotlinx.coroutines.flow.first
 import kotlinx.coroutines.flow.launchIn
 import kotlinx.coroutines.flow.onEach
 import kotlinx.coroutines.flow.update
@@ -31,80 +25,89 @@
 
 @HiltViewModel
 class EmergencyCallViewModel @Inject constructor(
-    private val emergencyCallUseCase: EmergencyContactUseCase,
     private val savedStateHandle: SavedStateHandle,
+    private val emergencyCallUseCase: EmergencyContactUseCase,
 ) : ViewModel() {
 
-
     private val _state =
-        MutableStateFlow(savedStateHandle[EMERGENCY_CALL_VM_STATE_KEY] ?: EmergencyCallState())
+        MutableStateFlow(
+            savedStateHandle[EmergencyCallConstants.ADD_EDIT_CONTACT_VM_STATE_KEY]
+            ?: AddEditContactState())
     val state = _state.asStateFlow()
 
-    private val _eventFlow: MutableSharedFlow<EmergencyCallEvent> = MutableSharedFlow()
+    private val _eventFlow: MutableSharedFlow<AddEditEvent> = MutableSharedFlow()
     val eventFlow = _eventFlow.asSharedFlow()
 
+    private val contactId: String? = savedStateHandle[EmergencyCallConstants.CONTACT_ID]
+
 
     init {
+        getContact(contactId)
+        getContacts()
+    }
+
+    fun onEvent(event: AddEditVmEvent) {
+        when (event) {
+            is AddEditVmEvent.SaveContact -> {
+                saveContact(event.emergencyContactModel)
+            }
+        }
+        savedStateHandle[EmergencyCallConstants.ADD_EDIT_CONTACT_VM_STATE_KEY] = state.value
+    }
+
+    private fun getContact(id: String?) {
+
+        id ?: return
+        emergencyCallUseCase.getContactUseCase(id.toInt()).catch {
+            Timber.e("Error getting contact")
+        }.onEach { contact ->
+            _eventFlow.emit(value = AddEditEvent.GetContactSuccess(contact))
+            _state.update {
+                it.copy(
+                    nameSnapshot = contact.name,
+                    phoneNumberSnapshot = contact.phoneNumber
+                )
+            }
+            savedStateHandle[EmergencyCallConstants.ADD_EDIT_CONTACT_VM_STATE_KEY] = state.value
+        }.launchIn(viewModelScope)
 
+    }
+
+    private fun getContacts() {
         emergencyCallUseCase.getContactsUseCase().catch {
-            Timber.v("Error: ${it.message}")
+            Timber.e("Error getting contacts")
         }.onEach { model ->
-
-            val isPurposefullyDeleted =
-                emergencyCallUseCase.areContactsPurposelyDeletedUseCase().first()
-            if (model.contacts.isEmpty().and(isPurposefullyDeleted.not())) {
-                addDefaultContact()
-            } else {
-                _state.update { it.copy(emergencyCallModel = model) }
-            }
-            savedStateHandle[EMERGENCY_CALL_VM_STATE_KEY] = state.value
-
+            _state.update { it.copy(emergencyCallModel = model) }
+            savedStateHandle[EmergencyCallConstants.ADD_EDIT_CONTACT_VM_STATE_KEY] = state.value
         }.launchIn(viewModelScope)
-
-    }
-
-    fun onEvent(event: EmergencyCallVmEvent) {
-        when (event) {
-            is EmergencyCallVmEvent.DeleteContact -> {
-                deleteContact(event.emergencyContactModel)
-            }
-        }
-        savedStateHandle[EMERGENCY_CALL_VM_STATE_KEY] = state.value
     }
 
-
-    private fun deleteContact(contact: EmergencyContactModel) {
+    private fun saveContact(emergencyContactModel: EmergencyContactModel) {
         viewModelScope.launch {
             runCatching {
-                emergencyCallUseCase.deleteContactUseCase(contact)
+                emergencyCallUseCase.upsertContactUseCase(emergencyContactModel)
             }.onSuccess {
-                _eventFlow.emit(value = EmergencyCallEvent.ContactDeleteSuccess)
-                if (isLastContact) {
-                    emergencyCallUseCase.setContactsPurposelyDeletedUseCase()
-                }
+                _eventFlow.emit(value = AddEditEvent.SaveContactSuccess)
             }.onFailure {
-                _eventFlow.emit(value = EmergencyCallEvent.ContactDeleteFailed)
+                it.handleException()
             }
         }
     }
 
-    private val isLastContact = state.value.emergencyCallModel.contacts.size == 1
+    private suspend fun Throwable.handleException() {
+        when (this) {
+            is EmergencyCallExceptions.NameException -> {
+                _eventFlow.emit(value = AddEditEvent.NameFailure(this.message!!))
+            }
 
-    private suspend fun addDefaultContact() {
-        emergencyCallUseCase.upsertContactUseCase(
-            emergencyContact = EmergencyContactModel(
-                name = PHILIPPINE_RED_CROSS,
-                photo = PHILIPPINE_RED_CROSS_PHOTO,
-                phoneNumber = PHILIPPINE_RED_CROSS_NUMBER
-            )
-        )
-        emergencyCallUseCase.upsertContactUseCase(
-            emergencyContact = EmergencyContactModel(
-                name = NATIONAL_EMERGENCY,
-                photo = NATIONAL_EMERGENCY_PHOTO,
-                phoneNumber = NATIONAL_EMERGENCY_NUMBER
-            )
-        )
-    }
+            is EmergencyCallExceptions.PhoneNumberException -> {
+                _eventFlow.emit(value = AddEditEvent.PhoneNumberFailure(this.message!!))
+            }
 
-}
+            else -> {
+                _eventFlow.emit(value = AddEditEvent.UnknownFailure(this.message!!))
+            }
+        }
+    }
+
+}
\ No newline at end of file
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\n  <component name=\"GradleSettings\">\n    <option name=\"linkedExternalProjectsSettings\">\n      <GradleProjectSettings>\n        <option name=\"testRunner\" value=\"GRADLE\" />\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\n        <option name=\"gradleJvm\" value=\"Embedded JDK\" />\n        <option name=\"modules\">\n          <set>\n            <option value=\"$PROJECT_DIR$\" />\n            <option value=\"$PROJECT_DIR$/app\" />\n          </set>\n        </option>\n      </GradleProjectSettings>\n    </option>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/gradle.xml b/.idea/gradle.xml
--- a/.idea/gradle.xml	(revision c9cf29066d03f2255d5df21f2306f599c2a3e47c)
+++ b/.idea/gradle.xml	(date 1689292895449)
@@ -16,5 +16,6 @@
         </option>
       </GradleProjectSettings>
     </option>
+    <option name="offlineMode" value="true" />
   </component>
 </project>
\ No newline at end of file
Index: app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/components/ScrollToBottomButton.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/components/ScrollToBottomButton.kt b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/components/ConversationScrollToBottomButton.kt
rename from app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/components/ScrollToBottomButton.kt
rename to app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/components/ConversationScrollToBottomButton.kt
--- a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/components/ScrollToBottomButton.kt	(revision c9cf29066d03f2255d5df21f2306f599c2a3e47c)
+++ b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/components/ConversationScrollToBottomButton.kt	(date 1689293152104)
@@ -1,4 +1,4 @@
-package com.example.cyclistance.feature_messaging.presentation.messaging_conversation.components
+package com.example.cyclistance.feature_messaging.presentation.messaging_main_screen.components
 
 import androidx.compose.animation.AnimatedVisibility
 import androidx.compose.animation.scaleIn
Index: app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/EmergencyCallScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen\n\nimport android.Manifest\nimport android.widget.Toast\nimport androidx.compose.foundation.layout.PaddingValues\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.runtime.Composable\nimport androidx.compose.runtime.LaunchedEffect\nimport androidx.compose.runtime.derivedStateOf\nimport androidx.compose.runtime.getValue\nimport androidx.compose.runtime.mutableStateOf\nimport androidx.compose.runtime.remember\nimport androidx.compose.runtime.saveable.rememberSaveable\nimport androidx.compose.runtime.setValue\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.platform.LocalContext\nimport androidx.hilt.navigation.compose.hiltViewModel\nimport androidx.lifecycle.compose.collectAsStateWithLifecycle\nimport androidx.navigation.NavController\nimport com.example.cyclistance.core.utils.constants.EmergencyCallConstants.CONTACT_ID\nimport com.example.cyclistance.core.utils.constants.EmergencyCallConstants.MAX_CONTACTS\nimport com.example.cyclistance.core.utils.contexts.callPhoneNumber\nimport com.example.cyclistance.feature_emergency_call.domain.model.EmergencyContactModel\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.components.EmergencyCallScreenContent\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.event.EmergencyCallEvent\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.event.EmergencyCallUiEvent\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.event.EmergencyCallVmEvent\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.state.EmergencyCallUIState\nimport com.example.cyclistance.navigation.Screens\nimport com.google.accompanist.permissions.ExperimentalPermissionsApi\nimport com.google.accompanist.permissions.isGranted\nimport com.google.accompanist.permissions.rememberPermissionState\nimport kotlinx.coroutines.flow.collectLatest\n\n@OptIn(ExperimentalPermissionsApi::class)\n@Composable\nfun EmergencyCallScreen(\n    viewModel: EmergencyCallViewModel = hiltViewModel(),\n    navController: NavController,\n    paddingValues: PaddingValues) {\n\n\n    val context = LocalContext.current\n    val state by viewModel.state.collectAsStateWithLifecycle()\n\n    var uiState by rememberSaveable {\n        mutableStateOf(EmergencyCallUIState())\n    }\n\n    val showDeleteDialog = remember {\n        { emergencyContact: EmergencyContactModel ->\n            uiState = uiState.copy(deleteDialogVisible = true, contactToDelete = emergencyContact)\n        }\n    }\n\n    val dismissDeleteDialog = remember {\n        {\n            uiState =\n                uiState.copy(deleteDialogVisible = false, contactToDelete = EmergencyContactModel())\n        }\n    }\n\n    val maximumContactReached by remember(state.emergencyCallModel) {\n        derivedStateOf {\n            state.emergencyCallModel.contacts.size >= MAX_CONTACTS\n        }\n    }\n    val onClickAddContact = remember {\n        {\n\n            if (!maximumContactReached) {\n                navController.navigate(Screens.EmergencyCall.AddNewContact.screenRoute)\n            }\n            uiState = uiState.copy(maximumContactDialogVisible = maximumContactReached)\n\n        }\n    }\n\n    val onClickEditContact = remember {\n        { id: Int ->\n            navController.navigate(Screens.EmergencyCall.AddNewContact.screenRoute + \"?$CONTACT_ID=${id}\")\n        }\n    }\n\n    val onClickCancel = remember {\n        {\n            navController.popBackStack()\n        }\n    }\n\n    val deleteContact = remember {\n        { emergencyContact: EmergencyContactModel ->\n            viewModel.onEvent(event = EmergencyCallVmEvent.DeleteContact(emergencyContact))\n        }\n    }\n\n    val callPhoneNumber = remember {\n        { phoneNumber: String ->\n            context.callPhoneNumber(phoneNumber)\n        }\n    }\n\n    val openPhoneCallPermissionState =\n        rememberPermissionState(permission = Manifest.permission.CALL_PHONE) { permissionGranted ->\n            if (permissionGranted) {\n                uiState.selectedPhoneNumber.takeIf { it.isNotEmpty() }\n                    ?.let { callPhoneNumber(it) }\n            }\n        }\n\n\n    val onClickContact = remember {\n        { phoneNumber: String ->\n            if (!openPhoneCallPermissionState.status.isGranted) {\n                uiState = uiState.copy(selectedPhoneNumber = phoneNumber)\n                openPhoneCallPermissionState.launchPermissionRequest()\n            } else {\n                callPhoneNumber(phoneNumber)\n            }\n\n        }\n    }\n\n    val dismissMaximumDialog = remember {\n        {\n            uiState = uiState.copy(maximumContactDialogVisible = false)\n        }\n    }\n\n    LaunchedEffect(key1 = true) {\n        viewModel.eventFlow.collectLatest { event ->\n            when (event) {\n                is EmergencyCallEvent.ContactDeleteFailed -> {\n                    Toast.makeText(context, \"Failed to delete contact\", Toast.LENGTH_SHORT).show()\n                }\n\n                is EmergencyCallEvent.ContactDeleteSuccess -> {\n                    Toast.makeText(context, \"Contact deleted\", Toast.LENGTH_SHORT).show()\n                }\n            }\n        }\n    }\n\n    EmergencyCallScreenContent(\n        uiState = uiState,\n        modifier = Modifier.padding(paddingValues),\n        state = state,\n        event = { event ->\n            when (event) {\n                is EmergencyCallUiEvent.OnClickContact -> onClickContact(event.phoneNumber)\n                is EmergencyCallUiEvent.OnClickAddContact -> onClickAddContact()\n                is EmergencyCallUiEvent.OnClickCancel -> onClickCancel()\n                is EmergencyCallUiEvent.OnClickDeleteContact -> showDeleteDialog(event.emergencyContact)\n                is EmergencyCallUiEvent.OnClickEditContact -> onClickEditContact(event.id)\n                is EmergencyCallUiEvent.DismissDeleteContactDialog -> dismissDeleteDialog()\n                is EmergencyCallUiEvent.DeleteContact -> deleteContact(event.emergencyContact)\n                is EmergencyCallUiEvent.DismissMaximumContactDialog -> dismissMaximumDialog()\n\n            }\n        })\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/EmergencyCallScreen.kt b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/EmergencyCallScreen.kt
--- a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/EmergencyCallScreen.kt	(revision c9cf29066d03f2255d5df21f2306f599c2a3e47c)
+++ b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/EmergencyCallScreen.kt	(date 1689296399771)
@@ -1,51 +1,208 @@
 package com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen
 
 import android.Manifest
+import android.graphics.Bitmap
+import android.graphics.ImageDecoder
+import android.net.Uri
+import android.os.Build
+import android.provider.MediaStore
 import android.widget.Toast
+import androidx.activity.compose.rememberLauncherForActivityResult
+import androidx.activity.result.contract.ActivityResultContracts
+import androidx.activity.result.launch
 import androidx.compose.foundation.layout.PaddingValues
 import androidx.compose.foundation.layout.padding
+import androidx.compose.foundation.text.KeyboardActions
+import androidx.compose.material.ExperimentalMaterialApi
+import androidx.compose.material.ModalBottomSheetValue
+import androidx.compose.material.rememberModalBottomSheetState
 import androidx.compose.runtime.Composable
 import androidx.compose.runtime.LaunchedEffect
 import androidx.compose.runtime.derivedStateOf
 import androidx.compose.runtime.getValue
 import androidx.compose.runtime.mutableStateOf
 import androidx.compose.runtime.remember
+import androidx.compose.runtime.rememberCoroutineScope
 import androidx.compose.runtime.saveable.rememberSaveable
 import androidx.compose.runtime.setValue
+import androidx.compose.ui.ExperimentalComposeUiApi
 import androidx.compose.ui.Modifier
 import androidx.compose.ui.platform.LocalContext
-import androidx.hilt.navigation.compose.hiltViewModel
+import androidx.compose.ui.platform.LocalSoftwareKeyboardController
+import androidx.compose.ui.text.input.TextFieldValue
 import androidx.lifecycle.compose.collectAsStateWithLifecycle
+import androidx.lifecycle.viewmodel.compose.viewModel
 import androidx.navigation.NavController
-import com.example.cyclistance.core.utils.constants.EmergencyCallConstants.CONTACT_ID
 import com.example.cyclistance.core.utils.constants.EmergencyCallConstants.MAX_CONTACTS
 import com.example.cyclistance.core.utils.contexts.callPhoneNumber
+import com.example.cyclistance.core.utils.permissions.requestPermission
+import com.example.cyclistance.core.utils.save_images.ImageUtils.toImageUri
 import com.example.cyclistance.feature_emergency_call.domain.model.EmergencyContactModel
 import com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.components.EmergencyCallScreenContent
 import com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.event.EmergencyCallEvent
 import com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.event.EmergencyCallUiEvent
 import com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.event.EmergencyCallVmEvent
 import com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.state.EmergencyCallUIState
-import com.example.cyclistance.navigation.Screens
 import com.google.accompanist.permissions.ExperimentalPermissionsApi
 import com.google.accompanist.permissions.isGranted
+import com.google.accompanist.permissions.rememberMultiplePermissionsState
 import com.google.accompanist.permissions.rememberPermissionState
-import kotlinx.coroutines.flow.collectLatest
+import kotlinx.coroutines.launch
 
-@OptIn(ExperimentalPermissionsApi::class)
+@OptIn(
+    ExperimentalComposeUiApi::class, ExperimentalMaterialApi::class,
+    ExperimentalPermissionsApi::class)
 @Composable
 fun EmergencyCallScreen(
-    viewModel: EmergencyCallViewModel = hiltViewModel(),
+    viewModel: EmergencyCallViewModel = viewModel(),
     navController: NavController,
     paddingValues: PaddingValues) {
 
-
+    val state by viewModel.state.collectAsStateWithLifecycle()
+    val keyboardController = LocalSoftwareKeyboardController.current
     val context = LocalContext.current
-    val state by viewModel.state.collectAsStateWithLifecycle()
+    var imageBitmap by remember { mutableStateOf<Bitmap?>(null) }
+    val scope = rememberCoroutineScope()
+    var uiState by rememberSaveable { mutableStateOf(EmergencyCallUIState()) }
+    val bottomSheetScaffoldState = rememberModalBottomSheetState(ModalBottomSheetValue.Hidden)
+    val toggleBottomSheet = remember(bottomSheetScaffoldState, state.isLoading) {
+        {
+            scope.launch {
+
+                if (!state.isLoading) {
+                    with(bottomSheetScaffoldState) {
+                        if (isVisible) {
+                            hide()
+                        } else {
+                            show()
+                        }
+                    }
+                }
+            }
+        }
+    }
+    val openGalleryResultLauncher =
+        rememberLauncherForActivityResult(ActivityResultContracts.GetContent()) { uri: Uri? ->
+            uiState = uiState.copy(selectedImageUri = uri.toString())
+            uri?.let { selectedUri ->
+                imageBitmap =
+                    when {
+                        Build.VERSION.SDK_INT < Build.VERSION_CODES.P -> {
+                            MediaStore.Images.Media.getBitmap(
+                                context.contentResolver,
+                                selectedUri)
+                        }
+
+                        else -> {
+                            val source =
+                                ImageDecoder.createSource(
+                                    context.contentResolver,
+                                    selectedUri)
+                            ImageDecoder.decodeBitmap(source)
+                        }
+                    }
+            }
+
+
+        }
+
+    val openCameraResultLauncher =
+        rememberLauncherForActivityResult(ActivityResultContracts.TakePicturePreview()) { bitmap: Bitmap? ->
+            val uri = bitmap?.toImageUri().toString()
+            imageBitmap = bitmap
+            uiState = uiState.copy(selectedImageUri = uri)
+
+        }
+
+
+    val filesAndMediaPermissionState =
+        rememberMultiplePermissionsState(
+            permissions = listOf(
+                Manifest.permission.READ_EXTERNAL_STORAGE,
+                Manifest.permission.WRITE_EXTERNAL_STORAGE)) { permissionGranted ->
+            if (permissionGranted.values.all { it }) {
+                openGalleryResultLauncher.launch("image/*")
+            }
+        }
+
+
+    val openCameraPermissionState =
+        rememberPermissionState(permission = Manifest.permission.CAMERA) { permissionGranted ->
 
-    var uiState by rememberSaveable {
-        mutableStateOf(EmergencyCallUIState())
-    }
+            if (permissionGranted) {
+                openCameraResultLauncher.launch()
+            }
+        }
+
+
+    val onDismissFilesAndMediaPermissionDialog = remember {
+        {
+            uiState = uiState.copy(filesAndMediaDialogVisible = false)
+        }
+    }
+
+    val onDismissCameraPermissionDialog = remember {
+        {
+            uiState = uiState.copy(cameraPermissionDialogVisible = false)
+        }
+    }
+
+    val openGallery = remember {
+        {
+            filesAndMediaPermissionState.requestPermission(
+                onGranted = {
+                    openGalleryResultLauncher.launch("image/*")
+                }, onExplain = {
+                    uiState = uiState.copy(filesAndMediaDialogVisible = true)
+                })
+
+        }
+    }
+
+    val openCamera = remember {
+        {
+            openCameraPermissionState.requestPermission(
+                onGranted = {
+                    openCameraResultLauncher.launch()
+                }, onExplain = {
+                    uiState = uiState.copy(cameraPermissionDialogVisible = true)
+                })
+        }
+    }
+
+    val onValueChangeName = remember {
+        { name: TextFieldValue ->
+            uiState = uiState.copy(name = name)
+        }
+    }
+    val onValueChangePhoneNumber = remember {
+        { phoneNumber: TextFieldValue ->
+            uiState = uiState.copy(phoneNumber = phoneNumber)
+        }
+    }
+    val keyboardActions = remember {
+        KeyboardActions(onDone = {
+
+        })
+    }
+    val cancelAddEditContact = remember {
+        {
+            navController.popBackStack()
+            Unit
+        }
+    }
+    val saveAddEditContact = remember {
+        {
+
+        }
+    }
+
+    val onCloseEditContactScreen = remember {
+        {
+            navController.popBackStack()
+        }
+    }
+
 
     val showDeleteDialog = remember {
         { emergencyContact: EmergencyContactModel ->
@@ -69,7 +226,7 @@
         {
 
             if (!maximumContactReached) {
-                navController.navigate(Screens.EmergencyCall.AddNewContact.screenRoute)
+                /*todo: navController.navigate(Screens.EmergencyCall.AddNewContact.screenRoute)*/
             }
             uiState = uiState.copy(maximumContactDialogVisible = maximumContactReached)
 
@@ -78,7 +235,7 @@
 
     val onClickEditContact = remember {
         { id: Int ->
-            navController.navigate(Screens.EmergencyCall.AddNewContact.screenRoute + "?$CONTACT_ID=${id}")
+//           todo: navController.navigate(Screens.EmergencyCall.AddNewContact.screenRoute + "?$CONTACT_ID=${id}")
         }
     }
 
@@ -141,20 +298,41 @@
         }
     }
 
+
     EmergencyCallScreenContent(
         uiState = uiState,
         modifier = Modifier.padding(paddingValues),
-        state = state,
+        emergencyCallModel = EmergencyCallModel(),
         event = { event ->
             when (event) {
-                is EmergencyCallUiEvent.OnClickContact -> onClickContact(event.phoneNumber)
-                is EmergencyCallUiEvent.OnClickAddContact -> onClickAddContact()
-                is EmergencyCallUiEvent.OnClickCancel -> onClickCancel()
+                is EmergencyCallUiEvent.OnClickContact -> {}
+                is EmergencyCallUiEvent.OnClickAddContact -> {
+
+                    /*todo*/
+                }
+
+                is EmergencyCallUiEvent.OnClickCancel -> {
+                    navController.popBackStack()
+                }
+
                 is EmergencyCallUiEvent.OnClickDeleteContact -> showDeleteDialog(event.emergencyContact)
-                is EmergencyCallUiEvent.OnClickEditContact -> onClickEditContact(event.id)
+                is EmergencyCallUiEvent.OnClickEditContact -> {}
                 is EmergencyCallUiEvent.DismissDeleteContactDialog -> dismissDeleteDialog()
-                is EmergencyCallUiEvent.DeleteContact -> deleteContact(event.emergencyContact)
-                is EmergencyCallUiEvent.DismissMaximumContactDialog -> dismissMaximumDialog()
+                is EmergencyCallUiEvent.DeleteContact -> {}
+                is EmergencyCallUiEvent.SelectImageFromGallery -> openGallery()
+                is EmergencyCallUiEvent.OpenCamera -> openCamera()
+                is EmergencyCallUiEvent.OnChangeName -> onValueChangeName(event.name)
+                is EmergencyCallUiEvent.OnChangePhoneNumber -> onValueChangePhoneNumber(event.phoneNumber)
+                is EmergencyCallUiEvent.CancelEditContact -> cancelAddEditContact()
+                is EmergencyCallUiEvent.SaveEditContact -> saveAddEditContact()
+                is EmergencyCallUiEvent.ToggleBottomSheet -> {
+                    toggleBottomSheet()
+                    keyboardController?.hide()
+                }
+
+                is EmergencyCallUiEvent.DismissFilesAndMediaDialog -> onDismissCameraPermissionDialog()
+                is EmergencyCallUiEvent.DismissCameraDialog -> onDismissFilesAndMediaPermissionDialog()
+                is EmergencyCallUiEvent.CloseEditContactScreen -> onCloseEditContactScreen()
 
             }
         })
Index: app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/event/EmergencyCallEvent.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.event\n\nsealed class EmergencyCallEvent {\n    object ContactDeleteSuccess : EmergencyCallEvent()\n    object ContactDeleteFailed : EmergencyCallEvent()\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/event/EmergencyCallEvent.kt b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/event/EmergencyCallEvent.kt
--- a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/event/EmergencyCallEvent.kt	(revision c9cf29066d03f2255d5df21f2306f599c2a3e47c)
+++ b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/event/EmergencyCallEvent.kt	(date 1689296399764)
@@ -1,6 +1,15 @@
 package com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.event
 
+import com.example.cyclistance.feature_emergency_call.domain.model.EmergencyContactModel
+
 sealed class EmergencyCallEvent {
     object ContactDeleteSuccess : EmergencyCallEvent()
     object ContactDeleteFailed : EmergencyCallEvent()
+    data class GetContactSuccess(val emergencyContactModel: EmergencyContactModel) :
+        EmergencyCallEvent()
+
+    object SaveContactSuccess : EmergencyCallEvent()
+    data class NameFailure(val message: String) : EmergencyCallEvent()
+    data class PhoneNumberFailure(val message: String) : EmergencyCallEvent()
+    data class UnknownFailure(val message: String) : EmergencyCallEvent()
 }
\ No newline at end of file
Index: app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/components/MessagingConversationContent.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/components/MessagingConversationContent.kt b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/components/ConversationContent.kt
rename from app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/components/MessagingConversationContent.kt
rename to app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/components/ConversationContent.kt
--- a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/components/MessagingConversationContent.kt	(revision c9cf29066d03f2255d5df21f2306f599c2a3e47c)
+++ b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/components/ConversationContent.kt	(date 1689293152034)
@@ -1,4 +1,4 @@
-package com.example.cyclistance.feature_messaging.presentation.messaging_conversation.components
+package com.example.cyclistance.feature_messaging.presentation.messaging_main_screen.components
 
 
 import androidx.compose.animation.AnimatedVisibility
@@ -46,6 +46,8 @@
 import androidx.compose.ui.res.painterResource
 import androidx.compose.ui.tooling.preview.Preview
 import androidx.compose.ui.unit.dp
+import androidx.compose.ui.window.Dialog
+import androidx.compose.ui.window.DialogProperties
 import coil.compose.AsyncImage
 import com.example.cyclistance.R
 import com.example.cyclistance.core.utils.composable_utils.Keyboard
@@ -54,9 +56,9 @@
 import com.example.cyclistance.feature_messaging.domain.model.ui.Duration
 import com.example.cyclistance.feature_messaging.domain.model.ui.MessageContent
 import com.example.cyclistance.feature_messaging.domain.model.ui.MessageConversation
-import com.example.cyclistance.feature_messaging.presentation.messaging_conversation.event.MessagingConversationUiEvent
-import com.example.cyclistance.feature_messaging.presentation.messaging_conversation.state.MessagingConversationState
-import com.example.cyclistance.feature_messaging.presentation.messaging_conversation.state.MessagingConversationUiState
+import com.example.cyclistance.feature_messaging.presentation.messaging_main_screen.event.MessagingUiEvent
+import com.example.cyclistance.feature_messaging.presentation.messaging_main_screen.state.MessagingState
+import com.example.cyclistance.feature_messaging.presentation.messaging_main_screen.state.MessagingUiState
 import com.example.cyclistance.navigation.IsDarkTheme
 import com.example.cyclistance.theme.Black500
 import com.example.cyclistance.theme.CyclistanceTheme
@@ -192,9 +194,9 @@
 @Composable
 fun MessagingConversationContent(
     modifier: Modifier = Modifier,
-    uiState: MessagingConversationUiState,
-    state: MessagingConversationState,
-    event: (MessagingConversationUiEvent) -> Unit) {
+    uiState: MessagingUiState,
+    state: MessagingState,
+    event: (MessagingUiEvent) -> Unit) {
 
     val conversationAvailable by remember(state.conversation) {
         derivedStateOf { state.conversation.messages.isNotEmpty() }
@@ -225,139 +227,150 @@
         if (!uiState.messageAreaExpanded) {
             return@LaunchedEffect
         }
-        event(MessagingConversationUiEvent.ToggleMessageArea)
+        event(MessagingUiEvent.ToggleMessageArea)
 
     }
 
 
+    Dialog(
+        onDismissRequest = { event(MessagingUiEvent.CloseMessagingConversationDialog) },
+        properties = DialogProperties(
+            usePlatformDefaultWidth = false,
+            dismissOnClickOutside = false,
+            dismissOnBackPress = true
+        )) {
 
-    Scaffold(modifier = modifier, backgroundColor = MaterialTheme.colors.background, topBar = {
-        TopAppBarCreator(
-            icon = Icons.Default.Close,
-            onClickIcon = { event(MessagingConversationUiEvent.CloseMessagingConversationScreen) },
-            topAppBarTitle = {
-                Row(
-                    modifier = Modifier.wrapContentSize(),
-                    verticalAlignment = Alignment.CenterVertically,
-                    horizontalArrangement = Arrangement.spacedBy(5.dp)) {
+        Scaffold(modifier = modifier, backgroundColor = MaterialTheme.colors.background, topBar = {
+            TopAppBarCreator(
+                icon = Icons.Default.Close,
+                onClickIcon = { event(MessagingUiEvent.CloseMessagingConversationDialog) },
+                topAppBarTitle = {
+                    Row(
+                        modifier = Modifier.wrapContentSize(),
+                        verticalAlignment = Alignment.CenterVertically,
+                        horizontalArrangement = Arrangement.spacedBy(5.dp)) {
 
-                    AsyncImage(
-                        model = "https://t3.ftcdn.net/jpg/02/99/04/20/360_F_299042079_vGBD7wIlSeNl7vOevWHiL93G4koMM967.jpg",
-                        alignment = Alignment.Center,
-                        contentDescription = "User Profile Image",
-                        modifier = Modifier
-                            .clip(CircleShape)
-                            .size(35.dp)
-                            .clickable { event(MessagingConversationUiEvent.CloseMessagingConversationScreen) },
-                        contentScale = ContentScale.Crop,
-                        placeholder = painterResource(id = R.drawable.ic_empty_profile_placeholder_large),
-                        error = painterResource(id = R.drawable.ic_empty_profile_placeholder_large),
-                        fallback = painterResource(id = R.drawable.ic_empty_profile_placeholder_large))
-                    TitleTopAppBar(title = "John Doe", modifier = Modifier.padding(start = 5.dp))
-                }
-            })
-    }) { paddingValues ->
+                        AsyncImage(
+                            model = "https://t3.ftcdn.net/jpg/02/99/04/20/360_F_299042079_vGBD7wIlSeNl7vOevWHiL93G4koMM967.jpg",
+                            alignment = Alignment.Center,
+                            contentDescription = "User Profile Image",
+                            modifier = Modifier
+                                .clip(CircleShape)
+                                .size(35.dp)
+                                .clickable { },
+                            contentScale = ContentScale.Crop,
+                            placeholder = painterResource(id = R.drawable.ic_empty_profile_placeholder_large),
+                            error = painterResource(id = R.drawable.ic_empty_profile_placeholder_large),
+                            fallback = painterResource(id = R.drawable.ic_empty_profile_placeholder_large))
+                        TitleTopAppBar(
+                            title = "John Doe",
+                            modifier = Modifier.padding(start = 5.dp))
+                    }
+                })
+        }) { paddingValues ->
 
-        Surface(
-            modifier = Modifier
-                .padding(paddingValues)
-                .fillMaxSize()
-                .noRippleClickable {
+            Surface(
+                modifier = Modifier
+                    .padding(paddingValues)
+                    .fillMaxSize()
+                    .noRippleClickable {
 
-                    event(MessagingConversationUiEvent.ResetSelectedIndex)
+                        event(MessagingUiEvent.ResetSelectedIndex)
 
-                    if (uiState.messageAreaExpanded) {
-                        event(MessagingConversationUiEvent.ToggleMessageArea)
-                    }
-                    focusManager.clearFocus()
-                },
-            color = MaterialTheme.colors.background) {
+                        if (uiState.messageAreaExpanded) {
+                            event(MessagingUiEvent.ToggleMessageArea)
+                        }
+                        focusManager.clearFocus()
+                    },
+                color = MaterialTheme.colors.background) {
 
-            Box(
-                modifier = Modifier.fillMaxSize(),
-                contentAlignment = if (conversationAvailable) Alignment.BottomCenter else Alignment.Center) {
+                Box(
+                    modifier = Modifier.fillMaxSize(),
+                    contentAlignment = if (conversationAvailable) Alignment.BottomCenter else Alignment.Center) {
 
 
-                Column(
-                    modifier = Modifier.fillMaxSize()) {
+                    Column(
+                        modifier = Modifier.fillMaxSize()) {
 
 
-                    if (conversationAvailable) {
+                        if (conversationAvailable) {
 
-                        LazyColumn(
-                            state = listState,
-                            verticalArrangement = Arrangement.Top,
-                            horizontalAlignment = Alignment.CenterHorizontally,
-                            modifier = Modifier.weight(1f),
-                            contentPadding = PaddingValues(top = 16.dp, bottom = 24.dp)
-                        ) {
+                            LazyColumn(
+                                state = listState,
+                                verticalArrangement = Arrangement.Top,
+                                horizontalAlignment = Alignment.CenterHorizontally,
+                                modifier = Modifier.weight(1f),
+                                contentPadding = PaddingValues(top = 16.dp, bottom = 24.dp)
+                            ) {
 
-                            itemsIndexed(
-                                items = state.conversation.messages,
-                                key = { _, item -> item.messageId }) { index, message ->
+                                itemsIndexed(
+                                    items = state.conversation.messages,
+                                    key = { _, item -> item.messageId }) { index, message ->
 
-                                val isSender by remember { derivedStateOf { message.senderId != USER_ID } }
-                                val timeStampAvailable by remember { derivedStateOf { message.duration != null && message.dateSent != null } }
+                                    val isSender by remember { derivedStateOf { message.senderId != USER_ID } }
+                                    val timeStampAvailable by remember { derivedStateOf { message.duration != null && message.dateSent != null } }
 
-                                AnimatedVisibility(visible = timeStampAvailable) {
+                                    AnimatedVisibility(visible = timeStampAvailable) {
 
-                                    MessagingTimeStamp(
-                                        value = message.dateSent!!,
-                                        modifier = Modifier
-                                            .fillMaxWidth()
-                                            .padding(vertical = 8.dp))
-                                }
+                                        MessagingTimeStamp(
+                                            value = message.dateSent!!,
+                                            modifier = Modifier
+                                                .fillMaxWidth()
+                                                .padding(vertical = 8.dp))
+                                    }
 
 
-                                ChatItem(
-                                    message = message,
-                                    isSender = isSender,
-                                    modifier = Modifier
-                                        .fillMaxWidth()
-                                        .padding(vertical = 8.dp, horizontal = 6.dp),
-                                    contentAlignment = if (isSender) Alignment.CenterStart else Alignment.CenterEnd,
-                                    currentIndex = index,
-                                    selectedIndex = uiState.chatItemSelectedIndex,
-                                    onClick = {
-                                        event(
-                                            MessagingConversationUiEvent.SelectChatItem(
-                                                index = it))
-                                    }
-                                )
-                            }
+                                    ChatItem(
+                                        message = message,
+                                        isSender = isSender,
+                                        modifier = Modifier
+                                            .fillMaxWidth()
+                                            .padding(vertical = 8.dp, horizontal = 6.dp),
+                                        contentAlignment = if (isSender) Alignment.CenterStart else Alignment.CenterEnd,
+                                        currentIndex = index,
+                                        selectedIndex = uiState.chatItemSelectedIndex,
+                                        onClick = {
+                                            event(
+                                                MessagingUiEvent.SelectChatItem(
+                                                    index = it))
+                                        }
+                                    )
+                                }
 
-                        }
+                            }
 
-                    } else {
-                        PlaceholderEmptyConversation(modifier = Modifier
-                            .weight(1f)
-                            .fillMaxSize())
-                    }
+                        } else {
+                            PlaceholderEmptyConversation(
+                                modifier = Modifier
+                                    .weight(1f)
+                                    .fillMaxSize())
+                        }
 
 
 
 
-                    MessagingTextArea(
-                        message = uiState.message,
-                        onValueChange = { event(MessagingConversationUiEvent.OnChangeMessage(it)) },
-                        modifier = Modifier.wrapContentHeight(),
-                        onClickSend = {},
-                        onToggleExpand = { event(MessagingConversationUiEvent.ToggleMessageArea) },
-                        isExpanded = uiState.messageAreaExpanded)
+                        MessagingTextArea(
+                            message = uiState.message,
+                            onValueChange = { event(MessagingUiEvent.OnChangeMessage(it)) },
+                            modifier = Modifier.wrapContentHeight(),
+                            onClickSend = {},
+                            onToggleExpand = { event(MessagingUiEvent.ToggleMessageArea) },
+                            isExpanded = uiState.messageAreaExpanded)
 
-                }
+                    }
 
-                ScrollToBottomButton(
-                    modifier = Modifier.absoluteOffset(y = (-85).dp),
-                    isVisible = isScrollingUp,
-                    onClick = {
-                        scope.launch {
-                            listState.animateScrollToItem(index = state.conversation.messages.indices.last)
-                        }
-                    })
+                    ScrollToBottomButton(
+                        modifier = Modifier.absoluteOffset(y = (-85).dp),
+                        isVisible = isScrollingUp,
+                        onClick = {
+                            scope.launch {
+                                listState.animateScrollToItem(index = state.conversation.messages.indices.last)
+                            }
+                        })
 
-            }
+                }
 
+            }
         }
     }
 
@@ -407,8 +420,8 @@
     CompositionLocalProvider(IsDarkTheme provides true) {
         CyclistanceTheme(darkTheme = true) {
             MessagingConversationContent(
-                uiState = MessagingConversationUiState(messageAreaExpanded = true),
-                event = {}, state = MessagingConversationState())
+                uiState = MessagingUiState(messageAreaExpanded = true),
+                event = {}, state = MessagingState())
         }
     }
 }
@@ -419,8 +432,8 @@
     CompositionLocalProvider(IsDarkTheme provides false) {
         CyclistanceTheme(darkTheme = false) {
             MessagingConversationContent(
-                uiState = MessagingConversationUiState(messageAreaExpanded = true),
-                event = {}, state = MessagingConversationState())
+                uiState = MessagingUiState(messageAreaExpanded = true),
+                event = {}, state = MessagingState())
         }
     }
 }
Index: app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/event/EmergencyCallVmEvent.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.event\n\nimport com.example.cyclistance.feature_emergency_call.domain.model.EmergencyContactModel\n\nsealed class EmergencyCallVmEvent {\n\n\n    data class DeleteContact(val emergencyContactModel: EmergencyContactModel) :\n        EmergencyCallVmEvent()\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/event/EmergencyCallVmEvent.kt b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/event/EmergencyCallVmEvent.kt
--- a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/event/EmergencyCallVmEvent.kt	(revision c9cf29066d03f2255d5df21f2306f599c2a3e47c)
+++ b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/event/EmergencyCallVmEvent.kt	(date 1689296399788)
@@ -7,4 +7,8 @@
 
     data class DeleteContact(val emergencyContactModel: EmergencyContactModel) :
         EmergencyCallVmEvent()
+
+    data class SaveContact(val emergencyContactModel: EmergencyContactModel) :
+        EmergencyCallVmEvent()
+
 }
Index: app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/components/MessagingTimeStamp.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/components/MessagingTimeStamp.kt b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/components/ConversationTimeStamp.kt
rename from app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/components/MessagingTimeStamp.kt
rename to app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/components/ConversationTimeStamp.kt
--- a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/components/MessagingTimeStamp.kt	(revision c9cf29066d03f2255d5df21f2306f599c2a3e47c)
+++ b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/components/ConversationTimeStamp.kt	(date 1689293152214)
@@ -1,4 +1,4 @@
-package com.example.cyclistance.feature_messaging.presentation.messaging_conversation.components
+package com.example.cyclistance.feature_messaging.presentation.messaging_main_screen.components
 
 import androidx.compose.material.MaterialTheme
 import androidx.compose.material.Text
Index: app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/components/MessagingTextArea.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/components/MessagingTextArea.kt b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/components/ConversationTextArea.kt
rename from app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/components/MessagingTextArea.kt
rename to app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/components/ConversationTextArea.kt
--- a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/components/MessagingTextArea.kt	(revision c9cf29066d03f2255d5df21f2306f599c2a3e47c)
+++ b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/components/ConversationTextArea.kt	(date 1689293152194)
@@ -1,4 +1,4 @@
-package com.example.cyclistance.feature_messaging.presentation.messaging_conversation.components
+package com.example.cyclistance.feature_messaging.presentation.messaging_main_screen.components
 
 import androidx.compose.animation.animateContentSize
 import androidx.compose.animation.core.Spring
Index: app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/state/EmergencyCallState.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.state\n\nimport android.os.Parcelable\nimport com.example.cyclistance.core.utils.annotations.StableState\nimport com.example.cyclistance.feature_emergency_call.domain.model.EmergencyCallModel\nimport kotlinx.parcelize.Parcelize\n\n\n@Parcelize\n@StableState\ndata class EmergencyCallState(\n    val isLoading: Boolean = false,\n    val emergencyCallModel: EmergencyCallModel = EmergencyCallModel()\n) : Parcelable\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/state/EmergencyCallState.kt b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/state/EmergencyCallState.kt
--- a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/state/EmergencyCallState.kt	(revision c9cf29066d03f2255d5df21f2306f599c2a3e47c)
+++ b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/state/EmergencyCallState.kt	(date 1689295502948)
@@ -9,6 +9,9 @@
 @Parcelize
 @StableState
 data class EmergencyCallState(
+
     val isLoading: Boolean = false,
+    val nameSnapshot: String = "",
+    val phoneNumberSnapshot: String = "",
     val emergencyCallModel: EmergencyCallModel = EmergencyCallModel()
 ) : Parcelable
Index: app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/event/EmergencyCallUiEvent.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.event\n\nimport com.example.cyclistance.feature_emergency_call.domain.model.EmergencyContactModel\n\nsealed class EmergencyCallUiEvent {\n    object OnClickCancel : EmergencyCallUiEvent()\n    object OnClickAddContact : EmergencyCallUiEvent()\n    data class OnClickContact(val phoneNumber: String) : EmergencyCallUiEvent()\n    data class OnClickEditContact(val id: Int) : EmergencyCallUiEvent()\n    data class OnClickDeleteContact(val emergencyContact: EmergencyContactModel) :\n        EmergencyCallUiEvent()\n\n    data class DeleteContact(val emergencyContact: EmergencyContactModel) : EmergencyCallUiEvent()\n    object DismissDeleteContactDialog : EmergencyCallUiEvent()\n    object DismissMaximumContactDialog : EmergencyCallUiEvent()\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/event/EmergencyCallUiEvent.kt b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/event/EmergencyCallUiEvent.kt
--- a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/event/EmergencyCallUiEvent.kt	(revision c9cf29066d03f2255d5df21f2306f599c2a3e47c)
+++ b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/event/EmergencyCallUiEvent.kt	(date 1689294562727)
@@ -1,18 +1,28 @@
 package com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.event
 
+import androidx.compose.ui.text.input.TextFieldValue
 import com.example.cyclistance.feature_emergency_call.domain.model.EmergencyContactModel
 
 sealed class EmergencyCallUiEvent {
     object OnClickCancel : EmergencyCallUiEvent()
     object OnClickAddContact : EmergencyCallUiEvent()
-    data class OnClickContact(val phoneNumber: String) : EmergencyCallUiEvent()
-    data class OnClickEditContact(val id: Int) : EmergencyCallUiEvent()
+    object OnClickContact : EmergencyCallUiEvent()
+    data class OnClickEditContact(val id: String) : EmergencyCallUiEvent()
     data class OnClickDeleteContact(val emergencyContact: EmergencyContactModel) :
         EmergencyCallUiEvent()
 
-    data class DeleteContact(val emergencyContact: EmergencyContactModel) : EmergencyCallUiEvent()
+    data class DeleteContact(val id: String) : EmergencyCallUiEvent()
     object DismissDeleteContactDialog : EmergencyCallUiEvent()
-    object DismissMaximumContactDialog : EmergencyCallUiEvent()
 
 
+    object SelectImageFromGallery : EmergencyCallUiEvent()
+    object OpenCamera : EmergencyCallUiEvent()
+    data class OnChangeName(val name: TextFieldValue) : EmergencyCallUiEvent()
+    data class OnChangePhoneNumber(val phoneNumber: TextFieldValue) : EmergencyCallUiEvent()
+    object CancelEditContact : EmergencyCallUiEvent()
+    object SaveEditContact : EmergencyCallUiEvent()
+    object ToggleBottomSheet : EmergencyCallUiEvent()
+    object DismissFilesAndMediaDialog : EmergencyCallUiEvent()
+    object DismissCameraDialog : EmergencyCallUiEvent()
+    object CloseEditContactScreen : EmergencyCallUiEvent()
 }
Index: .idea/shelf/Change_String_to_TextFieldValue.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><changelist name=\"Change_String_to_TextFieldValue\" date=\"1688791690912\" recycled=\"false\" deleted=\"true\">\n  <option name=\"PATH\" value=\"$PROJECT_DIR$/.idea/shelf/Change_String_to_TextFieldValue/shelved.patch\" />\n  <option name=\"DESCRIPTION\" value=\"Change String to TextFieldValue\" />\n</changelist>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Change_String_to_TextFieldValue.xml b/.idea/shelf/Change_String_to_TextFieldValue.xml
--- a/.idea/shelf/Change_String_to_TextFieldValue.xml	(revision c9cf29066d03f2255d5df21f2306f599c2a3e47c)
+++ b/.idea/shelf/Change_String_to_TextFieldValue.xml	(date 1689296370501)
@@ -1,4 +1,4 @@
-<changelist name="Change_String_to_TextFieldValue" date="1688791690912" recycled="false" deleted="true">
+<changelist name="Change_String_to_TextFieldValue" date="1687225668079" recycled="false">
   <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Change_String_to_TextFieldValue/shelved.patch" />
   <option name="DESCRIPTION" value="Change String to TextFieldValue" />
 </changelist>
\ No newline at end of file
Index: app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/state/EmergencyCallUIState.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.state\n\nimport android.os.Parcelable\nimport com.example.cyclistance.core.utils.annotations.StableState\nimport com.example.cyclistance.feature_emergency_call.domain.model.EmergencyContactModel\nimport kotlinx.parcelize.Parcelize\n\n\n@Parcelize\n@StableState\ndata class EmergencyCallUIState(\n    val deleteDialogVisible: Boolean = false,\n    val contactToDelete: EmergencyContactModel = EmergencyContactModel(),\n    val selectedPhoneNumber: String = \"\",\n    val maximumContactDialogVisible: Boolean = false,\n) : Parcelable\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/state/EmergencyCallUIState.kt b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/state/EmergencyCallUIState.kt
--- a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/state/EmergencyCallUIState.kt	(revision c9cf29066d03f2255d5df21f2306f599c2a3e47c)
+++ b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/state/EmergencyCallUIState.kt	(date 1689294297186)
@@ -1,16 +1,25 @@
 package com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.state
 
 import android.os.Parcelable
+import androidx.compose.ui.text.input.TextFieldValue
 import com.example.cyclistance.core.utils.annotations.StableState
 import com.example.cyclistance.feature_emergency_call.domain.model.EmergencyContactModel
 import kotlinx.parcelize.Parcelize
+import kotlinx.parcelize.RawValue
 
 
 @Parcelize
 @StableState
 data class EmergencyCallUIState(
     val deleteDialogVisible: Boolean = false,
-    val contactToDelete: EmergencyContactModel = EmergencyContactModel(),
-    val selectedPhoneNumber: String = "",
-    val maximumContactDialogVisible: Boolean = false,
+    val contactToDelete: EmergencyContactModel? = null,
+    val selectedImageUri: String = "",
+    val photoUrl: String = "",
+    val name: @RawValue TextFieldValue = TextFieldValue(""),
+    val nameErrorMessage: String = "",
+    val phoneNumber: @RawValue TextFieldValue = TextFieldValue(""),
+    val phoneNumberErrorMessage: String = "",
+    val cameraPermissionDialogVisible: Boolean = false,
+    val filesAndMediaDialogVisible: Boolean = false,
+    val contactCurrentlyEditing: EmergencyContactModel? = null,
 ) : Parcelable
Index: app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/components/ChatItem.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/components/ChatItem.kt b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/components/ConversationChatItem.kt
rename from app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/components/ChatItem.kt
rename to app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/components/ConversationChatItem.kt
--- a/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_conversation/components/ChatItem.kt	(revision c9cf29066d03f2255d5df21f2306f599c2a3e47c)
+++ b/app/src/main/java/com/example/cyclistance/feature_messaging/presentation/messaging_main_screen/components/ConversationChatItem.kt	(date 1689293152004)
@@ -1,4 +1,4 @@
-package com.example.cyclistance.feature_messaging.presentation.messaging_conversation.components
+package com.example.cyclistance.feature_messaging.presentation.messaging_main_screen.components
 
 import androidx.compose.animation.AnimatedVisibility
 import androidx.compose.animation.core.tween
Index: app/src/main/java/com/example/cyclistance/navigation/nav_graph/EmergencyGraph.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.navigation.nav_graph\n\nimport androidx.compose.foundation.layout.PaddingValues\nimport androidx.navigation.NavController\nimport androidx.navigation.NavGraphBuilder\nimport androidx.navigation.compose.composable\nimport androidx.navigation.navArgument\nimport androidx.navigation.navigation\nimport com.example.cyclistance.core.utils.constants.EmergencyCallConstants.CONTACT_ID\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact.EmergencyAddEditContactScreen\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.EmergencyCallScreen\nimport com.example.cyclistance.navigation.Screens\n\nfun NavGraphBuilder.emergencyCallGraph(\n    navController: NavController,\n    paddingValues: PaddingValues\n) {\n    navigation(\n        startDestination = Screens.EmergencyCall.EmergencyCallScreen.screenRoute,\n        route = Screens.EmergencyCall.ROUTE) {\n\n        composable(\n            route = Screens.EmergencyCall.EmergencyCallScreen.screenRoute) {\n\n            EmergencyCallScreen(\n                navController = navController, paddingValues = paddingValues\n            )\n        }\n\n        composable(Screens.EmergencyCall.AddNewContact.screenRoute + \"?$CONTACT_ID={$CONTACT_ID}\",\n            arguments = listOf(\n                navArgument(CONTACT_ID) {\n                    nullable = true\n\n                })) {\n\n            EmergencyAddEditContactScreen(\n                navController = navController, paddingValues = paddingValues\n            )\n        }\n\n    }\n}\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/navigation/nav_graph/EmergencyGraph.kt b/app/src/main/java/com/example/cyclistance/navigation/nav_graph/EmergencyGraph.kt
--- a/app/src/main/java/com/example/cyclistance/navigation/nav_graph/EmergencyGraph.kt	(revision c9cf29066d03f2255d5df21f2306f599c2a3e47c)
+++ b/app/src/main/java/com/example/cyclistance/navigation/nav_graph/EmergencyGraph.kt	(date 1689293161751)
@@ -4,10 +4,7 @@
 import androidx.navigation.NavController
 import androidx.navigation.NavGraphBuilder
 import androidx.navigation.compose.composable
-import androidx.navigation.navArgument
 import androidx.navigation.navigation
-import com.example.cyclistance.core.utils.constants.EmergencyCallConstants.CONTACT_ID
-import com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact.EmergencyAddEditContactScreen
 import com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.EmergencyCallScreen
 import com.example.cyclistance.navigation.Screens
 
@@ -18,26 +15,12 @@
     navigation(
         startDestination = Screens.EmergencyCall.EmergencyCallScreen.screenRoute,
         route = Screens.EmergencyCall.ROUTE) {
-
-        composable(
-            route = Screens.EmergencyCall.EmergencyCallScreen.screenRoute) {
-
+        composable(Screens.EmergencyCall.EmergencyCallScreen.screenRoute) {
             EmergencyCallScreen(
                 navController = navController, paddingValues = paddingValues
             )
         }
 
-        composable(Screens.EmergencyCall.AddNewContact.screenRoute + "?$CONTACT_ID={$CONTACT_ID}",
-            arguments = listOf(
-                navArgument(CONTACT_ID) {
-                    nullable = true
-
-                })) {
-
-            EmergencyAddEditContactScreen(
-                navController = navController, paddingValues = paddingValues
-            )
-        }
 
     }
 }
Index: app/src/main/java/com/example/cyclistance/navigation/Screens.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.navigation\n\nsealed class Screens {\n\n\n    open class Authentication(val screenRoute: String = \"\") : Screens() {\n        companion object {\n            const val ROUTE = \"authentication\"\n        }\n\n        object SignInScreen : Authentication(screenRoute = \"sign_in_screen\")\n        object SignUpScreen : Authentication(screenRoute = \"sign_up_screen\")\n        object EmailAuthScreen : Authentication(screenRoute = \"email_auth_screen\")\n    }\n\n    open class EmergencyCall(val screenRoute: String = \"\") : Screens() {\n        companion object {\n            const val ROUTE = \"emergency_call\"\n        }\n\n        object EmergencyCallScreen : EmergencyCall(screenRoute = \"emergency_call_screen\")\n        object AddNewContact : EmergencyCall(screenRoute = \"emergency_add_new_contact\")\n    }\n\n    open class Messaging(val screenRoute: String = \"\") : Screens() {\n        companion object {\n            const val ROUTE = \"messaging\"\n        }\n\n        object MessagingScreen : Messaging(screenRoute = \"messaging_screen\")\n        object ConversationScreen : Messaging(screenRoute = \"messaging_conversation_screen\")\n    }\n\n    open class OnBoarding(val screenRoute: String = \"\") : Screens() {\n        companion object {\n            const val ROUTE = \"on_boarding\"\n        }\n\n        object IntroSliderScreen : OnBoarding(screenRoute = \"intro_slider_screen\")\n    }\n\n    open class Mapping(val screenRoute: String = \"\") : Screens() {\n        companion object {\n            const val ROUTE = \"mapping\"\n        }\n\n        object MappingScreen : Mapping(screenRoute = \"mapping_screen\")\n        object CancellationScreen : Mapping(screenRoute = \"cancellation_screen\")\n        object ConfirmDetailsScreen : Mapping(screenRoute = \"confirm_details_screen\")\n    }\n\n    open class Settings(val screenRoute: String = \"\") : Screens() {\n\n        companion object {\n            const val ROUTE = \"settings\"\n        }\n\n        object ChangePasswordScreen : Settings(screenRoute = \"change_password_screen\")\n        object EditProfileScreen : Settings(screenRoute = \"edit_profile_screen\")\n        object SettingScreen : Settings(screenRoute = \"setting_screen\")\n    }\n\n\n    open class RideHistory(val screenRoute: String = \"\") : Screens() {\n        companion object {\n            const val ROUTE = \"ride_history\"\n        }\n\n        object RideHistoryScreen : RideHistory(screenRoute = \"ride_history_screen\")\n        object RideHistoryDetailsScreen : RideHistory(screenRoute = \"ride_history_details_screen\")\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/navigation/Screens.kt b/app/src/main/java/com/example/cyclistance/navigation/Screens.kt
--- a/app/src/main/java/com/example/cyclistance/navigation/Screens.kt	(revision c9cf29066d03f2255d5df21f2306f599c2a3e47c)
+++ b/app/src/main/java/com/example/cyclistance/navigation/Screens.kt	(date 1689296373211)
@@ -19,7 +19,6 @@
         }
 
         object EmergencyCallScreen : EmergencyCall(screenRoute = "emergency_call_screen")
-        object AddNewContact : EmergencyCall(screenRoute = "emergency_add_new_contact")
     }
 
     open class Messaging(val screenRoute: String = "") : Screens() {
Index: app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/components/AddEditContactPhotoSection.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/components/AddEditContactPhotoSection.kt b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/AddEditContactPhotoSection.kt
rename from app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/components/AddEditContactPhotoSection.kt
rename to app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/AddEditContactPhotoSection.kt
--- a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/components/AddEditContactPhotoSection.kt	(revision c9cf29066d03f2255d5df21f2306f599c2a3e47c)
+++ b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/AddEditContactPhotoSection.kt	(date 1689295502965)
@@ -1,4 +1,4 @@
-package com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact.components
+package com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.components
 
 import androidx.compose.foundation.Image
 import androidx.compose.foundation.clickable
@@ -23,7 +23,7 @@
 import coil.request.CachePolicy
 import coil.request.ImageRequest
 import com.example.cyclistance.R
-import com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact.event.AddEditContactUiEvent
+import com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.event.EmergencyCallUiEvent
 
 
 @Composable
@@ -31,7 +31,7 @@
 
     isOnEditMode: Boolean,
     photoUrl: Any?,
-    event: (AddEditContactUiEvent) -> Unit) {
+    event: (EmergencyCallUiEvent) -> Unit) {
 
 
     val shouldShowAddEditImage = remember(isOnEditMode, photoUrl) {
@@ -51,7 +51,7 @@
             modifier = Modifier
                 .size(100.dp)
                 .clip(CircleShape)
-                .clickable { event(AddEditContactUiEvent.ToggleBottomSheet) }
+                .clickable { event(EmergencyCallUiEvent.ToggleBottomSheet) }
         )
 
     }
@@ -63,7 +63,7 @@
 private fun AddEditContactImage(
     modifier: Modifier = Modifier,
     photoUrl: Any?,
-    event: (AddEditContactUiEvent) -> Unit) {
+    event: (EmergencyCallUiEvent) -> Unit) {
     Surface(
         modifier = modifier,
         color = (Color.Transparent),
@@ -84,7 +84,7 @@
                     modifier = Modifier
                         .clip(CircleShape)
                         .fillMaxSize()
-                        .clickable { event(AddEditContactUiEvent.ToggleBottomSheet) },
+                        .clickable { event(EmergencyCallUiEvent.ToggleBottomSheet) },
                     contentScale = ContentScale.Crop,
                     placeholder = painterResource(id = R.drawable.ic_empty_profile_placeholder_large),
                     error = painterResource(id = R.drawable.ic_empty_profile_placeholder_large),
@@ -100,7 +100,7 @@
                         .clip(CircleShape)
                         .fillMaxSize()
                         .size(100.dp)
-                        .clickable { event(AddEditContactUiEvent.ToggleBottomSheet) },
+                        .clickable { event(EmergencyCallUiEvent.ToggleBottomSheet) },
                     contentScale = ContentScale.Crop,
 
                     )
Index: app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/components/AddEditContactTextFieldSection.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/components/AddEditContactTextFieldSection.kt b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/AddEditContactTextFieldSection.kt
rename from app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/components/AddEditContactTextFieldSection.kt
rename to app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/AddEditContactTextFieldSection.kt
--- a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/components/AddEditContactTextFieldSection.kt	(revision c9cf29066d03f2255d5df21f2306f599c2a3e47c)
+++ b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/AddEditContactTextFieldSection.kt	(date 1689293011915)
@@ -1,4 +1,4 @@
-package com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact.components
+package com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.components
 
 import androidx.compose.foundation.layout.Arrangement
 import androidx.compose.foundation.layout.Column
@@ -15,9 +15,9 @@
 import androidx.compose.ui.text.input.KeyboardCapitalization
 import androidx.compose.ui.text.input.KeyboardType
 import androidx.compose.ui.unit.dp
-import com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact.event.AddEditContactUiEvent
-import com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact.state.AddEditContactState
-import com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact.state.AddEditContactUiState
+import com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.event.EmergencyCallUiEvent
+import com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.state.EmergencyCallState
+import com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.state.EmergencyCallUIState
 import com.example.cyclistance.feature_settings.presentation.setting_edit_profile.components.TextFieldCreator
 import com.example.cyclistance.feature_settings.presentation.setting_edit_profile.components.TextFieldItem
 import com.example.cyclistance.theme.Black500
@@ -25,10 +25,10 @@
 @Composable
 fun AddEditContextTextFieldSection(
     modifier: Modifier,
-    uiState: AddEditContactUiState,
-    state: AddEditContactState,
+    uiState: EmergencyCallUIState,
+    state: EmergencyCallState,
     keyboardActions: KeyboardActions,
-    event: (AddEditContactUiEvent) -> Unit) {
+    event: (EmergencyCallUiEvent) -> Unit) {
 
 
     Column(
@@ -44,7 +44,7 @@
                     autoCorrect = false,
                     keyboardType = KeyboardType.Text,
                     imeAction = ImeAction.Next),
-                onValueChange = { event(AddEditContactUiEvent.OnChangeName(it)) })
+                onValueChange = { event(EmergencyCallUiEvent.OnChangeName(it)) })
         }
 
         TextFieldCreator(label = "Phone", errorMessage = uiState.phoneNumberErrorMessage) {
@@ -67,7 +67,7 @@
                         keyboardType = KeyboardType.Phone,
                         imeAction = ImeAction.Done),
                     keyboardActions = keyboardActions,
-                    onValueChange = { event(AddEditContactUiEvent.OnChangePhoneNumber(it)) })
+                    onValueChange = { event(EmergencyCallUiEvent.OnChangePhoneNumber(it)) })
 
             }
         }
Index: app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/components/AddEditContactContent.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/components/AddEditContactContent.kt b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/AddEditContactContent.kt
rename from app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/components/AddEditContactContent.kt
rename to app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/AddEditContactContent.kt
--- a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_add_edit_contact/components/AddEditContactContent.kt	(revision c9cf29066d03f2255d5df21f2306f599c2a3e47c)
+++ b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/components/AddEditContactContent.kt	(date 1689295502991)
@@ -1,4 +1,4 @@
-package com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact.components
+package com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.components
 
 import androidx.compose.foundation.layout.Arrangement
 import androidx.compose.foundation.layout.Column
@@ -31,9 +31,9 @@
 import com.example.cyclistance.core.utils.constants.EmergencyCallConstants.PHILIPPINE_RED_CROSS_PHOTO
 import com.example.cyclistance.feature_dialogs.presentation.permissions_dialog.DialogCameraPermission
 import com.example.cyclistance.feature_dialogs.presentation.permissions_dialog.DialogFilesAndMediaPermission
-import com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact.event.AddEditContactUiEvent
-import com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact.state.AddEditContactState
-import com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact.state.AddEditContactUiState
+import com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.event.EmergencyCallUiEvent
+import com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.state.EmergencyCallState
+import com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.state.EmergencyCallUIState
 import com.example.cyclistance.feature_mapping.presentation.common.ButtonNavigation
 import com.example.cyclistance.feature_settings.presentation.setting_edit_profile.components.SelectImageBottomSheet
 import com.example.cyclistance.theme.CyclistanceTheme
@@ -46,10 +46,10 @@
     modifier: Modifier = Modifier,
     bottomSheetScaffoldState: ModalBottomSheetState,
     keyboardActions: KeyboardActions = KeyboardActions { },
-    event: (AddEditContactUiEvent) -> Unit,
-    state: AddEditContactState,
+    event: (EmergencyCallUiEvent) -> Unit,
+    state: EmergencyCallState,
     photoUrl: Any?,
-    uiState: AddEditContactUiState) {
+    uiState: EmergencyCallUIState) {
 
     val isOnEditMode by remember(key1 = uiState.contactCurrentlyEditing) {
         derivedStateOf { uiState.contactCurrentlyEditing != null }
@@ -69,7 +69,7 @@
     Scaffold(modifier = modifier, topBar = {
         TopAppBarCreator(
             icon = Icons.Default.Close,
-            onClickIcon = { event(AddEditContactUiEvent.CloseEditContactScreen) },
+            onClickIcon = { event(EmergencyCallUiEvent.CloseEditContactScreen) },
             topAppBarTitle = {
                 TitleTopAppBar(title = if (isOnEditMode) "Edit Contact" else "New Contact")
             })
@@ -83,12 +83,12 @@
 
             SelectImageBottomSheet(
                 onClickGalleryButton = {
-                    event(AddEditContactUiEvent.ToggleBottomSheet)
-                    event(AddEditContactUiEvent.SelectImageFromGallery)
+                    event(EmergencyCallUiEvent.ToggleBottomSheet)
+                    event(EmergencyCallUiEvent.SelectImageFromGallery)
                 },
                 onClickCameraButton = {
-                    event(AddEditContactUiEvent.ToggleBottomSheet)
-                    event(AddEditContactUiEvent.OpenCamera)
+                    event(EmergencyCallUiEvent.ToggleBottomSheet)
+                    event(EmergencyCallUiEvent.OpenCamera)
                 },
                 bottomSheetScaffoldState = bottomSheetScaffoldState,
                 isLoading = state.isLoading) {
@@ -145,8 +145,8 @@
                             width = Dimension.percent(0.8f)
                         },
                         positiveButtonText = "Save",
-                        onClickCancelButton = { event(AddEditContactUiEvent.CancelEditContact) },
-                        onClickConfirmButton = { event(AddEditContactUiEvent.SaveEditContact) },
+                        onClickCancelButton = { event(EmergencyCallUiEvent.CancelEditContact) },
+                        onClickConfirmButton = { event(EmergencyCallUiEvent.SaveEditContact) },
                         negativeButtonEnabled = !state.isLoading,
                         positiveButtonEnabled = !state.isLoading && isUserInformationChanges
                     )
@@ -162,7 +162,7 @@
                             height = Dimension.wrapContent
                             centerTo(parent)
                         }, onDismiss = {
-                            event(AddEditContactUiEvent.DismissCameraDialog)
+                            event(EmergencyCallUiEvent.DismissCameraDialog)
                         })
                     }
 
@@ -176,7 +176,7 @@
                                 height = Dimension.wrapContent
                                 centerTo(parent)
                             }, onDismiss = {
-                                event(AddEditContactUiEvent.DismissFilesAndMediaDialog)
+                                event(EmergencyCallUiEvent.DismissFilesAndMediaDialog)
                             })
                     }
 
@@ -208,8 +208,8 @@
             bottomSheetScaffoldState = rememberModalBottomSheetState(
                 ModalBottomSheetValue.Expanded),
             event = {},
-            uiState = AddEditContactUiState(),
-            state = AddEditContactState(),
+            uiState = EmergencyCallUIState(),
+            state = EmergencyCallState(),
             photoUrl = PHILIPPINE_RED_CROSS_PHOTO)
     }
 }
@@ -223,8 +223,8 @@
             bottomSheetScaffoldState = rememberModalBottomSheetState(
                 ModalBottomSheetValue.Hidden),
             event = {},
-            uiState = AddEditContactUiState(),
-            state = AddEditContactState(),
+            uiState = EmergencyCallUIState(),
+            state = EmergencyCallState(),
             photoUrl = PHILIPPINE_RED_CROSS_PHOTO)
     }
 }
@@ -238,8 +238,8 @@
             bottomSheetScaffoldState = rememberModalBottomSheetState(
                 ModalBottomSheetValue.Expanded),
             event = {},
-            uiState = AddEditContactUiState(),
-            state = AddEditContactState(), photoUrl = PHILIPPINE_RED_CROSS_PHOTO)
+            uiState = EmergencyCallUIState(),
+            state = EmergencyCallState(), photoUrl = PHILIPPINE_RED_CROSS_PHOTO)
     }
 }
 
