Index: app/src/main/res/drawable/ic_mailbox_light.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_mailbox_light.xml b/app/src/main/res/drawable/ic_mailbox_light.xml
new file mode 100644
--- /dev/null	(date 1687945529743)
+++ b/app/src/main/res/drawable/ic_mailbox_light.xml	(date 1687945529743)
@@ -0,0 +1,42 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="100dp"
+    android:height="100dp"
+    android:viewportWidth="100"
+    android:viewportHeight="100">
+  <group>
+    <clip-path android:pathData="M0,0h100v100h-100z" />
+    <path
+        android:fillColor="#DEDEDE"
+        android:pathData="M29.39,98.96C30.99,97.37 31.97,94.87 31.71,92.43C31.46,89.99 29.87,87.75 27.82,87.24C25.76,86.72 23.42,88.15 22.8,90.5C22.45,85.98 22.06,81.27 20,77.42C18.14,73.93 14.91,71.44 11.42,70.99C7.92,70.55 4.24,72.23 2.06,75.46C-0.12,78.68 -0.66,83.37 0.87,87.07C2,89.79 4.07,91.82 6.24,93.47C13.26,98.76 21.68,100.91 29.94,99.53" />
+    <path
+        android:fillColor="#ffffff"
+        android:pathData="M5.52,72.33C8.4,75.07 11.05,78.14 13.42,81.49C17.13,86.72 20.13,92.58 22.32,98.87C22.48,99.32 21.84,99.52 21.68,99.07C20.29,95.09 18.57,91.29 16.54,87.7C13.38,82.11 9.5,77.1 5.05,72.87C4.72,72.56 5.19,72.01 5.52,72.33Z" />
+    <path
+        android:fillColor="#DEDEDE"
+        android:pathData="M30.5,98.96C28.89,97.37 27.92,94.87 28.17,92.43C28.43,89.99 30.01,87.75 32.07,87.24C34.12,86.72 36.46,88.15 37.09,90.5C37.43,85.98 37.83,81.27 39.88,77.42C41.74,73.93 44.97,71.44 48.47,70.99C51.96,70.55 55.65,72.23 57.83,75.46C60.01,78.68 60.54,83.37 59.01,87.07C57.89,89.79 55.82,91.82 53.64,93.47C46.63,98.76 38.21,100.91 29.94,99.53" />
+    <path
+        android:fillColor="#ffffff"
+        android:pathData="M54.37,72.33C51.48,75.07 48.84,78.14 46.47,81.49C42.76,86.72 39.76,92.58 37.57,98.87C37.41,99.32 38.04,99.52 38.2,99.07C41.78,88.85 47.5,79.84 54.83,72.87C55.16,72.56 54.69,72.01 54.37,72.33Z" />
+    <path
+        android:fillColor="#F2F2F2"
+        android:pathData="M35.26,44.99C38.23,44.99 40.64,42.17 40.64,38.7C40.64,35.23 38.23,32.42 35.26,32.42C32.29,32.42 29.88,35.23 29.88,38.7C29.88,42.17 32.29,44.99 35.26,44.99Z" />
+    <path
+        android:fillColor="#F2F2F2"
+        android:pathData="M18.68,17.05H55.73V19.42H23.41C21.51,19.42 19.63,19.85 17.87,20.7C16.12,21.55 14.52,22.8 13.18,24.37C11.83,25.94 10.77,27.8 10.04,29.85C9.31,31.9 8.94,34.1 8.94,36.32V63.22H4.89C4.71,63.22 4.54,63.14 4.41,62.99C4.28,62.84 4.21,62.64 4.21,62.43V33.95C4.21,31.73 4.59,29.53 5.31,27.48C6.04,25.43 7.11,23.57 8.45,22C9.79,20.43 11.39,19.18 13.14,18.34C14.9,17.49 16.78,17.05 18.68,17.05Z" />
+    <path
+        android:fillColor="#FFC269"
+        android:pathData="M25.81,99.09V63.12H34.83V99.09C34.83,99.33 34.74,99.56 34.6,99.73C34.45,99.9 34.25,100 34.05,100H26.59C26.38,100 26.18,99.9 26.04,99.73C25.89,99.56 25.81,99.33 25.81,99.09Z" />
+    <path
+        android:fillColor="#3F3D56"
+        android:pathData="M2.3,62.41V33.16C2.31,28.51 3.89,24.04 6.71,20.75C9.53,17.46 13.35,15.61 17.34,15.6H55.56V63.42H3.17C2.94,63.42 2.72,63.32 2.56,63.13C2.39,62.94 2.3,62.68 2.3,62.41ZM55.21,16.01H17.34C13.44,16.01 9.71,17.82 6.96,21.04C4.2,24.25 2.65,28.62 2.65,33.16V62.41C2.65,62.57 2.7,62.73 2.8,62.84C2.9,62.95 3.03,63.02 3.17,63.02H55.21V16.01Z" />
+    <path
+        android:fillColor="#FF9200"
+        android:pathData="M35.26,41.95C34.43,41.94 33.64,41.56 33.05,40.88C32.47,40.19 32.14,39.26 32.14,38.3V12.16C32.14,12 32.08,11.84 31.98,11.73C31.89,11.61 31.75,11.55 31.62,11.55H19.47C19.24,11.55 19.02,11.44 18.86,11.25C18.7,11.06 18.61,10.81 18.61,10.54V1.01C18.61,0.74 18.7,0.49 18.86,0.3C19.02,0.11 19.24,0 19.47,0H37.51C37.74,0 37.97,0.11 38.13,0.3C38.29,0.49 38.38,0.74 38.38,1.01V38.3C38.38,39.26 38.05,40.19 37.47,40.88C36.88,41.56 36.09,41.94 35.26,41.95Z" />
+    <path
+        android:fillColor="#FFC269"
+        android:pathData="M56.94,15.2C59.56,15.19 62.07,16.4 63.93,18.56C65.78,20.71 66.83,23.64 66.83,26.7V59.99H86.26C87.04,59.99 87.79,60.35 88.34,61C88.89,61.64 89.21,62.51 89.21,63.42H47.06V26.7C47.06,23.64 48.11,20.71 49.96,18.56C51.82,16.4 54.33,15.19 56.94,15.2Z" />
+    <path
+        android:fillColor="#ffffff"
+        android:pathData="M35.26,39.72C35.93,39.72 36.48,39.08 36.48,38.3C36.48,37.51 35.93,36.88 35.26,36.88C34.59,36.88 34.05,37.51 34.05,38.3C34.05,39.08 34.59,39.72 35.26,39.72Z" />
+  </group>
+</vector>
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\n  <component name=\"GradleSettings\">\n    <option name=\"linkedExternalProjectsSettings\">\n      <GradleProjectSettings>\n        <option name=\"testRunner\" value=\"GRADLE\" />\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\n        <option name=\"gradleJvm\" value=\"Embedded JDK\" />\n        <option name=\"modules\">\n          <set>\n            <option value=\"$PROJECT_DIR$\" />\n            <option value=\"$PROJECT_DIR$/app\" />\n          </set>\n        </option>\n      </GradleProjectSettings>\n    </option>\n    <option name=\"offlineMode\" value=\"true\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/gradle.xml b/.idea/gradle.xml
--- a/.idea/gradle.xml	(revision 79c7b2c192d648ba3f45170eea2fea048d5d255b)
+++ b/.idea/gradle.xml	(date 1687945009936)
@@ -16,6 +16,5 @@
         </option>
       </GradleProjectSettings>
     </option>
-    <option name="offlineMode" value="true" />
   </component>
 </project>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_mailbox_dark.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_mailbox_dark.xml b/app/src/main/res/drawable/ic_mailbox_dark.xml
new file mode 100644
--- /dev/null	(date 1687945529736)
+++ b/app/src/main/res/drawable/ic_mailbox_dark.xml	(date 1687945529736)
@@ -0,0 +1,42 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="100dp"
+    android:height="100dp"
+    android:viewportWidth="100"
+    android:viewportHeight="100">
+  <group>
+    <clip-path android:pathData="M0,0h100v100h-100z" />
+    <path
+        android:fillColor="#F2F2F2"
+        android:pathData="M29.39,98.96C30.99,97.37 31.97,94.87 31.71,92.43C31.46,89.99 29.87,87.75 27.82,87.24C25.76,86.72 23.42,88.15 22.8,90.5C22.45,85.98 22.06,81.27 20,77.42C18.14,73.93 14.91,71.44 11.42,70.99C7.92,70.55 4.24,72.23 2.06,75.46C-0.12,78.68 -0.66,83.37 0.87,87.07C2,89.79 4.07,91.82 6.24,93.47C13.26,98.76 21.68,100.91 29.94,99.53" />
+    <path
+        android:fillColor="#ffffff"
+        android:pathData="M5.52,72.33C8.4,75.07 11.05,78.14 13.42,81.49C17.13,86.72 20.13,92.58 22.32,98.87C22.48,99.32 21.84,99.52 21.68,99.07C20.29,95.09 18.57,91.29 16.54,87.7C13.38,82.11 9.5,77.1 5.05,72.87C4.72,72.56 5.19,72.01 5.52,72.33Z" />
+    <path
+        android:fillColor="#F2F2F2"
+        android:pathData="M30.5,98.96C28.89,97.37 27.92,94.87 28.17,92.43C28.43,89.99 30.01,87.75 32.07,87.24C34.12,86.72 36.46,88.15 37.09,90.5C37.43,85.98 37.83,81.27 39.88,77.42C41.74,73.93 44.97,71.44 48.47,70.99C51.96,70.55 55.65,72.23 57.83,75.46C60.01,78.68 60.54,83.37 59.01,87.07C57.89,89.79 55.82,91.82 53.64,93.47C46.63,98.76 38.21,100.91 29.94,99.53" />
+    <path
+        android:fillColor="#ffffff"
+        android:pathData="M54.37,72.33C51.48,75.07 48.84,78.14 46.47,81.49C42.76,86.72 39.76,92.58 37.57,98.87C37.41,99.32 38.04,99.52 38.2,99.07C41.78,88.85 47.5,79.84 54.83,72.87C55.16,72.56 54.69,72.01 54.37,72.33Z" />
+    <path
+        android:fillColor="#F2F2F2"
+        android:pathData="M35.26,44.99C38.23,44.99 40.64,42.17 40.64,38.7C40.64,35.23 38.23,32.42 35.26,32.42C32.29,32.42 29.88,35.23 29.88,38.7C29.88,42.17 32.29,44.99 35.26,44.99Z" />
+    <path
+        android:fillColor="#F2F2F2"
+        android:pathData="M18.68,17.05H55.73V19.42H23.41C21.51,19.42 19.63,19.85 17.87,20.7C16.12,21.55 14.52,22.8 13.18,24.37C11.83,25.94 10.77,27.8 10.04,29.85C9.31,31.9 8.94,34.1 8.94,36.32V63.22H4.89C4.71,63.22 4.54,63.14 4.41,62.99C4.28,62.84 4.21,62.64 4.21,62.43V33.95C4.21,31.73 4.59,29.53 5.31,27.48C6.04,25.43 7.11,23.57 8.45,22C9.79,20.43 11.39,19.18 13.14,18.34C14.9,17.49 16.78,17.05 18.68,17.05Z" />
+    <path
+        android:fillColor="#FFC269"
+        android:pathData="M25.81,99.09V63.12H34.83V99.09C34.83,99.33 34.74,99.56 34.6,99.73C34.45,99.9 34.25,100 34.05,100H26.59C26.38,100 26.18,99.9 26.04,99.73C25.89,99.56 25.81,99.33 25.81,99.09Z" />
+    <path
+        android:fillColor="#3F3D56"
+        android:pathData="M2.3,62.41V33.16C2.31,28.51 3.89,24.04 6.71,20.75C9.53,17.46 13.35,15.61 17.34,15.6H55.56V63.42H3.17C2.94,63.42 2.72,63.32 2.56,63.13C2.39,62.94 2.3,62.68 2.3,62.41ZM55.21,16.01H17.34C13.44,16.01 9.71,17.82 6.96,21.04C4.2,24.25 2.65,28.62 2.65,33.16V62.41C2.65,62.57 2.7,62.73 2.8,62.84C2.9,62.95 3.03,63.02 3.17,63.02H55.21V16.01Z" />
+    <path
+        android:fillColor="#FF9200"
+        android:pathData="M35.26,41.95C34.43,41.94 33.64,41.56 33.05,40.88C32.47,40.19 32.14,39.26 32.14,38.3V12.16C32.14,12 32.08,11.84 31.98,11.73C31.89,11.61 31.75,11.55 31.62,11.55H19.47C19.24,11.55 19.02,11.44 18.86,11.25C18.7,11.06 18.61,10.81 18.61,10.54V1.01C18.61,0.74 18.7,0.49 18.86,0.3C19.02,0.11 19.24,0 19.47,0H37.51C37.74,0 37.97,0.11 38.13,0.3C38.29,0.49 38.38,0.74 38.38,1.01V38.3C38.38,39.26 38.05,40.19 37.47,40.88C36.88,41.56 36.09,41.94 35.26,41.95Z" />
+    <path
+        android:fillColor="#FFC269"
+        android:pathData="M56.94,15.2C59.56,15.19 62.07,16.4 63.93,18.56C65.78,20.71 66.83,23.64 66.83,26.7V59.99H86.26C87.04,59.99 87.79,60.35 88.34,61C88.89,61.64 89.21,62.51 89.21,63.42H47.06V26.7C47.06,23.64 48.11,20.71 49.96,18.56C51.82,16.4 54.33,15.19 56.94,15.2Z" />
+    <path
+        android:fillColor="#ffffff"
+        android:pathData="M35.26,39.72C35.93,39.72 36.48,39.08 36.48,38.3C36.48,37.51 35.93,36.88 35.26,36.88C34.59,36.88 34.05,37.51 34.05,38.3C34.05,39.08 34.59,39.72 35.26,39.72Z" />
+  </group>
+</vector>
Index: app/src/main/java/com/example/cyclistance/feature_message/presentation/components/MessagingConversation.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>    package com.example.cyclistance.feature_message.presentation.components\n\nimport androidx.activity.compose.BackHandler\nimport androidx.compose.animation.AnimatedVisibility\nimport androidx.compose.foundation.layout.Arrangement\nimport androidx.compose.foundation.layout.Box\nimport androidx.compose.foundation.layout.Column\nimport androidx.compose.foundation.layout.PaddingValues\nimport androidx.compose.foundation.layout.absoluteOffset\nimport androidx.compose.foundation.layout.fillMaxSize\nimport androidx.compose.foundation.layout.fillMaxWidth\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.foundation.layout.wrapContentHeight\nimport androidx.compose.foundation.lazy.LazyColumn\nimport androidx.compose.foundation.lazy.itemsIndexed\nimport androidx.compose.foundation.lazy.rememberLazyListState\nimport androidx.compose.material.MaterialTheme\nimport androidx.compose.material.Surface\nimport androidx.compose.runtime.Composable\nimport androidx.compose.runtime.CompositionLocalProvider\nimport androidx.compose.runtime.LaunchedEffect\nimport androidx.compose.runtime.derivedStateOf\nimport androidx.compose.runtime.getValue\nimport androidx.compose.runtime.mutableIntStateOf\nimport androidx.compose.runtime.mutableStateOf\nimport androidx.compose.runtime.remember\nimport androidx.compose.runtime.rememberCoroutineScope\nimport androidx.compose.runtime.saveable.rememberSaveable\nimport androidx.compose.runtime.setValue\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.platform.LocalContext\nimport androidx.compose.ui.platform.LocalFocusManager\nimport androidx.compose.ui.text.input.TextFieldValue\nimport androidx.compose.ui.tooling.preview.Preview\nimport androidx.compose.ui.unit.dp\nimport com.example.cyclistance.core.utils.composable_utils.Keyboard\nimport com.example.cyclistance.core.utils.composable_utils.keyboardAsState\nimport com.example.cyclistance.core.utils.composable_utils.noRippleClickable\nimport com.example.cyclistance.feature_authentication.domain.util.findActivity\nimport com.example.cyclistance.feature_message.domain.model.ui.Duration\nimport com.example.cyclistance.feature_message.domain.model.ui.MessageContent\nimport com.example.cyclistance.feature_message.domain.model.ui.MessageConversation\nimport com.example.cyclistance.navigation.IsDarkTheme\nimport com.example.cyclistance.theme.CyclistanceTheme\nimport kotlinx.coroutines.launch\n\nprivate val USER_ID = \"1\"\nprivate val conversation = MessageConversation(\n    messages = listOf(\n        MessageContent(\n            messageId = \"12\",\n            senderId = \"1\",\n            recipientId = \"2\",\n            content = \"Hello\",\n            dateSent = \"10:30 AM\",\n            duration = Duration.OneDay,\n\n            ),\n        MessageContent(\n            messageId = \"13\",\n            senderId = \"2\",\n            recipientId = \"1\",\n            content = \"How are you?\",\n            dateSent = \"11:32 AM\"\n        ),\n        MessageContent(\n            messageId = \"14\",\n            senderId = \"1\",\n            recipientId = \"2\",\n            content = \"I'm fine, thanks\",\n            dateSent = \"11:35 AM\"\n        ),\n        MessageContent(\n            messageId = \"15\",\n            senderId = \"1\",\n            recipientId = \"2\",\n            content = \"How about you?\",\n            dateSent = \"FEB 13 12:12 AM\",\n            duration = Duration.OneMonth\n        ),\n        MessageContent(\n            messageId = \"16\",\n            senderId = \"2\",\n            recipientId = \"1\",\n            content = \"I'm fine too\",\n            dateSent = \"11:42 AM\",\n            duration = Duration.OneHour\n        ),\n        MessageContent(\n            messageId = \"17\",\n            senderId = \"1\",\n            recipientId = \"2\",\n            content = \"Good to hear that\",\n            dateSent = \"11:43 AM\"\n        ),\n        MessageContent(\n            messageId = \"18\",\n            senderId = \"2\",\n            recipientId = \"1\",\n            content = \"orem ipsum dolor sit amet consectetur adipisicing elit. Maxime mollitia,\\n\" +\n                      \"molestiae quas vel sint commodi repudiandae consequuntur voluptatum laborum\\n\" +\n                      \"numquam blanditiis harum quisquam eius sed odit fugiat iusto fuga praesentium\\n\" +\n                      \"optio, eaque rerum! Provident similique accusantium nemo autem.\",\n            dateSent = \"11:45 AM\"\n        ),\n        MessageContent(\n            messageId = \"19357846457\",\n            senderId = \"1\",\n            recipientId = \"2\",\n            content = \"Let's go for a ride?\",\n            dateSent = \"11:50 AM\"\n        ),\n        MessageContent(\n            messageId = \"23457570\",\n            senderId = \"2\",\n            recipientId = \"1\",\n            content = \"Sure\",\n            dateSent = \"11:55 AM\"\n        ),\n        MessageContent(\n            messageId = \"19\",\n            senderId = \"1\",\n            recipientId = \"2\",\n            content = \"Let's go for a ride?\",\n            dateSent = \"11:50 AM\"\n        ),\n        MessageContent(\n            messageId = \"23453450\",\n            senderId = \"2\",\n            recipientId = \"1\",\n            content = \"Sure\",\n            dateSent = \"11:55 AM\"\n        ),\n        MessageContent(\n            messageId = \"194533467\",\n            senderId = \"1\",\n            recipientId = \"2\",\n            content = \"Let's go for a ride?\",\n            dateSent = \"11:50 AM\"\n        ),\n        MessageContent(\n            messageId = \"203223\",\n            senderId = \"2\",\n            recipientId = \"1\",\n            content = \"Sure asdasdasd\",\n            dateSent = \"11:55 AM\"\n        ),\n        MessageContent(\n            messageId = \"18553\",\n            senderId = \"2\",\n            recipientId = \"1\",\n            content = \"orem ipsum dolor sit amet consectetur adipisicing elit. Maxime mollitia,\\n\" +\n                      \"molestiae quas vel sint commodi repudiandae consequuntur voluptatum laborum\\n\" +\n                      \"numquam blanditiis harum quisquam eius sed odit fugiat iusto fuga praesentium\\n\" +\n                      \"optio, eaque rerum! Provident similique accusantium nemo autem.\",\n            dateSent = \"11:45 AM\"\n        ),\n        MessageContent(\n            messageId = \"2546718\",\n            senderId = \"2\",\n            recipientId = \"1\",\n            content = \"orem ipsum dolor sit amet consectetur adipisicing elit. Maxime mollitia,\\n\" +\n                      \"molestiae quas vel sint commodi repudiandae consequuntur voluptatum laborum\\n\" +\n                      \"numquam blanditiis harum quisquam eius sed odit fugiat iusto fuga praesentium\\n\" +\n                      \"optio, eaque rerum! Provident similique accusantium nemo autem.\",\n            dateSent = \"11:45 AM\"\n        ),\n    )\n)\n\n\n@Composable\nfun MessagingConversation() {\n\n    var selectedIndex by rememberSaveable { mutableIntStateOf(-1) }\n    var message by rememberSaveable(stateSaver = TextFieldValue.Saver) {\n        mutableStateOf(\n            TextFieldValue(\"\"))\n    }\n    var messageAreaExpanded by rememberSaveable { mutableStateOf(false) }\n    val listState = rememberLazyListState(initialFirstVisibleItemIndex = conversation.messages.indices.last)\n    val focusManager = LocalFocusManager.current\n    val keyboardState by keyboardAsState()\n\n    val onToggleExpand = remember {\n        {\n            messageAreaExpanded = !messageAreaExpanded\n        }\n    }\n    val onChangeValueMessage = remember<(TextFieldValue) -> Unit> {\n        {\n            message = it\n        }\n    }\n\n    val resetSelectedIndex = remember {\n        {\n            selectedIndex = -1\n        }\n    }\n\n    val scope = rememberCoroutineScope()\n    val context = LocalContext.current\n    val onClickChatItem = remember {\n        { index: Int ->\n            selectedIndex = if (selectedIndex == index) {\n                -1\n            } else {\n                index\n            }\n        }\n    }\n    val stateFirstVisibleItemIndex by remember { derivedStateOf { listState.firstVisibleItemIndex } }\n    var farthestVisibleItemIndex by rememberSaveable { mutableIntStateOf(0) }\n    val isScrollingUp by remember { derivedStateOf { farthestVisibleItemIndex > stateFirstVisibleItemIndex + 3 } }\n\n    LaunchedEffect(key1 = listState.isScrollInProgress) {\n        if (stateFirstVisibleItemIndex > farthestVisibleItemIndex) {\n            farthestVisibleItemIndex = stateFirstVisibleItemIndex\n        }\n    }\n\n    LaunchedEffect(key1 = keyboardState) {\n        if (keyboardState == Keyboard.Opened) {\n            return@LaunchedEffect\n        }\n        if (!messageAreaExpanded) {\n            return@LaunchedEffect\n        }\n        onToggleExpand()\n\n    }\n\n    BackHandler(enabled = true, onBack = {\n        if (messageAreaExpanded) {\n            onToggleExpand()\n        } else {\n            scope.launch {\n                context.findActivity()?.finish()\n            }\n        }\n    })\n\n\n    Surface(\n        modifier = Modifier\n            .fillMaxSize()\n            .noRippleClickable {\n                resetSelectedIndex()\n                if (messageAreaExpanded) {\n                    onToggleExpand()\n                }\n                focusManager.clearFocus()\n            },\n        color = MaterialTheme.colors.background) {\n\n        Box(modifier = Modifier.fillMaxSize(), contentAlignment = Alignment.BottomCenter) {\n\n            Column(\n                modifier = Modifier.fillMaxSize()) {\n\n                LazyColumn(\n                    state = listState,\n                    verticalArrangement = Arrangement.Top,\n                    horizontalAlignment = Alignment.CenterHorizontally,\n                    modifier = Modifier.weight(1f),\n                    contentPadding = PaddingValues(top = 16.dp, bottom = 24.dp)\n                ) {\n\n                    itemsIndexed(\n                        items = conversation.messages,\n                        key = { _, item -> item.messageId }) { index, message ->\n\n                        val isSender by remember { derivedStateOf { message.senderId != USER_ID } }\n                        val timeStampAvailable by remember { derivedStateOf { message.duration != null && message.dateSent != null } }\n\n                        AnimatedVisibility(visible = timeStampAvailable) {\n\n                            MessagingTimeStamp(\n                                value = message.dateSent!!,\n                                modifier = Modifier\n                                    .fillMaxWidth()\n                                    .padding(vertical = 8.dp))\n                        }\n\n\n                        ChatItem(\n                            message = message,\n                            isSender = isSender,\n                            modifier = Modifier\n                                .fillMaxWidth()\n                                .padding(vertical = 8.dp, horizontal = 6.dp),\n                            contentAlignment = if (isSender) Alignment.CenterStart else Alignment.CenterEnd,\n                            currentIndex = index,\n                            selectedIndex = selectedIndex,\n                            onClick = onClickChatItem\n                        )\n                    }\n\n                }\n\n                MessagingTextArea(\n                    message = message,\n                    onValueChange = { onChangeValueMessage(it) },\n                    modifier = Modifier.wrapContentHeight(),\n                    onClickSend = {},\n                    onToggleExpand = onToggleExpand,\n                    isExpanded = messageAreaExpanded)\n\n            }\n\n            ScrollToBottomButton(\n                modifier = Modifier.absoluteOffset(y = (-85).dp),\n                isVisible = isScrollingUp,\n                onClick = {\n                    scope.launch {\n                        listState.animateScrollToItem(index = conversation.messages.indices.last)\n                    }\n                })\n\n        }\n    }\n\n}\n\n\n@Preview\n@Composable\nfun PreviewMessagingConversationContentDark() {\n    CompositionLocalProvider(IsDarkTheme provides true) {\n        CyclistanceTheme(darkTheme = true) {\n            MessagingConversation()\n        }\n    }\n}\n\n@Preview\n@Composable\nfun PreviewMessagingConversationContentLight() {\n    CompositionLocalProvider(IsDarkTheme provides false) {\n        CyclistanceTheme(darkTheme = false) {\n            MessagingConversation()\n        }\n    }\n}\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_message/presentation/components/MessagingConversation.kt b/app/src/main/java/com/example/cyclistance/feature_message/presentation/components/MessagingConversation.kt
--- a/app/src/main/java/com/example/cyclistance/feature_message/presentation/components/MessagingConversation.kt	(revision 79c7b2c192d648ba3f45170eea2fea048d5d255b)
+++ b/app/src/main/java/com/example/cyclistance/feature_message/presentation/components/MessagingConversation.kt	(date 1687945432117)
@@ -1,7 +1,8 @@
-    package com.example.cyclistance.feature_message.presentation.components
+package com.example.cyclistance.feature_message.presentation.components
 
 import androidx.activity.compose.BackHandler
 import androidx.compose.animation.AnimatedVisibility
+import androidx.compose.foundation.background
 import androidx.compose.foundation.layout.Arrangement
 import androidx.compose.foundation.layout.Box
 import androidx.compose.foundation.layout.Column
@@ -14,8 +15,10 @@
 import androidx.compose.foundation.lazy.LazyColumn
 import androidx.compose.foundation.lazy.itemsIndexed
 import androidx.compose.foundation.lazy.rememberLazyListState
+import androidx.compose.material.Icon
 import androidx.compose.material.MaterialTheme
 import androidx.compose.material.Surface
+import androidx.compose.material.Text
 import androidx.compose.runtime.Composable
 import androidx.compose.runtime.CompositionLocalProvider
 import androidx.compose.runtime.LaunchedEffect
@@ -29,11 +32,14 @@
 import androidx.compose.runtime.setValue
 import androidx.compose.ui.Alignment
 import androidx.compose.ui.Modifier
+import androidx.compose.ui.graphics.Color
 import androidx.compose.ui.platform.LocalContext
 import androidx.compose.ui.platform.LocalFocusManager
+import androidx.compose.ui.res.painterResource
 import androidx.compose.ui.text.input.TextFieldValue
 import androidx.compose.ui.tooling.preview.Preview
 import androidx.compose.ui.unit.dp
+import com.example.cyclistance.R
 import com.example.cyclistance.core.utils.composable_utils.Keyboard
 import com.example.cyclistance.core.utils.composable_utils.keyboardAsState
 import com.example.cyclistance.core.utils.composable_utils.noRippleClickable
@@ -42,6 +48,7 @@
 import com.example.cyclistance.feature_message.domain.model.ui.MessageContent
 import com.example.cyclistance.feature_message.domain.model.ui.MessageConversation
 import com.example.cyclistance.navigation.IsDarkTheme
+import com.example.cyclistance.theme.Black500
 import com.example.cyclistance.theme.CyclistanceTheme
 import kotlinx.coroutines.launch
 
@@ -171,7 +178,7 @@
 
 
 @Composable
-fun MessagingConversation() {
+fun MessagingConversation(modifier: Modifier = Modifier, conversation: MessageConversation) {
 
     var selectedIndex by rememberSaveable { mutableIntStateOf(-1) }
     var message by rememberSaveable(stateSaver = TextFieldValue.Saver) {
@@ -179,7 +186,11 @@
             TextFieldValue(""))
     }
     var messageAreaExpanded by rememberSaveable { mutableStateOf(false) }
-    val listState = rememberLazyListState(initialFirstVisibleItemIndex = conversation.messages.indices.last)
+    val conversationAvailable by remember(conversation) {
+        derivedStateOf { conversation.messages.isNotEmpty() }
+    }
+    val listState =
+        rememberLazyListState(initialFirstVisibleItemIndex = conversation.messages.indices.last)
     val focusManager = LocalFocusManager.current
     val keyboardState by keyboardAsState()
 
@@ -244,7 +255,7 @@
 
 
     Surface(
-        modifier = Modifier
+        modifier = modifier
             .fillMaxSize()
             .noRippleClickable {
                 resetSelectedIndex()
@@ -255,74 +266,117 @@
             },
         color = MaterialTheme.colors.background) {
 
-        Box(modifier = Modifier.fillMaxSize(), contentAlignment = Alignment.BottomCenter) {
+        Box(
+            modifier = Modifier.fillMaxSize(),
+            contentAlignment = if (conversationAvailable) Alignment.BottomCenter else Alignment.Center) {
+
+            if (!conversationAvailable) {
+                PlaceholderEmptyConversation()
+            } else {
 
-            Column(
-                modifier = Modifier.fillMaxSize()) {
+                Column(
+                    modifier = Modifier.fillMaxSize()) {
 
-                LazyColumn(
-                    state = listState,
-                    verticalArrangement = Arrangement.Top,
-                    horizontalAlignment = Alignment.CenterHorizontally,
-                    modifier = Modifier.weight(1f),
-                    contentPadding = PaddingValues(top = 16.dp, bottom = 24.dp)
-                ) {
+                    LazyColumn(
+                        state = listState,
+                        verticalArrangement = Arrangement.Top,
+                        horizontalAlignment = Alignment.CenterHorizontally,
+                        modifier = Modifier.weight(1f),
+                        contentPadding = PaddingValues(top = 16.dp, bottom = 24.dp)
+                    ) {
 
-                    itemsIndexed(
-                        items = conversation.messages,
-                        key = { _, item -> item.messageId }) { index, message ->
+                        itemsIndexed(
+                            items = conversation.messages,
+                            key = { _, item -> item.messageId }) { index, message ->
 
-                        val isSender by remember { derivedStateOf { message.senderId != USER_ID } }
-                        val timeStampAvailable by remember { derivedStateOf { message.duration != null && message.dateSent != null } }
+                            val isSender by remember { derivedStateOf { message.senderId != USER_ID } }
+                            val timeStampAvailable by remember { derivedStateOf { message.duration != null && message.dateSent != null } }
 
-                        AnimatedVisibility(visible = timeStampAvailable) {
+                            AnimatedVisibility(visible = timeStampAvailable) {
 
-                            MessagingTimeStamp(
-                                value = message.dateSent!!,
-                                modifier = Modifier
-                                    .fillMaxWidth()
-                                    .padding(vertical = 8.dp))
-                        }
+                                MessagingTimeStamp(
+                                    value = message.dateSent!!,
+                                    modifier = Modifier
+                                        .fillMaxWidth()
+                                        .padding(vertical = 8.dp))
+                            }
 
 
-                        ChatItem(
-                            message = message,
-                            isSender = isSender,
-                            modifier = Modifier
-                                .fillMaxWidth()
-                                .padding(vertical = 8.dp, horizontal = 6.dp),
-                            contentAlignment = if (isSender) Alignment.CenterStart else Alignment.CenterEnd,
-                            currentIndex = index,
-                            selectedIndex = selectedIndex,
-                            onClick = onClickChatItem
-                        )
-                    }
+                            ChatItem(
+                                message = message,
+                                isSender = isSender,
+                                modifier = Modifier
+                                    .fillMaxWidth()
+                                    .padding(vertical = 8.dp, horizontal = 6.dp),
+                                contentAlignment = if (isSender) Alignment.CenterStart else Alignment.CenterEnd,
+                                currentIndex = index,
+                                selectedIndex = selectedIndex,
+                                onClick = onClickChatItem
+                            )
+                        }
 
-                }
+                    }
 
-                MessagingTextArea(
-                    message = message,
-                    onValueChange = { onChangeValueMessage(it) },
-                    modifier = Modifier.wrapContentHeight(),
-                    onClickSend = {},
-                    onToggleExpand = onToggleExpand,
-                    isExpanded = messageAreaExpanded)
+                    MessagingTextArea(
+                        message = message,
+                        onValueChange = { onChangeValueMessage(it) },
+                        modifier = Modifier.wrapContentHeight(),
+                        onClickSend = {},
+                        onToggleExpand = onToggleExpand,
+                        isExpanded = messageAreaExpanded)
 
-            }
+                }
 
-            ScrollToBottomButton(
-                modifier = Modifier.absoluteOffset(y = (-85).dp),
-                isVisible = isScrollingUp,
-                onClick = {
-                    scope.launch {
-                        listState.animateScrollToItem(index = conversation.messages.indices.last)
-                    }
-                })
+                ScrollToBottomButton(
+                    modifier = Modifier.absoluteOffset(y = (-85).dp),
+                    isVisible = isScrollingUp,
+                    onClick = {
+                        scope.launch {
+                            listState.animateScrollToItem(index = conversation.messages.indices.last)
+                        }
+                    })
 
-        }
-    }
+            }
+        }
 
+    }
 }
+
+
+@Composable
+fun PlaceholderEmptyConversation() {
+    val isDarkTheme = IsDarkTheme.current
+    Column(
+        verticalArrangement = Arrangement.spacedBy(4.dp, alignment = Alignment.CenterVertically),
+        horizontalAlignment = Alignment.CenterHorizontally) {
+        Text(
+            text = "No messages here yet...",
+            color = Black500,
+            style = MaterialTheme.typography.subtitle1,
+            modifier = Modifier.padding(all = 4.dp)
+        )
+
+        Icon(
+            painter = painterResource(id = if (isDarkTheme) R.drawable.ic_mailbox_dark else R.drawable.ic_mailbox_light),
+            contentDescription = "No Conversation Available",
+            tint = Color.Unspecified
+        )
+
+
+    }
+}
+
+@Preview
+@Composable
+fun PreviewPlaceholderEmptyConversation() {
+    CompositionLocalProvider(IsDarkTheme provides false) {
+        CyclistanceTheme(darkTheme = false) {
+            Box(modifier = Modifier.background(MaterialTheme.colors.background)) {
+                PlaceholderEmptyConversation()
+            }
+        }
+    }
+}
 
 
 @Preview
@@ -330,7 +384,7 @@
 fun PreviewMessagingConversationContentDark() {
     CompositionLocalProvider(IsDarkTheme provides true) {
         CyclistanceTheme(darkTheme = true) {
-            MessagingConversation()
+            MessagingConversation(conversation = MessageConversation())
         }
     }
 }
@@ -340,7 +394,7 @@
 fun PreviewMessagingConversationContentLight() {
     CompositionLocalProvider(IsDarkTheme provides false) {
         CyclistanceTheme(darkTheme = false) {
-            MessagingConversation()
+            MessagingConversation(conversation = conversation)
         }
     }
 }
