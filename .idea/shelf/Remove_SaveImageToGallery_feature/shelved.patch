Index: app/src/main/java/com/example/cyclistance/core/utils/save_images/ImageUtils.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.core.utils.save_images\n\nimport android.content.Context\nimport android.graphics.Bitmap\nimport android.net.Uri\nimport android.provider.MediaStore\nimport timber.log.Timber\nimport java.io.ByteArrayOutputStream\nimport java.io.OutputStream\n\nobject ImageUtils {\n\n\n     fun saveImageToStream(bitmap: Bitmap, outputStream: OutputStream) {\n        runCatching {\n            bitmap.compress(Bitmap.CompressFormat.PNG, 100, outputStream)\n            outputStream.flush()\n            outputStream.close()\n        }.onFailure {\n            Timber.e(it.message)\n        }\n    }\n\n    fun Bitmap.toImageUri(inContext: Context): Uri? {\n        val bytes = ByteArrayOutputStream()\n        compress(Bitmap.CompressFormat.JPEG, 100, bytes)\n        val path = MediaStore.Images.Media.insertImage(inContext.contentResolver, this, \"CyclistanceImage\", null)\n        return Uri.parse(path)\n    }\n\n    fun Context.saveImageToGallery(\n        bitmap: Bitmap,\n        imageSaver: ImageSaver = ImageSaverFactory().create(this),\n    ): Uri? {\n        return imageSaver.saveImage(bitmap)\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/core/utils/save_images/ImageUtils.kt b/app/src/main/java/com/example/cyclistance/core/utils/save_images/ImageUtils.kt
--- a/app/src/main/java/com/example/cyclistance/core/utils/save_images/ImageUtils.kt	(revision eca498fe54b0d0e16ddf02ce5f3f38246121e7f0)
+++ b/app/src/main/java/com/example/cyclistance/core/utils/save_images/ImageUtils.kt	(date 1685447979817)
@@ -28,11 +28,5 @@
         return Uri.parse(path)
     }
 
-    fun Context.saveImageToGallery(
-        bitmap: Bitmap,
-        imageSaver: ImageSaver = ImageSaverFactory().create(this),
-    ): Uri? {
-        return imageSaver.saveImage(bitmap)
-    }
 
 }
\ No newline at end of file
Index: app/src/main/java/com/example/cyclistance/core/utils/save_images/ImageSaver.kt
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/core/utils/save_images/ImageSaver.kt b/app/src/main/java/com/example/cyclistance/core/utils/save_images/ImageSaver.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/cyclistance/core/utils/save_images/ImageSaver.kt	(revision eca498fe54b0d0e16ddf02ce5f3f38246121e7f0)
+++ /dev/null	(revision eca498fe54b0d0e16ddf02ce5f3f38246121e7f0)
@@ -1,8 +0,0 @@
-package com.example.cyclistance.core.utils.save_images
-
-import android.graphics.Bitmap
-import android.net.Uri
-
-interface ImageSaver {
-    fun saveImage(bitmap: Bitmap): Uri?
-}
\ No newline at end of file
Index: app/src/main/java/com/example/cyclistance/core/utils/save_images/ImageSaverFactory.kt
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/core/utils/save_images/ImageSaverFactory.kt b/app/src/main/java/com/example/cyclistance/core/utils/save_images/ImageSaverFactory.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/cyclistance/core/utils/save_images/ImageSaverFactory.kt	(revision eca498fe54b0d0e16ddf02ce5f3f38246121e7f0)
+++ /dev/null	(revision eca498fe54b0d0e16ddf02ce5f3f38246121e7f0)
@@ -1,14 +0,0 @@
-package com.example.cyclistance.core.utils.save_images
-
-import android.content.Context
-import android.os.Build
-
-class ImageSaverFactory {
-    fun create(context: Context): ImageSaver {
-        return if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {
-            ModernImageSaver(context)
-        } else {
-            LegacyImageSaver(context)
-        }
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/example/cyclistance/core/utils/save_images/LegacyImageSaver.kt
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/core/utils/save_images/LegacyImageSaver.kt b/app/src/main/java/com/example/cyclistance/core/utils/save_images/LegacyImageSaver.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/cyclistance/core/utils/save_images/LegacyImageSaver.kt	(revision eca498fe54b0d0e16ddf02ce5f3f38246121e7f0)
+++ /dev/null	(revision eca498fe54b0d0e16ddf02ce5f3f38246121e7f0)
@@ -1,33 +0,0 @@
-package com.example.cyclistance.core.utils.save_images
-
-import android.content.Context
-import android.graphics.Bitmap
-import android.media.MediaScannerConnection
-import android.net.Uri
-import android.os.Environment
-import androidx.core.content.FileProvider
-import com.example.cyclistance.BuildConfig
-import com.example.cyclistance.core.utils.save_images.ImageUtils.saveImageToStream
-import java.io.File
-import java.io.FileOutputStream
-
-class LegacyImageSaver(private val context: Context) : ImageSaver {
-    override fun saveImage(bitmap: Bitmap): Uri? {
-        val fileName = System.currentTimeMillis().toString() + ".png"
-        val directory = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES)
-        val file = File(directory, fileName)
-        val outStream = FileOutputStream(file)
-        saveImageToStream(bitmap, outStream)
-        MediaScannerConnection.scanFile(
-            context,
-            arrayOf(file.absolutePath),
-            null,
-            null
-        )
-        return FileProvider.getUriForFile(
-            context,
-            "${BuildConfig.APPLICATION_ID}.provider",
-            file
-        )
-    }
-}
Index: app/src/main/java/com/example/cyclistance/core/utils/save_images/ModernImageSaver.kt
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/core/utils/save_images/ModernImageSaver.kt b/app/src/main/java/com/example/cyclistance/core/utils/save_images/ModernImageSaver.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/cyclistance/core/utils/save_images/ModernImageSaver.kt	(revision eca498fe54b0d0e16ddf02ce5f3f38246121e7f0)
+++ /dev/null	(revision eca498fe54b0d0e16ddf02ce5f3f38246121e7f0)
@@ -1,37 +0,0 @@
-package com.example.cyclistance.core.utils.save_images
-
-import android.content.ContentValues
-import android.content.Context
-import android.graphics.Bitmap
-import android.media.MediaCodec
-import android.net.Uri
-import android.provider.MediaStore
-import com.example.cyclistance.core.utils.constants.SettingConstants
-
-
-class ModernImageSaver(private val context: Context):ImageSaver {
-    override fun saveImage(bitmap: Bitmap): Uri? {
-        val contentValues = getContentValues()
-        return context.contentResolver.insert(
-            MediaStore.Images.Media.EXTERNAL_CONTENT_URI,
-            contentValues
-        )?.also { uri ->
-            context.contentResolver.openOutputStream(uri)?.let { outputStream ->
-                ImageUtils.saveImageToStream(bitmap, outputStream)
-                contentValues.put(MediaStore.Images.Media.IS_PENDING, false)
-                context.contentResolver.update(uri, contentValues, null, null)
-            }
-        }
-    }
-
-    private fun getContentValues(): ContentValues {
-        return ContentValues().apply{
-            put(MediaCodec.MetricsConstants.MIME_TYPE, "image/png")
-            put(MediaStore.MediaColumns.DATE_ADDED, System.currentTimeMillis() / 1000)
-            put(MediaStore.MediaColumns.DATE_TAKEN, System.currentTimeMillis())
-            put(MediaStore.MediaColumns.RELATIVE_PATH, "Pictures/${SettingConstants.FOLDER_NAME}")
-            put(MediaStore.MediaColumns.IS_PENDING, true)
-        }
-    }
-
-}
\ No newline at end of file
Index: app/src/androidTest/java/com/example/cyclistance/ImageSaverTest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance\n\nimport android.app.Application\nimport android.content.Context\nimport android.graphics.Bitmap\nimport androidx.test.platform.app.InstrumentationRegistry\nimport androidx.test.runner.AndroidJUnitRunner\nimport com.example.cyclistance.core.utils.save_images.ImageUtils.saveImageToGallery\nimport dagger.hilt.android.testing.HiltTestApplication\nimport junit.framework.TestCase.assertNotNull\nimport org.junit.Before\nimport org.junit.Test\n\nclass ImageSaverTest: AndroidJUnitRunner() {\n    private lateinit var context: Context\n\n    @Before\n    fun setup() {\n        context = InstrumentationRegistry.getInstrumentation().targetContext\n    }\n\n    @Test\n    fun testSaveImage() {\n        val bitmap = Bitmap.createBitmap(100, 100, Bitmap.Config.ARGB_8888)\n        val uri = context.saveImageToGallery(bitmap)\n        assertNotNull(uri)\n    }\n    override fun newApplication(\n        cl: ClassLoader?,\n        className: String?,\n        context: Context?): Application {\n        return super.newApplication(cl, HiltTestApplication::class.java.name, context)\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/androidTest/java/com/example/cyclistance/ImageSaverTest.kt b/app/src/androidTest/java/com/example/cyclistance/ImageSaverTest.kt
--- a/app/src/androidTest/java/com/example/cyclistance/ImageSaverTest.kt	(revision eca498fe54b0d0e16ddf02ce5f3f38246121e7f0)
+++ b/app/src/androidTest/java/com/example/cyclistance/ImageSaverTest.kt	(date 1685444784387)
@@ -2,14 +2,10 @@
 
 import android.app.Application
 import android.content.Context
-import android.graphics.Bitmap
 import androidx.test.platform.app.InstrumentationRegistry
 import androidx.test.runner.AndroidJUnitRunner
-import com.example.cyclistance.core.utils.save_images.ImageUtils.saveImageToGallery
 import dagger.hilt.android.testing.HiltTestApplication
-import junit.framework.TestCase.assertNotNull
 import org.junit.Before
-import org.junit.Test
 
 class ImageSaverTest: AndroidJUnitRunner() {
     private lateinit var context: Context
@@ -19,12 +15,7 @@
         context = InstrumentationRegistry.getInstrumentation().targetContext
     }
 
-    @Test
-    fun testSaveImage() {
-        val bitmap = Bitmap.createBitmap(100, 100, Bitmap.Config.ARGB_8888)
-        val uri = context.saveImageToGallery(bitmap)
-        assertNotNull(uri)
-    }
+
     override fun newApplication(
         cl: ClassLoader?,
         className: String?,
