Index: app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_rescue_details/components/RescueDetailsScreenContent.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_mapping.presentation.mapping_rescue_details.components\n\nimport androidx.compose.foundation.Image\nimport androidx.compose.foundation.layout.Arrangement\nimport androidx.compose.foundation.layout.fillMaxSize\nimport androidx.compose.foundation.layout.fillMaxWidth\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.foundation.lazy.LazyColumn\nimport androidx.compose.foundation.shape.RoundedCornerShape\nimport androidx.compose.material.Button\nimport androidx.compose.material.Divider\nimport androidx.compose.material.MaterialTheme\nimport androidx.compose.material.Scaffold\nimport androidx.compose.material.Surface\nimport androidx.compose.material.Text\nimport androidx.compose.material.icons.Icons\nimport androidx.compose.material.icons.filled.Close\nimport androidx.compose.runtime.Composable\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.res.painterResource\nimport androidx.compose.ui.tooling.preview.Preview\nimport androidx.compose.ui.unit.dp\nimport com.example.cyclistance.R\nimport com.example.cyclistance.core.utils.constants.MappingConstants\nimport com.example.cyclistance.core.utils.formatter.IconFormatter.rescueDescriptionToIcon\nimport com.example.cyclistance.feature_mapping.domain.model.ui.rescue_details.RescueDetailsModel\nimport com.example.cyclistance.theme.Black500\nimport com.example.cyclistance.theme.CyclistanceTheme\nimport com.example.cyclistance.top_bars.TitleTopAppBar\nimport com.example.cyclistance.top_bars.TopAppBarCreator\n\n@Composable\nfun RescueDetailsScreenContent(\n    modifier: Modifier = Modifier,\n    rescueDetailsModel: RescueDetailsModel = RescueDetailsModel()) {\n\n    Scaffold(modifier = modifier, topBar = {\n        TopAppBarCreator(\n            icon = Icons.Default.Close,\n            onClickIcon = { },\n            topAppBarTitle = {\n                TitleTopAppBar(title = \"Rescue Request\")\n            })\n\n    }) { paddingValues ->\n\n        Surface(\n            modifier = Modifier\n                .fillMaxSize()\n                .padding(paddingValues),\n            color = MaterialTheme.colors.background) {\n            LazyColumn(\n                modifier = Modifier.padding(horizontal = 16.dp),\n                verticalArrangement = Arrangement.Top,\n                horizontalAlignment = Alignment.CenterHorizontally) {\n\n                item {\n                    Image(\n                        painter = painterResource(id = R.drawable.ic_rescue_details_like),\n                        contentDescription = \"Like Image\",\n                        modifier = Modifier.padding(top = 20.dp, bottom = 10.dp))\n\n                    Text(\n                        text = \"Thank you for your assistance!\",\n                        color = MaterialTheme.colors.onBackground,\n                        style = MaterialTheme.typography.subtitle2.copy(fontSize = MaterialTheme.typography.subtitle1.fontSize),\n                        modifier = Modifier.padding(all = 8.dp)\n                    )\n\n\n                    RatingCard(\n                        modifier = Modifier\n                            .fillMaxWidth()\n                            .padding(top = 12.dp),\n                        rating = rescueDetailsModel.rating,\n                        ratingText = rescueDetailsModel.ratingText,\n                    )\n\n                    RescueDescription(\n                        modifier = Modifier\n                            .fillMaxWidth()\n                            .padding(top = 12.dp),\n                        iconDescription = rescueDetailsModel.textDescription.rescueDescriptionToIcon(),\n                        textDescription = rescueDetailsModel.textDescription,\n                        bikeType = rescueDetailsModel.bikeType\n                    )\n\n                    RescueLocationDetails(\n                        modifier = Modifier.padding(vertical = 12.dp),\n                        date = rescueDetailsModel.date,\n                        startingTime = rescueDetailsModel.startingTime,\n                        endTime = rescueDetailsModel.endTime,\n                        startingAddress = rescueDetailsModel.startingAddress,\n                        destinationAddress = rescueDetailsModel.destinationAddress\n                    )\n\n\n\n                    Divider(\n                        modifier = Modifier\n                            .fillMaxWidth()\n                            .padding(vertical = 12.dp),\n                        color = Black500,\n                        thickness = 1.5.dp\n                    )\n\n                    RescueStats(\n                        modifier = Modifier\n                            .fillMaxWidth()\n                            .padding(top = 16.dp),\n                        duration = rescueDetailsModel.duration,\n                        distance = rescueDetailsModel.distance,\n                        maxSpeed = rescueDetailsModel.maxSpeed\n                    )\n\n                    Button(\n                        onClick = {},\n                        modifier = Modifier.padding(top = 22.dp, bottom = 16.dp),\n                        shape = RoundedCornerShape(12.dp)) {\n                        Text(\n                            text = \"Okay\",\n                            modifier = Modifier.padding(vertical = 2.dp, horizontal = 22.dp))\n                    }\n\n                }\n\n            }\n        }\n    }\n}\n\n\n@Preview(device = \"id:Galaxy Nexus\")\n@Composable\nfun PreviewRescueDetailsDark() {\n    CyclistanceTheme(darkTheme = true) {\n        RescueDetailsScreenContent(\n            rescueDetailsModel = RescueDetailsModel(\n                rating = 4.5,\n                ratingText = \"Very good\",\n                textDescription = \"Injury\",\n                bikeType = \"Mountain Bike\",\n                date = \"12/12/2020\",\n                startingTime = \"12:00\",\n                endTime = \"13:00\",\n                startingAddress = \"Via Roma 1, Milano\",\n                destinationAddress = \"Via Roma 2, Milano\",\n                duration = \"1h 30m\",\n                distance = \"10 km\",\n                maxSpeed = \"30 km/h\",\n            ))\n    }\n}\n\n@Preview(device = \"id:Galaxy Nexus\")\n@Composable\nfun PreviewRescueDetailsLight() {\n    CyclistanceTheme(darkTheme = false) {\n        RescueDetailsScreenContent(\n            rescueDetailsModel = RescueDetailsModel(\n                rating = 4.5,\n                ratingText = \"Very good\",\n                textDescription = MappingConstants.INJURY_TEXT,\n                bikeType = \"Mountain Bike\",\n                date = \"12/12/2020\",\n                startingTime = \"12:00\",\n                endTime = \"13:00\",\n                startingAddress = \"Via Roma 1, Milano\",\n                destinationAddress = \"Via Roma 2, Milano\",\n                duration = \"1h 30m\",\n                distance = \"10 km\",\n                maxSpeed = \"30 km/h\",\n\n                ),\n\n            )\n    }\n}\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_rescue_details/components/RescueDetailsScreenContent.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_rescue_details/components/RescueDetailsScreenContent.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_rescue_details/components/RescueDetailsScreenContent.kt	(revision 3d1909063d268dd328351c4975e73fc7b8f64670)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_rescue_details/components/RescueDetailsScreenContent.kt	(date 1694878237501)
@@ -10,11 +10,8 @@
 import androidx.compose.material.Button
 import androidx.compose.material.Divider
 import androidx.compose.material.MaterialTheme
-import androidx.compose.material.Scaffold
 import androidx.compose.material.Surface
 import androidx.compose.material.Text
-import androidx.compose.material.icons.Icons
-import androidx.compose.material.icons.filled.Close
 import androidx.compose.runtime.Composable
 import androidx.compose.ui.Alignment
 import androidx.compose.ui.Modifier
@@ -27,106 +24,94 @@
 import com.example.cyclistance.feature_mapping.domain.model.ui.rescue_details.RescueDetailsModel
 import com.example.cyclistance.theme.Black500
 import com.example.cyclistance.theme.CyclistanceTheme
-import com.example.cyclistance.top_bars.TitleTopAppBar
-import com.example.cyclistance.top_bars.TopAppBarCreator
 
 @Composable
 fun RescueDetailsScreenContent(
     modifier: Modifier = Modifier,
     rescueDetailsModel: RescueDetailsModel = RescueDetailsModel()) {
 
-    Scaffold(modifier = modifier, topBar = {
-        TopAppBarCreator(
-            icon = Icons.Default.Close,
-            onClickIcon = { },
-            topAppBarTitle = {
-                TitleTopAppBar(title = "Rescue Request")
-            })
-
-    }) { paddingValues ->
 
-        Surface(
-            modifier = Modifier
-                .fillMaxSize()
-                .padding(paddingValues),
-            color = MaterialTheme.colors.background) {
-            LazyColumn(
-                modifier = Modifier.padding(horizontal = 16.dp),
-                verticalArrangement = Arrangement.Top,
-                horizontalAlignment = Alignment.CenterHorizontally) {
+    Surface(
+        modifier = modifier
+            .fillMaxSize(),
+        color = MaterialTheme.colors.background) {
+        LazyColumn(
+            modifier = Modifier.padding(horizontal = 16.dp),
+            verticalArrangement = Arrangement.Top,
+            horizontalAlignment = Alignment.CenterHorizontally) {
 
-                item {
-                    Image(
-                        painter = painterResource(id = R.drawable.ic_rescue_details_like),
-                        contentDescription = "Like Image",
-                        modifier = Modifier.padding(top = 20.dp, bottom = 10.dp))
+            item {
+                Image(
+                    painter = painterResource(id = R.drawable.ic_rescue_details_like),
+                    contentDescription = "Like Image",
+                    modifier = Modifier.padding(top = 20.dp, bottom = 10.dp))
 
-                    Text(
-                        text = "Thank you for your assistance!",
-                        color = MaterialTheme.colors.onBackground,
-                        style = MaterialTheme.typography.subtitle2.copy(fontSize = MaterialTheme.typography.subtitle1.fontSize),
-                        modifier = Modifier.padding(all = 8.dp)
-                    )
+                Text(
+                    text = "Thank you for your assistance!",
+                    color = MaterialTheme.colors.onBackground,
+                    style = MaterialTheme.typography.subtitle2.copy(fontSize = MaterialTheme.typography.subtitle1.fontSize),
+                    modifier = Modifier.padding(all = 8.dp)
+                )
 
 
-                    RatingCard(
-                        modifier = Modifier
-                            .fillMaxWidth()
-                            .padding(top = 12.dp),
-                        rating = rescueDetailsModel.rating,
-                        ratingText = rescueDetailsModel.ratingText,
-                    )
+                RatingCard(
+                    modifier = Modifier
+                        .fillMaxWidth()
+                        .padding(top = 12.dp),
+                    rating = rescueDetailsModel.rating,
+                    ratingText = rescueDetailsModel.ratingText,
+                )
 
-                    RescueDescription(
-                        modifier = Modifier
-                            .fillMaxWidth()
-                            .padding(top = 12.dp),
-                        iconDescription = rescueDetailsModel.textDescription.rescueDescriptionToIcon(),
-                        textDescription = rescueDetailsModel.textDescription,
-                        bikeType = rescueDetailsModel.bikeType
-                    )
+                RescueDescription(
+                    modifier = Modifier
+                        .fillMaxWidth()
+                        .padding(top = 12.dp),
+                    iconDescription = rescueDetailsModel.textDescription.rescueDescriptionToIcon(),
+                    textDescription = rescueDetailsModel.textDescription,
+                    bikeType = rescueDetailsModel.bikeType
+                )
 
-                    RescueLocationDetails(
-                        modifier = Modifier.padding(vertical = 12.dp),
-                        date = rescueDetailsModel.date,
-                        startingTime = rescueDetailsModel.startingTime,
-                        endTime = rescueDetailsModel.endTime,
-                        startingAddress = rescueDetailsModel.startingAddress,
-                        destinationAddress = rescueDetailsModel.destinationAddress
-                    )
+                RescueLocationDetails(
+                    modifier = Modifier.padding(vertical = 12.dp),
+                    date = rescueDetailsModel.date,
+                    startingTime = rescueDetailsModel.startingTime,
+                    endTime = rescueDetailsModel.endTime,
+                    startingAddress = rescueDetailsModel.startingAddress,
+                    destinationAddress = rescueDetailsModel.destinationAddress
+                )
 
 
 
-                    Divider(
-                        modifier = Modifier
-                            .fillMaxWidth()
-                            .padding(vertical = 12.dp),
-                        color = Black500,
-                        thickness = 1.5.dp
-                    )
+                Divider(
+                    modifier = Modifier
+                        .fillMaxWidth()
+                        .padding(vertical = 12.dp),
+                    color = Black500,
+                    thickness = 1.5.dp
+                )
 
-                    RescueStats(
-                        modifier = Modifier
-                            .fillMaxWidth()
-                            .padding(top = 16.dp),
-                        duration = rescueDetailsModel.duration,
-                        distance = rescueDetailsModel.distance,
-                        maxSpeed = rescueDetailsModel.maxSpeed
-                    )
+                RescueStats(
+                    modifier = Modifier
+                        .fillMaxWidth()
+                        .padding(top = 16.dp),
+                    duration = rescueDetailsModel.duration,
+                    distance = rescueDetailsModel.distance,
+                    maxSpeed = rescueDetailsModel.maxSpeed
+                )
 
-                    Button(
-                        onClick = {},
-                        modifier = Modifier.padding(top = 22.dp, bottom = 16.dp),
-                        shape = RoundedCornerShape(12.dp)) {
-                        Text(
-                            text = "Okay",
-                            modifier = Modifier.padding(vertical = 2.dp, horizontal = 22.dp))
-                    }
+                Button(
+                    onClick = {},
+                    modifier = Modifier.padding(top = 22.dp, bottom = 16.dp),
+                    shape = RoundedCornerShape(12.dp)) {
+                    Text(
+                        text = "Okay",
+                        modifier = Modifier.padding(vertical = 2.dp, horizontal = 22.dp))
+                }
 
-                }
+            }
 
-            }
         }
+
     }
 }
 
Index: app/src/main/java/com/example/cyclistance/navigation/components/TopAppBar.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.navigation.components\n\nimport androidx.compose.animation.AnimatedVisibility\nimport androidx.compose.animation.animateContentSize\nimport androidx.compose.animation.core.Spring\nimport androidx.compose.animation.core.spring\nimport androidx.compose.animation.core.tween\nimport androidx.compose.animation.fadeIn\nimport androidx.compose.animation.fadeOut\nimport androidx.compose.foundation.layout.Arrangement\nimport androidx.compose.foundation.layout.Row\nimport androidx.compose.foundation.layout.fillMaxWidth\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.foundation.layout.size\nimport androidx.compose.foundation.layout.wrapContentSize\nimport androidx.compose.foundation.shape.CircleShape\nimport androidx.compose.material.Icon\nimport androidx.compose.material.IconButton\nimport androidx.compose.material.MaterialTheme\nimport androidx.compose.material.Surface\nimport androidx.compose.material.icons.Icons\nimport androidx.compose.material.icons.filled.ArrowBack\nimport androidx.compose.material.icons.filled.Close\nimport androidx.compose.material.icons.filled.Search\nimport androidx.compose.runtime.Composable\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.draw.clip\nimport androidx.compose.ui.tooling.preview.Preview\nimport androidx.compose.ui.unit.dp\nimport com.example.cyclistance.feature_messaging.presentation.common.MessageUserImage\nimport com.example.cyclistance.navigation.Screens\nimport com.example.cyclistance.navigation.state.NavUiState\nimport com.example.cyclistance.theme.CyclistanceTheme\nimport com.example.cyclistance.top_bars.DefaultTopBar\nimport com.example.cyclistance.top_bars.TitleTopAppBar\nimport com.example.cyclistance.top_bars.TopAppBarCreator\n\n@Composable\nfun TopAppBar(\n    onClickArrowBackIcon: () -> Unit = {},\n    onClickMenuIcon: () -> Unit = {},\n    onClickSearchMessagingUser: () -> Unit = {},\n    uiState: NavUiState,\n    route: String?) {\n\n    when (route) {\n\n        Screens.MappingNavigation.Mapping.screenRoute -> {\n            AnimatedVisibility(\n                visible = uiState.isNavigating.not(),\n                enter = fadeIn(initialAlpha = 0.4f, animationSpec = tween(durationMillis = 10000)),\n                exit = fadeOut(animationSpec = tween(durationMillis = 10000))) {\n\n                DefaultTopBar(onClickIcon = onClickMenuIcon)\n            }\n        }\n\n        Screens.MappingNavigation.Cancellation.screenRoute -> {\n            TopAppBarCreator(\n                icon = Icons.Default.ArrowBack,\n                onClickIcon = onClickArrowBackIcon,\n                topAppBarTitle = {\n                    TitleTopAppBar(title = \"Cancellation Reason\")\n                })\n        }\n\n        Screens.MappingNavigation.ConfirmDetails.screenRoute -> {\n            TopAppBarCreator(\n                icon = Icons.Default.ArrowBack,\n                onClickIcon = onClickArrowBackIcon,\n                topAppBarTitle = {\n                    TitleTopAppBar(\n                        title = \"Confirmation Details\")\n                })\n        }\n\n\n        Screens.AuthenticationNavigation.ResetPassword.screenRoute -> {\n            TopAppBarCreator(\n                icon = Icons.Default.ArrowBack,\n                onClickIcon = onClickArrowBackIcon,\n                topAppBarTitle = {\n                    TitleTopAppBar(title = \"Reset Password\")\n                })\n        }\n\n        Screens.UserProfileNavigation.EditProfile.screenRoute -> {\n            TopAppBarCreator(\n                icon = Icons.Default.ArrowBack,\n                onClickIcon = onClickArrowBackIcon,\n                topAppBarTitle = {\n                    TitleTopAppBar(title = \"Edit Profile\")\n                })\n        }\n\n        Screens.SettingsNavigation.Setting.screenRoute -> {\n            TopAppBarCreator(\n                icon = Icons.Default.ArrowBack,\n                onClickIcon = onClickArrowBackIcon,\n                topAppBarTitle = {\n                    TitleTopAppBar(title = \"Settings\")\n                })\n        }\n\n        Screens.EmergencyCallNavigation.EmergencyCall.screenRoute -> {\n\n            TopAppBarCreator(\n                icon = Icons.Default.ArrowBack,\n                onClickIcon = onClickArrowBackIcon,\n                topAppBarTitle = {\n                    TitleTopAppBar(title = \"Emergency Call\")\n                })\n        }\n\n        Screens.MessagingNavigation.Chats.screenRoute -> {\n\n            TopAppBarCreator(\n                icon = Icons.Default.ArrowBack,\n                onClickIcon = onClickArrowBackIcon,\n                topAppBarTitle = {\n                    Row(\n                        modifier = Modifier.fillMaxWidth(),\n                        verticalAlignment = Alignment.CenterVertically,\n                        horizontalArrangement = Arrangement.SpaceBetween) {\n\n                        TitleTopAppBar(title = \"Chats\")\n                        IconButton(onClick = onClickSearchMessagingUser) {\n                            Icon(\n                                imageVector = Icons.Default.Search,\n                                contentDescription = \"Search\",\n                                tint = MaterialTheme.colors.onBackground,\n                            )\n                        }\n                    }\n                })\n        }\n\n\n        Screens.MessagingNavigation.Conversation.screenRoute -> {\n            TopAppBarCreator(\n                icon = Icons.Default.Close,\n                onClickIcon = onClickArrowBackIcon,\n                topAppBarTitle = {\n\n                    Row(\n                        modifier = Modifier.wrapContentSize().padding(vertical = 4.dp),\n                        verticalAlignment = Alignment.CenterVertically,\n                        horizontalArrangement = Arrangement.spacedBy(5.dp)) {\n\n                        MessageUserImage(\n                            modifier = Modifier\n                                .clip(CircleShape)\n                                .size(48.dp),\n                            isOnline = if(!uiState.internetAvailable) null else uiState.conversationAvailability,\n                            photoUrl = uiState.conversationPhotoUrl)\n\n                        TitleTopAppBar(\n                            title = uiState.conversationName,\n                            modifier = Modifier\n                                .padding(start = 5.dp)\n                                .animateContentSize(animationSpec = spring(stiffness = Spring.StiffnessLow)))\n\n                    }\n                })\n        }\n\n        Screens.RideHistoryNavigation.RideHistory.screenRoute -> {\n            TopAppBarCreator(\n                icon = Icons.Default.ArrowBack,\n                onClickIcon = onClickArrowBackIcon,\n                topAppBarTitle = {\n                    TitleTopAppBar(title = \"Ride History\")\n                })\n        }\n\n        Screens.RideHistoryNavigation.RideHistoryDetails.screenRoute -> {\n            TopAppBarCreator(\n                icon = Icons.Default.Close,\n                onClickIcon = onClickArrowBackIcon,\n                topAppBarTitle = {\n                    TitleTopAppBar(title = \"Rescue Details\")\n                })\n        }\n\n        Screens.UserProfileNavigation.UserProfile.screenRoute -> {\n            TopAppBarCreator(\n                icon = Icons.Default.Close,\n                onClickIcon = onClickArrowBackIcon,\n                topAppBarTitle = {\n                    TitleTopAppBar(title = \"User Profile\")\n                })\n        }\n\n        Screens.ReportAccountNavigation.ReportAccount.screenRoute -> {\n            TopAppBarCreator(\n                icon = Icons.Default.Close,\n                onClickIcon = onClickArrowBackIcon,\n                topAppBarTitle = {\n                    TitleTopAppBar(title = \"Report Account\")\n                })\n\n        }\n\n\n    }\n\n}\n\n\n@Preview\n@Composable\nfun PreviewTopAppBarDark() {\n    CyclistanceTheme(true) {\n        Surface(color = MaterialTheme.colors.background) {\n            TopAppBar(\n                route = Screens.UserProfileNavigation.EditProfile.screenRoute,\n                uiState = NavUiState(isNavigating = false))\n        }\n    }\n}\n\n\n@Preview\n@Composable\nfun PreviewTopAppBarLight() {\n    CyclistanceTheme(false) {\n        Surface(color = MaterialTheme.colors.background) {\n            TopAppBar(\n                route = Screens.UserProfileNavigation.EditProfile.screenRoute,\n                uiState = NavUiState(isNavigating = false))\n        }\n    }\n}\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/navigation/components/TopAppBar.kt b/app/src/main/java/com/example/cyclistance/navigation/components/TopAppBar.kt
--- a/app/src/main/java/com/example/cyclistance/navigation/components/TopAppBar.kt	(revision 3d1909063d268dd328351c4975e73fc7b8f64670)
+++ b/app/src/main/java/com/example/cyclistance/navigation/components/TopAppBar.kt	(date 1694878265308)
@@ -202,6 +202,16 @@
 
         }
 
+        Screens.MappingNavigation.RescueDetails.screenRoute -> {
+            TopAppBarCreator(
+                icon = Icons.Default.Close,
+                onClickIcon = onClickArrowBackIcon,
+                topAppBarTitle = {
+                    TitleTopAppBar(title = "Rescue Request")
+                })
+
+        }
+
 
     }
 
Index: app/src/main/java/com/example/cyclistance/feature_report_account/presentation/components/ReportAccountDialogContent.kt
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_report_account/presentation/components/ReportAccountDialogContent.kt b/app/src/main/java/com/example/cyclistance/feature_report_account/presentation/components/ReportAccountDialogContent.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/cyclistance/feature_report_account/presentation/components/ReportAccountDialogContent.kt	(revision 3d1909063d268dd328351c4975e73fc7b8f64670)
+++ /dev/null	(revision 3d1909063d268dd328351c4975e73fc7b8f64670)
@@ -1,237 +0,0 @@
-package com.example.cyclistance.feature_report_account.presentation.components
-
-import androidx.compose.animation.AnimatedVisibility
-import androidx.compose.animation.core.FastOutSlowInEasing
-import androidx.compose.animation.core.tween
-import androidx.compose.animation.fadeIn
-import androidx.compose.animation.fadeOut
-import androidx.compose.foundation.Image
-import androidx.compose.foundation.background
-import androidx.compose.foundation.layout.Column
-import androidx.compose.foundation.layout.fillMaxHeight
-import androidx.compose.foundation.layout.fillMaxSize
-import androidx.compose.foundation.layout.fillMaxWidth
-import androidx.compose.foundation.layout.padding
-import androidx.compose.foundation.rememberScrollState
-import androidx.compose.foundation.verticalScroll
-import androidx.compose.material.Divider
-import androidx.compose.material.MaterialTheme
-import androidx.compose.material.Scaffold
-import androidx.compose.material.Surface
-import androidx.compose.material.Text
-import androidx.compose.material.icons.Icons
-import androidx.compose.material.icons.filled.Close
-import androidx.compose.runtime.Composable
-import androidx.compose.runtime.derivedStateOf
-import androidx.compose.runtime.getValue
-import androidx.compose.runtime.remember
-import androidx.compose.ui.Modifier
-import androidx.compose.ui.layout.ContentScale
-import androidx.compose.ui.res.painterResource
-import androidx.compose.ui.text.input.TextFieldValue
-import androidx.compose.ui.tooling.preview.Preview
-import androidx.compose.ui.unit.dp
-import androidx.constraintlayout.compose.ConstraintLayout
-import androidx.constraintlayout.compose.Dimension
-import com.example.cyclistance.R
-import com.example.cyclistance.feature_mapping.presentation.common.AdditionalMessage
-import com.example.cyclistance.feature_mapping.presentation.common.ButtonNavigation
-import com.example.cyclistance.feature_report_account.presentation.event.ReportAccountUiEvent
-import com.example.cyclistance.feature_report_account.presentation.state.ReportAccountUiState
-import com.example.cyclistance.theme.Black500
-import com.example.cyclistance.theme.CyclistanceTheme
-import com.example.cyclistance.top_bars.TitleTopAppBar
-import com.example.cyclistance.top_bars.TopAppBarCreator
-
-
-private val reasonsToReportAccount = listOf(
-    "Misleading or Scam",
-    "Verbal Abuse",
-    "Sexualizing",
-    "Negative behavior",
-    "Pretending to be someone else",
-    "Violence",
-)
-
-@Composable
-fun ReportAccountDialogContent(
-    modifier: Modifier = Modifier,
-    message: TextFieldValue,
-    uiState: ReportAccountUiState,
-    event: (ReportAccountUiEvent) -> Unit
-) {
-
-    Scaffold(modifier = modifier, topBar = {
-        TopAppBarCreator(
-            icon = Icons.Default.Close,
-            onClickIcon = { },
-            topAppBarTitle = {
-                TitleTopAppBar(title = "Report Account")
-            })
-
-    }) { paddingValues ->
-
-        Surface(
-            modifier = modifier
-                .padding(paddingValues)
-                .fillMaxSize(),
-            color = MaterialTheme.colors.background
-        ) {
-
-
-            AnimatedVisibility(
-                visible = !uiState.shouldShowReportFeedback,
-                enter = fadeIn(
-                    animationSpec = tween(
-                        durationMillis = 1200,
-                        delayMillis = 250,
-                        easing = FastOutSlowInEasing
-                    )
-                ),
-                exit = fadeOut(),
-            ) {
-                ConstraintLayout(
-                    modifier = Modifier
-                        .fillMaxHeight()
-                        .verticalScroll(rememberScrollState())
-                        .fillMaxWidth(0.95f)
-                        .background(MaterialTheme.colors.background)
-                ) {
-
-                    val (image, text, divider, selections, comment, buttonNavButtonSection) = createRefs()
-
-                    Image(
-                        painter = painterResource(id = R.drawable.ic_report_account_dark),
-                        contentDescription = "Report Account",
-                        modifier = Modifier
-                            .padding(vertical = 16.dp)
-                            .constrainAs(image) {
-                                top.linkTo(parent.top)
-                                start.linkTo(parent.start)
-                                end.linkTo(parent.end)
-                                height = Dimension.wrapContent
-                                width = Dimension.percent(0.6f)
-                            },
-                        contentScale = ContentScale.Fit
-                    )
-
-                    Divider(
-                        color = Black500,
-                        thickness = (1).dp,
-                        modifier = Modifier
-                            .padding(vertical = 4.dp, horizontal = 16.dp)
-                            .constrainAs(divider) {
-                                top.linkTo(image.bottom)
-                                start.linkTo(parent.start)
-                                end.linkTo(parent.end)
-                            }
-                    )
-
-                    Text(
-                        text = "Select the reason for reporting this account",
-                        color = Black500,
-                        style = MaterialTheme.typography.caption,
-                        modifier = Modifier
-                            .padding(horizontal = 16.dp)
-                            .fillMaxWidth()
-                            .constrainAs(text) {
-                                top.linkTo(divider.bottom)
-                                start.linkTo(parent.start)
-                                end.linkTo(parent.end)
-
-                            }
-                    )
-
-                    Column(modifier = Modifier
-                        .padding(horizontal = 16.dp)
-                        .constrainAs(selections) {
-                            top.linkTo(text.bottom)
-                            start.linkTo(parent.start)
-                            end.linkTo(parent.end)
-                        }) {
-
-                        reasonsToReportAccount.forEach { reason ->
-                            val isChecked by remember(uiState.accountReport) { derivedStateOf { reason in uiState.accountReport.selectedOptions } }
-                            ReportReasonItem(
-                                label = reason,
-                                isChecked = isChecked,
-                                onReasonChecked = {
-
-                                    event(ReportAccountUiEvent.OnReasonChecked(reason = reason))
-
-                                })
-                        }
-                    }
-
-                    AdditionalMessage(
-                        modifier = Modifier
-                            .padding(horizontal = 16.dp)
-                            .constrainAs(comment) {
-                                top.linkTo(selections.bottom)
-                                start.linkTo(parent.start)
-                                end.linkTo(parent.end)
-                                height = Dimension.percent(0.23f)
-                                width = Dimension.matchParent
-                            },
-                        message = message,
-                        onChangeValueMessage = { event(ReportAccountUiEvent.OnChangeMessage(it)) },
-                        enabled = true,
-                        text = "Comment",
-                        placeholderText = "Comment (Optional)"
-                    )
-
-
-                    ButtonNavigation(
-                        modifier = Modifier.constrainAs(buttonNavButtonSection) {
-                            top.linkTo(comment.bottom, margin = 30.dp)
-                            start.linkTo(parent.start)
-                            end.linkTo(parent.end)
-                            bottom.linkTo(parent.bottom, margin = 30.dp)
-                            height = Dimension.wrapContent
-                            width = Dimension.percent(0.9f)
-                        },
-
-                        onClickNegativeButton = { event(ReportAccountUiEvent.DismissReportAccountDialog) },
-                        onClickPositiveButton = { event(ReportAccountUiEvent.ShowReportFeedback) },
-                        positiveButtonEnabled = uiState.isReportButtonEnabled
-                    )
-                }
-            }
-
-
-            AnimatedVisibility(
-                visible = uiState.shouldShowReportFeedback,
-                enter = fadeIn(
-                    animationSpec = tween(
-                        durationMillis = 1200,
-                        delayMillis = 250,
-                        easing = FastOutSlowInEasing
-                    )
-                ),
-                exit = fadeOut(),
-            ) {
-                ReportAccountFeedback(
-                    modifier = Modifier
-                        .fillMaxSize(),
-                    photo = uiState.reportedPhoto, name = uiState.reportedName,
-                    onClickOkayButton = { event(ReportAccountUiEvent.DismissReportAccountDialog) }
-                )
-
-            }
-
-        }
-
-    }
-}
-
-
-@Preview(device = "id:Galaxy Nexus")
-@Composable
-private fun PreviewReportAccountDialogContent() {
-    CyclistanceTheme(darkTheme = true) {
-        ReportAccountDialogContent(
-            message = TextFieldValue(),
-            uiState = ReportAccountUiState(),
-            event = {})
-    }
-}
\ No newline at end of file
