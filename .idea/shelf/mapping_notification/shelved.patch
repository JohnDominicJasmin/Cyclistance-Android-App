Index: app/src/main/java/com/example/cyclistance/di/mapping/MappingNotificationModule.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.di.mapping\n\nimport android.app.PendingIntent\nimport android.app.TaskStackBuilder\nimport android.content.Context\nimport android.content.Intent\nimport androidx.core.app.NotificationCompat\nimport androidx.core.net.toUri\nimport com.example.cyclistance.MainActivity\nimport com.example.cyclistance.R\nimport com.example.cyclistance.core.utils.constants.MappingConstants\nimport com.example.cyclistance.core.utils.constants.MappingConstants.RESCUE_NOTIFICATION_CHANNEL_ID\nimport dagger.Module\nimport dagger.Provides\nimport dagger.hilt.InstallIn\nimport dagger.hilt.android.qualifiers.ApplicationContext\nimport dagger.hilt.components.SingletonComponent\nimport javax.inject.Named\nimport javax.inject.Singleton\n\n\n@Module\n@InstallIn(SingletonComponent::class)\nobject MappingNotificationModule {\n\n    @Provides\n    @Singleton\n    @Named(\"rescueNotification\")\n    fun provideRescueNotification(\n        @ApplicationContext context: Context\n    ): NotificationCompat.Builder{\n\n        val clickIntent = Intent(context, MainActivity::class.java).apply {\n            flags = Intent.FLAG_ACTIVITY_CLEAR_TOP or Intent.FLAG_ACTIVITY_SINGLE_TOP\n            data = MappingConstants.MAPPING_URI.toUri() // Set the URI here\n        }\n\n        val clickPendingIntent: PendingIntent = TaskStackBuilder.create(context).run {\n            addNextIntentWithParentStack(clickIntent)\n            getPendingIntent(1, PendingIntent.FLAG_MUTABLE or PendingIntent.FLAG_UPDATE_CURRENT)\n        }\n\n        return lazy {\n            NotificationCompat.Builder(context, RESCUE_NOTIFICATION_CHANNEL_ID)\n                .setContentIntent(clickPendingIntent)\n                .setSmallIcon(R.drawable.ic_app_notification_icon)\n                .setOngoing(false)\n                .setVibrate(longArrayOf(200,200,200))\n                .setAutoCancel(true)\n                .setShowWhen(true)\n                .setPriority(NotificationCompat.PRIORITY_DEFAULT)\n        }.value\n    }\n\n\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/di/mapping/MappingNotificationModule.kt b/app/src/main/java/com/example/cyclistance/di/mapping/MappingNotificationModule.kt
--- a/app/src/main/java/com/example/cyclistance/di/mapping/MappingNotificationModule.kt	(revision c4b47c8ddeb9469067bbab5040fef3c4f7abf4e0)
+++ b/app/src/main/java/com/example/cyclistance/di/mapping/MappingNotificationModule.kt	(date 1696850674619)
@@ -1,14 +1,11 @@
 package com.example.cyclistance.di.mapping
 
 import android.app.PendingIntent
-import android.app.TaskStackBuilder
 import android.content.Context
 import android.content.Intent
 import androidx.core.app.NotificationCompat
-import androidx.core.net.toUri
 import com.example.cyclistance.MainActivity
 import com.example.cyclistance.R
-import com.example.cyclistance.core.utils.constants.MappingConstants
 import com.example.cyclistance.core.utils.constants.MappingConstants.RESCUE_NOTIFICATION_CHANNEL_ID
 import dagger.Module
 import dagger.Provides
@@ -31,18 +28,18 @@
     ): NotificationCompat.Builder{
 
         val clickIntent = Intent(context, MainActivity::class.java).apply {
-            flags = Intent.FLAG_ACTIVITY_CLEAR_TOP or Intent.FLAG_ACTIVITY_SINGLE_TOP
-            data = MappingConstants.MAPPING_URI.toUri() // Set the URI here
+            flags =
+                Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TOP or Intent.FLAG_ACTIVITY_SINGLE_TOP
         }
 
-        val clickPendingIntent: PendingIntent = TaskStackBuilder.create(context).run {
-            addNextIntentWithParentStack(clickIntent)
-            getPendingIntent(1, PendingIntent.FLAG_MUTABLE or PendingIntent.FLAG_UPDATE_CURRENT)
-        }
+        val contentIntent = PendingIntent.getActivity(
+            context, 0,
+            clickIntent,
+            PendingIntent.FLAG_UPDATE_CURRENT or PendingIntent.FLAG_IMMUTABLE)
 
         return lazy {
             NotificationCompat.Builder(context, RESCUE_NOTIFICATION_CHANNEL_ID)
-                .setContentIntent(clickPendingIntent)
+                .setContentIntent(contentIntent)
                 .setSmallIcon(R.drawable.ic_app_notification_icon)
                 .setOngoing(false)
                 .setVibrate(longArrayOf(200,200,200))
Index: app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/notification/ShowNotificationUseCase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_mapping.domain.use_case.notification\n\nimport android.annotation.SuppressLint\nimport androidx.core.app.NotificationCompat\nimport androidx.core.app.NotificationManagerCompat\nimport com.example.cyclistance.core.utils.constants.MappingConstants\n\nclass ShowNotificationUseCase(\n    private val notificationManagerCompat: NotificationManagerCompat,\n    private val notificationBuilder: NotificationCompat.Builder\n) {\n    @SuppressLint(\"MissingPermission\")\n    operator fun invoke(title: String, message: String){\n        val notificationStyle = NotificationCompat.BigTextStyle().bigText(message)\n        val notificationCompat = notificationBuilder.apply {\n            setContentTitle(title)\n            setContentText(message)\n            setStyle(notificationStyle)\n        }\n        notificationManagerCompat.notify(\n            MappingConstants.RESCUE_NOTIFICATION_ID,\n            notificationCompat.build())\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/notification/ShowNotificationUseCase.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/notification/ShowNotificationUseCase.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/notification/ShowNotificationUseCase.kt	(revision c4b47c8ddeb9469067bbab5040fef3c4f7abf4e0)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/domain/use_case/notification/ShowNotificationUseCase.kt	(date 1696850674609)
@@ -1,6 +1,7 @@
 package com.example.cyclistance.feature_mapping.domain.use_case.notification
 
 import android.annotation.SuppressLint
+import android.app.Notification
 import androidx.core.app.NotificationCompat
 import androidx.core.app.NotificationManagerCompat
 import com.example.cyclistance.core.utils.constants.MappingConstants
@@ -19,6 +20,7 @@
         }
         notificationManagerCompat.notify(
             MappingConstants.RESCUE_NOTIFICATION_ID,
-            notificationCompat.build())
+            notificationCompat.build().apply { flags =
+                Notification.FLAG_AUTO_CANCEL } )
     }
 }
\ No newline at end of file
