Index: app/src/main/java/com/example/cyclistance/feature_authentication/presentation/authentication_email/event/EmailUiEvent.kt
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_authentication/presentation/authentication_email/event/EmailUiEvent.kt b/app/src/main/java/com/example/cyclistance/feature_authentication/presentation/authentication_email/event/EmailUiEvent.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/cyclistance/feature_authentication/presentation/authentication_email/event/EmailUiEvent.kt	(revision 41703611b86f6bf1f783ffee3d1556f60da6950b)
+++ /dev/null	(revision 41703611b86f6bf1f783ffee3d1556f60da6950b)
@@ -1,8 +0,0 @@
-package com.example.cyclistance.feature_authentication.presentation.authentication_email.event
-
-sealed class EmailUiEvent{
-    object DismissAlertDialog: EmailUiEvent()
-    object VerifyEmail: EmailUiEvent()
-    object ResendEmail: EmailUiEvent()
-    object DismissNoInternetDialog: EmailUiEvent()
-}
Index: app/src/main/java/com/example/cyclistance/navigation/NavGraph.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.navigation\n\nimport MessagingConversationScreen\nimport androidx.compose.animation.core.tween\nimport androidx.compose.animation.fadeIn\nimport androidx.compose.animation.fadeOut\nimport androidx.compose.foundation.layout.PaddingValues\nimport androidx.compose.runtime.Composable\nimport androidx.navigation.NavController\nimport androidx.navigation.NavGraph.Companion.findStartDestination\nimport androidx.navigation.NavHostController\nimport androidx.navigation.NavType\nimport androidx.navigation.compose.NavHost\nimport androidx.navigation.compose.composable\nimport androidx.navigation.navArgument\nimport com.example.cyclistance.core.utils.constants.MappingConstants.SELECTION_RESCUEE_TYPE\nimport com.example.cyclistance.core.utils.constants.NavigationConstants.CANCELLATION_TYPE\nimport com.example.cyclistance.core.utils.constants.NavigationConstants.CLIENT_ID\nimport com.example.cyclistance.core.utils.constants.NavigationConstants.LATITUDE\nimport com.example.cyclistance.core.utils.constants.NavigationConstants.LONGITUDE\nimport com.example.cyclistance.core.utils.constants.NavigationConstants.TRANSACTION_ID\nimport com.example.cyclistance.feature_authentication.presentation.authentication_email.EmailAuthScreen\nimport com.example.cyclistance.feature_authentication.presentation.authentication_sign_in.SignInScreen\nimport com.example.cyclistance.feature_authentication.presentation.authentication_sign_up.SignUpScreen\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_add_edit_contact.EmergencyAddEditContactScreen\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.EmergencyCallScreen\nimport com.example.cyclistance.feature_intro_slider.presentation.IntroSliderScreen\nimport com.example.cyclistance.feature_mapping.presentation.mapping_cancellation_reason.CancellationReasonScreen\nimport com.example.cyclistance.feature_mapping.presentation.mapping_confirm_details.ConfirmDetailsScreen\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.MappingScreen\nimport com.example.cyclistance.feature_message.presentation.messaging_main_screen.MessagingScreen\nimport com.example.cyclistance.feature_settings.presentation.setting_change_password.ChangePasswordScreen\nimport com.example.cyclistance.feature_settings.presentation.setting_edit_profile.EditProfileScreen\nimport com.example.cyclistance.feature_settings.presentation.setting_screen.SettingScreen\nimport com.google.accompanist.permissions.ExperimentalPermissionsApi\n\n\n@ExperimentalPermissionsApi\n@Composable\nfun NavGraph(\n    hasInternetConnection: Boolean,\n    navController: NavHostController,\n    paddingValues: PaddingValues,\n    startingDestination: String,\n    isNavigating: Boolean,\n    onChangeNavigatingState: (isNavigating: Boolean) -> Unit,\n    onToggleTheme: () -> Unit) {\n\n    NavHost(\n        navController = navController,\n        startDestination = startingDestination,\n        enterTransition = {\n            fadeIn(\n                animationSpec = tween(\n                    durationMillis = 300))\n        },\n        exitTransition = {\n            fadeOut(\n                animationSpec = tween(\n                    durationMillis = 300))\n        }) {\n\n        composable(Screens.IntroSliderScreen.route) {\n            IntroSliderScreen(\n                navController = navController,\n                paddingValues = paddingValues)\n        }\n\n        composable(Screens.SignInScreen.route) {\n            SignInScreen(\n                navController = navController,\n                paddingValues = paddingValues)\n        }\n\n        composable(Screens.SignUpScreen.route) {\n            SignUpScreen(\n                navController = navController,\n                paddingValues = paddingValues)\n        }\n\n        composable(Screens.EmailAuthScreen.route) {\n            EmailAuthScreen(\n                navController = navController,\n                paddingValues = paddingValues)\n        }\n\n\n\n\n        composable(route = Screens.MappingScreen.route) {\n\n            MappingScreen(\n                hasInternetConnection = hasInternetConnection,\n                navController = navController,\n                paddingValues = paddingValues,\n                isNavigating = isNavigating,\n                onChangeNavigatingState = onChangeNavigatingState\n            )\n\n        }\n\n\n        composable(\n            route = \"${Screens.CancellationScreen.route}/{$CANCELLATION_TYPE}/{$TRANSACTION_ID}/{$CLIENT_ID}\",\n            arguments = listOf(\n                navArgument(CANCELLATION_TYPE) { defaultValue = SELECTION_RESCUEE_TYPE },\n                navArgument(TRANSACTION_ID) {},\n                navArgument(CLIENT_ID) {})) {\n\n            it.arguments?.getString(CANCELLATION_TYPE)?.let { cancellationType ->\n                CancellationReasonScreen(\n                    navController = navController,\n                    paddingValues = paddingValues,\n                    cancellationType = cancellationType)\n            }\n        }\n\n\n        composable(route = Screens.ConfirmDetailsScreen.route + \"?$LATITUDE={$LATITUDE}&$LONGITUDE={$LONGITUDE}\",\n            arguments = listOf(\n                navArgument(LATITUDE) { type = NavType.FloatType; defaultValue = -1f },\n                navArgument(LONGITUDE) { type = NavType.FloatType; defaultValue = -1f }\n            )) {\n\n            ConfirmDetailsScreen(\n                navController = navController,\n                paddingValues = paddingValues)\n\n        }\n\n\n        composable(Screens.ChangePasswordScreen.route) {\n            ChangePasswordScreen(paddingValues = paddingValues)\n        }\n\n        composable(Screens.EditProfileScreen.route) {\n            EditProfileScreen(\n                navController = navController,\n                paddingValues = paddingValues)\n        }\n\n        composable(Screens.SettingScreen.route) {\n            SettingScreen(\n                onToggleTheme = onToggleTheme,\n                navController = navController,\n                paddingValues = paddingValues)\n\n        }\n\n        composable(Screens.MessagingScreen.route) {\n            MessagingScreen(\n                navController = navController,\n                paddingValues = paddingValues\n            )\n        }\n\n        composable(Screens.MessagingConversationScreen.route) {\n            MessagingConversationScreen(\n                navController = navController,\n                paddingValues = paddingValues)\n        }\n\n        composable(Screens.EmergencyCallScreen.route) {\n            EmergencyCallScreen(\n                navController = navController, paddingValues = paddingValues\n            )\n        }\n\n        composable(Screens.EmergencyAddNewContact.route) {\n            EmergencyAddEditContactScreen(\n                navController = navController, paddingValues = paddingValues\n            )\n        }\n\n    }\n}\n\nfun NavController.navigateScreenInclusively(\n    destination: String,\n    popUpToDestination: String) {\n    navigate(destination) {\n        popUpTo(popUpToDestination) {\n            inclusive = true\n        }\n        launchSingleTop = true\n    }\n\n\n}\n\nfun NavController.navigateScreen(destination: String) {\n    navigate(destination) {\n        popUpTo(graph.findStartDestination().id) {\n            saveState = true\n        }\n        launchSingleTop = true\n        restoreState = true\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/navigation/NavGraph.kt b/app/src/main/java/com/example/cyclistance/navigation/NavGraph.kt
--- a/app/src/main/java/com/example/cyclistance/navigation/NavGraph.kt	(revision 41703611b86f6bf1f783ffee3d1556f60da6950b)
+++ b/app/src/main/java/com/example/cyclistance/navigation/NavGraph.kt	(date 1687700944674)
@@ -52,12 +52,12 @@
         enterTransition = {
             fadeIn(
                 animationSpec = tween(
-                    durationMillis = 300))
+                    durationMillis = 400))
         },
         exitTransition = {
             fadeOut(
                 animationSpec = tween(
-                    durationMillis = 300))
+                    durationMillis = 400))
         }) {
 
         composable(Screens.IntroSliderScreen.route) {
