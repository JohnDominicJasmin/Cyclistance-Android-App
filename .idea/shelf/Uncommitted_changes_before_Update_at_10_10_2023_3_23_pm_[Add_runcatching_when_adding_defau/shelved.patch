Index: app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/EmergencyCallViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen\r\n\r\nimport androidx.lifecycle.SavedStateHandle\r\nimport androidx.lifecycle.ViewModel\r\nimport androidx.lifecycle.viewModelScope\r\nimport com.example.cyclistance.core.utils.constants.EmergencyCallConstants.EMERGENCY_CALL_VM_STATE_KEY\r\nimport com.example.cyclistance.core.utils.constants.EmergencyCallConstants.NATIONAL_EMERGENCY\r\nimport com.example.cyclistance.core.utils.constants.EmergencyCallConstants.NATIONAL_EMERGENCY_NUMBER\r\nimport com.example.cyclistance.core.utils.constants.EmergencyCallConstants.NATIONAL_EMERGENCY_PHOTO\r\nimport com.example.cyclistance.core.utils.constants.EmergencyCallConstants.PHILIPPINE_RED_CROSS\r\nimport com.example.cyclistance.core.utils.constants.EmergencyCallConstants.PHILIPPINE_RED_CROSS_NUMBER\r\nimport com.example.cyclistance.core.utils.constants.EmergencyCallConstants.PHILIPPINE_RED_CROSS_PHOTO\r\nimport com.example.cyclistance.feature_emergency_call.domain.model.EmergencyContactModel\r\nimport com.example.cyclistance.feature_emergency_call.domain.use_case.EmergencyContactUseCase\r\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.event.EmergencyCallEvent\r\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.event.EmergencyCallVmEvent\r\nimport com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.state.EmergencyCallState\r\nimport dagger.hilt.android.lifecycle.HiltViewModel\r\nimport kotlinx.coroutines.flow.MutableSharedFlow\r\nimport kotlinx.coroutines.flow.MutableStateFlow\r\nimport kotlinx.coroutines.flow.asSharedFlow\r\nimport kotlinx.coroutines.flow.asStateFlow\r\nimport kotlinx.coroutines.flow.catch\r\nimport kotlinx.coroutines.flow.first\r\nimport kotlinx.coroutines.flow.launchIn\r\nimport kotlinx.coroutines.flow.onEach\r\nimport kotlinx.coroutines.flow.update\r\nimport kotlinx.coroutines.launch\r\nimport timber.log.Timber\r\nimport javax.inject.Inject\r\n\r\n@HiltViewModel\r\nclass EmergencyCallViewModel @Inject constructor(\r\n    private val emergencyCallUseCase: EmergencyContactUseCase,\r\n    private val savedStateHandle: SavedStateHandle,\r\n) : ViewModel() {\r\n\r\n\r\n    private val _state =\r\n        MutableStateFlow(savedStateHandle[EMERGENCY_CALL_VM_STATE_KEY] ?: EmergencyCallState())\r\n    val state = _state.asStateFlow()\r\n\r\n    private val _eventFlow: MutableSharedFlow<EmergencyCallEvent> = MutableSharedFlow()\r\n    val eventFlow = _eventFlow.asSharedFlow()\r\n\r\n\r\n    init {\r\n        getContacts()\r\n    }\r\n\r\n\r\n    private fun getContacts(){\r\n\r\n        emergencyCallUseCase.getContactsUseCase().catch {\r\n            Timber.v(\"Error: ${it.message}\")\r\n        }.onEach { model ->\r\n\r\n            val isPurposefullyDeleted =\r\n                emergencyCallUseCase.areContactsPurposelyDeletedUseCase().first()\r\n            if (model.contacts.isEmpty().and(isPurposefullyDeleted.not())) {\r\n                addDefaultContact()\r\n                emergencyCallUseCase.addDefaultContactUseCase()\r\n\r\n            } else {\r\n                _state.update { it.copy(emergencyCallModel = model) }\r\n            }\r\n            savedStateHandle[EMERGENCY_CALL_VM_STATE_KEY] = state.value\r\n\r\n        }.launchIn(viewModelScope)\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    private fun deleteContact(contact: EmergencyContactModel) {\r\n        viewModelScope.launch {\r\n            runCatching {\r\n                emergencyCallUseCase.deleteContactUseCase(contact)\r\n            }.onSuccess {\r\n                _eventFlow.emit(value = EmergencyCallEvent.ContactDeleteSuccess)\r\n                if (isLastContact) {\r\n                    emergencyCallUseCase.addDefaultContactUseCase()\r\n                }\r\n            }.onFailure {\r\n                _eventFlow.emit(value = EmergencyCallEvent.ContactDeleteFailed)\r\n            }\r\n        }\r\n    }\r\n\r\n    private val isLastContact = state.value.emergencyCallModel.contacts.size == 1\r\n\r\n    private suspend fun addDefaultContact() {\r\n        emergencyCallUseCase.upsertContactUseCase(\r\n            emergencyContact = EmergencyContactModel(\r\n                name = PHILIPPINE_RED_CROSS,\r\n                photo = PHILIPPINE_RED_CROSS_PHOTO,\r\n                phoneNumber = PHILIPPINE_RED_CROSS_NUMBER\r\n            )\r\n        )\r\n        emergencyCallUseCase.upsertContactUseCase(\r\n            emergencyContact = EmergencyContactModel(\r\n                name = NATIONAL_EMERGENCY,\r\n                photo = NATIONAL_EMERGENCY_PHOTO,\r\n                phoneNumber = NATIONAL_EMERGENCY_NUMBER\r\n            )\r\n        )\r\n    }\r\n\r\n    fun onEvent(event: EmergencyCallVmEvent) {\r\n        when (event) {\r\n            is EmergencyCallVmEvent.DeleteContact -> deleteContact(event.emergencyContactModel)\r\n        }\r\n        savedStateHandle[EMERGENCY_CALL_VM_STATE_KEY] = state.value\r\n    }\r\n\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/EmergencyCallViewModel.kt b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/EmergencyCallViewModel.kt
--- a/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/EmergencyCallViewModel.kt	(revision 82f4565203882eae66546dba49ffc9a44ba8ccd7)
+++ b/app/src/main/java/com/example/cyclistance/feature_emergency_call/presentation/emergency_call_screen/EmergencyCallViewModel.kt	(date 1696922159047)
@@ -3,13 +3,8 @@
 import androidx.lifecycle.SavedStateHandle
 import androidx.lifecycle.ViewModel
 import androidx.lifecycle.viewModelScope
+import com.example.cyclistance.core.utils.constants.EmergencyCallConstants
 import com.example.cyclistance.core.utils.constants.EmergencyCallConstants.EMERGENCY_CALL_VM_STATE_KEY
-import com.example.cyclistance.core.utils.constants.EmergencyCallConstants.NATIONAL_EMERGENCY
-import com.example.cyclistance.core.utils.constants.EmergencyCallConstants.NATIONAL_EMERGENCY_NUMBER
-import com.example.cyclistance.core.utils.constants.EmergencyCallConstants.NATIONAL_EMERGENCY_PHOTO
-import com.example.cyclistance.core.utils.constants.EmergencyCallConstants.PHILIPPINE_RED_CROSS
-import com.example.cyclistance.core.utils.constants.EmergencyCallConstants.PHILIPPINE_RED_CROSS_NUMBER
-import com.example.cyclistance.core.utils.constants.EmergencyCallConstants.PHILIPPINE_RED_CROSS_PHOTO
 import com.example.cyclistance.feature_emergency_call.domain.model.EmergencyContactModel
 import com.example.cyclistance.feature_emergency_call.domain.use_case.EmergencyContactUseCase
 import com.example.cyclistance.feature_emergency_call.presentation.emergency_call_screen.event.EmergencyCallEvent
@@ -91,20 +86,27 @@
     private val isLastContact = state.value.emergencyCallModel.contacts.size == 1
 
     private suspend fun addDefaultContact() {
-        emergencyCallUseCase.upsertContactUseCase(
-            emergencyContact = EmergencyContactModel(
-                name = PHILIPPINE_RED_CROSS,
-                photo = PHILIPPINE_RED_CROSS_PHOTO,
-                phoneNumber = PHILIPPINE_RED_CROSS_NUMBER
-            )
-        )
-        emergencyCallUseCase.upsertContactUseCase(
-            emergencyContact = EmergencyContactModel(
-                name = NATIONAL_EMERGENCY,
-                photo = NATIONAL_EMERGENCY_PHOTO,
-                phoneNumber = NATIONAL_EMERGENCY_NUMBER
-            )
-        )
+        runCatching {
+            emergencyCallUseCase.upsertContactUseCase(
+                emergencyContact = EmergencyContactModel(
+                    name = EmergencyCallConstants.PHILIPPINE_RED_CROSS,
+                    photo = EmergencyCallConstants.PHILIPPINE_RED_CROSS_PHOTO,
+                    phoneNumber = EmergencyCallConstants.PHILIPPINE_RED_CROSS_NUMBER
+                )
+            )
+            emergencyCallUseCase.upsertContactUseCase(
+                emergencyContact = EmergencyContactModel(
+                    name = EmergencyCallConstants.NATIONAL_EMERGENCY,
+                    photo = EmergencyCallConstants.NATIONAL_EMERGENCY_PHOTO,
+                    phoneNumber = EmergencyCallConstants.NATIONAL_EMERGENCY_NUMBER
+                )
+            )
+        }.onSuccess {
+            Timber.v("Success adding default contact")
+        }.onFailure {
+            Timber.e("Error adding default contact")
+        }
+
     }
 
     fun onEvent(event: EmergencyCallVmEvent) {
