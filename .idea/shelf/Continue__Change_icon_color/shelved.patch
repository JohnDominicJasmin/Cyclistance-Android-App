Index: app/src/main/java/com/myapp/cyclistance/feature_user_profile/presentation/edit_profile/components/EditProfileBottomSheets.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.myapp.cyclistance.feature_user_profile.presentation.edit_profile.components\n\nimport androidx.annotation.DrawableRes\nimport androidx.compose.foundation.layout.Arrangement\nimport androidx.compose.foundation.layout.Column\nimport androidx.compose.foundation.layout.Row\nimport androidx.compose.foundation.layout.fillMaxWidth\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.foundation.shape.RoundedCornerShape\nimport androidx.compose.material.Button\nimport androidx.compose.material.ButtonDefaults\nimport androidx.compose.material.Card\nimport androidx.compose.material.ExperimentalMaterialApi\nimport androidx.compose.material.Icon\nimport androidx.compose.material.MaterialTheme\nimport androidx.compose.material.ModalBottomSheetDefaults\nimport androidx.compose.material.ModalBottomSheetLayout\nimport androidx.compose.material.ModalBottomSheetState\nimport androidx.compose.material.ModalBottomSheetValue\nimport androidx.compose.material.Text\nimport androidx.compose.material.TextButton\nimport androidx.compose.material.rememberModalBottomSheetState\nimport androidx.compose.runtime.Composable\nimport androidx.compose.runtime.rememberCoroutineScope\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.res.painterResource\nimport androidx.compose.ui.tooling.preview.Preview\nimport androidx.compose.ui.unit.dp\nimport com.myapp.cyclistance.R\nimport kotlinx.coroutines.launch\n\n@ExperimentalMaterialApi\n@Composable\nfun SelectImageBottomSheet(\n    isLoading: Boolean,\n    onClickGalleryButton: () -> Unit,\n    onClickCameraButton: () -> Unit,\n    bottomSheetScaffoldState: ModalBottomSheetState,\n    content: @Composable () -> Unit) {\n\n\n    ModalBottomSheetLayout(\n        sheetState = bottomSheetScaffoldState,\n        sheetContent = {\n            Card(\n                modifier = Modifier.fillMaxWidth()) {\n\n\n                Column(\n                    modifier = Modifier\n                        .padding(top = 4.dp, bottom = 4.dp)) {\n\n                    BottomSheetButtonItem(\n                        iconId = R.drawable.ic_gallery,\n                        buttonText = \"Open Gallery\",\n                        onClick = onClickGalleryButton,\n                        enabled = !isLoading)\n\n                    BottomSheetButtonItem(\n                        iconId = R.drawable.ic_camera,\n                        buttonText = \"Take Photo\",\n                        onClick = onClickCameraButton,\n                        enabled = !isLoading)\n                }\n\n            }\n        },\n        sheetShape = RoundedCornerShape(topStart = 12.dp, topEnd = 12.dp),\n        sheetElevation = 12.dp,\n        sheetBackgroundColor = MaterialTheme.colors.surface,\n        sheetContentColor = MaterialTheme.colors.onSurface,\n        scrimColor = ModalBottomSheetDefaults.scrimColor.copy(alpha = 0.10f),\n        content = content\n    )\n\n\n}\n\n\n@Composable\nfun BottomSheetButtonItem(\n    @DrawableRes iconId: Int,\n    buttonText: String,\n    onClick: () -> Unit,\n    enabled: Boolean) {\n\n    TextButton(\n        enabled = enabled,\n        onClick = onClick,\n        modifier = Modifier.fillMaxWidth(),\n        elevation = ButtonDefaults.elevation(\n            defaultElevation = 0.dp,\n            pressedElevation = 0.dp)) {\n\n        Row(\n            horizontalArrangement = Arrangement.spacedBy(4.dp, alignment = Alignment.Start),\n            verticalAlignment = Alignment.CenterVertically,\n            modifier = Modifier\n                .weight(0.3f)\n                .padding(start = 8.5.dp)) {\n            Icon(\n                painter = painterResource(id = iconId),\n                contentDescription = \"$buttonText Icon\",\n                tint = MaterialTheme.colors.onSurface,\n                modifier = Modifier.padding(start = 3.dp, end = 12.dp))\n\n            Text(\n                text = buttonText,\n                color = MaterialTheme.colors.onSurface,\n                style = MaterialTheme.typography.button,\n\n                )\n        }\n    }\n\n}\n\n@ExperimentalMaterialApi\n@Preview(showSystemUi = true, showBackground = true)\n@Composable\nfun BottomSheetPreview() {\n    val bottomSheetScaffoldState = rememberModalBottomSheetState(ModalBottomSheetValue.Hidden)\n\n    val scope = rememberCoroutineScope()\n\n    SelectImageBottomSheet(\n        onClickGalleryButton = {},\n        onClickCameraButton = {},\n        bottomSheetScaffoldState = bottomSheetScaffoldState,\n        isLoading = false) {\n        Button(onClick = {\n            scope.launch {\n\n                if (bottomSheetScaffoldState.isVisible) {\n                    bottomSheetScaffoldState.hide()\n                } else {\n                    bottomSheetScaffoldState.show()\n                }\n            }\n        }) {\n            Text(text = \"Expand/Collapse Bottom Sheet\")\n        }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/myapp/cyclistance/feature_user_profile/presentation/edit_profile/components/EditProfileBottomSheets.kt b/app/src/main/java/com/myapp/cyclistance/feature_user_profile/presentation/edit_profile/components/EditProfileBottomSheets.kt
--- a/app/src/main/java/com/myapp/cyclistance/feature_user_profile/presentation/edit_profile/components/EditProfileBottomSheets.kt	(revision a030997938f61522e027f3227589cada04599c37)
+++ b/app/src/main/java/com/myapp/cyclistance/feature_user_profile/presentation/edit_profile/components/EditProfileBottomSheets.kt	(date 1700749851244)
@@ -102,7 +102,7 @@
             Icon(
                 painter = painterResource(id = iconId),
                 contentDescription = "$buttonText Icon",
-                tint = MaterialTheme.colors.onSurface,
+                tint = MaterialTheme.colors.primary,
                 modifier = Modifier.padding(start = 3.dp, end = 12.dp))
 
             Text(
Index: .idea/shelf/Scroll_to_top_if_input_is_not_valid.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><changelist name=\"Scroll_to_top_if_input_is_not_valid\" date=\"1700229128550\" recycled=\"false\">\n  <option name=\"PATH\" value=\"$PROJECT_DIR$/.idea/shelf/Scroll_to_top_if_input_is_not_valid/shelved.patch\" />\n  <option name=\"DESCRIPTION\" value=\"Scroll to top if input is not valid\" />\n</changelist>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Scroll_to_top_if_input_is_not_valid.xml b/.idea/shelf/Scroll_to_top_if_input_is_not_valid.xml
--- a/.idea/shelf/Scroll_to_top_if_input_is_not_valid.xml	(revision a030997938f61522e027f3227589cada04599c37)
+++ b/.idea/shelf/Scroll_to_top_if_input_is_not_valid.xml	(date 1700806528493)
@@ -1,4 +1,4 @@
-<changelist name="Scroll_to_top_if_input_is_not_valid" date="1700229128550" recycled="false">
+<changelist name="Scroll_to_top_if_input_is_not_valid" date="1700806490962" recycled="false" deleted="true">
   <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Scroll_to_top_if_input_is_not_valid/shelved.patch" />
   <option name="DESCRIPTION" value="Scroll to top if input is not valid" />
 </changelist>
\ No newline at end of file
