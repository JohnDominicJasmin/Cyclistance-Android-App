Index: firestore-debug.log
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>Aug 26, 2023 10:10:47 PM com.google.cloud.datastore.emulator.firestore.websocket.WebSocketServer start\nINFO: Started WebSocket server on ws://0.0.0.0:45379\nAPI endpoint: http://0.0.0.0:9299\nIf you are using a library that supports the FIRESTORE_EMULATOR_HOST environment variable, run:\n\n   export FIRESTORE_EMULATOR_HOST=0.0.0.0:9299\n\nDev App Server is now running.\n\nAug 26, 2023 10:11:41 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nAug 26, 2023 10:14:13 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nAug 26, 2023 10:17:14 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nAug 26, 2023 10:25:08 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nAug 26, 2023 10:27:38 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nAug 26, 2023 10:30:38 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nAug 26, 2023 10:38:39 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nAug 26, 2023 10:52:35 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nAug 26, 2023 10:55:19 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nAug 26, 2023 10:56:38 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nAug 26, 2023 10:59:12 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nAug 26, 2023 11:03:31 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nAug 26, 2023 11:16:40 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\nAug 26, 2023 11:36:40 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead\nINFO: Detected HTTP/2 connection.\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/firestore-debug.log b/firestore-debug.log
--- a/firestore-debug.log	(revision fa2180150b6eab3be79e3a8510effd6862c595b8)
+++ b/firestore-debug.log	(date 1693076017042)
@@ -35,3 +35,5 @@
 INFO: Detected HTTP/2 connection.
 Aug 26, 2023 11:36:40 PM io.gapi.emulators.netty.HttpVersionRoutingHandler channelRead
 INFO: Detected HTTP/2 connection.
+*** shutting down gRPC server since JVM is shutting down
+*** server shut down
Index: ui-debug.log
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>Web / API server started at localhost:4000\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ui-debug.log b/ui-debug.log
--- a/ui-debug.log	(revision fa2180150b6eab3be79e3a8510effd6862c595b8)
+++ b/ui-debug.log	(date 1693076017042)
@@ -1,1 +1,16 @@
 Web / API server started at localhost:4000
+/usr/local/bin/firebase[4201]: ../src/node.cc:762:void node::ResetStdio(): Assertion `!(err != 0) || (err == -1 && (*__errno_location ()) == 1)' failed.
+ 1: 0x99e1e0 node::Abort() [/usr/local/bin/firebase]
+ 2: 0x99e25c  [/usr/local/bin/firebase]
+ 3: 0x962939 node::ResetStdio() [/usr/local/bin/firebase]
+ 4: 0x9629f8 node::SignalExit(int, siginfo_t*, void*) [/usr/local/bin/firebase]
+ 5: 0x7efcc0c4fab0  [/usr/lib/libc.so.6]
+ 6: 0x7efcc0d21266 epoll_wait [/usr/lib/libc.so.6]
+ 7: 0xb21d93  [/usr/local/bin/firebase]
+ 8: 0x1044248  [/usr/local/bin/firebase]
+ 9: 0x8fa2e3 node::SpinEventLoop(node::Environment*) [/usr/local/bin/firebase]
+10: 0x9e1784 node::NodeMainInstance::Run(node::EnvSerializeInfo const*) [/usr/local/bin/firebase]
+11: 0x96a79d node::Start(int, char**) [/usr/local/bin/firebase]
+12: 0x7efcc0c39850  [/usr/lib/libc.so.6]
+13: 0x7efcc0c3990a __libc_start_main [/usr/lib/libc.so.6]
+14: 0x8ebe1c  [/usr/local/bin/firebase]
Index: app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/components/bottomSheet/BottomSheetIncidentDescription.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.components.bottomSheet\n\nimport androidx.annotation.DrawableRes\nimport androidx.compose.foundation.layout.Arrangement\nimport androidx.compose.foundation.layout.Box\nimport androidx.compose.foundation.layout.Column\nimport androidx.compose.foundation.layout.Row\nimport androidx.compose.foundation.layout.fillMaxSize\nimport androidx.compose.foundation.layout.fillMaxWidth\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.foundation.layout.wrapContentSize\nimport androidx.compose.foundation.shape.CircleShape\nimport androidx.compose.foundation.shape.RoundedCornerShape\nimport androidx.compose.material.BottomSheetScaffoldState\nimport androidx.compose.material.BottomSheetValue\nimport androidx.compose.material.Button\nimport androidx.compose.material.ButtonDefaults\nimport androidx.compose.material.Card\nimport androidx.compose.material.Divider\nimport androidx.compose.material.ExperimentalMaterialApi\nimport androidx.compose.material.Icon\nimport androidx.compose.material.IconButton\nimport androidx.compose.material.MaterialTheme\nimport androidx.compose.material.Text\nimport androidx.compose.material.icons.Icons\nimport androidx.compose.material.icons.filled.AccessTimeFilled\nimport androidx.compose.material.icons.filled.Info\nimport androidx.compose.material.icons.filled.LocationOn\nimport androidx.compose.material.icons.filled.MoreHoriz\nimport androidx.compose.material.rememberBottomSheetScaffoldState\nimport androidx.compose.material.rememberBottomSheetState\nimport androidx.compose.runtime.Composable\nimport androidx.compose.runtime.CompositionLocalProvider\nimport androidx.compose.runtime.rememberCoroutineScope\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.draw.shadow\nimport androidx.compose.ui.graphics.Color\nimport androidx.compose.ui.graphics.vector.ImageVector\nimport androidx.compose.ui.res.painterResource\nimport androidx.compose.ui.text.font.FontWeight\nimport androidx.compose.ui.tooling.preview.Preview\nimport androidx.compose.ui.unit.dp\nimport com.example.cyclistance.R\nimport com.example.cyclistance.core.presentation.dialogs.common.DropDownMenu\nimport com.example.cyclistance.core.utils.formatter.FormatterUtils.toReadableDateTime\nimport com.example.cyclistance.feature_mapping.domain.model.remote_models.hazardous_lane.HazardousLaneMarker\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.state.MappingState\nimport com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.state.MappingUiState\nimport com.example.cyclistance.navigation.IsDarkTheme\nimport com.example.cyclistance.theme.Black500\nimport com.example.cyclistance.theme.CyclistanceTheme\nimport kotlinx.coroutines.launch\n\n@OptIn(ExperimentalMaterialApi::class)\n@Composable\nfun BottomSheetIncidentDescription(\n    modifier: Modifier = Modifier,\n    bottomSheetScaffoldState: BottomSheetScaffoldState,\n    uiState: MappingUiState,\n    state: MappingState,\n    @DrawableRes icon: Int,\n    onClickEdit: () -> Unit,\n    onClickDelete: () -> Unit,\n    onClickOkay: () -> Unit\n) {\n    val scope = rememberCoroutineScope()\n    val isDarkTheme = IsDarkTheme.current\n    val marker = uiState.selectedHazardousMarker!!\n    Card(\n        modifier = modifier\n            .fillMaxWidth()\n            .shadow(\n                shape = RoundedCornerShape(topStart = 12.dp, topEnd = 12.dp),\n                elevation = 8.dp),\n        shape = RoundedCornerShape(topStart = 12.dp, topEnd = 12.dp)\n    ) {\n\n        Column(\n            modifier = Modifier.fillMaxWidth(),\n            verticalArrangement = Arrangement.Center,\n            horizontalAlignment = Alignment.CenterHorizontally) {\n\n\n            Box(contentAlignment = Alignment.Center, modifier = Modifier.fillMaxWidth()) {\n\n\n                IconButton(\n                    onClick = {\n                        scope.launch {\n                            bottomSheetScaffoldState.bottomSheetState.collapse()\n                        }\n                    }, modifier = Modifier.align(Alignment.TopEnd)\n                ) {\n\n                    Icon(\n                        painter = painterResource(id = if (isDarkTheme) R.drawable.ic_close_darktheme else R.drawable.ic_close_lighttheme),\n                        contentDescription = \"Close\",\n                        tint = Color.Unspecified\n                    )\n\n                }\n\n\n                if (state.userId == marker.idCreator) {\n                    DropDownMenu(\n                        iconImageVector = Icons.Default.MoreHoriz,\n                        modifier = Modifier\n                            .wrapContentSize()\n                            .align(Alignment.BottomEnd),\n                        onClickEdit = onClickEdit,\n                        onClickDelete = onClickDelete\n                    )\n                }\n\n\n\n                Column(\n                    horizontalAlignment = Alignment.CenterHorizontally,\n                    verticalArrangement = Arrangement.Center,\n                    modifier = Modifier.padding(vertical = 8.dp, horizontal = 4.dp)\n                ) {\n                    Divider(\n                        modifier = Modifier\n                            .fillMaxWidth(0.08f)\n                            .padding(top = 4.dp),\n                        color = MaterialTheme.colors.primary,\n                        thickness = 2.dp)\n\n                    Icon(\n                        modifier = Modifier\n                            .padding(vertical = 12.dp)\n                            .shadow(if (isDarkTheme) 0.dp else 8.dp, shape = CircleShape),\n                        painter = painterResource(id = icon),\n                        contentDescription = \"Marker Icon Description\",\n                        tint = Color.Unspecified)\n\n                    Text(\n                        text = uiState.selectedHazardousMarker.label,\n                        color = MaterialTheme.colors.onSurface,\n                        style = MaterialTheme.typography.subtitle1.copy(fontWeight = FontWeight.Medium),\n                        modifier = Modifier\n                            .padding(vertical = 2.dp)\n                    )\n\n                }\n\n            }\n\n            Column(\n                verticalArrangement = Arrangement.Center,\n                horizontalAlignment = Alignment.CenterHorizontally,\n                modifier = Modifier\n                    .padding(horizontal = 12.dp)\n                    .padding(bottom = 12.dp)) {\n\n                ReportItemsSection(\n                    marker = marker,\n                    modifier = Modifier.fillMaxWidth()\n                )\n\n                Button(\n                    shape = RoundedCornerShape(12.dp),\n                    onClick = onClickOkay,\n                    colors = ButtonDefaults.buttonColors(backgroundColor = MaterialTheme.colors.primary)) {\n                    Text(\n                        text = \"Okay\",\n                        color = MaterialTheme.colors.onPrimary,\n                        modifier = Modifier.padding(vertical = 4.dp, horizontal = 8.dp),\n                        style = MaterialTheme.typography.button)\n                }\n            }\n\n        }\n\n    }\n}\n\n@Composable\nprivate fun ReportItemsSection(modifier: Modifier = Modifier, marker: HazardousLaneMarker) {\n    Column(\n        verticalArrangement = Arrangement.Center,\n        horizontalAlignment = Alignment.Start,\n        modifier = modifier\n            .fillMaxWidth()\n            .padding(horizontal = 12.dp, vertical = 4.dp)) {\n\n        ReportItemDescription(\n            modifier = Modifier\n                .padding(vertical = 4.dp)\n                .fillMaxWidth(),\n            iconImage = Icons.Default.AccessTimeFilled,\n            iconDescription = \"Date and Time\",\n            description = marker.datePosted.toReadableDateTime(pattern = \"MMM dd, yyyy hh:mm a\")\n        )\n\n        ReportItemDescription(\n            modifier = Modifier\n                .padding(vertical = 4.dp)\n                .fillMaxWidth(),\n            iconImage = Icons.Default.LocationOn,\n            iconDescription = \"Address\",\n            description = marker.address\n        )\n\n\n        marker.description.takeIf { it.isNotEmpty() }?.let { description ->\n            ReportItemDescription(\n                modifier = Modifier\n                    .padding(vertical = 4.dp)\n                    .fillMaxWidth(),\n                iconImage = Icons.Default.Info,\n                iconDescription = \"Description\",\n                description = description\n            )\n        }\n\n    }\n}\n\n@Composable\nprivate fun ReportItemDescription(\n    modifier: Modifier = Modifier,\n    iconImage: ImageVector,\n    iconDescription: String,\n    description: String = \"\") {\n\n    Column(\n        modifier = modifier,\n        verticalArrangement = Arrangement.Center,\n        horizontalAlignment = Alignment.Start) {\n\n\n        Row(\n            verticalAlignment = Alignment.Top,\n            horizontalArrangement = Arrangement.Center\n        ) {\n\n            Icon(\n                imageVector = iconImage,\n                contentDescription = iconDescription,\n                tint = Black500,\n                modifier = Modifier.padding(end = 5.dp))\n\n            Column(\n                verticalArrangement = Arrangement.Center,\n                horizontalAlignment = Alignment.Start) {\n\n                Text(\n                    text = iconDescription,\n                    color = Black500,\n                    style = MaterialTheme.typography.caption.copy(fontWeight = FontWeight.Medium),\n                    modifier = Modifier.padding(top = 5.dp))\n\n                Text(\n                    text = description,\n                    color = MaterialTheme.colors.onSurface,\n                    style = MaterialTheme.typography.subtitle1.copy(fontWeight = FontWeight.Normal),\n                    modifier = Modifier.padding(vertical = 4.dp))\n\n            }\n        }\n\n    }\n}\n\n@OptIn(ExperimentalMaterialApi::class)\n@Preview(device = \"id:Galaxy Nexus\")\n@Composable\nfun PreviewBottomSheetIncidentDescription() {\n\n    val isDarkTheme = true\n    CompositionLocalProvider(IsDarkTheme provides isDarkTheme) {\n        CyclistanceTheme(darkTheme = isDarkTheme) {\n\n            val bottomSheetScaffoldState = rememberBottomSheetScaffoldState(\n                bottomSheetState = rememberBottomSheetState(\n                    initialValue = BottomSheetValue.Expanded))\n            Box(contentAlignment = Alignment.BottomCenter, modifier = Modifier.fillMaxSize()) {\n                BottomSheetIncidentDescription(\n                    bottomSheetScaffoldState = bottomSheetScaffoldState,\n                    uiState = MappingUiState(\n                        selectedHazardousMarker = HazardousLaneMarker(\n                            id = \"1\",\n                            label = \"Crash\",\n                            latitude = 14.123,\n                            longitude = 121.123,\n                            idCreator = \"1o3jjt90qin3f9n23\",\n                            description = \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Lorem ipsum dolor sit amet consectetur adipisicing elit.\",\n                            address = \"Lorem ipsum dolor sit amet consectetur adipisicing elit.\",\n                        )),\n                    icon = R.drawable.ic_lane_closure_marker,\n                    state = MappingState(userId = \"1o3jjt90qin3f39n23\"),\n                    onClickDelete = {},\n                    onClickEdit = {},\n                    onClickOkay = {})\n            }\n        }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/components/bottomSheet/BottomSheetIncidentDescription.kt b/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/components/bottomSheet/BottomSheetIncidentDescription.kt
--- a/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/components/bottomSheet/BottomSheetIncidentDescription.kt	(revision fa2180150b6eab3be79e3a8510effd6862c595b8)
+++ b/app/src/main/java/com/example/cyclistance/feature_mapping/presentation/mapping_main_screen/components/bottomSheet/BottomSheetIncidentDescription.kt	(date 1693109037849)
@@ -1,14 +1,23 @@
 package com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.components.bottomSheet
 
 import androidx.annotation.DrawableRes
+import androidx.compose.foundation.ExperimentalFoundationApi
+import androidx.compose.foundation.Image
+import androidx.compose.foundation.background
 import androidx.compose.foundation.layout.Arrangement
 import androidx.compose.foundation.layout.Box
 import androidx.compose.foundation.layout.Column
 import androidx.compose.foundation.layout.Row
 import androidx.compose.foundation.layout.fillMaxSize
 import androidx.compose.foundation.layout.fillMaxWidth
+import androidx.compose.foundation.layout.height
 import androidx.compose.foundation.layout.padding
+import androidx.compose.foundation.layout.size
+import androidx.compose.foundation.layout.wrapContentHeight
 import androidx.compose.foundation.layout.wrapContentSize
+import androidx.compose.foundation.pager.HorizontalPager
+import androidx.compose.foundation.pager.PageSize
+import androidx.compose.foundation.pager.rememberPagerState
 import androidx.compose.foundation.shape.CircleShape
 import androidx.compose.foundation.shape.RoundedCornerShape
 import androidx.compose.material.BottomSheetScaffoldState
@@ -31,20 +40,31 @@
 import androidx.compose.material.rememberBottomSheetState
 import androidx.compose.runtime.Composable
 import androidx.compose.runtime.CompositionLocalProvider
+import androidx.compose.runtime.LaunchedEffect
 import androidx.compose.runtime.rememberCoroutineScope
 import androidx.compose.ui.Alignment
 import androidx.compose.ui.Modifier
+import androidx.compose.ui.draw.clip
 import androidx.compose.ui.draw.shadow
 import androidx.compose.ui.graphics.Color
 import androidx.compose.ui.graphics.vector.ImageVector
 import androidx.compose.ui.res.painterResource
 import androidx.compose.ui.text.font.FontWeight
+import androidx.compose.ui.text.input.TextFieldValue
 import androidx.compose.ui.tooling.preview.Preview
 import androidx.compose.ui.unit.dp
 import com.example.cyclistance.R
 import com.example.cyclistance.core.presentation.dialogs.common.DropDownMenu
+import com.example.cyclistance.core.utils.constants.MappingConstants.CONSTRUCTION
+import com.example.cyclistance.core.utils.constants.MappingConstants.CRASH
+import com.example.cyclistance.core.utils.constants.MappingConstants.LANE_CLOSURE
+import com.example.cyclistance.core.utils.constants.MappingConstants.NEED_ASSISTANCE
+import com.example.cyclistance.core.utils.constants.MappingConstants.OBJECT_ON_ROAD
+import com.example.cyclistance.core.utils.constants.MappingConstants.SLOWDOWN
 import com.example.cyclistance.core.utils.formatter.FormatterUtils.toReadableDateTime
 import com.example.cyclistance.feature_mapping.domain.model.remote_models.hazardous_lane.HazardousLaneMarker
+import com.example.cyclistance.feature_mapping.presentation.common.AdditionalMessage
+import com.example.cyclistance.feature_mapping.presentation.common.ButtonNavigation
 import com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.state.MappingState
 import com.example.cyclistance.feature_mapping.presentation.mapping_main_screen.state.MappingUiState
 import com.example.cyclistance.navigation.IsDarkTheme
@@ -76,106 +96,249 @@
         shape = RoundedCornerShape(topStart = 12.dp, topEnd = 12.dp)
     ) {
 
-        Column(
-            modifier = Modifier.fillMaxWidth(),
-            verticalArrangement = Arrangement.Center,
-            horizontalAlignment = Alignment.CenterHorizontally) {
+        if (uiState.currentlyEditingHazardousMarker != null) {
+
+            IncidentDescriptionEditMode(
+                modifier = Modifier,
+                label = uiState.currentlyEditingHazardousMarker.label,
+                description = TextFieldValue(uiState.currentlyEditingHazardousMarker.description),
+                onValueChange = {},
+                onClickCancelButton = {},
+                onClickConfirmButton = {}
+            )
+
+        } else {
+
+            Column(
+                modifier = Modifier.fillMaxWidth(),
+                verticalArrangement = Arrangement.Center,
+                horizontalAlignment = Alignment.CenterHorizontally) {
 
 
-            Box(contentAlignment = Alignment.Center, modifier = Modifier.fillMaxWidth()) {
+                Box(contentAlignment = Alignment.Center, modifier = Modifier.fillMaxWidth()) {
 
 
-                IconButton(
-                    onClick = {
-                        scope.launch {
-                            bottomSheetScaffoldState.bottomSheetState.collapse()
-                        }
-                    }, modifier = Modifier.align(Alignment.TopEnd)
-                ) {
+                    IconButton(
+                        onClick = {
+                            scope.launch {
+                                bottomSheetScaffoldState.bottomSheetState.collapse()
+                            }
+                        }, modifier = Modifier.align(Alignment.TopEnd)
+                    ) {
 
-                    Icon(
-                        painter = painterResource(id = if (isDarkTheme) R.drawable.ic_close_darktheme else R.drawable.ic_close_lighttheme),
-                        contentDescription = "Close",
-                        tint = Color.Unspecified
-                    )
+                        Icon(
+                            painter = painterResource(id = if (isDarkTheme) R.drawable.ic_close_darktheme else R.drawable.ic_close_lighttheme),
+                            contentDescription = "Close",
+                            tint = Color.Unspecified
+                        )
 
-                }
+                    }
 
 
-                if (state.userId == marker.idCreator) {
-                    DropDownMenu(
-                        iconImageVector = Icons.Default.MoreHoriz,
-                        modifier = Modifier
-                            .wrapContentSize()
-                            .align(Alignment.BottomEnd),
-                        onClickEdit = onClickEdit,
-                        onClickDelete = onClickDelete
-                    )
-                }
+                    if (state.userId == marker.idCreator) {
+                        DropDownMenu(
+                            iconImageVector = Icons.Default.MoreHoriz,
+                            modifier = Modifier
+                                .wrapContentSize()
+                                .align(Alignment.BottomEnd),
+                            onClickEdit = onClickEdit,
+                            onClickDelete = onClickDelete
+                        )
+                    }
 
 
 
-                Column(
-                    horizontalAlignment = Alignment.CenterHorizontally,
-                    verticalArrangement = Arrangement.Center,
-                    modifier = Modifier.padding(vertical = 8.dp, horizontal = 4.dp)
-                ) {
-                    Divider(
-                        modifier = Modifier
-                            .fillMaxWidth(0.08f)
-                            .padding(top = 4.dp),
-                        color = MaterialTheme.colors.primary,
-                        thickness = 2.dp)
+                    Column(
+                        horizontalAlignment = Alignment.CenterHorizontally,
+                        verticalArrangement = Arrangement.Center,
+                        modifier = Modifier.padding(vertical = 8.dp, horizontal = 4.dp)
+                    ) {
+                        Divider(
+                            modifier = Modifier
+                                .fillMaxWidth(0.08f)
+                                .padding(top = 4.dp),
+                            color = MaterialTheme.colors.primary,
+                            thickness = 2.dp)
 
-                    Icon(
-                        modifier = Modifier
-                            .padding(vertical = 12.dp)
-                            .shadow(if (isDarkTheme) 0.dp else 8.dp, shape = CircleShape),
-                        painter = painterResource(id = icon),
-                        contentDescription = "Marker Icon Description",
-                        tint = Color.Unspecified)
+                        Icon(
+                            modifier = Modifier
+                                .padding(vertical = 12.dp)
+                                .shadow(if (isDarkTheme) 0.dp else 8.dp, shape = CircleShape),
+                            painter = painterResource(id = icon),
+                            contentDescription = "Marker Icon Description",
+                            tint = Color.Unspecified)
 
-                    Text(
-                        text = uiState.selectedHazardousMarker.label,
-                        color = MaterialTheme.colors.onSurface,
-                        style = MaterialTheme.typography.subtitle1.copy(fontWeight = FontWeight.Medium),
-                        modifier = Modifier
-                            .padding(vertical = 2.dp)
-                    )
+                        Text(
+                            text = uiState.selectedHazardousMarker.label,
+                            color = MaterialTheme.colors.onSurface,
+                            style = MaterialTheme.typography.subtitle1.copy(fontWeight = FontWeight.Medium),
+                            modifier = Modifier
+                                .padding(vertical = 2.dp)
+                        )
 
-                }
+                    }
 
-            }
+                }
 
-            Column(
-                verticalArrangement = Arrangement.Center,
-                horizontalAlignment = Alignment.CenterHorizontally,
-                modifier = Modifier
-                    .padding(horizontal = 12.dp)
-                    .padding(bottom = 12.dp)) {
+                Column(
+                    verticalArrangement = Arrangement.Center,
+                    horizontalAlignment = Alignment.CenterHorizontally,
+                    modifier = Modifier
+                        .padding(horizontal = 12.dp)
+                        .padding(bottom = 12.dp)) {
 
-                ReportItemsSection(
-                    marker = marker,
-                    modifier = Modifier.fillMaxWidth()
-                )
+                    ReportItemsSection(
+                        marker = marker,
+                        modifier = Modifier.fillMaxWidth()
+                    )
 
-                Button(
-                    shape = RoundedCornerShape(12.dp),
-                    onClick = onClickOkay,
-                    colors = ButtonDefaults.buttonColors(backgroundColor = MaterialTheme.colors.primary)) {
-                    Text(
-                        text = "Okay",
-                        color = MaterialTheme.colors.onPrimary,
-                        modifier = Modifier.padding(vertical = 4.dp, horizontal = 8.dp),
-                        style = MaterialTheme.typography.button)
-                }
-            }
+                    Button(
+                        shape = RoundedCornerShape(12.dp),
+                        onClick = onClickOkay,
+                        colors = ButtonDefaults.buttonColors(backgroundColor = MaterialTheme.colors.primary)) {
+                        Text(
+                            text = "Okay",
+                            color = MaterialTheme.colors.onPrimary,
+                            modifier = Modifier.padding(vertical = 4.dp, horizontal = 8.dp),
+                            style = MaterialTheme.typography.button)
+                    }
+                }
 
+            }
         }
 
     }
 }
 
+private val incidentMarkers = listOf(
+    CONSTRUCTION to R.drawable.ic_construction_marker,
+    LANE_CLOSURE to R.drawable.ic_lane_closure_marker,
+    CRASH to R.drawable.ic_crash_marker,
+    NEED_ASSISTANCE to R.drawable.ic_need_assistance_marker,
+    OBJECT_ON_ROAD to R.drawable.ic_object_on_road_marker,
+    SLOWDOWN to R.drawable.ic_slow_down_marker
+)
+
+@OptIn(ExperimentalFoundationApi::class)
+@Composable
+private fun IncidentDescriptionEditMode(
+    modifier: Modifier = Modifier,
+    label: String,
+    description: TextFieldValue,
+    onValueChange: (TextFieldValue) -> Unit,
+    onClickCancelButton: () -> Unit,
+    onClickConfirmButton: () -> Unit) {
+
+    val pagerState = rememberPagerState(pageCount = {
+        6
+    })
+
+    LaunchedEffect(key1 = true) {
+        pagerState.animateScrollToPage(page = incidentMarkers.indexOfFirst { it.first == label })
+    }
+
+    Column(
+        modifier = modifier.fillMaxWidth(),
+        verticalArrangement = Arrangement.Center,
+        horizontalAlignment = Alignment.CenterHorizontally) {
+
+        HorizontalPager(
+            state = pagerState, pageSize = PageSize.Fill,
+            modifier = Modifier
+                .wrapContentHeight()
+                .padding(horizontal = 4.dp),
+            verticalAlignment = Alignment.CenterVertically) { pageIndex ->
+
+            val item = incidentMarkers[pageIndex]
+
+            Row(
+                modifier = Modifier
+                    .fillMaxWidth()
+                    .padding(vertical = 8.dp)
+                    .align(Alignment.CenterHorizontally),
+                verticalAlignment = Alignment.CenterVertically,
+                horizontalArrangement = Arrangement.spacedBy(
+                    8.dp,
+                    alignment = Alignment.CenterHorizontally)) {
+
+                Image(
+                    modifier = Modifier.size(60.dp),
+                    painter = painterResource(id = item.second),
+                    contentDescription = "${item.first} icon",
+                )
+
+                Text(
+                    text = item.first,
+                    color = MaterialTheme.colors.onSurface,
+                    style = MaterialTheme.typography.subtitle2.copy(fontWeight = FontWeight.Normal))
+
+            }
+        }
+
+
+        Row(
+            Modifier
+                .wrapContentHeight()
+                .fillMaxWidth()
+                .padding(all = 8.dp),
+            horizontalArrangement = Arrangement.Center
+        ) {
+            repeat(6) { iteration ->
+                val isSelect = pagerState.currentPage == iteration
+                val color = if (isSelect) MaterialTheme.colors.primary else Black500
+                Box(
+                    modifier = Modifier
+                        .padding(1.5.dp)
+                        .clip(CircleShape)
+                        .background(color)
+                        .size(9.dp)
+
+                )
+            }
+        }
+
+        AdditionalMessage(
+            placeholderText = "Description (Optional)",
+            text = null,
+            modifier = Modifier
+                .fillMaxWidth(0.9f)
+                .height(120.dp),
+            message = description,
+            enabled = true,
+            onChangeValueMessage = onValueChange)
+
+        ButtonNavigation(
+            modifier = Modifier
+                .fillMaxWidth(0.9f)
+                .padding(vertical = 16.dp),
+            onClickNegativeButton = onClickCancelButton,
+            onClickPositiveButton = onClickConfirmButton
+        )
+
+
+    }
+
+}
+
+@Preview
+@Composable
+fun PreviewIncidentDescriptionEditMode() {
+    CyclistanceTheme(darkTheme = true) {
+        Box(
+            modifier = Modifier
+                .fillMaxSize()
+                .background(MaterialTheme.colors.background),
+            contentAlignment = Alignment.BottomCenter) {
+            IncidentDescriptionEditMode(
+                description = TextFieldValue("Bla bla"),
+                onValueChange = {},
+                onClickCancelButton = { /*TODO*/ },
+                onClickConfirmButton = {},
+                label = "Crash")
+        }
+    }
+}
+
 @Composable
 private fun ReportItemsSection(modifier: Modifier = Modifier, marker: HazardousLaneMarker) {
     Column(
@@ -280,6 +443,7 @@
                 BottomSheetIncidentDescription(
                     bottomSheetScaffoldState = bottomSheetScaffoldState,
                     uiState = MappingUiState(
+                        currentlyEditingHazardousMarker = HazardousLaneMarker(),
                         selectedHazardousMarker = HazardousLaneMarker(
                             id = "1",
                             label = "Crash",
